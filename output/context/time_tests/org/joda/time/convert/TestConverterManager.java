public TestConverterManager(String name)
public PermissionCollection getPermissions(CodeSource codesource)
public void refresh()
public boolean implies(ProtectionDomain domain, Permission permission)
public PermissionCollection getPermissions(CodeSource codesource)
public void refresh()
public static void main(String[] args)
public static TestSuite suite()
public void testSingleton() throws Exception
public void testGetInstantConverter()
public void testGetInstantConverterRemovedNull()
public long getInstantMillis(Object object, Chronology chrono)
public Chronology getChronology(Object object, DateTimeZone zone)
public Chronology getChronology(Object object, Chronology chrono)
public Class getSupportedType()
public void testGetInstantConverterOKMultipleMatches()
public long getInstantMillis(Object object, Chronology chrono)
public Chronology getChronology(Object object, DateTimeZone zone)
public Chronology getChronology(Object object, Chronology chrono)
public Class getSupportedType()
public void testGetInstantConverterBadMultipleMatches()
public void testGetInstantConverters()
public long getInstantMillis(Object object, Chronology chrono)
public Chronology getChronology(Object object, DateTimeZone zone)
public Chronology getChronology(Object object, Chronology chrono)
public Class getSupportedType()
public void testAddInstantConverter1()
public long getInstantMillis(Object object, Chronology chrono)
public Chronology getChronology(Object object, DateTimeZone zone)
public Chronology getChronology(Object object, Chronology chrono)
public Class getSupportedType()
public void testAddInstantConverter2()
public void testAddInstantConverter3()
public void testAddInstantConverter4()
public void testAddInstantConverterSecurity()
public void testRemoveInstantConverter1()
public long getInstantMillis(Object object, Chronology chrono)
public Chronology getChronology(Object object, DateTimeZone zone)
public Chronology getChronology(Object object, Chronology chrono)
public Class getSupportedType()
public void testRemoveInstantConverter2()
public void testRemoveInstantConverter3()
public void testRemoveInstantConverterSecurity()
public void testGetPartialConverter()
public void testGetPartialConverterRemovedNull()
public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono)
public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono, DateTimeFormatter parser)
public Chronology getChronology(Object object, DateTimeZone zone)
public Chronology getChronology(Object object, Chronology chrono)
public Class getSupportedType()
public void testGetPartialConverterOKMultipleMatches()
public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono)
public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono, DateTimeFormatter parser)
public Chronology getChronology(Object object, DateTimeZone zone)
public Chronology getChronology(Object object, Chronology chrono)
public Class getSupportedType()
public void testGetPartialConverterBadMultipleMatches()
public void testGetPartialConverters()
public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono)
public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono, DateTimeFormatter parser)
public Chronology getChronology(Object object, DateTimeZone zone)
public Chronology getChronology(Object object, Chronology chrono)
public Class getSupportedType()
public void testAddPartialConverter1()
public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono)
public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono, DateTimeFormatter parser)
public Chronology getChronology(Object object, DateTimeZone zone)
public Chronology getChronology(Object object, Chronology chrono)
public Class getSupportedType()
public void testAddPartialConverter2()
public void testAddPartialConverter3()
public void testAddPartialConverter4()
public void testAddPartialConverterSecurity()
public void testRemovePartialConverter1()
public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono)
public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono, DateTimeFormatter parser)
public Chronology getChronology(Object object, DateTimeZone zone)
public Chronology getChronology(Object object, Chronology chrono)
public Class getSupportedType()
public void testRemovePartialConverter2()
public void testRemovePartialConverter3()
public void testRemovePartialConverterSecurity()
public void testGetDurationConverter()
public void testGetDurationConverterRemovedNull()
public void testGetDurationConverters()
public long getDurationMillis(Object object)
public Class getSupportedType()
public void testAddDurationConverter1()
public long getDurationMillis(Object object)
public Class getSupportedType()
public void testAddDurationConverter2()
public void testAddDurationConverter3()
public void testAddDurationConverterSecurity()
public void testRemoveDurationConverter1()
public long getDurationMillis(Object object)
public Class getSupportedType()
public void testRemoveDurationConverter2()
public void testRemoveDurationConverter3()
public void testRemoveDurationConverterSecurity()
public void testGetPeriodConverter()
public void testGetPeriodConverterRemovedNull()
public void testGetPeriodConverters()
public void setInto(ReadWritablePeriod duration, Object object, Chronology c)
public PeriodType getPeriodType(Object object)
public Class getSupportedType()
public void testAddPeriodConverter1()
public void setInto(ReadWritablePeriod duration, Object object, Chronology c)
public PeriodType getPeriodType(Object object)
public Class getSupportedType()
public void testAddPeriodConverter2()
public void testAddPeriodConverter3()
public void testAddPeriodConverterSecurity()
public void testRemovePeriodConverter1()
public void setInto(ReadWritablePeriod duration, Object object, Chronology c)
public PeriodType getPeriodType(Object object)
public Class getSupportedType()
public void testRemovePeriodConverter2()
public void testRemovePeriodConverter3()
public void testRemovePeriodConverterSecurity()
public void testGetIntervalConverter()
public void testGetIntervalConverterRemovedNull()
public void testGetIntervalConverters()
public boolean isReadableInterval(Object object, Chronology chrono)
public void setInto(ReadWritableInterval interval, Object object, Chronology chrono)
public Class getSupportedType()
public void testAddIntervalConverter1()
public boolean isReadableInterval(Object object, Chronology chrono)
public void setInto(ReadWritableInterval interval, Object object, Chronology chrono)
public Class getSupportedType()
public void testAddIntervalConverter2()
public void testAddIntervalConverter3()
public void testAddIntervalConverterSecurity()
public void testRemoveIntervalConverter1()
public boolean isReadableInterval(Object object, Chronology chrono)
public void setInto(ReadWritableInterval interval, Object object, Chronology chrono)
public Class getSupportedType()
public void testRemoveIntervalConverter2()
public void testRemoveIntervalConverter3()
public void testRemoveIntervalConverterSecurity()
public void testToString()
boolean OLD_JDK
Policy RESTRICT
Policy ALLOW
int PARTIAL_SIZE=Optional[7]
int DURATION_SIZE=Optional[5]
int PERIOD_SIZE=Optional[5]
int INTERVAL_SIZE=Optional[3]
