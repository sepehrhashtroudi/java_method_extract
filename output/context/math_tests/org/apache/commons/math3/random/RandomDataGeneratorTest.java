public RandomDataGeneratorTest()
public void testNextIntExtremeValues()
public void testNextLongExtremeValues()
public void testNextUniformExtremeValues()
public void testNextIntIAE()
public void testNextIntNegativeToPositiveRange()
public void testNextIntNegativeRange()
public void testNextIntPositiveRange()
private void checkNextIntUniform(int min, int max)
public void testNextIntWideRange()
public void testNextLongIAE()
public void testNextLongNegativeToPositiveRange()
public void testNextLongNegativeRange()
public void testNextLongPositiveRange()
private void checkNextLongUniform(long min, long max)
public void testNextLongWideRange()
public void testNextSecureLongIAE()
public void testNextSecureLongNegativeToPositiveRange()
public void testNextSecureLongNegativeRange()
public void testNextSecureLongPositiveRange()
private void checkNextSecureLongUniform(int min, int max)
public void testNextSecureIntIAE()
public void testNextSecureIntNegativeToPositiveRange()
public void testNextSecureIntNegativeRange()
public void testNextSecureIntPositiveRange()
private void checkNextSecureIntUniform(int min, int max)
public void testNextPoisson()
public void testNextPoissonConsistency()
public void checkNextPoissonConsistency(double mean)
public void testNextHex()
public void testNextSecureHex()
public void testNextUniformIAE()
public void testNextUniformUniformPositiveBounds()
public void testNextUniformUniformNegativeToPositiveBounds()
public void testNextUniformUniformNegaiveBounds()
public void testNextUniformUniformMaximalInterval()
private void checkNextUniformUniform(double min, double max)
public void testNextUniformExclusiveEndpoints()
public void testNextGaussian()
public void testNextExponential()
public void testConfig()
public void testNextSample()
private int findSample(Object[] u, Object[] samp)
public void testNextPermutation()
private int findPerm(int[][] p, int[] samp)
public void testNextInversionDeviate()
public void testNextBeta()
public void testNextCauchy()
public void testNextChiSquare()
public void testNextF()
public void testNextGamma()
public void testNextT()
public void testNextWeibull()
public void testNextBinomial()
public void testNextHypergeometric()
public void testNextPascal()
public void testNextZipf()
public void testReseed()
long smallSampleSize=Optional[1000]
double[] expected=Optional[{ 250, 250, 250, 250 }]
int largeSampleSize=Optional[10000]
String[] hex=Optional[{ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f" }]
RandomDataGenerator randomData=Optional[null]
ChiSquareTest testStatistic=Optional[new ChiSquareTest()]
