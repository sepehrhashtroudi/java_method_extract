protected DerivativeStructure build(final double x)
public void testWrongVariableIndex()
public void testMissingOrders()
public void testTooLargeOrder()
public void testVariableWithoutDerivative0()
public void testVariableWithoutDerivative1()
public void testVariable()
public void testConstant()
public void testCreateConstant()
public void testPrimitiveAdd()
public void testAdd()
public void testPrimitiveSubtract()
public void testSubtract()
public void testPrimitiveMultiply()
public void testMultiply()
public void testNegate()
public void testReciprocal()
public void testPow()
public void testPowDoubleDS()
public void testExpression()
public void testCompositionOneVariableX()
public void testTrigo()
public void testSqrtDefinition()
public void testRootNSingularity()
public void testSqrtPow2()
public void testCbrtDefinition()
public void testCbrtPow3()
public void testPowReciprocalPow()
public void testHypotDefinition()
public void testHypotNoOverflow()
public void testHypotNeglectible()
public void testHypotSpecial()
public void testPrimitiveRemainder()
public void testRemainder()
public void testExp()
public void testExpm1Definition()
public void testLog()
public void testLog1pDefinition()
public void testLog10Definition()
public void testLogExp()
public void testLog1pExpm1()
public void testLog10Power()
public void testSinCos()
public void testSinAsin()
public void testCosAcos()
public void testTanAtan()
public void testTangentDefinition()
public void testAtan2()
public void testAtan2SpecialCases()
public void testSinhDefinition()
public void testCoshDefinition()
public void testTanhDefinition()
public void testSinhAsinh()
public void testCoshAcosh()
public void testTanhAtanh()
public void testCompositionOneVariableY()
public void testTaylorPolynomial()
public void testTaylorAtan2()
public void testAbs()
public void testSignum()
public void testCeilFloorRintLong()
public void testCopySign()
public void testToDegreesDefinition()
public void testToRadiansDefinition()
public void testDegRad()
public void testComposeMismatchedDimensions()
public void testCompose()
public void testField()
public void testOneParameterConstructor()
public void testOneOrderConstructor()
public void testLinearCombination1DSDS()
public void testLinearCombination1DoubleDS()
public void testLinearCombination2DSDS()
public void testLinearCombination2DoubleDS()
public void testSerialization()
private void checkF0F1(DerivativeStructure ds, double value, double... derivatives)
private void checkEquals(DerivativeStructure ds1, DerivativeStructure ds2, double epsilon)
