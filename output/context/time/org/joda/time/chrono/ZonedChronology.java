private ZonedChronology(Chronology base, DateTimeZone zone)
 ZonedDurationField(DurationField field, DateTimeZone zone)
 ZonedDateTimeField(DateTimeField field, DateTimeZone zone, DurationField durationField, DurationField rangeDurationField, DurationField leapDurationField)
public static ZonedChronology getInstance(Chronology base, DateTimeZone zone)
 static boolean useTimeArithmetic(DurationField field)
public DateTimeZone getZone()
public Chronology withUTC()
public Chronology withZone(DateTimeZone zone)
public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException
public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond) throws IllegalArgumentException
public long getDateTimeMillis(long instant, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond) throws IllegalArgumentException
private long localToUTC(long localInstant)
protected void assemble(Fields fields)
private DurationField convertField(DurationField field, HashMap<Object, Object> converted)
private DateTimeField convertField(DateTimeField field, HashMap<Object, Object> converted)
public boolean equals(Object obj)
public int hashCode()
public String toString()
public boolean isPrecise()
public long getUnitMillis()
public int getValue(long duration, long instant)
public long getValueAsLong(long duration, long instant)
public long getMillis(int value, long instant)
public long getMillis(long value, long instant)
public long add(long instant, int value)
public long add(long instant, long value)
public int getDifference(long minuendInstant, long subtrahendInstant)
public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant)
private int getOffsetToAdd(long instant)
private int getOffsetFromLocalToSubtract(long instant)
private long addOffset(long instant)
public boolean equals(Object obj)
public int hashCode()
public boolean isLenient()
public int get(long instant)
public String getAsText(long instant, Locale locale)
public String getAsShortText(long instant, Locale locale)
public String getAsText(int fieldValue, Locale locale)
public String getAsShortText(int fieldValue, Locale locale)
public long add(long instant, int value)
public long add(long instant, long value)
public long addWrapField(long instant, int value)
public long set(long instant, int value)
public long set(long instant, String text, Locale locale)
public int getDifference(long minuendInstant, long subtrahendInstant)
public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant)
public final DurationField getDurationField()
public final DurationField getRangeDurationField()
public boolean isLeap(long instant)
public int getLeapAmount(long instant)
public final DurationField getLeapDurationField()
public long roundFloor(long instant)
public long roundCeiling(long instant)
public long remainder(long instant)
public int getMinimumValue()
public int getMinimumValue(long instant)
public int getMinimumValue(ReadablePartial instant)
public int getMinimumValue(ReadablePartial instant, int[] values)
public int getMaximumValue()
public int getMaximumValue(long instant)
public int getMaximumValue(ReadablePartial instant)
public int getMaximumValue(ReadablePartial instant, int[] values)
public int getMaximumTextLength(Locale locale)
public int getMaximumShortTextLength(Locale locale)
private int getOffsetToAdd(long instant)
public boolean equals(Object obj)
public int hashCode()
long serialVersionUID=Optional[-1079258847191166848L]
