private Gamma()
public static double logGamma(double x)
public static double regularizedGammaP(double a, double x)
public static double regularizedGammaP(double a, double x, double epsilon, int maxIterations)
public static double regularizedGammaQ(double a, double x)
protected double getA(int n, double x)
protected double getB(int n, double x)
public static double regularizedGammaQ(final double a, double x, double epsilon, int maxIterations)
public static double digamma(double x)
public static double trigamma(double x)
public static double lanczos(final double x)
public static double invGamma1pm1(final double x)
public static double logGamma1p(final double x) throws NumberIsTooSmallException, NumberIsTooLargeException
public static double gamma(final double x)
double GAMMA=Optional[0.577215664901532860606512090082]
double LANCZOS_G=Optional[607.0 / 128.0]
double DEFAULT_EPSILON=Optional[10e-15]
double[] LANCZOS=Optional[{ 0.99999999999999709182, 57.156235665862923517, -59.597960355475491248, 14.136097974741747174, -0.49191381609762019978, .33994649984811888699e-4, .46523628927048575665e-4, -.98374475304879564677e-4, .15808870322491248884e-3, -.21026444172410488319e-3, .21743961811521264320e-3, -.16431810653676389022e-3, .84418223983852743293e-4, -.26190838401581408670e-4, .36899182659531622704e-5 }]
double HALF_LOG_2_PI=Optional[0.5 * FastMath.log(2.0 * FastMath.PI)]
double SQRT_TWO_PI=Optional[2.506628274631000502]
double C_LIMIT=Optional[49]
double S_LIMIT=Optional[1e-5]
double INV_GAMMA1P_M1_A0=Optional[.611609510448141581788E-08]
double INV_GAMMA1P_M1_A1=Optional[.624730830116465516210E-08]
double INV_GAMMA1P_M1_B1=Optional[.203610414066806987300E+00]
double INV_GAMMA1P_M1_B2=Optional[.266205348428949217746E-01]
double INV_GAMMA1P_M1_B3=Optional[.493944979382446875238E-03]
double INV_GAMMA1P_M1_B4=Optional[-.851419432440314906588E-05]
double INV_GAMMA1P_M1_B5=Optional[-.643045481779353022248E-05]
double INV_GAMMA1P_M1_B6=Optional[.992641840672773722196E-06]
double INV_GAMMA1P_M1_B7=Optional[-.607761895722825260739E-07]
double INV_GAMMA1P_M1_B8=Optional[.195755836614639731882E-09]
double INV_GAMMA1P_M1_P0=Optional[.6116095104481415817861E-08]
double INV_GAMMA1P_M1_P1=Optional[.6871674113067198736152E-08]
double INV_GAMMA1P_M1_P2=Optional[.6820161668496170657918E-09]
double INV_GAMMA1P_M1_P3=Optional[.4686843322948848031080E-10]
double INV_GAMMA1P_M1_P4=Optional[.1572833027710446286995E-11]
double INV_GAMMA1P_M1_P5=Optional[-.1249441572276366213222E-12]
double INV_GAMMA1P_M1_P6=Optional[.4343529937408594255178E-14]
double INV_GAMMA1P_M1_Q1=Optional[.3056961078365221025009E+00]
double INV_GAMMA1P_M1_Q2=Optional[.5464213086042296536016E-01]
double INV_GAMMA1P_M1_Q3=Optional[.4956830093825887312020E-02]
double INV_GAMMA1P_M1_Q4=Optional[.2692369466186361192876E-03]
double INV_GAMMA1P_M1_C=Optional[-.422784335098467139393487909917598E+00]
double INV_GAMMA1P_M1_C0=Optional[.577215664901532860606512090082402E+00]
double INV_GAMMA1P_M1_C1=Optional[-.655878071520253881077019515145390E+00]
double INV_GAMMA1P_M1_C2=Optional[-.420026350340952355290039348754298E-01]
double INV_GAMMA1P_M1_C3=Optional[.166538611382291489501700795102105E+00]
double INV_GAMMA1P_M1_C4=Optional[-.421977345555443367482083012891874E-01]
double INV_GAMMA1P_M1_C5=Optional[-.962197152787697356211492167234820E-02]
double INV_GAMMA1P_M1_C6=Optional[.721894324666309954239501034044657E-02]
double INV_GAMMA1P_M1_C7=Optional[-.116516759185906511211397108401839E-02]
double INV_GAMMA1P_M1_C8=Optional[-.215241674114950972815729963053648E-03]
double INV_GAMMA1P_M1_C9=Optional[.128050282388116186153198626328164E-03]
double INV_GAMMA1P_M1_C10=Optional[-.201348547807882386556893914210218E-04]
double INV_GAMMA1P_M1_C11=Optional[-.125049348214267065734535947383309E-05]
double INV_GAMMA1P_M1_C12=Optional[.113302723198169588237412962033074E-05]
double INV_GAMMA1P_M1_C13=Optional[-.205633841697760710345015413002057E-06]
