public PolygonsSet()
public PolygonsSet(final BSPTree<Euclidean2D> tree)
public PolygonsSet(final Collection<SubHyperplane<Euclidean2D>> boundary)
public PolygonsSet(final double xMin, final double xMax, final double yMin, final double yMax)
public PolygonsSet(final double hyperplaneThickness, final Vector2D... vertices)
public Vertex(final Vector2D location)
public Edge(final Vertex start, final Vertex end, final Line line)
public ComparableSegment(final Vector2D start, final Vector2D end, final Line line)
public ComparableSegment(final Vector2D start, final double dx, final double dy)
public SegmentsBuilder()
private static Line[] boxBoundary(final double xMin, final double xMax, final double yMin, final double yMax)
private static BSPTree<Euclidean2D> verticesToTree(final double hyperplaneThickness, final Vector2D... vertices)
private static void insertEdges(final double hyperplaneThickness, final BSPTree<Euclidean2D> node, final List<Edge> edges)
public Vector2D getLocation()
public void bindWith(final Line line)
public Line sharedLineWith(final Vertex vertex)
public void setIncoming(final Edge incoming)
public Edge getIncoming()
public void setOutgoing(final Edge outgoing)
public Edge getOutgoing()
public Vertex getStart()
public Vertex getEnd()
public Line getLine()
public void setNode(final BSPTree<Euclidean2D> node)
public BSPTree<Euclidean2D> getNode()
public Vertex split(final Line splitLine)
public PolygonsSet buildNew(final BSPTree<Euclidean2D> tree)
protected void computeGeometricalProperties()
public Vector2D[][] getVertices()
private List<ComparableSegment> followLoop(final AVLTree<ComparableSegment>.Node node, final AVLTree<ComparableSegment> sorted)
public int compareTo(final ComparableSegment o)
public boolean equals(final Object other)
public int hashCode()
public Order visitOrder(final BSPTree<Euclidean2D> node)
public void visitInternalNode(final BSPTree<Euclidean2D> node)
public void visitLeafNode(final BSPTree<Euclidean2D> node)
private void addContribution(final SubHyperplane<Euclidean2D> sub, final boolean reversed)
public AVLTree<ComparableSegment> getSorted()
Vector2D[][] vertices
