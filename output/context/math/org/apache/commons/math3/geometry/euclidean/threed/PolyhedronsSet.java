public PolyhedronsSet()
public PolyhedronsSet(final BSPTree<Euclidean3D> tree)
public PolyhedronsSet(final Collection<SubHyperplane<Euclidean3D>> boundary)
public PolyhedronsSet(final double xMin, final double xMax, final double yMin, final double yMax, final double zMin, final double zMax)
public FacetsContributionVisitor()
public RotationTransform(final Vector3D center, final Rotation rotation)
public TranslationTransform(final Vector3D translation)
private static BSPTree<Euclidean3D> buildBoundary(final double xMin, final double xMax, final double yMin, final double yMax, final double zMin, final double zMax)
public PolyhedronsSet buildNew(final BSPTree<Euclidean3D> tree)
protected void computeGeometricalProperties()
public Order visitOrder(final BSPTree<Euclidean3D> node)
public void visitInternalNode(final BSPTree<Euclidean3D> node)
public void visitLeafNode(final BSPTree<Euclidean3D> node)
private void addContribution(final SubHyperplane<Euclidean3D> facet, final boolean reversed)
public SubHyperplane<Euclidean3D> firstIntersection(final Vector3D point, final Line line)
private SubHyperplane<Euclidean3D> recurseFirstIntersection(final BSPTree<Euclidean3D> node, final Vector3D point, final Line line)
private SubHyperplane<Euclidean3D> boundaryFacet(final Vector3D point, final BSPTree<Euclidean3D> node)
public PolyhedronsSet rotate(final Vector3D center, final Rotation rotation)
public Vector3D apply(final Vector<Euclidean3D> point)
public Plane apply(final Hyperplane<Euclidean3D> hyperplane)
public SubHyperplane<Euclidean2D> apply(final SubHyperplane<Euclidean2D> sub, final Hyperplane<Euclidean3D> original, final Hyperplane<Euclidean3D> transformed)
public PolyhedronsSet translate(final Vector3D translation)
public Vector3D apply(final Vector<Euclidean3D> point)
public Plane apply(final Hyperplane<Euclidean3D> hyperplane)
public SubHyperplane<Euclidean2D> apply(final SubHyperplane<Euclidean2D> sub, final Hyperplane<Euclidean3D> original, final Hyperplane<Euclidean3D> transformed)
