 Node optimizeSubtree(Node subtree)
private Node tryFoldTry(Node n)
private Node tryFoldAssignment(Node subtree)
private Node tryFoldExpr(Node subtree)
private Node trySimplifyUnusedResult(Node n)
private Node trySimplifyUnusedResult(Node n, boolean removeUnused)
private Node tryOptimizeSwitch(Node n)
private Node tryOptimizeDefaultCase(Node n)
private void removeCase(Node switchNode, Node caseNode)
private boolean isUselessCase(Node caseNode, @Nullable Node previousCase)
private boolean isExit(Node n)
private Node tryFoldComma(Node n)
 Node tryOptimizeBlock(Node n)
private boolean isUnremovableNode(Node n)
private void tryOptimizeConditionalAfterAssign(Node n)
private boolean isSimpleAssignment(Node n)
private Node getSimpleAssignmentName(Node n)
private Node getSimpleAssignmentValue(Node n)
private boolean isConditionalStatement(Node n)
private boolean isExprConditional(Node n)
private Node getConditionalStatementCondition(Node n)
private Node tryFoldIf(Node n)
private Node tryFoldHook(Node n)
 Node tryFoldWhile(Node n)
 Node tryFoldFor(Node n)
 Node tryFoldDo(Node n)
 boolean hasBreakOrContinue(Node n)
private void tryFoldForCondition(Node forCondition)
