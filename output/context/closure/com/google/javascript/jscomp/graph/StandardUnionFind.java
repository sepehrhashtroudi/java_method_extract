public StandardUnionFind()
public StandardUnionFind(UnionFind<E> other)
 Node(E element)
public void add(E e)
public E union(E a, E b)
public E find(E e)
public boolean areEquivalent(E a, E b)
public Set<E> elements()
public Collection<Set<E>> allEquivalenceClasses()
private Node<E> findRootOrCreateNode(E e)
private Node<E> findRoot(Node<E> node)
public boolean apply(@Nullable Object b)
public boolean contains(Object o)
public Iterator<E> iterator()
public int size()
public Set<E> findAll(final E value)
long serialVersionUID=Optional[-1L]
Map<E, Node<E>> elmap=Optional[Maps.newLinkedHashMap()]
