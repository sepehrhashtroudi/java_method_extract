public JsonML(TagType type)
public JsonML(TagType type, JsonML... children)
public JsonML(TagType type, List<? extends JsonML> children)
public JsonML(TagType type, Map<? extends TagAttr, ?> attributes)
public JsonML(TagType type, Map<? extends TagAttr, ?> attributes, List<? extends JsonML> children)
public void addChild(int index, JsonML element)
public void appendChild(JsonML element)
public void appendChildren(Collection<? extends JsonML> elements)
public int childrenSize()
public void clearChildren()
public Object getAttribute(TagAttr name)
public Map<TagAttr, Object> getAttributes()
public JsonML getChild(int index)
public List<JsonML> getChildren()
public List<JsonML> getChildren(int fromIndex, int toIndex)
public TagType getType()
public boolean hasChildren()
public void setAttribute(TagAttr name, Object value)
public void setAttributes(Map<TagAttr, Object> attributes)
public void setChild(int index, JsonML element)
public void setChildren(JsonML... children)
public void setChildren(List<JsonML> children)
public String toString()
private void toString(StringBuilder sb, boolean printAttributes, boolean printChildren)
private static void escapeStringOnto(String s, StringBuilder sb)
public String toStringTree()
private static void toStringTreeHelper(JsonML element, int level, StringBuilder sb) throws IOException
TagType type
Map<TagAttr, Object> attributes=Optional[new EnumMap<TagAttr, Object>(TagAttr.class)]
List<JsonML> children=Optional[new ArrayList<JsonML>()]
