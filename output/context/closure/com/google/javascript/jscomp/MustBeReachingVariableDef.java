 MustBeReachingVariableDef(ControlFlowGraph<Node> cfg, Scope jsScope, AbstractCompiler compiler)
 Definition(Node node)
public MustDef()
public MustDef(Iterator<Var> vars)
public MustDef(MustDef other)
public boolean equals(Object other)
public boolean equals(Object other)
public MustDef apply(MustDef a, MustDef b)
 boolean isForward()
 MustDef createEntryLattice()
 MustDef createInitialEstimateLattice()
 MustDef flowThrough(Node n, MustDef input)
private void computeMustDef(Node n, Node cfgNode, MustDef output, boolean conditional)
private void addToDefIfLocal(String name, @Nullable Node node, @Nullable Node rValue, MustDef def)
private void escapeParameters(MustDef output)
private boolean isParameter(Var v)
public void visit(NodeTraversal t, Node n, Node parent)
private void computeDependence(final Definition def, Node rValue)
 Definition getDef(String name, Node useNode)
 Node getDefNode(String name, Node useNode)
 boolean dependsOnOuterScopeVars(Definition def)
Scope jsScope
AbstractCompiler compiler
Set<Var> escaped
