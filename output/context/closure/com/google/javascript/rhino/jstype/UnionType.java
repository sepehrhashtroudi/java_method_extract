 UnionType(JSTypeRegistry registry, Collection<JSType> alternates)
public Iterable<JSType> getAlternates()
public boolean matchesNumberContext()
public boolean matchesStringContext()
public boolean matchesObjectContext()
public JSType findPropertyType(String propertyName)
public boolean canBeCalled()
public JSType autobox()
public JSType restrictByNotNullOrUndefined()
public TernaryValue testForEquality(JSType that)
public boolean isNullable()
public boolean isUnknownType()
public boolean isStruct()
public boolean isDict()
public JSType getLeastSupertype(JSType that)
 JSType meet(JSType that)
 boolean checkUnionEquivalenceHelper(UnionType that, EquivalenceMethod eqMethod)
private boolean hasAlternate(JSType type, EquivalenceMethod eqMethod)
public boolean hasProperty(String pname)
public int hashCode()
public UnionType toMaybeUnionType()
public boolean isObject()
public boolean contains(JSType type)
public JSType getRestrictedUnion(JSType type)
 String toStringHelper(boolean forAnnotations)
public boolean isSubtype(JSType that)
public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome)
public BooleanLiteralSet getPossibleToBooleanOutcomes()
public TypePair getTypesUnderEquality(JSType that)
public TypePair getTypesUnderInequality(JSType that)
public TypePair getTypesUnderShallowInequality(JSType that)
public T visit(Visitor<T> visitor)
 T visit(RelationshipVisitor<T> visitor, JSType that)
 JSType resolveInternal(ErrorReporter t, StaticScope<JSType> scope)
public String toDebugHashCodeString()
public boolean setValidator(Predicate<JSType> validator)
public JSType collapseUnion()
public void matchConstraint(JSType constraint)
public boolean hasAnyTemplateTypesInternal()
long serialVersionUID=Optional[1L]
Collection<JSType> alternates
int hashcode
