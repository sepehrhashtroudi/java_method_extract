public DateAxis()
public DateAxis(String label)
public DateAxis(String label, TimeZone zone)
public DateAxis(String label, TimeZone zone, Locale locale)
public long toTimelineValue(long millisecond)
public long toTimelineValue(Date date)
public long toMillisecond(long value)
public boolean containsDomainValue(long millisecond)
public boolean containsDomainValue(Date date)
public boolean containsDomainRange(long from, long to)
public boolean containsDomainRange(Date from, Date to)
public boolean equals(Object object)
public TimeZone getTimeZone()
public void setTimeZone(TimeZone zone)
public Timeline getTimeline()
public void setTimeline(Timeline timeline)
public DateTickUnit getTickUnit()
public void setTickUnit(DateTickUnit unit)
public void setTickUnit(DateTickUnit unit, boolean notify, boolean turnOffAutoSelection)
public DateFormat getDateFormatOverride()
public void setDateFormatOverride(DateFormat formatter)
public void setRange(Range range)
public void setRange(Range range, boolean turnOffAutoRange, boolean notify)
public void setRange(Date lower, Date upper)
public void setRange(double lower, double upper)
public Date getMinimumDate()
public void setMinimumDate(Date date)
public Date getMaximumDate()
public void setMaximumDate(Date maximumDate)
public DateTickMarkPosition getTickMarkPosition()
public void setTickMarkPosition(DateTickMarkPosition position)
public void configure()
public boolean isHiddenValue(long millis)
public double valueToJava2D(double value, Rectangle2D area, RectangleEdge edge)
public double dateToJava2D(Date date, Rectangle2D area, RectangleEdge edge)
public double java2DToValue(double java2DValue, Rectangle2D area, RectangleEdge edge)
public Date calculateLowestVisibleTickValue(DateTickUnit unit)
public Date calculateHighestVisibleTickValue(DateTickUnit unit)
protected Date previousStandardDate(Date date, DateTickUnit unit)
private Date calculateDateForPosition(RegularTimePeriod period, DateTickMarkPosition position)
protected Date nextStandardDate(Date date, DateTickUnit unit)
public static TickUnitSource createStandardDateTickUnits()
public static TickUnitSource createStandardDateTickUnits(TimeZone zone)
public static TickUnitSource createStandardDateTickUnits(TimeZone zone, Locale locale)
protected void autoAdjustRange()
protected void selectAutoTickUnit(Graphics2D g2, Rectangle2D dataArea, RectangleEdge edge)
protected void selectHorizontalAutoTickUnit(Graphics2D g2, Rectangle2D dataArea, RectangleEdge edge)
protected void selectVerticalAutoTickUnit(Graphics2D g2, Rectangle2D dataArea, RectangleEdge edge)
private double estimateMaximumTickLabelWidth(Graphics2D g2, DateTickUnit unit)
private double estimateMaximumTickLabelHeight(Graphics2D g2, DateTickUnit unit)
public List refreshTicks(Graphics2D g2, AxisState state, Rectangle2D dataArea, RectangleEdge edge)
private Date correctTickDateForPosition(Date time, DateTickUnit unit, DateTickMarkPosition position)
protected List refreshTicksHorizontal(Graphics2D g2, Rectangle2D dataArea, RectangleEdge edge)
protected List refreshTicksVertical(Graphics2D g2, Rectangle2D dataArea, RectangleEdge edge)
public AxisState draw(Graphics2D g2, double cursor, Rectangle2D plotArea, Rectangle2D dataArea, RectangleEdge edge, PlotRenderingInfo plotState)
public void zoomRange(double lowerPercent, double upperPercent)
public boolean equals(Object obj)
public int hashCode()
public Object clone() throws CloneNotSupportedException
long serialVersionUID=Optional[-1013460999649007604L]
DateRange DEFAULT_DATE_RANGE=Optional[new DateRange()]
double DEFAULT_AUTO_RANGE_MINIMUM_SIZE_IN_MILLISECONDS=Optional[2.0]
DateTickUnit DEFAULT_DATE_TICK_UNIT=Optional[new DateTickUnit(DateTickUnitType.DAY, 1, new SimpleDateFormat())]
Date DEFAULT_ANCHOR_DATE=Optional[new Date()]
DateTickUnit tickUnit
DateFormat dateFormatOverride
DateTickMarkPosition tickMarkPosition=Optional[DateTickMarkPosition.START]
Timeline DEFAULT_TIMELINE=Optional[new DefaultTimeline()]
TimeZone timeZone
Locale locale
Timeline timeline
