public CoreFunction(int functionCode, Expression[] args)
public int getFunctionCode()
protected String getFunctionName()
public Expression getArg1()
public Expression getArg2()
public Expression getArg3()
public int getArgumentCount()
public boolean computeContextDependent()
public String toString()
public Object compute(EvalContext context)
public Object computeValue(EvalContext context)
protected Object functionLast(EvalContext context)
protected Object functionPosition(EvalContext context)
protected Object functionCount(EvalContext context)
protected Object functionLang(EvalContext context)
protected Object functionID(EvalContext context)
protected Object functionKey(EvalContext context)
protected Object functionNamespaceURI(EvalContext context)
protected Object functionLocalName(EvalContext context)
protected Object functionName(EvalContext context)
protected Object functionString(EvalContext context)
protected Object functionConcat(EvalContext context)
protected Object functionStartsWith(EvalContext context)
protected Object functionContains(EvalContext context)
protected Object functionSubstringBefore(EvalContext context)
protected Object functionSubstringAfter(EvalContext context)
protected Object functionSubstring(EvalContext context)
protected Object functionStringLength(EvalContext context)
protected Object functionNormalizeSpace(EvalContext context)
protected Object functionTranslate(EvalContext context)
protected Object functionBoolean(EvalContext context)
protected Object functionNot(EvalContext context)
protected Object functionTrue(EvalContext context)
protected Object functionFalse(EvalContext context)
protected Object functionNull(EvalContext context)
protected Object functionNumber(EvalContext context)
protected Object functionSum(EvalContext context)
protected Object functionFloor(EvalContext context)
protected Object functionCeiling(EvalContext context)
protected Object functionRound(EvalContext context)
private Object functionFormatNumber(EvalContext context)
private void assertArgCount(int count)
Double ZERO=Optional[new Double(0)]
int functionCode
