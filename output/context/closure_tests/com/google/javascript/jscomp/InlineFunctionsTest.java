public InlineFunctionsTest()
 StringCompare()
protected void setUp() throws Exception
protected CompilerPass getProcessor(Compiler compiler)
protected int getNumRepetitions()
public void testInlineEmptyFunction1()
public void testInlineEmptyFunction2()
public void testInlineEmptyFunction3()
public void testInlineEmptyFunction4()
public void testInlineEmptyFunction5()
public void testInlineFunctions1()
public void testInlineFunctions2()
public void testInlineFunctions3()
public void testInlineFunctions4()
public void testInlineFunctions5()
public void testInlineFunctions6()
public void testInlineFunctions7()
public void testInlineFunctions8()
public void testInlineFunctions9()
public void testInlineFunctions10()
public void testInlineFunctions11()
public void testInlineFunctions12()
public void testInlineFunctions13()
public void testInlineFunctions14()
public void testInlineFunctions15a()
public void testInlineFunctions15b()
public void testInlineFunctions15c()
public void testInlineFunctions15d()
public void testInlineFunctions16a()
public void testInlineFunctions16b()
public void testInlineFunctions17()
public void testInlineFunctions18()
public void testInlineFunctions19()
public void testInlineFunctions20()
public void testInlineFunctions21()
public void testInlineFunctions22()
public void testInlineFunctions23()
public void testInlineFunctions24()
public void testInlineFunctions25()
public void testInlineFunctions26()
public void testInlineFunctions27()
public void testInlineFunctions28()
public void testInlineFunctions29()
public void testInlineFunctions30()
public void testInlineFunctions31()
public void testMixedModeInlining1()
public void testMixedModeInlining2()
public void testMixedModeInlining3()
public void testMixedModeInlining4()
public void testMixedModeInliningCosting1()
public void testMixedModeInliningCosting2()
public void testMixedModeInliningCosting3()
public void testMixedModeInliningCosting4()
public void testNoInlineIfParametersModified1()
public void testNoInlineIfParametersModified2()
public void testNoInlineIfParametersModified3()
public void testNoInlineIfParametersModified4()
public void testNoInlineIfParametersModified5()
public void testNoInlineIfParametersModified6()
public void testNoInlineIfParametersModified7()
public void testNoInlineIfParametersModified8()
public void testNoInlineIfParametersModified9()
public void testInlineNeverPartialSubtitution1()
public void testInlineNeverPartialSubtitution2()
public void testInlineNeverMutateConstants()
public void testInlineNeverOverrideNewValues()
public void testInlineMutableArgsReferencedOnce()
public void testNoInlineMutableArgs1()
public void testNoInlineMutableArgs2()
public void testNoInlineMutableArgs3()
public void testNoInlineMutableArgs4()
public void testInlineBlockMutableArgs1()
public void testInlineBlockMutableArgs2()
public void testInlineBlockMutableArgs3()
public void testInlineBlockMutableArgs4()
public void testShadowVariables1()
public void testShadowVariables2()
public void testShadowVariables3()
public void testShadowVariables4()
public void testShadowVariables5()
public void testShadowVariables6()
public void testShadowVariables7()
public void testShadowVariables8()
public void testShadowVariables9()
public void testShadowVariables10()
public void testShadowVariables11()
public void testShadowVariables12()
public void testShadowVariables13()
public void testShadowVariables14()
public void testShadowVariables15()
public void testShadowVariables16()
public void testShadowVariables17()
public void testShadowVariables18()
public void testCostBasedInlining1()
public void testCostBasedInlining2()
public void testCostBasedInlining3()
public void testCostBasedInlining4()
public void testCostBasedInlining5()
public void testCostBasedInlining6()
public void testCostBasedInlining7()
public void testCostBasedInlining8()
public void testCostBasedInlining9()
public void testCostBasedInlining10()
public void testCostBasedInlining11()
public void testCostBasedInlining12()
public void testCostBasedInliningComplex1()
public void testCostBasedInliningComplex2()
public void testCostBasedInliningComplex3()
public void testCostBasedInliningComplex4()
public void testCostBasedInliningComplex5()
public void testCostBasedInliningComplex6()
public void testCostBasedInliningComplex7()
public void testCostBasedInliningComplex8()
public void testCostBasedInliningComplex9()
public void testDoubleInlining1()
public void testDoubleInlining2()
public void testNoInlineOfNonGlobalFunction1()
public void testNoInlineOfNonGlobalFunction2()
public void testNoInlineOfNonGlobalFunction3()
public void testNoInlineOfNonGlobalFunction4()
public void testNoInlineMaskedFunction()
public void testNoInlineNonFunction()
public void testInlineCall()
public void testInlineFunctionWithArgsMismatch1()
public void testInlineFunctionWithArgsMismatch2()
public void testInlineFunctionWithArgsMismatch3()
public void testInlineFunctionWithArgsMismatch4()
public void testArgumentsWithSideEffectsNeverInlined1()
public void testArgumentsWithSideEffectsNeverInlined2()
public void testOneSideEffectCallDoesNotRuinOthers()
public void testComplexInlineNoResultNoParamCall1()
public void testComplexInlineNoResultNoParamCall2()
public void testComplexInlineNoResultNoParamCall3()
public void testComplexInlineNoResultWithParamCall1()
public void testComplexInlineNoResultWithParamCall2()
public void testComplexInlineNoResultWithParamCall3()
public void testComplexInline1()
public void testComplexInline2()
public void testComplexInline3()
public void testComplexInline4()
public void testComplexInline5()
public void testComplexInline6()
public void testComplexInline7()
public void testComplexInline8()
public void testComplexInlineVars1()
public void testComplexInlineVars2()
public void testComplexInlineVars3()
public void testComplexInlineVars4()
public void testComplexInlineVars5()
public void testComplexInlineVars6()
public void testComplexInlineVars7()
public void testComplexInlineVars8()
public void testComplexInlineVars9()
public void testComplexInlineVars10()
public void testComplexInlineVars11()
public void testComplexInlineVars12()
public void testComplexInlineInExpresssions1()
public void testComplexInlineInExpresssions2()
public void testComplexInlineInExpresssions3()
public void testComplexInlineInExpresssions4()
public void testComplexInlineInExpresssions5()
public void testComplexNoInline1()
public void testComplexNoInline2()
public void testComplexSample()
public void testComplexSampleNoInline()
public void testComplexNoVarSub()
public void testComplexFunctionWithFunctionDefinition1()
public void testComplexFunctionWithFunctionDefinition2()
public void testComplexFunctionWithFunctionDefinition2a()
public void testComplexFunctionWithFunctionDefinition3()
public void testDecomposePlusEquals()
public void testDecomposeFunctionExpressionInCall()
public void testInlineConstructor1()
public void testInlineConstructor2()
public void testInlineConstructor3()
public void testInlineConstructor4()
public void testFunctionExpressionInlining1()
public void testFunctionExpressionInlining2()
public void testFunctionExpressionInlining3()
public void testFunctionExpressionInlining4()
public void testFunctionExpressionCallInlining1()
public void testFunctionExpressionCallInlining2()
public void testFunctionExpressionCallInlining3()
public void testFunctionExpressionCallInlining4()
public void testFunctionExpressionCallInlining5()
public void testFunctionExpressionCallInlining6()
public void testFunctionExpressionCallInlining7()
public void testFunctionExpressionCallInlining8()
public void testFunctionExpressionCallInlining9()
public void testFunctionExpressionCallInlining10()
public void testFunctionExpressionCallInlining11a()
public void testFunctionExpressionCallInlining11b()
public void testFunctionExpressionCallInlining11c()
public void testFunctionExpressionCallInlining11d()
public void testFunctionExpressionCallInlining11e()
public void testFunctionExpressionCallInlining12()
public void testFunctionExpressionOmega()
public void testLocalFunctionInlining1()
public void testLocalFunctionInlining2()
public void testLocalFunctionInlining3()
public void testLocalFunctionInlining4()
public void testLocalFunctionInlining5()
public void testLocalFunctionInlining6()
public void testLocalFunctionInliningOnly1()
public void testLocalFunctionInliningOnly2()
public void testLocalFunctionInliningOnly3()
public void testLocalFunctionInliningOnly4()
public void testInlineWithThis1()
public void testInlineWithThis2()
public void testInlineWithThis3()
public void testInlineWithThis4()
public void testInlineWithThis5()
public void testInlineWithThis6()
public void testInlineWithThis7()
public void testFunctionExpressionYCombinator()
public void testRenamePropertyFunction()
public void testReplacePropertyFunction()
public void testInlineWithClosureContainingThis()
public void testIssue5159924a()
public void testIssue5159924b()
public void testInlineObject()
public void setUp() throws Exception
protected CompilerPass getProcessor(Compiler compiler)
public void testInlineObject()
public void testBug4944818()
public void testIssue423()
public void testIssue728()
public void testAnonymous1()
public void testAnonymous2()
public void testAnonymous3()
public void testLoopWithFunctionWithFunction()
public void testMethodWithFunctionWithFunction()
public void testCrossModuleInlining1()
public void testCrossModuleInlining2()
public void testCrossModuleInlining3()
public void test6671158()
boolean allowGlobalFunctionInlining=Optional[true]
boolean allowBlockInlining=Optional[true]
boolean allowExpressionDecomposition=Optional[true]
boolean allowFunctionExpressionInlining=Optional[true]
boolean allowLocalFunctionInlining=Optional[true]
boolean assumeStrictThis=Optional[false]
boolean assumeMinimumCapture=Optional[false]
