public CheckAccessControlsTest()
protected CompilerPass getProcessor(final Compiler compiler)
protected CompilerOptions getOptions()
private void testDep(String js, String reason, DiagnosticType error, DiagnosticType errorWithMessage)
public void testDeprecatedFunction()
public void testWarningOnDeprecatedConstVariable()
public void testThatNumbersArentDeprecated()
public void testDeprecatedFunctionVariable()
public void testNoWarningInGlobalScope()
public void testNoWarningInGlobalScopeForCall()
public void testNoWarningInDeprecatedFunction()
public void testWarningInNormalClass()
public void testWarningForProperty1()
public void testWarningForProperty2()
public void testWarningForDeprecatedClass()
public void testNoWarningForDeprecatedClassInstance()
public void testWarningForDeprecatedSuperClass()
public void testWarningForDeprecatedSuperClass2()
public void testWarningForPrototypeProperty()
public void testNoWarningForNumbers()
public void testWarningForMethod1()
public void testWarningForMethod2()
public void testNoWarningInDeprecatedClass()
public void testNoWarningInDeprecatedClass2()
public void testNoWarningInDeprecatedStaticMethod()
public void testWarningInStaticMethod()
public void testDeprecatedObjLitKey()
public void testWarningForSubclassMethod()
public void testWarningForSuperClassWithDeprecatedSubclassMethod()
public void testWarningForSuperclassMethod()
public void testWarningForSuperclassMethod2()
public void testWarningForBind()
public void testWarningForDeprecatedClassInGlobalScope()
public void testNoWarningForPrototypeCopying()
public void testNoWarningOnDeprecatedPrototype()
public void testPrivateAccessForNames()
public void testPrivateAccessForProperties1()
public void testPrivateAccessForProperties2()
public void testPrivateAccessForProperties3()
public void testPrivateAccessForProperties4()
public void testNoPrivateAccessForProperties1()
public void testNoPrivateAccessForProperties2()
public void testNoPrivateAccessForProperties3()
public void testNoPrivateAccessForProperties4()
public void testNoPrivateAccessForProperties5()
public void testNoPrivateAccessForProperties6()
public void testNoPrivateAccessForProperties7()
public void testNoPrivateAccessForProperties8()
public void testProtectedAccessForProperties1()
public void testProtectedAccessForProperties2()
public void testProtectedAccessForProperties3()
public void testProtectedAccessForProperties4()
public void testProtectedAccessForProperties5()
public void testProtectedAccessForProperties6()
public void testNoProtectedAccessForProperties1()
public void testNoProtectedAccessForProperties2()
public void testNoProtectedAccessForProperties3()
public void testNoProtectedAccessForProperties4()
public void testNoProtectedAccessForProperties5()
public void testNoExceptionsWithBadConstructors1()
public void testNoExceptionsWithBadConstructors2()
public void testGoodOverrideOfProtectedProperty()
public void testBadOverrideOfProtectedProperty()
public void testBadOverrideOfPrivateProperty()
public void testAccessOfStaticMethodOnPrivateConstructor()
public void testAccessOfStaticMethodOnPrivateQualifiedConstructor()
public void testInstanceofOfPrivateConstructor()
public void testOkAssignmentOfDeprecatedProperty()
public void testBadReadOfDeprecatedProperty()
public void testAutoboxedDeprecatedProperty()
public void testAutoboxedPrivateProperty()
public void testNullableDeprecatedProperty()
public void testNullablePrivateProperty()
public void testConstantProperty1()
public void testConstantProperty2()
public void testConstantProperty3()
public void testConstantProperty4()
public void testConstantProperty5()
public void testConstantProperty6()
public void testConstantProperty7()
public void testConstantProperty8()
public void testConstantProperty9()
public void testConstantProperty10()
public void testConstantProperty11()
public void testConstantProperty12()
public void testConstantProperty13()
public void testConstantProperty14()
public void testSuppressConstantProperty()
public void testSuppressConstantProperty2()
public void testFinalClassCannotBeSubclassed()
