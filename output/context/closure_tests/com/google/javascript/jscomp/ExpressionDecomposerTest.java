public void testCanExposeExpression1()
public void testCanExposeExpression2()
public void testCanExposeExpression3()
public void testCanExposeExpression4()
public void testCanExposeExpression5()
public void testCanExposeExpression6()
public void testCanExposeExpression7()
public void testCanExposeExpression8()
public void testMoveExpression1()
public void testMoveExpression2()
public void testMoveExpression3()
public void testMoveExpression4()
public void testMoveExpression5()
public void testMoveExpression6()
public void testMoveExpression7()
public void testMoveExpression8()
public void testMoveExpression9()
public void testMoveExpression10()
public void testExposeExpression1()
public void testExposeExpression2()
public void testExposeExpression3()
public void testExposeExpression4()
public void testExposeExpression5()
public void testExposeExpression6()
public void testExposeExpression7()
public void testExposeExpression8()
public void testExposeExpression9()
public void testExposeExpression10()
public void testExposeExpression11()
public void testExposePlusEquals1()
public void testExposePlusEquals2()
public void testExposePlusEquals3()
public void testExposePlusEquals4()
public void testExposePlusEquals5()
public void testExposeObjectLit1()
private void helperCanExposeExpression(DecompositionType expectedResult, String code, String fnName)
private void helperCanExposeFunctionExpression(DecompositionType expectedResult, String code, int call)
private void helperCanExposeExpression(DecompositionType expectedResult, String code, String fnName, Set<String> knownConstants)
private void helperExposeExpression(String code, String fnName, String expectedResult)
private void validateSourceInfo(Compiler compiler, Node subtree)
private void helperExposeExpression(String code, String fnName, String expectedResult, Set<String> knownConstants)
private void helperMoveExpression(String code, String fnName, String expectedResult)
private void helperMoveExpression(String code, String fnName, String expectedResult, Set<String> knownConstants)
private static Compiler getCompiler()
private static Node findCall(Node n, String name)
 Node find(Node n)
private static Node findCall(Node root, @Nullable final String name, final int call)
private static Node parse(Compiler compiler, String js)
