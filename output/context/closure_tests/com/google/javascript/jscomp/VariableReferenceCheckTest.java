public CompilerOptions getOptions()
public CompilerPass getProcessor(Compiler compiler)
public void setUp() throws Exception
public void testCorrectCode()
public void testCorrectShadowing()
public void testCorrectRedeclare()
public void testCorrectRecursion()
public void testCorrectCatch()
public void testRedeclare()
public void testEarlyReference()
public void testCorrectEarlyReference()
public void testUnreferencedBleedingFunction()
public void testReferencedBleedingFunction()
public void testDoubleDeclaration()
public void testDoubleDeclaration2()
public void testHoistedFunction1()
public void testHoistedFunction2()
public void testNonHoistedFunction()
public void testNonHoistedFunction2()
public void testNonHoistedFunction3()
public void testNonHoistedFunction4()
public void testNonHoistedFunction5()
public void testNonHoistedFunction6()
public void testNonHoistedFunction7()
public void testNonHoistedRecursiveFunction1()
public void testNonHoistedRecursiveFunction2()
public void testNonHoistedRecursiveFunction3()
public void testNoWarnInExterns1()
public void testNoWarnInExterns2()
private void assertRedeclare(String js)
private void assertUndeclared(String js)
private void assertAmbiguous(String js)
private void assertNoWarning(String js)
String VARIABLE_RUN=Optional["var a = 1; var b = 2; var c = a + b, d = c;"]
boolean enableAmbiguousFunctionCheck=Optional[false]
