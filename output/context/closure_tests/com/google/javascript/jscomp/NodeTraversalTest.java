public PruningCallback(Set<Integer> nodeTypes, boolean include)
public void testPruningCallbackShouldTraverse1()
public void testPruningCallbackShouldTraverse2()
public void visit(NodeTraversal t, Node n, Node parent)
public void report(CheckLevel level, JSError error)
public void println(CheckLevel level, JSError error)
protected void printSummary()
public void testReport()
public void visit(NodeTraversal t, Node n, Node parent)
public void testUnexpectedException()
public void enterScope(NodeTraversal t)
public void exitScope(NodeTraversal t)
public boolean shouldTraverse(NodeTraversal t, Node n, Node parent)
public void visit(NodeTraversal t, Node n, Node parent)
public void testGetScopeRoot()
public void testGetCurrentNode()
private void expect(Node node, Node scopeRoot)
private void assertEntered()
public void enterScope(NodeTraversal t)
public void exitScope(NodeTraversal t)
public boolean shouldTraverse(NodeTraversal t, Node n, Node parent)
public void visit(NodeTraversal t, Node n, Node parent)
private static Node parse(Compiler compiler, String js)
