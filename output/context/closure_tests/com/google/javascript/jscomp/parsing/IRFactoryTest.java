protected void setUp() throws Exception
public void testStrictScript() throws Exception
public void testArrayLiteral2() throws Exception
public void testArrayLiteral4() throws Exception
public void testObjectLiteral()
public void testObjectLiteral2()
public void testObjectLiteral3()
public void testObjectLiteral4()
public void testObjectLiteral5()
public void testObjectLiteral6()
public void testObjectLiteral7()
public void testObjectLiteral8()
public void testLabel()
public void testLabel2()
public void testLabel3()
public void testNegation1()
public void testNegation2()
public void testNegation3()
public void testGetter()
public void testSetter()
public void testDelete1()
public void testDelete2()
public void testDelete3()
public void testDelete4()
public void testCommentPositions1()
public void testCommentPositions2()
public void testLiteralLocation()
public void testSwitchLocation()
public void testFunctionParamLocation()
public void testVarDeclLocation()
public void testReturnLocation()
public void testLinenoFor()
public void testBinaryExprLocation()
public void testPrefixLocation()
public void testIfLocation()
public void testTryLocation()
public void testHookLocation()
public void testLabelLocation()
public void testCompareLocation()
public void testEqualityLocation()
public void testPlusEqLocation()
public void testCommaLocation()
public void testRegexpLocation()
public void testNestedOr()
public void testBitwiseOps()
public void testObjectLitLocation()
public void testTryWithoutCatchLocation()
public void testTryWithoutFinallyLocation()
public void testMultilineEqLocation()
public void testMultilineBitTestLocation()
public void testCallLocation()
public void testNewLocation()
public void testNewLocationMultiLine()
public void testLinenoDeclaration()
public void testAssignmentValidation()
private void testNoParseError(String string)
private void testParseError(String string, String error)
private void testParseError(String string, String[] errors)
private void assertMarkerPosition(Node n, int lineno, int charno)
private void assertNodePosition(int lineno, int charno, Node n)
private void assertNodePosition(int lineno, int charno, int length, Node n)
private void testNewParser(String code, String expected)
private Node newParse(String string)
private Node newParse(String string, TestErrorReporter errorReporter)
LanguageMode mode=Optional[LanguageMode.ECMASCRIPT3]
String INVALID_ASSIGNMENT_TARGET=Optional["invalid assignment target"]
String INVALID_INCREMENT_TARGET=Optional["invalid increment target"]
String INVALID_DECREMENT_TARGET=Optional["invalid decrement target"]
String INVALID_INC_OPERAND=Optional["Invalid increment operand"]
String INVALID_DEC_OPERAND=Optional["Invalid decrement operand"]
