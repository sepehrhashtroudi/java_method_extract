private PeepholeSubstituteAlternateSyntaxTest(boolean compareAsTree)
public PeepholeSubstituteAlternateSyntaxTest()
 StringCompareTestCase()
public void setUp() throws Exception
public CompilerPass getProcessor(final Compiler compiler)
protected int getNumRepetitions()
private void foldSame(String js)
private void fold(String js, String expected)
 void assertResultString(String js, String expected)
 void assertResultString(String js, String expected, boolean normalize)
public void testFoldOneChildBlocks()
public void testFoldReturns()
public void testCombineIfs1()
public void testCombineIfs2()
public void testCombineIfs3()
public void testFoldAssignments()
public void testRemoveDuplicateStatements()
public void testNotCond()
public void testAndParenthesesCount()
public void testFoldLogicalOpStringCompare()
public void testFoldNot()
public void testFoldRegExpConstructor()
public void testVersionSpecificRegExpQuirks()
public void testFoldRegExpConstructorStringCompare()
public void testContainsUnicodeEscape() throws Exception
public void testFoldLiteralObjectConstructors()
public void testFoldLiteralArrayConstructors()
public void testMinimizeExprCondition()
public void testMinimizeWhileCondition()
public void testMinimizeForCondition()
public void testMinimizeCondition_example1()
public void testFoldLoopBreakLate()
public void testFoldLoopBreakEarly()
public void testFoldConditionalVarDeclaration()
public void testFoldReturnResult()
public void testFoldStandardConstructors()
public void testSubsituteReturn()
public void testSubsituteBreakForThrow()
public void testRemoveDuplicateReturn()
public void testRemoveDuplicateThrow()
public void testNestedIfCombine()
public void testFoldTrueFalse()
public void testIssue291()
public void testUndefined()
public void testSplitCommaExpressions()
public void testComma1()
public void testComma2()
public void testComma3()
public void testComma4()
public void testComma5()
public void testObjectLiteral()
public void testArrayLiteral()
public void testStringArraySplitting()
public void testRemoveElseCause()
public void testRemoveElseCause1()
public void testRemoveElseCause2()
public void testRemoveElseCause3()
public void testRemoveElseCause4()
public void testBindToCall1()
public void testBindToCall2()
public void testBindToCall3()
public void testSimpleFunctionCall()
protected CompilerPass getProcessor(Compiler compiler)
public void testBindToCall3()
String FOLD_CONSTANTS_TEST_EXTERNS=Optional["var Object = function f(){};\n" + "var RegExp = function f(a){};\n" + "var Array = function f(a){};\n"]
boolean late=Optional[true]
