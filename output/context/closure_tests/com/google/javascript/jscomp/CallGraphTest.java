protected CompilerPass getProcessor(Compiler compiler)
public void testGetFunctionForAstNode()
public void testGetAllFunctions()
public void testGetAllFunctionsContainsNormalFunction()
public void testGetAllFunctionsContainsVarAssignedLiteralFunction()
public void testGetAllFunctionsContainsNamespaceAssignedLiteralFunction()
public void testGetAllFunctionsContainsLocalFunction()
public void testGetAllFunctionsContainsAnonymousFunction()
public void testGetCallsiteForAstNode()
public void testFunctionGetCallsites()
public void testFindNewInFunction()
public void testFindCallsiteTargetGlobalName()
public void testFindCallsiteTargetAliasedGlobalProperty()
public void testGetAllCallsitesContainsMultiple()
public void testGetAllCallsitesContainsGlobalSite()
public void testGetAllCallsitesContainsLocalSite()
public void testGetAllCallsitesContainsLiteralSite()
public void testGetAllCallsitesContainsConstructorSite()
public boolean traverseEdge(Function callee, Callsite callsite, Function caller)
public void testGetDirectedGraph_backwardOnBackward()
public boolean traverseEdge(Function callee, Callsite callsite, Function caller)
public void testGetDirectedGraph_backwardOnForward()
public boolean traverseEdge(Function caller, Callsite callsite, Function callee)
public void testGetDirectedGraph_forwardOnForward()
public boolean traverseEdge(Function caller, Callsite callsite, Function callee)
public void testGetDirectedGraph_forwardOnBackward()
public void testFunctionIsMain()
public void testFunctionGetAstNode()
public void testFunctionGetBodyNode()
public void testFunctionGetName()
public void testFunctionGetCallsitesInFunction()
public void testFunctionGetCallsitesInFunction_ignoreInnerFunction()
public void testFunctionGetCallsitesPossiblyTargetingFunction()
public void testFunctionGetCallsitesInFunction_newIsCallsite()
public void testFunctionGetIsAliased()
public void testFunctionGetIsExposedToCallOrApply()
public void testCallsiteGetAstNode()
public void testCallsiteGetContainingFunction()
public void testCallsiteGetKnownTargets()
public void testCallsiteHasUnknownTarget()
public void testCallsiteHasExternTarget()
public void testThrowForBackwardOpOnForwardGraph()
public void testThrowForForwardOpOnBackwardGraph()
private List<String> getCallsiteTargetNames(Collection<Callsite> callsites)
private void assertFunctionAliased(boolean aliased, String name)
private CallGraph compileAndRunBackward(String js)
private CallGraph compileAndRunForward(String js)
private CallGraph compileAndRun(String externs, String js, boolean forward, boolean backward)
CallGraph currentProcessor
boolean createForwardCallGraph
boolean createBackwardCallGraph
String SHARED_EXTERNS=Optional["var ExternalFunction = function(a) {}\n" + "var externalnamespace = {}\n" + "externalnamespace.prop = function(){};\n"]
