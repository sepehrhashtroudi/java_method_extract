public JsonPrimitive(Boolean bool)
public JsonPrimitive(Number number)
public JsonPrimitive(String string)
public JsonPrimitive(Character c)
 JsonPrimitive(Object primitive)
 void setValue(Object primitive)
public boolean isBoolean()
 Boolean getAsBooleanWrapper()
public boolean getAsBoolean()
public boolean isNumber()
public Number getAsNumber()
 static Number stringToNumber(String value)
public boolean isString()
public String getAsString()
public double getAsDouble()
public BigDecimal getAsBigDecimal()
public BigInteger getAsBigInteger()
public float getAsFloat()
public long getAsLong()
public short getAsShort()
public int getAsInt()
public byte getAsByte()
public char getAsCharacter()
 Object getAsObject()
protected void toString(Appendable sb, Escaper escaper) throws IOException
private static boolean isPrimitiveOrString(Object target)
public int hashCode()
public boolean equals(Object obj)
private static boolean isIntegral(JsonPrimitive primitive)
private static boolean isFloatingPoint(JsonPrimitive primitive)
Class<?>[] PRIMITIVE_TYPES=Optional[{ int.class, long.class, short.class, float.class, double.class, byte.class, boolean.class, char.class, Integer.class, Long.class, Short.class, Float.class, Double.class, Byte.class, Boolean.class, Character.class }]
BigInteger INTEGER_MAX=Optional[BigInteger.valueOf(Integer.MAX_VALUE)]
BigInteger LONG_MAX=Optional[BigInteger.valueOf(Long.MAX_VALUE)]
Object value
