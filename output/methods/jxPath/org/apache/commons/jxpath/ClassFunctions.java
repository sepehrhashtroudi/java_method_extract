public ClassFunctions(Class functionClass, String namespace) { [EOL]     this.functionClass = functionClass; [EOL]     this.namespace = namespace; [EOL] } <line_num>: 59,62
public Set getUsedNamespaces() { [EOL]     return Collections.singleton(namespace); [EOL] } <line_num>: 69,71
public Function getFunction(String namespace, String name, Object[] parameters) { [EOL]     if (!namespace.equals(this.namespace)) { [EOL]         return null; [EOL]     } [EOL]     if (parameters == null) { [EOL]         parameters = EMPTY_ARRAY; [EOL]     } [EOL]     if (name.equals("new")) { [EOL]         Constructor constructor = MethodLookupUtils.lookupConstructor(functionClass, parameters); [EOL]         if (constructor != null) { [EOL]             return new ConstructorFunction(constructor); [EOL]         } [EOL]     } else { [EOL]         Method method = MethodLookupUtils.lookupStaticMethod(functionClass, name, parameters); [EOL]         if (method != null) { [EOL]             return new MethodFunction(method); [EOL]         } [EOL]         method = MethodLookupUtils.lookupMethod(functionClass, name, parameters); [EOL]         if (method != null) { [EOL]             return new MethodFunction(method); [EOL]         } [EOL]     } [EOL]     return null; [EOL] } <line_num>: 84,119
