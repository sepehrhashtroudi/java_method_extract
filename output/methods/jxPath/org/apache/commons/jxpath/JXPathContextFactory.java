protected JXPathContextFactory() { [EOL] } <line_num>: 58,60
public static JXPathContextFactory newInstance() { [EOL]     if (factoryImplName == null) { [EOL]         factoryImplName = findFactory(FACTORY_NAME_PROPERTY, DEFAULT_FACTORY_CLASS); [EOL]     } [EOL]     JXPathContextFactory factoryImpl; [EOL]     try { [EOL]         Class clazz = Class.forName(factoryImplName); [EOL]         factoryImpl = (JXPathContextFactory) clazz.newInstance(); [EOL]     } catch (ClassNotFoundException cnfe) { [EOL]         throw new JXPathContextFactoryConfigurationError(cnfe); [EOL]     } catch (IllegalAccessException iae) { [EOL]         throw new JXPathContextFactoryConfigurationError(iae); [EOL]     } catch (InstantiationException ie) { [EOL]         throw new JXPathContextFactoryConfigurationError(ie); [EOL]     } [EOL]     return factoryImpl; [EOL] } <line_num>: 97,118
public abstract JXPathContext newContext(JXPathContext parentContext, Object contextBean) throws JXPathContextFactoryConfigurationError; <line_num>: 128,131
private static String findFactory(String property, String defaultFactory) { [EOL]     try { [EOL]         String systemProp = System.getProperty(property); [EOL]         if (systemProp != null) { [EOL]             if (debug) { [EOL]                 System.err.println("JXPath: found system property" + systemProp); [EOL]             } [EOL]             return systemProp; [EOL]         } [EOL]     } catch (SecurityException se) { [EOL]     } [EOL]     try { [EOL]         String javah = System.getProperty("java.home"); [EOL]         String configFile = javah + File.separator + "lib" + File.separator + "jxpath.properties"; [EOL]         File f = new File(configFile); [EOL]         if (f.exists()) { [EOL]             Properties props = new Properties(); [EOL]             props.load(new FileInputStream(f)); [EOL]             String factory = props.getProperty(property); [EOL]             if (factory != null) { [EOL]                 if (debug) { [EOL]                     System.err.println("JXPath: found java.home property " + factory); [EOL]                 } [EOL]                 return factory; [EOL]             } [EOL]         } [EOL]     } catch (Exception ex) { [EOL]         if (debug) { [EOL]             ex.printStackTrace(); [EOL]         } [EOL]     } [EOL]     String serviceId = "META-INF/services/" + property; [EOL]     try { [EOL]         ClassLoader cl = JXPathContextFactory.class.getClassLoader(); [EOL]         InputStream is = null; [EOL]         if (cl == null) { [EOL]             is = ClassLoader.getSystemResourceAsStream(serviceId); [EOL]         } else { [EOL]             is = cl.getResourceAsStream(serviceId); [EOL]         } [EOL]         if (is != null) { [EOL]             if (debug) { [EOL]                 System.err.println("JXPath: found  " + serviceId); [EOL]             } [EOL]             BufferedReader rd = new BufferedReader(new InputStreamReader(is)); [EOL]             String factory = rd.readLine(); [EOL]             rd.close(); [EOL]             if (factory != null && !"".equals(factory)) { [EOL]                 if (debug) { [EOL]                     System.err.println("JXPath: loaded from services: " + factory); [EOL]                 } [EOL]                 return factory; [EOL]             } [EOL]         } [EOL]     } catch (Exception ex) { [EOL]         if (debug) { [EOL]             ex.printStackTrace(); [EOL]         } [EOL]     } [EOL]     return defaultFactory; [EOL] } <line_num>: 157,241
