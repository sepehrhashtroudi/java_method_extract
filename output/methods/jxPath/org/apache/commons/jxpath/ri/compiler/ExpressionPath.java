public ExpressionPath(Expression expression, Expression[] predicates, Step[] steps) { [EOL]     super(steps); [EOL]     this.expression = expression; [EOL]     this.predicates = predicates; [EOL] } <line_num>: 44,52
public Expression getExpression() { [EOL]     return expression; [EOL] } <line_num>: 54,56
public Expression[] getPredicates() { [EOL]     return predicates; [EOL] } <line_num>: 62,64
public boolean computeContextDependent() { [EOL]     if (expression.isContextDependent()) { [EOL]         return true; [EOL]     } [EOL]     if (predicates != null) { [EOL]         for (int i = 0; i < predicates.length; i++) { [EOL]             if (predicates[i].isContextDependent()) { [EOL]                 return true; [EOL]             } [EOL]         } [EOL]     } [EOL]     return super.computeContextDependent(); [EOL] } <line_num>: 70,82
public boolean isSimpleExpressionPath() { [EOL]     if (!basicKnown) { [EOL]         basicKnown = true; [EOL]         basic = isSimplePath() && areBasicPredicates(getPredicates()); [EOL]     } [EOL]     return basic; [EOL] } <line_num>: 88,94
public String toString() { [EOL]     StringBuffer buffer = new StringBuffer(); [EOL]     if (expression instanceof CoreOperation || expression instanceof ExpressionPath || expression instanceof LocationPath) { [EOL]         buffer.append('('); [EOL]         buffer.append(expression); [EOL]         buffer.append(')'); [EOL]     } else { [EOL]         buffer.append(expression); [EOL]     } [EOL]     if (predicates != null) { [EOL]         for (int i = 0; i < predicates.length; i++) { [EOL]             buffer.append('['); [EOL]             buffer.append(predicates[i]); [EOL]             buffer.append(']'); [EOL]         } [EOL]     } [EOL]     Step[] steps = getSteps(); [EOL]     if (steps != null) { [EOL]         for (int i = 0; i < steps.length; i++) { [EOL]             buffer.append("/"); [EOL]             buffer.append(steps[i]); [EOL]         } [EOL]     } [EOL]     return buffer.toString(); [EOL] } <line_num>: 96,124
public Object compute(EvalContext context) { [EOL]     return expressionPath(context, false); [EOL] } <line_num>: 126,128
public Object computeValue(EvalContext context) { [EOL]     return expressionPath(context, true); [EOL] } <line_num>: 130,132
protected Object expressionPath(EvalContext evalContext, boolean firstMatch) { [EOL]     Object value = expression.compute(evalContext); [EOL]     EvalContext context; [EOL]     if (value instanceof InitialContext) { [EOL]         context = (InitialContext) value; [EOL]     } else if (value instanceof EvalContext) { [EOL]         context = new UnionContext(evalContext, new EvalContext[] { (EvalContext) value }); [EOL]     } else { [EOL]         context = evalContext.getRootContext().getConstantContext(value); [EOL]     } [EOL]     if (firstMatch && isSimpleExpressionPath() && !(context instanceof NodeSetContext)) { [EOL]         EvalContext ctx = context; [EOL]         NodePointer ptr = (NodePointer) ctx.getSingleNodePointer(); [EOL]         if (ptr != null && (ptr.getIndex() == NodePointer.WHOLE_COLLECTION || predicates == null || predicates.length == 0)) { [EOL]             return SimplePathInterpreter.interpretSimpleExpressionPath(evalContext, ptr, predicates, getSteps()); [EOL]         } [EOL]     } [EOL]     if (predicates != null) { [EOL]         for (int j = 0; j < predicates.length; j++) { [EOL]             if (j != 0) { [EOL]                 context = new UnionContext(context, new EvalContext[] { context }); [EOL]             } [EOL]             context = new PredicateContext(context, predicates[j]); [EOL]         } [EOL]     } [EOL]     if (firstMatch) { [EOL]         return getSingleNodePointerForSteps(context); [EOL]     } else { [EOL]         return evalSteps(context); [EOL]     } [EOL] } <line_num>: 137,190
