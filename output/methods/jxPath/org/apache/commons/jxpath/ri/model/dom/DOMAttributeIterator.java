public DOMAttributeIterator(NodePointer parent, QName name) { [EOL]     this.parent = parent; [EOL]     this.name = name; [EOL]     attributes = new ArrayList(); [EOL]     Node node = (Node) parent.getNode(); [EOL]     if (node.getNodeType() == Node.ELEMENT_NODE) { [EOL]         String lname = name.getName(); [EOL]         if (!lname.equals("*")) { [EOL]             Attr attr = getAttribute((Element) node, name); [EOL]             if (attr != null) { [EOL]                 attributes.add(attr); [EOL]             } [EOL]         } else { [EOL]             NamedNodeMap map = node.getAttributes(); [EOL]             int count = map.getLength(); [EOL]             for (int i = 0; i < count; i++) { [EOL]                 Attr attr = (Attr) map.item(i); [EOL]                 if (testAttr(attr, name)) { [EOL]                     attributes.add(attr); [EOL]                 } [EOL]             } [EOL]         } [EOL]     } [EOL] } <line_num>: 42,66
private boolean testAttr(Attr attr, QName testName) { [EOL]     String nodePrefix = DOMNodePointer.getPrefix(attr); [EOL]     String nodeLocalName = DOMNodePointer.getLocalName(attr); [EOL]     if (nodePrefix != null && nodePrefix.equals("xmlns")) { [EOL]         return false; [EOL]     } [EOL]     if (nodePrefix == null && nodeLocalName.equals("xmlns")) { [EOL]         return false; [EOL]     } [EOL]     String testLocalName = name.getName(); [EOL]     if (testLocalName.equals("*") || testLocalName.equals(nodeLocalName)) { [EOL]         String testPrefix = testName.getPrefix(); [EOL]         if (equalStrings(testPrefix, nodePrefix)) { [EOL]             return true; [EOL]         } [EOL]         String testNS = null; [EOL]         if (testPrefix != null) { [EOL]             testNS = parent.getNamespaceURI(testPrefix); [EOL]         } [EOL]         String nodeNS = null; [EOL]         if (nodePrefix != null) { [EOL]             nodeNS = parent.getNamespaceURI(nodePrefix); [EOL]         } [EOL]         return equalStrings(testNS, nodeNS); [EOL]     } [EOL]     return false; [EOL] } <line_num>: 68,100
private static boolean equalStrings(String s1, String s2) { [EOL]     if (s1 == null && s2 != null) { [EOL]         return false; [EOL]     } [EOL]     if (s1 != null && !s1.equals(s2)) { [EOL]         return false; [EOL]     } [EOL]     return true; [EOL] } <line_num>: 102,110
private Attr getAttribute(Element element, QName name) { [EOL]     String testPrefix = name.getPrefix(); [EOL]     String testNS = null; [EOL]     if (testPrefix != null) { [EOL]         testNS = parent.getNamespaceURI(testPrefix); [EOL]     } [EOL]     if (testNS != null) { [EOL]         Attr attr = element.getAttributeNodeNS(testNS, name.getName()); [EOL]         if (attr != null) { [EOL]             return attr; [EOL]         } [EOL]         NamedNodeMap nnm = element.getAttributes(); [EOL]         for (int i = 0; i < nnm.getLength(); i++) { [EOL]             attr = (Attr) nnm.item(i); [EOL]             if (testAttr(attr, name)) { [EOL]                 return attr; [EOL]             } [EOL]         } [EOL]         return null; [EOL]     } else { [EOL]         return element.getAttributeNode(name.getName()); [EOL]     } [EOL] } <line_num>: 112,141
public NodePointer getNodePointer() { [EOL]     if (position == 0) { [EOL]         if (!setPosition(1)) { [EOL]             return null; [EOL]         } [EOL]         position = 0; [EOL]     } [EOL]     int index = position - 1; [EOL]     if (index < 0) { [EOL]         index = 0; [EOL]     } [EOL]     return new DOMAttributePointer(parent, (Attr) attributes.get(index)); [EOL] } <line_num>: 143,155
public int getPosition() { [EOL]     return position; [EOL] } <line_num>: 157,159
public boolean setPosition(int position) { [EOL]     this.position = position; [EOL]     return position >= 1 && position <= attributes.size(); [EOL] } <line_num>: 161,164
