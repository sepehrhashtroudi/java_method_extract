public ExtensionFunction(QName functionName, Expression[] args) { [EOL]     super(args); [EOL]     this.functionName = functionName; [EOL] } <line_num>: 37,40
public QName getFunctionName() { [EOL]     return functionName; [EOL] } <line_num>: 42,44
public boolean computeContextDependent() { [EOL]     return true; [EOL] } <line_num>: 50,52
public String toString() { [EOL]     StringBuffer buffer = new StringBuffer(); [EOL]     buffer.append(functionName); [EOL]     buffer.append('('); [EOL]     Expression[] args = getArguments(); [EOL]     if (args != null) { [EOL]         for (int i = 0; i < args.length; i++) { [EOL]             if (i > 0) { [EOL]                 buffer.append(", "); [EOL]             } [EOL]             buffer.append(args[i]); [EOL]         } [EOL]     } [EOL]     buffer.append(')'); [EOL]     return buffer.toString(); [EOL] } <line_num>: 54,69
public Object compute(EvalContext context) { [EOL]     return computeValue(context); [EOL] } <line_num>: 71,73
public Object computeValue(EvalContext context) { [EOL]     Object[] parameters = null; [EOL]     if (args != null) { [EOL]         parameters = new Object[args.length]; [EOL]         for (int i = 0; i < args.length; i++) { [EOL]             parameters[i] = convert(args[i].compute(context)); [EOL]         } [EOL]     } [EOL]     Function function = context.getRootContext().getFunction(functionName, parameters); [EOL]     if (function == null) { [EOL]         throw new JXPathFunctionNotFoundException("No such function: " + functionName + Arrays.asList(parameters)); [EOL]     } [EOL]     return function.invoke(context, parameters); [EOL] } <line_num>: 75,92
private Object convert(Object object) { [EOL]     if (object instanceof EvalContext) { [EOL]         return ((EvalContext) object).getValue(); [EOL]     } [EOL]     return object; [EOL] } <line_num>: 94,99
