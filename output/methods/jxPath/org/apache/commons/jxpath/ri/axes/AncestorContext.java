public AncestorContext(EvalContext parentContext, boolean includeSelf, NodeTest nodeTest) { [EOL]     super(parentContext); [EOL]     this.includeSelf = includeSelf; [EOL]     this.nodeTest = nodeTest; [EOL] } <line_num>: 41,49
public NodePointer getCurrentNodePointer() { [EOL]     return currentNodePointer; [EOL] } <line_num>: 51,53
public int getDocumentOrder() { [EOL]     return -1; [EOL] } <line_num>: 55,57
public void reset() { [EOL]     super.reset(); [EOL]     setStarted = false; [EOL] } <line_num>: 59,62
public boolean setPosition(int position) { [EOL]     if (position < getCurrentPosition()) { [EOL]         reset(); [EOL]     } [EOL]     while (getCurrentPosition() < position) { [EOL]         if (!nextNode()) { [EOL]             return false; [EOL]         } [EOL]     } [EOL]     return true; [EOL] } <line_num>: 64,75
public boolean nextNode() { [EOL]     if (!setStarted) { [EOL]         setStarted = true; [EOL]         currentNodePointer = parentContext.getCurrentNodePointer(); [EOL]         if (includeSelf) { [EOL]             if (currentNodePointer.testNode(nodeTest)) { [EOL]                 position++; [EOL]                 return true; [EOL]             } [EOL]         } [EOL]     } [EOL]     while (true) { [EOL]         currentNodePointer = currentNodePointer.getImmediateParentPointer(); [EOL]         if (currentNodePointer == null) { [EOL]             return false; [EOL]         } [EOL]         if (currentNodePointer.testNode(nodeTest)) { [EOL]             position++; [EOL]             return true; [EOL]         } [EOL]     } [EOL] } <line_num>: 77,101
