public NamespaceResolver(NamespaceResolver parent) { [EOL]     this.parent = parent; [EOL] } <line_num>: 42,44
public void registerNamespace(String prefix, String namespaceURI) { [EOL]     namespaceMap.put(prefix, namespaceURI); [EOL]     reverseMap = null; [EOL] } <line_num>: 52,55
public void setNamespaceContextPointer(NodePointer pointer) { [EOL]     this.pointer = pointer; [EOL] } <line_num>: 60,62
public Pointer getNamespaceContextPointer() { [EOL]     if (pointer == null && parent != null) { [EOL]         return parent.getNamespaceContextPointer(); [EOL]     } [EOL]     return pointer; [EOL] } <line_num>: 64,69
public String getNamespaceURI(String prefix) { [EOL]     String uri = (String) namespaceMap.get(prefix); [EOL]     if (uri == null && pointer != null) { [EOL]         uri = pointer.getNamespaceURI(prefix); [EOL]     } [EOL]     if (uri == null && parent != null) { [EOL]         return parent.getNamespaceURI(prefix); [EOL]     } [EOL]     return uri; [EOL] } <line_num>: 81,91
public String getPrefix(String namespaceURI) { [EOL]     if (reverseMap == null) { [EOL]         reverseMap = new HashMap(); [EOL]         NodeIterator ni = pointer.namespaceIterator(); [EOL]         if (ni != null) { [EOL]             for (int position = 1; ni.setPosition(position); position++) { [EOL]                 NodePointer nsPointer = ni.getNodePointer(); [EOL]                 String uri = nsPointer.getNamespaceURI(); [EOL]                 String prefix = nsPointer.getName().getName(); [EOL]                 if (!"".equals(prefix)) { [EOL]                     reverseMap.put(uri, prefix); [EOL]                 } [EOL]             } [EOL]         } [EOL]         Iterator it = namespaceMap.entrySet().iterator(); [EOL]         while (it.hasNext()) { [EOL]             Map.Entry entry = (Map.Entry) it.next(); [EOL]             reverseMap.put(entry.getValue(), entry.getKey()); [EOL]         } [EOL]     } [EOL]     String prefix = (String) reverseMap.get(namespaceURI); [EOL]     if (prefix == null && parent != null) { [EOL]         return parent.getPrefix(namespaceURI); [EOL]     } [EOL]     return prefix; [EOL] } <line_num>: 93,118
public String getDefaultNamespaceURI() { [EOL]     return defaultNamespaceURI; [EOL] } <line_num>: 120,122
public void registerDefaultNamespaceURI(String uri) { [EOL]     this.defaultNamespaceURI = uri; [EOL] } <line_num>: 124,126
public boolean isSealed() { [EOL]     return sealed; [EOL] } <line_num>: 128,130
public void seal() { [EOL]     sealed = true; [EOL]     if (parent != null) { [EOL]         parent.seal(); [EOL]     } [EOL] } <line_num>: 132,137
public Object clone() { [EOL]     try { [EOL]         return super.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]         return null; [EOL]     } [EOL] } <line_num>: 139,148
