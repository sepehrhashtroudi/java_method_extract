protected CollectionNodeIterator(CollectionPointer pointer, boolean reverse, NodePointer startWith) { [EOL]     this.pointer = pointer; [EOL]     this.reverse = reverse; [EOL]     this.startWith = startWith; [EOL] } <line_num>: 40,48
protected abstract NodeIterator getElementNodeIterator(NodePointer elementPointer); <line_num>: 53,54
public int getPosition() { [EOL]     return position; [EOL] } <line_num>: 56,58
public boolean setPosition(int position) { [EOL]     if (collection == null) { [EOL]         prepare(); [EOL]     } [EOL]     if (position < 1 || position > collection.size()) { [EOL]         return false; [EOL]     } [EOL]     this.position = position; [EOL]     return true; [EOL] } <line_num>: 60,70
public NodePointer getNodePointer() { [EOL]     if (position == 0) { [EOL]         return null; [EOL]     } [EOL]     return (NodePointer) collection.get(position - 1); [EOL] } <line_num>: 72,77
private void prepare() { [EOL]     collection = new ArrayList(); [EOL]     NodePointer ptr = (NodePointer) pointer.clone(); [EOL]     int length = ptr.getLength(); [EOL]     for (int i = 0; i < length; i++) { [EOL]         ptr.setIndex(i); [EOL]         NodePointer elementPointer = ptr.getValuePointer(); [EOL]         NodeIterator iter = getElementNodeIterator(elementPointer); [EOL]         for (int j = 1; iter.setPosition(j); j++) { [EOL]             NodePointer childPointer = iter.getNodePointer(); [EOL]             if (reverse) { [EOL]                 collection.add(0, childPointer); [EOL]             } else { [EOL]                 collection.add(childPointer); [EOL]             } [EOL]         } [EOL]     } [EOL]     if (startWith != null) { [EOL]         int index = collection.indexOf(startWith); [EOL]         if (index == -1) { [EOL]             throw new JXPathException("Invalid starting pointer for iterator: " + startWith); [EOL]         } [EOL]         while (collection.size() > index) { [EOL]             if (!reverse) { [EOL]                 collection.remove(collection.size() - 1); [EOL]             } else { [EOL]                 collection.remove(0); [EOL]             } [EOL]         } [EOL]     } [EOL] } <line_num>: 79,113
