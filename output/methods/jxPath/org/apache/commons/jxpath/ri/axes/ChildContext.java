public ChildContext(EvalContext parentContext, NodeTest nodeTest, boolean startFromParentLocation, boolean reverse) { [EOL]     super(parentContext); [EOL]     this.nodeTest = nodeTest; [EOL]     this.startFromParentLocation = startFromParentLocation; [EOL]     this.reverse = reverse; [EOL] } <line_num>: 38,48
public NodePointer getCurrentNodePointer() { [EOL]     if (position == 0) { [EOL]         if (!setPosition(1)) { [EOL]             return null; [EOL]         } [EOL]     } [EOL]     if (iterator != null) { [EOL]         return iterator.getNodePointer(); [EOL]     } else { [EOL]         return null; [EOL]     } [EOL] } <line_num>: 50,62
public Pointer getSingleNodePointer() { [EOL]     if (position == 0) { [EOL]         while (nextSet()) { [EOL]             prepare(); [EOL]             if (iterator == null) { [EOL]                 return null; [EOL]             } [EOL]             NodePointer pointer = iterator.getNodePointer(); [EOL]             if (pointer != null) { [EOL]                 return pointer; [EOL]             } [EOL]         } [EOL]         return null; [EOL]     } [EOL]     return getCurrentNodePointer(); [EOL] } <line_num>: 71,87
public boolean nextNode() { [EOL]     return setPosition(getCurrentPosition() + 1); [EOL] } <line_num>: 89,91
public void reset() { [EOL]     super.reset(); [EOL]     iterator = null; [EOL] } <line_num>: 93,96
public boolean setPosition(int position) { [EOL]     int oldPosition = getCurrentPosition(); [EOL]     super.setPosition(position); [EOL]     if (oldPosition == 0) { [EOL]         prepare(); [EOL]     } [EOL]     if (iterator == null) { [EOL]         return false; [EOL]     } [EOL]     return iterator.setPosition(position); [EOL] } <line_num>: 98,108
private void prepare() { [EOL]     NodePointer parent = parentContext.getCurrentNodePointer(); [EOL]     if (parent == null) { [EOL]         return; [EOL]     } [EOL]     if (startFromParentLocation) { [EOL]         NodePointer pointer = parent.getParent(); [EOL]         iterator = pointer.childIterator(nodeTest, reverse, parent); [EOL]     } else { [EOL]         iterator = parent.childIterator(nodeTest, reverse, null); [EOL]     } [EOL] } <line_num>: 113,125
