public static String stringValue(Object object) { [EOL]     if (object instanceof String) { [EOL]         return (String) object; [EOL]     } else if (object instanceof Number) { [EOL]         double d = ((Number) object).doubleValue(); [EOL]         long l = ((Number) object).longValue(); [EOL]         if (d == l) { [EOL]             return String.valueOf(l); [EOL]         } [EOL]         return String.valueOf(d); [EOL]     } else if (object instanceof Boolean) { [EOL]         return ((Boolean) object).booleanValue() ? "true" : "false"; [EOL]     } else if (object == null) { [EOL]         return ""; [EOL]     } else if (object instanceof NodePointer) { [EOL]         return stringValue(((NodePointer) object).getValue()); [EOL]     } else if (object instanceof EvalContext) { [EOL]         EvalContext ctx = (EvalContext) object; [EOL]         Pointer ptr = ctx.getSingleNodePointer(); [EOL]         if (ptr != null) { [EOL]             return stringValue(ptr); [EOL]         } [EOL]         return ""; [EOL]     } [EOL]     return String.valueOf(object); [EOL] } <line_num>: 39,69
public static Number number(Object object) { [EOL]     if (object instanceof Number) { [EOL]         return (Number) object; [EOL]     } else if (object instanceof Boolean) { [EOL]         return ((Boolean) object).booleanValue() ? ONE : ZERO; [EOL]     } else if (object instanceof String) { [EOL]         Double value; [EOL]         try { [EOL]             value = new Double((String) object); [EOL]         } catch (NumberFormatException ex) { [EOL]             value = NOT_A_NUMBER; [EOL]         } [EOL]         return value; [EOL]     } else if (object instanceof EvalContext) { [EOL]         EvalContext ctx = (EvalContext) object; [EOL]         Pointer ptr = ctx.getSingleNodePointer(); [EOL]         if (ptr != null) { [EOL]             return number(ptr); [EOL]         } [EOL]         return NOT_A_NUMBER; [EOL]     } else if (object instanceof NodePointer) { [EOL]         return number(((NodePointer) object).getValue()); [EOL]     } [EOL]     return number(stringValue(object)); [EOL] } <line_num>: 74,103
public static double doubleValue(Object object) { [EOL]     if (object instanceof Number) { [EOL]         return ((Number) object).doubleValue(); [EOL]     } else if (object instanceof Boolean) { [EOL]         return ((Boolean) object).booleanValue() ? 0.0 : 1.0; [EOL]     } else if (object instanceof String) { [EOL]         if (object.equals("")) { [EOL]             return 0.0; [EOL]         } [EOL]         double value; [EOL]         try { [EOL]             value = Double.parseDouble((String) object); [EOL]         } catch (NumberFormatException ex) { [EOL]             value = Double.NaN; [EOL]         } [EOL]         return value; [EOL]     } else if (object instanceof NodePointer) { [EOL]         return doubleValue(((NodePointer) object).getValue()); [EOL]     } else if (object instanceof EvalContext) { [EOL]         EvalContext ctx = (EvalContext) object; [EOL]         Pointer ptr = ctx.getSingleNodePointer(); [EOL]         if (ptr != null) { [EOL]             return doubleValue(ptr); [EOL]         } [EOL]         return Double.NaN; [EOL]     } [EOL]     return doubleValue(stringValue(object)); [EOL] } <line_num>: 108,141
public static boolean booleanValue(Object object) { [EOL]     if (object instanceof Number) { [EOL]         double value = ((Number) object).doubleValue(); [EOL]         return value != 0 && value != -0 && !Double.isNaN(value); [EOL]     } else if (object instanceof Boolean) { [EOL]         return ((Boolean) object).booleanValue(); [EOL]     } else if (object instanceof EvalContext) { [EOL]         EvalContext ctx = (EvalContext) object; [EOL]         Pointer ptr = ctx.getSingleNodePointer(); [EOL]         if (ptr == null) { [EOL]             return false; [EOL]         } [EOL]         return booleanValue(ptr); [EOL]     } else if (object instanceof String) { [EOL]         return ((String) object).length() != 0; [EOL]     } else if (object instanceof NodePointer) { [EOL]         NodePointer pointer = (NodePointer) object; [EOL]         if (pointer instanceof VariablePointer) { [EOL]             return booleanValue(pointer.getNode()); [EOL]         } [EOL]         pointer = pointer.getValuePointer(); [EOL]         return pointer.isActual(); [EOL]     } else if (object == null) { [EOL]         return false; [EOL]     } [EOL]     return true; [EOL] } <line_num>: 146,177
