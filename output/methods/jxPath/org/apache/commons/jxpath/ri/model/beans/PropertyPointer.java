public PropertyPointer(NodePointer parent) { [EOL]     super(parent); [EOL] } <line_num>: 45,47
public int getPropertyIndex() { [EOL]     return propertyIndex; [EOL] } <line_num>: 49,51
public void setPropertyIndex(int index) { [EOL]     if (propertyIndex != index) { [EOL]         propertyIndex = index; [EOL]         setIndex(WHOLE_COLLECTION); [EOL]     } [EOL] } <line_num>: 53,58
public Object getBean() { [EOL]     if (bean == null) { [EOL]         bean = getImmediateParentPointer().getNode(); [EOL]     } [EOL]     return bean; [EOL] } <line_num>: 60,65
public QName getName() { [EOL]     return new QName(null, getPropertyName()); [EOL] } <line_num>: 67,69
public abstract String getPropertyName(); <line_num>: 71,71
public abstract void setPropertyName(String propertyName); <line_num>: 73,73
public abstract int getPropertyCount(); <line_num>: 75,75
public abstract String[] getPropertyNames(); <line_num>: 77,77
protected abstract boolean isActualProperty(); <line_num>: 79,79
public boolean isActual() { [EOL]     if (!isActualProperty()) { [EOL]         return false; [EOL]     } [EOL]     return super.isActual(); [EOL] } <line_num>: 81,87
public Object getImmediateNode() { [EOL]     if (value == UNINITIALIZED) { [EOL]         if (index == WHOLE_COLLECTION) { [EOL]             value = ValueUtils.getValue(getBaseValue()); [EOL]         } else { [EOL]             value = ValueUtils.getValue(getBaseValue(), index); [EOL]         } [EOL]     } [EOL]     return value; [EOL] } <line_num>: 92,102
public boolean isCollection() { [EOL]     Object value = getBaseValue(); [EOL]     return value != null && ValueUtils.isCollection(value); [EOL] } <line_num>: 104,107
public boolean isLeaf() { [EOL]     Object value = getNode(); [EOL]     return value == null || JXPathIntrospector.getBeanInfo(value.getClass()).isAtomic(); [EOL] } <line_num>: 109,113
public int getLength() { [EOL]     return ValueUtils.getLength(getBaseValue()); [EOL] } <line_num>: 119,121
public NodePointer getImmediateValuePointer() { [EOL]     return NodePointer.newChildNodePointer((NodePointer) this.clone(), getName(), getImmediateNode()); [EOL] } <line_num>: 128,133
public NodePointer createPath(JXPathContext context) { [EOL]     if (getImmediateNode() == null) { [EOL]         AbstractFactory factory = getAbstractFactory(context); [EOL]         int inx = (index == WHOLE_COLLECTION ? 0 : index); [EOL]         boolean success = factory.createObject(context, this, getBean(), getPropertyName(), inx); [EOL]         if (!success) { [EOL]             throw new JXPathAbstractFactoryException("Factory " + factory + " could not create an object for path: " + asPath()); [EOL]         } [EOL]     } [EOL]     return this; [EOL] } <line_num>: 135,152
public NodePointer createPath(JXPathContext context, Object value) { [EOL]     if (index != WHOLE_COLLECTION && index >= getLength()) { [EOL]         createPath(context); [EOL]     } [EOL]     setValue(value); [EOL]     return this; [EOL] } <line_num>: 154,161
public NodePointer createChild(JXPathContext context, QName name, int index, Object value) { [EOL]     PropertyPointer prop = (PropertyPointer) clone(); [EOL]     if (name != null) { [EOL]         prop.setPropertyName(name.toString()); [EOL]     } [EOL]     prop.setIndex(index); [EOL]     return prop.createPath(context, value); [EOL] } <line_num>: 163,175
public NodePointer createChild(JXPathContext context, QName name, int index) { [EOL]     PropertyPointer prop = (PropertyPointer) clone(); [EOL]     if (name != null) { [EOL]         prop.setPropertyName(name.toString()); [EOL]     } [EOL]     prop.setIndex(index); [EOL]     return prop.createPath(context); [EOL] } <line_num>: 177,188
public int hashCode() { [EOL]     return getImmediateParentPointer().hashCode() + propertyIndex + index; [EOL] } <line_num>: 190,192
public boolean equals(Object object) { [EOL]     if (object == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(object instanceof PropertyPointer)) { [EOL]         return false; [EOL]     } [EOL]     PropertyPointer other = (PropertyPointer) object; [EOL]     if (parent != other.parent) { [EOL]         if (parent == null || !parent.equals(other.parent)) { [EOL]             return false; [EOL]         } [EOL]     } [EOL]     if (getPropertyIndex() != other.getPropertyIndex() || !getPropertyName().equals(other.getPropertyName())) { [EOL]         return false; [EOL]     } [EOL]     int iThis = (index == WHOLE_COLLECTION ? 0 : index); [EOL]     int iOther = (other.index == WHOLE_COLLECTION ? 0 : other.index); [EOL]     return iThis == iOther; [EOL] } <line_num>: 194,218
public int compareChildNodePointers(NodePointer pointer1, NodePointer pointer2) { [EOL]     return getValuePointer().compareChildNodePointers(pointer1, pointer2); [EOL] } <line_num>: 220,225
private AbstractFactory getAbstractFactory(JXPathContext context) { [EOL]     AbstractFactory factory = context.getFactory(); [EOL]     if (factory == null) { [EOL]         throw new JXPathException("Factory is not set on the " + "JXPathContext - cannot create path: " + asPath()); [EOL]     } [EOL]     return factory; [EOL] } <line_num>: 227,236
