public JDOMNodeIterator(NodePointer parent, NodeTest nodeTest, boolean reverse, NodePointer startWith) { [EOL]     this.parent = parent; [EOL]     if (startWith != null) { [EOL]         this.child = startWith.getNode(); [EOL]     } [EOL]     Object node = parent.getNode(); [EOL]     if (node instanceof Document) { [EOL]         this.children = ((Document) node).getContent(); [EOL]     } else if (node instanceof Element) { [EOL]         this.children = ((Element) node).getContent(); [EOL]     } else { [EOL]         this.children = Collections.EMPTY_LIST; [EOL]     } [EOL]     this.nodeTest = nodeTest; [EOL]     this.reverse = reverse; [EOL] } <line_num>: 44,65
public NodePointer getNodePointer() { [EOL]     if (child == null) { [EOL]         if (!setPosition(1)) { [EOL]             return null; [EOL]         } [EOL]         position = 0; [EOL]     } [EOL]     return new JDOMNodePointer(parent, child); [EOL] } <line_num>: 67,76
public int getPosition() { [EOL]     return position; [EOL] } <line_num>: 78,80
public boolean setPosition(int position) { [EOL]     while (this.position < position) { [EOL]         if (!next()) { [EOL]             return false; [EOL]         } [EOL]     } [EOL]     while (this.position > position) { [EOL]         if (!previous()) { [EOL]             return false; [EOL]         } [EOL]     } [EOL]     return true; [EOL] } <line_num>: 82,94
private boolean previous() { [EOL]     position--; [EOL]     if (!reverse) { [EOL]         while (--index >= 0) { [EOL]             child = children.get(index); [EOL]             if (testChild()) { [EOL]                 return true; [EOL]             } [EOL]         } [EOL]     } else { [EOL]         for (; index < children.size(); index++) { [EOL]             child = children.get(index); [EOL]             if (testChild()) { [EOL]                 return true; [EOL]             } [EOL]         } [EOL]     } [EOL]     return false; [EOL] } <line_num>: 102,121
private boolean next() { [EOL]     position++; [EOL]     if (!reverse) { [EOL]         if (position == 1) { [EOL]             index = 0; [EOL]             if (child != null) { [EOL]                 index = children.indexOf(child) + 1; [EOL]             } [EOL]         } else { [EOL]             index++; [EOL]         } [EOL]         for (; index < children.size(); index++) { [EOL]             child = children.get(index); [EOL]             if (testChild()) { [EOL]                 return true; [EOL]             } [EOL]         } [EOL]         return false; [EOL]     } else { [EOL]         if (position == 1) { [EOL]             index = children.size() - 1; [EOL]             if (child != null) { [EOL]                 index = children.indexOf(child) - 1; [EOL]             } [EOL]         } else { [EOL]             index--; [EOL]         } [EOL]         for (; index >= 0; index--) { [EOL]             child = children.get(index); [EOL]             if (testChild()) { [EOL]                 return true; [EOL]             } [EOL]         } [EOL]         return false; [EOL]     } [EOL] } <line_num>: 123,161
private boolean testChild() { [EOL]     return JDOMNodePointer.testNode(parent, child, nodeTest); [EOL] } <line_num>: 163,165
