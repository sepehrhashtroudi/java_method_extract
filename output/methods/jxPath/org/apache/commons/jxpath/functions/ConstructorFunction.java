public ConstructorFunction(Constructor constructor) { [EOL]     this.constructor = constructor; [EOL] } <line_num>: 38,40
public Object invoke(ExpressionContext context, Object[] parameters) { [EOL]     try { [EOL]         Object[] args; [EOL]         if (parameters == null) { [EOL]             parameters = EMPTY_ARRAY; [EOL]         } [EOL]         int pi = 0; [EOL]         Class[] types = constructor.getParameterTypes(); [EOL]         if (types.length > 0 && ExpressionContext.class.isAssignableFrom(types[0])) { [EOL]             pi = 1; [EOL]         } [EOL]         args = new Object[parameters.length + pi]; [EOL]         if (pi == 1) { [EOL]             args[0] = context; [EOL]         } [EOL]         for (int i = 0; i < parameters.length; i++) { [EOL]             args[i + pi] = TypeUtils.convert(parameters[i], types[i + pi]); [EOL]         } [EOL]         return constructor.newInstance(args); [EOL]     } catch (Throwable ex) { [EOL]         if (ex instanceof InvocationTargetException) { [EOL]             ex = ((InvocationTargetException) ex).getTargetException(); [EOL]         } [EOL]         throw new JXPathInvalidAccessException("Cannot invoke constructor " + constructor, ex); [EOL]     } [EOL] } <line_num>: 45,74
