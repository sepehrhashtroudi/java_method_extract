public SerializedString(String v) { [EOL]     if (v == null) { [EOL]         throw new IllegalStateException("Null String illegal for SerializedString"); [EOL]     } [EOL]     _value = v; [EOL] } <line_num>: 38,43
private void readObject(ObjectInputStream in) throws IOException { [EOL]     _jdkSerializeValue = in.readUTF(); [EOL] } <line_num>: 59,61
private void writeObject(ObjectOutputStream out) throws IOException { [EOL]     out.writeUTF(_value); [EOL] } <line_num>: 63,65
protected Object readResolve() { [EOL]     return new SerializedString(_jdkSerializeValue); [EOL] } <line_num>: 67,69
@Override [EOL] public final String getValue() { [EOL]     return _value; [EOL] } <line_num>: 77,78
@Override [EOL] public final int charLength() { [EOL]     return _value.length(); [EOL] } <line_num>: 83,84
@Override [EOL] public final char[] asQuotedChars() { [EOL]     char[] result = _quotedChars; [EOL]     if (result == null) { [EOL]         result = JsonStringEncoder.getInstance().quoteAsString(_value); [EOL]         _quotedChars = result; [EOL]     } [EOL]     return result; [EOL] } <line_num>: 86,95
@Override [EOL] public final byte[] asUnquotedUTF8() { [EOL]     byte[] result = _unquotedUTF8Ref; [EOL]     if (result == null) { [EOL]         result = JsonStringEncoder.getInstance().encodeAsUTF8(_value); [EOL]         _unquotedUTF8Ref = result; [EOL]     } [EOL]     return result; [EOL] } <line_num>: 101,110
@Override [EOL] public final byte[] asQuotedUTF8() { [EOL]     byte[] result = _quotedUTF8Ref; [EOL]     if (result == null) { [EOL]         result = JsonStringEncoder.getInstance().quoteAsUTF8(_value); [EOL]         _quotedUTF8Ref = result; [EOL]     } [EOL]     return result; [EOL] } <line_num>: 116,125
@Override [EOL] public int appendQuotedUTF8(byte[] buffer, int offset) { [EOL]     byte[] result = _quotedUTF8Ref; [EOL]     if (result == null) { [EOL]         result = JsonStringEncoder.getInstance().quoteAsUTF8(_value); [EOL]         _quotedUTF8Ref = result; [EOL]     } [EOL]     final int length = result.length; [EOL]     if ((offset + length) > buffer.length) { [EOL]         return -1; [EOL]     } [EOL]     System.arraycopy(result, 0, buffer, offset, length); [EOL]     return length; [EOL] } <line_num>: 133,147
@Override [EOL] public int appendQuoted(char[] buffer, int offset) { [EOL]     char[] result = _quotedChars; [EOL]     if (result == null) { [EOL]         result = JsonStringEncoder.getInstance().quoteAsString(_value); [EOL]         _quotedChars = result; [EOL]     } [EOL]     final int length = result.length; [EOL]     if ((offset + length) > buffer.length) { [EOL]         return -1; [EOL]     } [EOL]     System.arraycopy(result, 0, buffer, offset, length); [EOL]     return length; [EOL] } <line_num>: 149,163
@Override [EOL] public int appendUnquotedUTF8(byte[] buffer, int offset) { [EOL]     byte[] result = _unquotedUTF8Ref; [EOL]     if (result == null) { [EOL]         result = JsonStringEncoder.getInstance().encodeAsUTF8(_value); [EOL]         _unquotedUTF8Ref = result; [EOL]     } [EOL]     final int length = result.length; [EOL]     if ((offset + length) > buffer.length) { [EOL]         return -1; [EOL]     } [EOL]     System.arraycopy(result, 0, buffer, offset, length); [EOL]     return length; [EOL] } <line_num>: 165,179
@Override [EOL] public int appendUnquoted(char[] buffer, int offset) { [EOL]     String str = _value; [EOL]     final int length = str.length(); [EOL]     if ((offset + length) > buffer.length) { [EOL]         return -1; [EOL]     } [EOL]     str.getChars(0, length, buffer, offset); [EOL]     return length; [EOL] } <line_num>: 181,191
@Override [EOL] public int writeQuotedUTF8(OutputStream out) throws IOException { [EOL]     byte[] result = _quotedUTF8Ref; [EOL]     if (result == null) { [EOL]         result = JsonStringEncoder.getInstance().quoteAsUTF8(_value); [EOL]         _quotedUTF8Ref = result; [EOL]     } [EOL]     final int length = result.length; [EOL]     out.write(result, 0, length); [EOL]     return length; [EOL] } <line_num>: 193,204
@Override [EOL] public int writeUnquotedUTF8(OutputStream out) throws IOException { [EOL]     byte[] result = _unquotedUTF8Ref; [EOL]     if (result == null) { [EOL]         result = JsonStringEncoder.getInstance().encodeAsUTF8(_value); [EOL]         _unquotedUTF8Ref = result; [EOL]     } [EOL]     final int length = result.length; [EOL]     out.write(result, 0, length); [EOL]     return length; [EOL] } <line_num>: 206,217
@Override [EOL] public int putQuotedUTF8(ByteBuffer buffer) { [EOL]     byte[] result = _quotedUTF8Ref; [EOL]     if (result == null) { [EOL]         result = JsonStringEncoder.getInstance().quoteAsUTF8(_value); [EOL]         _quotedUTF8Ref = result; [EOL]     } [EOL]     final int length = result.length; [EOL]     if (length > buffer.remaining()) { [EOL]         return -1; [EOL]     } [EOL]     buffer.put(result, 0, length); [EOL]     return length; [EOL] } <line_num>: 219,233
@Override [EOL] public int putUnquotedUTF8(ByteBuffer buffer) { [EOL]     byte[] result = _unquotedUTF8Ref; [EOL]     if (result == null) { [EOL]         result = JsonStringEncoder.getInstance().encodeAsUTF8(_value); [EOL]         _unquotedUTF8Ref = result; [EOL]     } [EOL]     final int length = result.length; [EOL]     if (length > buffer.remaining()) { [EOL]         return -1; [EOL]     } [EOL]     buffer.put(result, 0, length); [EOL]     return length; [EOL] } <line_num>: 235,249
@Override [EOL] public final String toString() { [EOL]     return _value; [EOL] } <line_num>: 258,259
@Override [EOL] public final int hashCode() { [EOL]     return _value.hashCode(); [EOL] } <line_num>: 261,262
@Override [EOL] public final boolean equals(Object o) { [EOL]     if (o == this) [EOL]         return true; [EOL]     if (o == null || o.getClass() != getClass()) [EOL]         return false; [EOL]     SerializedString other = (SerializedString) o; [EOL]     return _value.equals(other._value); [EOL] } <line_num>: 264,271
