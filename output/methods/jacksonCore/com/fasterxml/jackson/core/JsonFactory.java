private Feature(boolean defaultState) { [EOL]     _defaultState = defaultState; [EOL] } <line_num>: 113,116
public JsonFactory() { [EOL]     this((ObjectCodec) null); [EOL] } <line_num>: 260,260
public JsonFactory(ObjectCodec oc) { [EOL]     _objectCodec = oc; [EOL] } <line_num>: 262,262
protected JsonFactory(JsonFactory src, ObjectCodec codec) { [EOL]     _objectCodec = null; [EOL]     _factoryFeatures = src._factoryFeatures; [EOL]     _parserFeatures = src._parserFeatures; [EOL]     _generatorFeatures = src._generatorFeatures; [EOL]     _characterEscapes = src._characterEscapes; [EOL]     _inputDecorator = src._inputDecorator; [EOL]     _outputDecorator = src._outputDecorator; [EOL]     _rootValueSeparator = src._rootValueSeparator; [EOL] } <line_num>: 269,284
public static int collectDefaults() { [EOL]     int flags = 0; [EOL]     for (Feature f : values()) { [EOL]         if (f.enabledByDefault()) { [EOL]             flags |= f.getMask(); [EOL]         } [EOL]     } [EOL]     return flags; [EOL] } <line_num>: 102,111
public boolean enabledByDefault() { [EOL]     return _defaultState; [EOL] } <line_num>: 118,118
public boolean enabledIn(int flags) { [EOL]     return (flags & getMask()) != 0; [EOL] } <line_num>: 120,120
public int getMask() { [EOL]     return (1 << ordinal()); [EOL] } <line_num>: 122,122
public JsonFactory copy() { [EOL]     _checkInvalidCopy(JsonFactory.class); [EOL]     return new JsonFactory(this, null); [EOL] } <line_num>: 300,305
protected void _checkInvalidCopy(Class<?> exp) { [EOL]     if (getClass() != exp) { [EOL]         throw new IllegalStateException("Failed copy(): " + getClass().getName() + " (version: " + version() + ") does not override copy(); it has to"); [EOL]     } [EOL] } <line_num>: 311,317
protected Object readResolve() { [EOL]     return new JsonFactory(this, _objectCodec); [EOL] } <line_num>: 330,332
public boolean requiresPropertyOrdering() { [EOL]     return false; [EOL] } <line_num>: 355,357
public boolean canUseSchema(FormatSchema schema) { [EOL]     String ourFormat = getFormatName(); [EOL]     return (ourFormat != null) && ourFormat.equals(schema.getSchemaType()); [EOL] } <line_num>: 375,378
public String getFormatName() { [EOL]     if (getClass() == JsonFactory.class) { [EOL]         return FORMAT_NAME_JSON; [EOL]     } [EOL]     return null; [EOL] } <line_num>: 387,397
public MatchStrength hasFormat(InputAccessor acc) throws IOException { [EOL]     if (getClass() == JsonFactory.class) { [EOL]         return hasJSONFormat(acc); [EOL]     } [EOL]     return null; [EOL] } <line_num>: 399,406
public boolean requiresCustomCodec() { [EOL]     return false; [EOL] } <line_num>: 421,423
protected MatchStrength hasJSONFormat(InputAccessor acc) throws IOException { [EOL]     return ByteSourceJsonBootstrapper.hasJSONFormat(acc); [EOL] } <line_num>: 429,432
@Override [EOL] public Version version() { [EOL]     return PackageVersion.VERSION; [EOL] } <line_num>: 440,443
public final JsonFactory configure(JsonFactory.Feature f, boolean state) { [EOL]     return state ? enable(f) : disable(f); [EOL] } <line_num>: 455,457
public JsonFactory enable(JsonFactory.Feature f) { [EOL]     _factoryFeatures |= f.getMask(); [EOL]     return this; [EOL] } <line_num>: 463,466
public JsonFactory disable(JsonFactory.Feature f) { [EOL]     _factoryFeatures &= ~f.getMask(); [EOL]     return this; [EOL] } <line_num>: 472,475
public final boolean isEnabled(JsonFactory.Feature f) { [EOL]     return (_factoryFeatures & f.getMask()) != 0; [EOL] } <line_num>: 480,482
public final JsonFactory configure(JsonParser.Feature f, boolean state) { [EOL]     return state ? enable(f) : disable(f); [EOL] } <line_num>: 494,496
public JsonFactory enable(JsonParser.Feature f) { [EOL]     _parserFeatures |= f.getMask(); [EOL]     return this; [EOL] } <line_num>: 502,505
public JsonFactory disable(JsonParser.Feature f) { [EOL]     _parserFeatures &= ~f.getMask(); [EOL]     return this; [EOL] } <line_num>: 511,514
public final boolean isEnabled(JsonParser.Feature f) { [EOL]     return (_parserFeatures & f.getMask()) != 0; [EOL] } <line_num>: 519,521
public InputDecorator getInputDecorator() { [EOL]     return _inputDecorator; [EOL] } <line_num>: 527,529
public JsonFactory setInputDecorator(InputDecorator d) { [EOL]     _inputDecorator = d; [EOL]     return this; [EOL] } <line_num>: 534,537
public final JsonFactory configure(JsonGenerator.Feature f, boolean state) { [EOL]     return state ? enable(f) : disable(f); [EOL] } <line_num>: 549,551
public JsonFactory enable(JsonGenerator.Feature f) { [EOL]     _generatorFeatures |= f.getMask(); [EOL]     return this; [EOL] } <line_num>: 558,561
public JsonFactory disable(JsonGenerator.Feature f) { [EOL]     _generatorFeatures &= ~f.getMask(); [EOL]     return this; [EOL] } <line_num>: 567,570
public final boolean isEnabled(JsonGenerator.Feature f) { [EOL]     return (_generatorFeatures & f.getMask()) != 0; [EOL] } <line_num>: 575,577
public CharacterEscapes getCharacterEscapes() { [EOL]     return _characterEscapes; [EOL] } <line_num>: 583,585
public JsonFactory setCharacterEscapes(CharacterEscapes esc) { [EOL]     _characterEscapes = esc; [EOL]     return this; [EOL] } <line_num>: 591,594
public OutputDecorator getOutputDecorator() { [EOL]     return _outputDecorator; [EOL] } <line_num>: 600,602
public JsonFactory setOutputDecorator(OutputDecorator d) { [EOL]     _outputDecorator = d; [EOL]     return this; [EOL] } <line_num>: 607,610
public JsonFactory setRootValueSeparator(String sep) { [EOL]     _rootValueSeparator = (sep == null) ? null : new SerializedString(sep); [EOL]     return this; [EOL] } <line_num>: 621,624
public String getRootValueSeparator() { [EOL]     return (_rootValueSeparator == null) ? null : _rootValueSeparator.getValue(); [EOL] } <line_num>: 629,631
public JsonFactory setCodec(ObjectCodec oc) { [EOL]     _objectCodec = oc; [EOL]     return this; [EOL] } <line_num>: 646,649
public ObjectCodec getCodec() { [EOL]     return _objectCodec; [EOL] } <line_num>: 651,651
public JsonParser createParser(File f) throws IOException, JsonParseException { [EOL]     IOContext ctxt = _createContext(f, true); [EOL]     InputStream in = new FileInputStream(f); [EOL]     if (_inputDecorator != null) { [EOL]         in = _inputDecorator.decorate(ctxt, in); [EOL]     } [EOL]     return _createParser(in, ctxt); [EOL] } <line_num>: 673,684
public JsonParser createParser(URL url) throws IOException, JsonParseException { [EOL]     IOContext ctxt = _createContext(url, true); [EOL]     InputStream in = _optimizedStreamFromURL(url); [EOL]     if (_inputDecorator != null) { [EOL]         in = _inputDecorator.decorate(ctxt, in); [EOL]     } [EOL]     return _createParser(in, ctxt); [EOL] } <line_num>: 701,712
public JsonParser createParser(InputStream in) throws IOException, JsonParseException { [EOL]     IOContext ctxt = _createContext(in, false); [EOL]     if (_inputDecorator != null) { [EOL]         in = _inputDecorator.decorate(ctxt, in); [EOL]     } [EOL]     return _createParser(in, ctxt); [EOL] } <line_num>: 731,740
public JsonParser createParser(Reader r) throws IOException, JsonParseException { [EOL]     IOContext ctxt = _createContext(r, false); [EOL]     if (_inputDecorator != null) { [EOL]         r = _inputDecorator.decorate(ctxt, r); [EOL]     } [EOL]     return _createParser(r, ctxt); [EOL] } <line_num>: 756,766
public JsonParser createParser(byte[] data) throws IOException, JsonParseException { [EOL]     IOContext ctxt = _createContext(data, true); [EOL]     if (_inputDecorator != null) { [EOL]         InputStream in = _inputDecorator.decorate(ctxt, data, 0, data.length); [EOL]         if (in != null) { [EOL]             return _createParser(in, ctxt); [EOL]         } [EOL]     } [EOL]     return _createParser(data, 0, data.length, ctxt); [EOL] } <line_num>: 774,786
public JsonParser createParser(byte[] data, int offset, int len) throws IOException, JsonParseException { [EOL]     IOContext ctxt = _createContext(data, true); [EOL]     if (_inputDecorator != null) { [EOL]         InputStream in = _inputDecorator.decorate(ctxt, data, offset, len); [EOL]         if (in != null) { [EOL]             return _createParser(in, ctxt); [EOL]         } [EOL]     } [EOL]     return _createParser(data, offset, len, ctxt); [EOL] } <line_num>: 798,810
public JsonParser createParser(String content) throws IOException, JsonParseException { [EOL]     Reader r = new StringReader(content); [EOL]     IOContext ctxt = _createContext(r, true); [EOL]     if (_inputDecorator != null) { [EOL]         r = _inputDecorator.decorate(ctxt, r); [EOL]     } [EOL]     return _createParser(r, ctxt); [EOL] } <line_num>: 818,829
@Deprecated [EOL] public JsonParser createJsonParser(File f) throws IOException, JsonParseException { [EOL]     return createParser(f); [EOL] } <line_num>: 854,859
@Deprecated [EOL] public JsonParser createJsonParser(URL url) throws IOException, JsonParseException { [EOL]     return createParser(url); [EOL] } <line_num>: 879,884
@Deprecated [EOL] public JsonParser createJsonParser(InputStream in) throws IOException, JsonParseException { [EOL]     return createParser(in); [EOL] } <line_num>: 906,911
@Deprecated [EOL] public JsonParser createJsonParser(Reader r) throws IOException, JsonParseException { [EOL]     return createParser(r); [EOL] } <line_num>: 930,935
@Deprecated [EOL] public JsonParser createJsonParser(byte[] data) throws IOException, JsonParseException { [EOL]     return createParser(data); [EOL] } <line_num>: 946,951
@Deprecated [EOL] public JsonParser createJsonParser(byte[] data, int offset, int len) throws IOException, JsonParseException { [EOL]     return createParser(data, offset, len); [EOL] } <line_num>: 966,971
@Deprecated [EOL] public JsonParser createJsonParser(String content) throws IOException, JsonParseException { [EOL]     return createParser(content); [EOL] } <line_num>: 979,984
public JsonGenerator createGenerator(OutputStream out, JsonEncoding enc) throws IOException { [EOL]     IOContext ctxt = _createContext(out, false); [EOL]     ctxt.setEncoding(enc); [EOL]     if (enc == JsonEncoding.UTF8) { [EOL]         if (_outputDecorator != null) { [EOL]             out = _outputDecorator.decorate(ctxt, out); [EOL]         } [EOL]         return _createUTF8Generator(out, ctxt); [EOL]     } [EOL]     Writer w = _createWriter(out, enc, ctxt); [EOL]     if (_outputDecorator != null) { [EOL]         w = _outputDecorator.decorate(ctxt, w); [EOL]     } [EOL]     return _createGenerator(w, ctxt); [EOL] } <line_num>: 1014,1033
public JsonGenerator createGenerator(OutputStream out) throws IOException { [EOL]     return createGenerator(out, JsonEncoding.UTF8); [EOL] } <line_num>: 1043,1045
public JsonGenerator createGenerator(Writer out) throws IOException { [EOL]     IOContext ctxt = _createContext(out, false); [EOL]     if (_outputDecorator != null) { [EOL]         out = _outputDecorator.decorate(ctxt, out); [EOL]     } [EOL]     return _createGenerator(out, ctxt); [EOL] } <line_num>: 1062,1071
public JsonGenerator createGenerator(File f, JsonEncoding enc) throws IOException { [EOL]     OutputStream out = new FileOutputStream(f); [EOL]     IOContext ctxt = _createContext(out, true); [EOL]     ctxt.setEncoding(enc); [EOL]     if (enc == JsonEncoding.UTF8) { [EOL]         if (_outputDecorator != null) { [EOL]             out = _outputDecorator.decorate(ctxt, out); [EOL]         } [EOL]         return _createUTF8Generator(out, ctxt); [EOL]     } [EOL]     Writer w = _createWriter(out, enc, ctxt); [EOL]     if (_outputDecorator != null) { [EOL]         w = _outputDecorator.decorate(ctxt, w); [EOL]     } [EOL]     return _createGenerator(w, ctxt); [EOL] } <line_num>: 1089,1109
@Deprecated [EOL] public JsonGenerator createJsonGenerator(OutputStream out, JsonEncoding enc) throws IOException { [EOL]     return createGenerator(out, enc); [EOL] } <line_num>: 1139,1144
@Deprecated [EOL] public JsonGenerator createJsonGenerator(Writer out) throws IOException { [EOL]     return createGenerator(out); [EOL] } <line_num>: 1161,1166
@Deprecated [EOL] public JsonGenerator createJsonGenerator(OutputStream out) throws IOException { [EOL]     return createGenerator(out, JsonEncoding.UTF8); [EOL] } <line_num>: 1176,1179
@Deprecated [EOL] public JsonGenerator createJsonGenerator(File f, JsonEncoding enc) throws IOException { [EOL]     return createGenerator(f, enc); [EOL] } <line_num>: 1198,1203
protected JsonParser _createParser(InputStream in, IOContext ctxt) throws IOException, JsonParseException { [EOL]     return new ByteSourceJsonBootstrapper(ctxt, in).constructParser(_parserFeatures, _objectCodec, _rootByteSymbols, _rootCharSymbols, isEnabled(JsonFactory.Feature.CANONICALIZE_FIELD_NAMES), isEnabled(JsonFactory.Feature.INTERN_FIELD_NAMES)); [EOL] } <line_num>: 1224,1232
@Deprecated [EOL] protected JsonParser _createJsonParser(InputStream in, IOContext ctxt) throws IOException, JsonParseException { [EOL]     return _createParser(in, ctxt); [EOL] } <line_num>: 1237,1240
protected JsonParser _createParser(Reader r, IOContext ctxt) throws IOException, JsonParseException { [EOL]     return new ReaderBasedJsonParser(ctxt, _parserFeatures, r, _objectCodec, _rootCharSymbols.makeChild(isEnabled(JsonFactory.Feature.CANONICALIZE_FIELD_NAMES), isEnabled(JsonFactory.Feature.INTERN_FIELD_NAMES))); [EOL] } <line_num>: 1254,1260
@Deprecated [EOL] protected JsonParser _createJsonParser(Reader r, IOContext ctxt) throws IOException, JsonParseException { [EOL]     return _createParser(r, ctxt); [EOL] } <line_num>: 1265,1268
protected JsonParser _createParser(byte[] data, int offset, int len, IOContext ctxt) throws IOException, JsonParseException { [EOL]     return new ByteSourceJsonBootstrapper(ctxt, data, offset, len).constructParser(_parserFeatures, _objectCodec, _rootByteSymbols, _rootCharSymbols, isEnabled(JsonFactory.Feature.CANONICALIZE_FIELD_NAMES), isEnabled(JsonFactory.Feature.INTERN_FIELD_NAMES)); [EOL] } <line_num>: 1281,1288
@Deprecated [EOL] protected JsonParser _createJsonParser(byte[] data, int offset, int len, IOContext ctxt) throws IOException, JsonParseException { [EOL]     return _createParser(data, offset, len, ctxt); [EOL] } <line_num>: 1293,1296
protected JsonGenerator _createGenerator(Writer out, IOContext ctxt) throws IOException { [EOL]     WriterBasedJsonGenerator gen = new WriterBasedJsonGenerator(ctxt, _generatorFeatures, _objectCodec, out); [EOL]     if (_characterEscapes != null) { [EOL]         gen.setCharacterEscapes(_characterEscapes); [EOL]     } [EOL]     SerializableString rootSep = _rootValueSeparator; [EOL]     if (rootSep != DEFAULT_ROOT_VALUE_SEPARATOR) { [EOL]         gen.setRootValueSeparator(rootSep); [EOL]     } [EOL]     return gen; [EOL] } <line_num>: 1315,1328
@Deprecated [EOL] protected JsonGenerator _createJsonGenerator(Writer out, IOContext ctxt) throws IOException { [EOL]     return _createGenerator(out, ctxt); [EOL] } <line_num>: 1333,1341
protected JsonGenerator _createUTF8Generator(OutputStream out, IOContext ctxt) throws IOException { [EOL]     UTF8JsonGenerator gen = new UTF8JsonGenerator(ctxt, _generatorFeatures, _objectCodec, out); [EOL]     if (_characterEscapes != null) { [EOL]         gen.setCharacterEscapes(_characterEscapes); [EOL]     } [EOL]     SerializableString rootSep = _rootValueSeparator; [EOL]     if (rootSep != DEFAULT_ROOT_VALUE_SEPARATOR) { [EOL]         gen.setRootValueSeparator(rootSep); [EOL]     } [EOL]     return gen; [EOL] } <line_num>: 1353,1364
@Deprecated [EOL] protected JsonGenerator _createUTF8JsonGenerator(OutputStream out, IOContext ctxt) throws IOException { [EOL]     return _createUTF8Generator(out, ctxt); [EOL] } <line_num>: 1369,1374
protected Writer _createWriter(OutputStream out, JsonEncoding enc, IOContext ctxt) throws IOException { [EOL]     if (enc == JsonEncoding.UTF8) { [EOL]         return new UTF8Writer(ctxt, out); [EOL]     } [EOL]     return new OutputStreamWriter(out, enc.getJavaName()); [EOL] } <line_num>: 1376,1384
protected IOContext _createContext(Object srcRef, boolean resourceManaged) { [EOL]     return new IOContext(_getBufferRecycler(), srcRef, resourceManaged); [EOL] } <line_num>: 1396,1399
public BufferRecycler _getBufferRecycler() { [EOL]     SoftReference<BufferRecycler> ref = _recyclerRef.get(); [EOL]     BufferRecycler br = (ref == null) ? null : ref.get(); [EOL]     if (br == null) { [EOL]         br = new BufferRecycler(); [EOL]         _recyclerRef.set(new SoftReference<BufferRecycler>(br)); [EOL]     } [EOL]     return br; [EOL] } <line_num>: 1407,1417
protected InputStream _optimizedStreamFromURL(URL url) throws IOException { [EOL]     if ("file".equals(url.getProtocol())) { [EOL]         String host = url.getHost(); [EOL]         if (host == null || host.length() == 0) { [EOL]             String path = url.getPath(); [EOL]             if (path.indexOf('%') < 0) { [EOL]                 return new FileInputStream(url.getPath()); [EOL]             } [EOL]         } [EOL]     } [EOL]     return url.openStream(); [EOL] } <line_num>: 1424,1446
