public DefaultKeyedValueTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 75,77
public static Test suite() { [EOL]     return new TestSuite(DefaultKeyedValueTests.class); [EOL] } <line_num>: 66,68
public void testConstructor() { [EOL]     DefaultKeyedValue v = new DefaultKeyedValue("A", new Integer(1)); [EOL]     assertEquals("A", v.getKey()); [EOL]     assertEquals(new Integer(1), v.getValue()); [EOL]     boolean pass = false; [EOL]     try { [EOL]         new DefaultKeyedValue(null, new Integer(1)); [EOL]     } catch (IllegalArgumentException e) { [EOL]         pass = true; [EOL]     } [EOL]     assertTrue(pass); [EOL]     v = new DefaultKeyedValue("A", null); [EOL]     assertNull(v.getValue()); [EOL] } <line_num>: 82,100
public void testEquals() { [EOL]     DefaultKeyedValue v1 = new DefaultKeyedValue("Test", new Double(45.5)); [EOL]     DefaultKeyedValue v2 = new DefaultKeyedValue("Test", new Double(45.5)); [EOL]     assertTrue(v1.equals(v2)); [EOL]     assertTrue(v2.equals(v1)); [EOL]     v1 = new DefaultKeyedValue("Test 1", new Double(45.5)); [EOL]     v2 = new DefaultKeyedValue("Test 2", new Double(45.5)); [EOL]     assertFalse(v1.equals(v2)); [EOL]     v1 = new DefaultKeyedValue("Test", new Double(45.5)); [EOL]     v2 = new DefaultKeyedValue("Test", new Double(45.6)); [EOL]     assertFalse(v1.equals(v2)); [EOL] } <line_num>: 105,120
public void testCloning() { [EOL]     DefaultKeyedValue v1 = new DefaultKeyedValue("Test", new Double(45.5)); [EOL]     DefaultKeyedValue v2 = null; [EOL]     try { [EOL]         v2 = (DefaultKeyedValue) v1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         System.err.println("Failed to clone."); [EOL]     } [EOL]     assertTrue(v1 != v2); [EOL]     assertTrue(v1.getClass() == v2.getClass()); [EOL]     assertTrue(v1.equals(v2)); [EOL]     v2.setValue(new Double(12.3)); [EOL]     assertFalse(v1.equals(v2)); [EOL] } <line_num>: 125,141
public void testSerialization() { [EOL]     DefaultKeyedValue v1 = new DefaultKeyedValue("Test", new Double(25.3)); [EOL]     DefaultKeyedValue v2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(v1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         v2 = (DefaultKeyedValue) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(v1, v2); [EOL] } <line_num>: 146,167
