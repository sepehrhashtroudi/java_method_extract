public VectorSeriesCollectionTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 79,81
public static Test suite() { [EOL]     return new TestSuite(VectorSeriesCollectionTests.class); [EOL] } <line_num>: 70,72
public void testEquals() { [EOL]     VectorSeries s1 = new VectorSeries("Series"); [EOL]     s1.add(1.0, 1.1, 1.2, 1.3); [EOL]     VectorSeriesCollection c1 = new VectorSeriesCollection(); [EOL]     c1.addSeries(s1); [EOL]     VectorSeries s2 = new VectorSeries("Series"); [EOL]     s2.add(1.0, 1.1, 1.2, 1.3); [EOL]     VectorSeriesCollection c2 = new VectorSeriesCollection(); [EOL]     c2.addSeries(s2); [EOL]     assertTrue(c1.equals(c2)); [EOL]     assertTrue(c2.equals(c1)); [EOL]     c1.addSeries(new VectorSeries("Empty Series")); [EOL]     assertFalse(c1.equals(c2)); [EOL]     c2.addSeries(new VectorSeries("Empty Series")); [EOL]     assertTrue(c1.equals(c2)); [EOL] } <line_num>: 86,103
public void testCloning() { [EOL]     VectorSeries s1 = new VectorSeries("Series"); [EOL]     s1.add(1.0, 1.1, 1.2, 1.3); [EOL]     VectorSeriesCollection c1 = new VectorSeriesCollection(); [EOL]     c1.addSeries(s1); [EOL]     VectorSeriesCollection c2 = null; [EOL]     try { [EOL]         c2 = (VectorSeriesCollection) c1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(c1 != c2); [EOL]     assertTrue(c1.getClass() == c2.getClass()); [EOL]     assertTrue(c1.equals(c2)); [EOL]     s1.setDescription("XYZ"); [EOL]     assertFalse(c1.equals(c2)); [EOL] } <line_num>: 108,127
public void testPublicCloneable() { [EOL]     VectorSeriesCollection d1 = new VectorSeriesCollection(); [EOL]     assertTrue(d1 instanceof PublicCloneable); [EOL] } <line_num>: 132,135
public void testSerialization() { [EOL]     VectorSeries s1 = new VectorSeries("Series"); [EOL]     s1.add(1.0, 1.1, 1.2, 1.3); [EOL]     VectorSeriesCollection c1 = new VectorSeriesCollection(); [EOL]     c1.addSeries(s1); [EOL]     VectorSeriesCollection c2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(c1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         c2 = (VectorSeriesCollection) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(c1, c2); [EOL] } <line_num>: 140,162
public void testRemoveSeries() { [EOL]     VectorSeries s1 = new VectorSeries("S1"); [EOL]     VectorSeries s2 = new VectorSeries("S2"); [EOL]     VectorSeriesCollection vsc = new VectorSeriesCollection(); [EOL]     vsc.addSeries(s1); [EOL]     vsc.addSeries(s2); [EOL]     assertEquals(2, vsc.getSeriesCount()); [EOL]     boolean b = vsc.removeSeries(s1); [EOL]     assertTrue(b); [EOL]     assertEquals(1, vsc.getSeriesCount()); [EOL]     assertEquals("S2", vsc.getSeriesKey(0)); [EOL]     b = vsc.removeSeries(new VectorSeries("NotInDataset")); [EOL]     assertFalse(b); [EOL]     assertEquals(1, vsc.getSeriesCount()); [EOL]     b = vsc.removeSeries(s2); [EOL]     assertTrue(b); [EOL]     assertEquals(0, vsc.getSeriesCount()); [EOL] } <line_num>: 167,184
