public OHLCDataItemTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 76,78
public static Test suite() { [EOL]     return new TestSuite(OHLCDataItemTests.class); [EOL] } <line_num>: 67,69
public void testEquals() { [EOL]     OHLCDataItem i1 = new OHLCDataItem(new Date(1L), 1.0, 2.0, 3.0, 4.0, 5.0); [EOL]     OHLCDataItem i2 = new OHLCDataItem(new Date(1L), 1.0, 2.0, 3.0, 4.0, 5.0); [EOL]     assertTrue(i1.equals(i2)); [EOL]     assertTrue(i2.equals(i1)); [EOL] } <line_num>: 83,92
public void testCloning() { [EOL]     OHLCDataItem i1 = new OHLCDataItem(new Date(1L), 1.0, 2.0, 3.0, 4.0, 5.0); [EOL]     assertFalse(i1 instanceof Cloneable); [EOL] } <line_num>: 97,102
public void testSerialization() { [EOL]     OHLCDataItem i1 = new OHLCDataItem(new Date(1L), 1.0, 2.0, 3.0, 4.0, 5.0); [EOL]     OHLCDataItem i2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(i1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         i2 = (OHLCDataItem) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(i1, i2); [EOL] } <line_num>: 107,129
