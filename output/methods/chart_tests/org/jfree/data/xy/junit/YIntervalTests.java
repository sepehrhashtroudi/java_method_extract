public YIntervalTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 75,77
public static Test suite() { [EOL]     return new TestSuite(YIntervalTests.class); [EOL] } <line_num>: 66,68
public void testEquals() { [EOL]     YInterval i1 = new YInterval(1.0, 0.5, 1.5); [EOL]     YInterval i2 = new YInterval(1.0, 0.5, 1.5); [EOL]     assertEquals(i1, i2); [EOL]     i1 = new YInterval(1.1, 0.5, 1.5); [EOL]     assertFalse(i1.equals(i2)); [EOL]     i2 = new YInterval(1.1, 0.5, 1.5); [EOL]     assertTrue(i1.equals(i2)); [EOL]     i1 = new YInterval(1.1, 0.55, 1.5); [EOL]     assertFalse(i1.equals(i2)); [EOL]     i2 = new YInterval(1.1, 0.55, 1.5); [EOL]     assertTrue(i1.equals(i2)); [EOL]     i1 = new YInterval(1.1, 0.55, 1.55); [EOL]     assertFalse(i1.equals(i2)); [EOL]     i2 = new YInterval(1.1, 0.55, 1.55); [EOL]     assertTrue(i1.equals(i2)); [EOL] } <line_num>: 82,101
public void testCloning() { [EOL]     YInterval i1 = new YInterval(1.0, 0.5, 1.5); [EOL]     assertFalse(i1 instanceof Cloneable); [EOL] } <line_num>: 106,109
public void testSerialization() { [EOL]     YInterval i1 = new YInterval(1.0, 0.5, 1.5); [EOL]     YInterval i2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(i1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         i2 = (YInterval) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(i1, i2); [EOL] } <line_num>: 114,133
