public DefaultOHLCDatasetTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 82,84
public static Test suite() { [EOL]     return new TestSuite(DefaultOHLCDatasetTests.class); [EOL] } <line_num>: 73,75
public void testDataRange() { [EOL]     OHLCDataItem[] data = new OHLCDataItem[3]; [EOL]     data[0] = new OHLCDataItem(new Date(11L), 2.0, 4.0, 1.0, 3.0, 100.0); [EOL]     data[1] = new OHLCDataItem(new Date(22L), 4.0, 9.0, 2.0, 5.0, 120.0); [EOL]     data[2] = new OHLCDataItem(new Date(33L), 3.0, 7.0, 3.0, 6.0, 140.0); [EOL]     DefaultOHLCDataset d = new DefaultOHLCDataset("S1", data); [EOL]     Range r = DatasetUtilities.findRangeBounds(d, true); [EOL]     assertEquals(1.0, r.getLowerBound(), EPSILON); [EOL]     assertEquals(9.0, r.getUpperBound(), EPSILON); [EOL] } <line_num>: 91,100
public void testEquals() { [EOL]     DefaultOHLCDataset d1 = new DefaultOHLCDataset("Series 1", new OHLCDataItem[0]); [EOL]     DefaultOHLCDataset d2 = new DefaultOHLCDataset("Series 1", new OHLCDataItem[0]); [EOL]     assertTrue(d1.equals(d2)); [EOL]     assertTrue(d2.equals(d1)); [EOL]     d1 = new DefaultOHLCDataset("Series 2", new OHLCDataItem[0]); [EOL]     assertFalse(d1.equals(d2)); [EOL]     d2 = new DefaultOHLCDataset("Series 2", new OHLCDataItem[0]); [EOL]     assertTrue(d1.equals(d2)); [EOL]     d1 = new DefaultOHLCDataset("Series 2", new OHLCDataItem[] { new OHLCDataItem(new Date(123L), 1.2, 3.4, 5.6, 7.8, 99.9) }); [EOL]     assertFalse(d1.equals(d2)); [EOL]     d2 = new DefaultOHLCDataset("Series 2", new OHLCDataItem[] { new OHLCDataItem(new Date(123L), 1.2, 3.4, 5.6, 7.8, 99.9) }); [EOL]     assertTrue(d1.equals(d2)); [EOL] } <line_num>: 105,125
public void testCloning() { [EOL]     DefaultOHLCDataset d1 = new DefaultOHLCDataset("Series 1", new OHLCDataItem[0]); [EOL]     DefaultOHLCDataset d2 = null; [EOL]     try { [EOL]         d2 = (DefaultOHLCDataset) d1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(d1 != d2); [EOL]     assertTrue(d1.getClass() == d2.getClass()); [EOL]     assertTrue(d1.equals(d2)); [EOL] } <line_num>: 130,143
public void testCloning2() { [EOL]     OHLCDataItem item1 = new OHLCDataItem(new Date(1L), 1.0, 2.0, 3.0, 4.0, 5.0); [EOL]     OHLCDataItem item2 = new OHLCDataItem(new Date(2L), 6.0, 7.0, 8.0, 9.0, 10.0); [EOL]     OHLCDataItem[] items = new OHLCDataItem[] { item2, item1 }; [EOL]     DefaultOHLCDataset d1 = new DefaultOHLCDataset("Series 1", items); [EOL]     DefaultOHLCDataset d2 = null; [EOL]     try { [EOL]         d2 = (DefaultOHLCDataset) d1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(d1 != d2); [EOL]     assertTrue(d1.getClass() == d2.getClass()); [EOL]     assertTrue(d1.equals(d2)); [EOL]     d1.sortDataByDate(); [EOL]     assertFalse(d1.equals(d2)); [EOL] } <line_num>: 148,169
public void testPublicCloneable() { [EOL]     DefaultOHLCDataset d1 = new DefaultOHLCDataset("Series 1", new OHLCDataItem[0]); [EOL]     assertTrue(d1 instanceof PublicCloneable); [EOL] } <line_num>: 174,178
public void testSerialization() { [EOL]     DefaultOHLCDataset d1 = new DefaultOHLCDataset("Series 1", new OHLCDataItem[0]); [EOL]     DefaultOHLCDataset d2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(d1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         d2 = (DefaultOHLCDataset) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         System.out.println(e.toString()); [EOL]     } [EOL]     assertEquals(d1, d2); [EOL] } <line_num>: 183,204
