public OHLCTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 75,77
public static Test suite() { [EOL]     return new TestSuite(OHLCTests.class); [EOL] } <line_num>: 66,68
public void testEquals() { [EOL]     OHLC i1 = new OHLC(2.0, 4.0, 1.0, 3.0); [EOL]     OHLC i2 = new OHLC(2.0, 4.0, 1.0, 3.0); [EOL]     assertEquals(i1, i2); [EOL]     i1 = new OHLC(2.2, 4.0, 1.0, 3.0); [EOL]     assertFalse(i1.equals(i2)); [EOL]     i2 = new OHLC(2.2, 4.0, 1.0, 3.0); [EOL]     assertTrue(i1.equals(i2)); [EOL]     i1 = new OHLC(2.2, 4.4, 1.0, 3.0); [EOL]     assertFalse(i1.equals(i2)); [EOL]     i2 = new OHLC(2.2, 4.4, 1.0, 3.0); [EOL]     assertTrue(i1.equals(i2)); [EOL]     i1 = new OHLC(2.2, 4.4, 1.1, 3.0); [EOL]     assertFalse(i1.equals(i2)); [EOL]     i2 = new OHLC(2.2, 4.4, 1.1, 3.0); [EOL]     assertTrue(i1.equals(i2)); [EOL]     i1 = new OHLC(2.2, 4.4, 1.1, 3.3); [EOL]     assertFalse(i1.equals(i2)); [EOL]     i2 = new OHLC(2.2, 4.4, 1.1, 3.3); [EOL]     assertTrue(i1.equals(i2)); [EOL] } <line_num>: 82,106
public void testCloning() { [EOL]     OHLC i1 = new OHLC(2.0, 4.0, 1.0, 3.0); [EOL]     assertFalse(i1 instanceof Cloneable); [EOL] } <line_num>: 111,114
public void testSerialization() { [EOL]     OHLC i1 = new OHLC(2.0, 4.0, 1.0, 3.0); [EOL]     OHLC i2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(i1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         i2 = (OHLC) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(i1, i2); [EOL] } <line_num>: 119,138
