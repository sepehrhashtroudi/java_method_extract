public TimeTableXYDatasetTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 78,80
public static Test suite() { [EOL]     return new TestSuite(TimeTableXYDatasetTests.class); [EOL] } <line_num>: 69,71
public void testStandard() { [EOL]     TimeTableXYDataset d = new TimeTableXYDataset(); [EOL]     d.add(new Year(1999), 1.0, "Series 1"); [EOL]     assertEquals(d.getItemCount(), 1); [EOL]     assertEquals(d.getSeriesCount(), 1); [EOL]     d.add(new Year(2000), 2.0, "Series 2"); [EOL]     assertEquals(d.getItemCount(), 2); [EOL]     assertEquals(d.getSeriesCount(), 2); [EOL]     assertEquals(d.getYValue(0, 0), 1.0, DELTA); [EOL]     assertTrue(Double.isNaN(d.getYValue(0, 1))); [EOL]     assertTrue(Double.isNaN(d.getYValue(1, 0))); [EOL]     assertEquals(d.getYValue(1, 1), 2.0, DELTA); [EOL] } <line_num>: 87,99
public void testGetTimePeriod() { [EOL]     TimeTableXYDataset d = new TimeTableXYDataset(); [EOL]     d.add(new Year(1999), 1.0, "Series 1"); [EOL]     d.add(new Year(1998), 2.0, "Series 1"); [EOL]     d.add(new Year(1996), 3.0, "Series 1"); [EOL]     assertEquals(d.getTimePeriod(0), new Year(1996)); [EOL]     assertEquals(d.getTimePeriod(1), new Year(1998)); [EOL]     assertEquals(d.getTimePeriod(2), new Year(1999)); [EOL] } <line_num>: 104,112
public void testEquals() { [EOL]     TimeTableXYDataset d1 = new TimeTableXYDataset(); [EOL]     TimeTableXYDataset d2 = new TimeTableXYDataset(); [EOL]     assertTrue(d1.equals(d2)); [EOL]     assertTrue(d2.equals(d1)); [EOL]     d1.add(new Year(1999), 123.4, "S1"); [EOL]     assertFalse(d1.equals(d2)); [EOL]     d2.add(new Year(1999), 123.4, "S1"); [EOL]     assertTrue(d1.equals(d2)); [EOL]     d1.setDomainIsPointsInTime(!d1.getDomainIsPointsInTime()); [EOL]     assertFalse(d1.equals(d2)); [EOL]     d2.setDomainIsPointsInTime(!d2.getDomainIsPointsInTime()); [EOL]     assertTrue(d1.equals(d2)); [EOL]     d1 = new TimeTableXYDataset(TimeZone.getTimeZone("GMT")); [EOL]     d2 = new TimeTableXYDataset(TimeZone.getTimeZone("America/Los_Angeles")); [EOL]     assertFalse(d1.equals(d2)); [EOL] } <line_num>: 117,137
public void testClone() { [EOL]     TimeTableXYDataset d = new TimeTableXYDataset(); [EOL]     d.add(new Year(1999), 25.0, "Series"); [EOL]     TimeTableXYDataset clone = null; [EOL]     try { [EOL]         clone = (TimeTableXYDataset) d.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         assertTrue(false); [EOL]     } [EOL]     assertTrue(clone.equals(d)); [EOL]     clone.add(new Year(2004), 1.2, "SS"); [EOL]     assertFalse(clone.equals(d)); [EOL] } <line_num>: 142,159
public void testSerialization() { [EOL]     TimeTableXYDataset d1 = new TimeTableXYDataset(); [EOL]     d1.add(new Year(1999), 123.4, "S1"); [EOL]     TimeTableXYDataset d2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(d1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         d2 = (TimeTableXYDataset) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(d1.equals(d2)); [EOL] } <line_num>: 164,186
public void testClear() { [EOL]     TimeTableXYDataset d = new TimeTableXYDataset(); [EOL]     d.add(new Year(1999), 1.0, "Series 1"); [EOL]     assertEquals(d.getItemCount(), 1); [EOL]     assertEquals(d.getSeriesCount(), 1); [EOL]     d.add(new Year(2000), 2.0, "Series 2"); [EOL]     d.clear(); [EOL]     assertEquals(0, d.getItemCount()); [EOL]     assertEquals(0, d.getSeriesCount()); [EOL] } <line_num>: 191,202
