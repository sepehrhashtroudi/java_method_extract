public MovingAverageTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 75,77
public static Test suite() { [EOL]     return new TestSuite(MovingAverageTests.class); [EOL] } <line_num>: 66,68
public void test1() { [EOL]     TimeSeries source = createDailyTimeSeries1(); [EOL]     TimeSeries maverage = MovingAverage.createMovingAverage(source, "Moving Average", 3, 3); [EOL]     assertEquals(7, maverage.getItemCount()); [EOL]     double value = maverage.getValue(0).doubleValue(); [EOL]     assertEquals(14.1, value, EPSILON); [EOL]     value = maverage.getValue(1).doubleValue(); [EOL]     assertEquals(13.4, value, EPSILON); [EOL]     value = maverage.getValue(2).doubleValue(); [EOL]     assertEquals(14.433333333333, value, EPSILON); [EOL]     value = maverage.getValue(3).doubleValue(); [EOL]     assertEquals(14.933333333333, value, EPSILON); [EOL]     value = maverage.getValue(4).doubleValue(); [EOL]     assertEquals(19.8, value, EPSILON); [EOL]     value = maverage.getValue(5).doubleValue(); [EOL]     assertEquals(15.25, value, EPSILON); [EOL]     value = maverage.getValue(6).doubleValue(); [EOL]     assertEquals(12.5, value, EPSILON); [EOL] } <line_num>: 82,105
private TimeSeries createDailyTimeSeries1() { [EOL]     TimeSeries series = new TimeSeries("Series 1"); [EOL]     series.add(new Day(11, MonthConstants.AUGUST, 2003), 11.2); [EOL]     series.add(new Day(13, MonthConstants.AUGUST, 2003), 13.8); [EOL]     series.add(new Day(17, MonthConstants.AUGUST, 2003), 14.1); [EOL]     series.add(new Day(18, MonthConstants.AUGUST, 2003), 12.7); [EOL]     series.add(new Day(19, MonthConstants.AUGUST, 2003), 16.5); [EOL]     series.add(new Day(20, MonthConstants.AUGUST, 2003), 15.6); [EOL]     series.add(new Day(25, MonthConstants.AUGUST, 2003), 19.8); [EOL]     series.add(new Day(27, MonthConstants.AUGUST, 2003), 10.7); [EOL]     series.add(new Day(28, MonthConstants.AUGUST, 2003), 14.3); [EOL]     return series; [EOL] } <line_num>: 112,126
