public HistogramBinTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 75,77
public static Test suite() { [EOL]     return new TestSuite(HistogramBinTests.class); [EOL] } <line_num>: 66,68
public void testEquals() { [EOL]     double start = 10.0; [EOL]     double end = 20.0; [EOL]     HistogramBin b1 = new HistogramBin(start, end); [EOL]     HistogramBin b2 = new HistogramBin(start, end); [EOL]     assertTrue(b1.equals(b2)); [EOL]     assertTrue(b2.equals(b1)); [EOL] } <line_num>: 82,92
public void testCloning() { [EOL]     double start = 10.0; [EOL]     double end = 20.0; [EOL]     HistogramBin b1 = new HistogramBin(start, end); [EOL]     HistogramBin b2 = null; [EOL]     try { [EOL]         b2 = (HistogramBin) b1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         System.err.println("Failed to clone."); [EOL]     } [EOL]     assertTrue(b1 != b2); [EOL]     assertTrue(b1.getClass() == b2.getClass()); [EOL]     assertTrue(b1.equals(b2)); [EOL] } <line_num>: 97,111
public void testSerialization() { [EOL]     double start = 10.0; [EOL]     double end = 20.0; [EOL]     HistogramBin b1 = new HistogramBin(start, end); [EOL]     HistogramBin b2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(b1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         b2 = (HistogramBin) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         System.out.println(e.toString()); [EOL]     } [EOL]     assertEquals(b1, b2); [EOL] } <line_num>: 116,140
