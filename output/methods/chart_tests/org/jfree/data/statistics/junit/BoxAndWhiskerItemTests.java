public BoxAndWhiskerItemTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 76,78
public static Test suite() { [EOL]     return new TestSuite(BoxAndWhiskerItemTests.class); [EOL] } <line_num>: 67,69
public void testEquals() { [EOL]     BoxAndWhiskerItem i1 = new BoxAndWhiskerItem(new Double(1.0), new Double(2.0), new Double(3.0), new Double(4.0), new Double(5.0), new Double(6.0), new Double(7.0), new Double(8.0), new ArrayList()); [EOL]     BoxAndWhiskerItem i2 = new BoxAndWhiskerItem(new Double(1.0), new Double(2.0), new Double(3.0), new Double(4.0), new Double(5.0), new Double(6.0), new Double(7.0), new Double(8.0), new ArrayList()); [EOL]     assertTrue(i1.equals(i2)); [EOL]     assertTrue(i2.equals(i1)); [EOL] } <line_num>: 83,98
public void testSerialization() { [EOL]     BoxAndWhiskerItem i1 = new BoxAndWhiskerItem(new Double(1.0), new Double(2.0), new Double(3.0), new Double(4.0), new Double(5.0), new Double(6.0), new Double(7.0), new Double(8.0), new ArrayList()); [EOL]     BoxAndWhiskerItem i2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(i1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         i2 = (BoxAndWhiskerItem) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         System.out.println(e.toString()); [EOL]     } [EOL]     assertEquals(i1, i2); [EOL] } <line_num>: 103,129
