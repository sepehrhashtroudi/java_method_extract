public TaskSeriesTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 77,79
public static Test suite() { [EOL]     return new TestSuite(TaskSeriesTests.class); [EOL] } <line_num>: 68,70
public void testEquals() { [EOL]     TaskSeries s1 = new TaskSeries("S"); [EOL]     s1.add(new Task("T1", new Date(1), new Date(2))); [EOL]     s1.add(new Task("T2", new Date(11), new Date(22))); [EOL]     TaskSeries s2 = new TaskSeries("S"); [EOL]     s2.add(new Task("T1", new Date(1), new Date(2))); [EOL]     s2.add(new Task("T2", new Date(11), new Date(22))); [EOL]     assertTrue(s1.equals(s2)); [EOL]     assertTrue(s2.equals(s1)); [EOL]     s1.add(new Task("T3", new Date(22), new Date(33))); [EOL]     assertFalse(s1.equals(s2)); [EOL]     s2.add(new Task("T3", new Date(22), new Date(33))); [EOL]     assertTrue(s1.equals(s2)); [EOL] } <line_num>: 84,100
public void testCloning() { [EOL]     TaskSeries s1 = new TaskSeries("S"); [EOL]     s1.add(new Task("T1", new Date(1), new Date(2))); [EOL]     s1.add(new Task("T2", new Date(11), new Date(22))); [EOL]     TaskSeries s2 = null; [EOL]     try { [EOL]         s2 = (TaskSeries) s1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         System.err.println("Failed to clone."); [EOL]     } [EOL]     assertTrue(s1 != s2); [EOL]     assertTrue(s1.getClass() == s2.getClass()); [EOL]     assertTrue(s1.equals(s2)); [EOL] } <line_num>: 105,119
public void testSerialization() { [EOL]     TaskSeries s1 = new TaskSeries("S"); [EOL]     s1.add(new Task("T1", new Date(1), new Date(2))); [EOL]     s1.add(new Task("T2", new Date(11), new Date(22))); [EOL]     TaskSeries s2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(s1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         s2 = (TaskSeries) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         System.out.println(e.toString()); [EOL]     } [EOL]     assertEquals(s1, s2); [EOL] } <line_num>: 124,148
public void testGetTask() { [EOL]     TaskSeries s1 = new TaskSeries("S"); [EOL]     s1.add(new Task("T1", new Date(1), new Date(2))); [EOL]     s1.add(new Task("T2", new Date(11), new Date(22))); [EOL]     Task t1 = s1.get("T1"); [EOL]     assertTrue(t1.equals(new Task("T1", new Date(1), new Date(2)))); [EOL]     Task t2 = s1.get("T2"); [EOL]     assertTrue(t2.equals(new Task("T2", new Date(11), new Date(22)))); [EOL]     Task t3 = s1.get("T3"); [EOL]     assertTrue(t3 == null); [EOL] } <line_num>: 153,163
