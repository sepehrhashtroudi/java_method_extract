public TaskTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 77,79
public static Test suite() { [EOL]     return new TestSuite(TaskTests.class); [EOL] } <line_num>: 68,70
public void testEquals() { [EOL]     Task t1 = new Task("T", new Date(1), new Date(2)); [EOL]     Task t2 = new Task("T", new Date(1), new Date(2)); [EOL]     assertTrue(t1.equals(t2)); [EOL]     assertTrue(t2.equals(t1)); [EOL]     t1.setDescription("X"); [EOL]     assertFalse(t1.equals(t2)); [EOL]     t2.setDescription("X"); [EOL]     assertTrue(t1.equals(t2)); [EOL]     t1.setDuration(new SimpleTimePeriod(new Date(2), new Date(3))); [EOL]     assertFalse(t1.equals(t2)); [EOL]     t2.setDuration(new SimpleTimePeriod(new Date(2), new Date(3))); [EOL]     assertTrue(t1.equals(t2)); [EOL]     t1.setPercentComplete(0.5); [EOL]     assertFalse(t1.equals(t2)); [EOL]     t2.setPercentComplete(0.5); [EOL]     assertTrue(t1.equals(t2)); [EOL]     t1.addSubtask(new Task("T", new Date(22), new Date(33))); [EOL]     assertFalse(t1.equals(t2)); [EOL]     t2.addSubtask(new Task("T", new Date(22), new Date(33))); [EOL]     assertTrue(t1.equals(t2)); [EOL] } <line_num>: 84,112
public void testCloning() { [EOL]     Task t1 = new Task("T", new Date(1), new Date(2)); [EOL]     Task t2 = null; [EOL]     try { [EOL]         t2 = (Task) t1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         System.err.println("Failed to clone."); [EOL]     } [EOL]     assertTrue(t1 != t2); [EOL]     assertTrue(t1.getClass() == t2.getClass()); [EOL]     assertTrue(t1.equals(t2)); [EOL] } <line_num>: 117,129
public void testSerialization() { [EOL]     Task t1 = new Task("T", new Date(1), new Date(2)); [EOL]     Task t2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(t1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         t2 = (Task) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         System.out.println(e.toString()); [EOL]     } [EOL]     assertEquals(t1, t2); [EOL] } <line_num>: 134,156
public void testGetSubTaskCount() { [EOL]     Task t1 = new Task("T", new Date(100), new Date(200)); [EOL]     assertEquals(0, t1.getSubtaskCount()); [EOL]     t1.addSubtask(new Task("S1", new Date(100), new Date(110))); [EOL]     assertEquals(1, t1.getSubtaskCount()); [EOL]     Task s2 = new Task("S2", new Date(111), new Date(120)); [EOL]     t1.addSubtask(s2); [EOL]     assertEquals(2, t1.getSubtaskCount()); [EOL]     t1.addSubtask(new Task("S3", new Date(121), new Date(130))); [EOL]     assertEquals(3, t1.getSubtaskCount()); [EOL]     t1.removeSubtask(s2); [EOL]     assertEquals(2, t1.getSubtaskCount()); [EOL] } <line_num>: 161,173
