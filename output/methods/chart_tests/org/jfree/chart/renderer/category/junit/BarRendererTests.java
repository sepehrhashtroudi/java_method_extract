public BarRendererTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 100,102
public static Test suite() { [EOL]     return new TestSuite(BarRendererTests.class); [EOL] } <line_num>: 91,93
public void testEquals() { [EOL]     BarRenderer r1 = new BarRenderer(); [EOL]     BarRenderer r2 = new BarRenderer(); [EOL]     assertTrue(r1.equals(r2)); [EOL]     assertTrue(r2.equals(r1)); [EOL]     r1.setBase(0.123); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setBase(0.123); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setItemMargin(0.22); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setItemMargin(0.22); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setDrawBarOutline(!r1.isDrawBarOutline()); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setDrawBarOutline(!r2.isDrawBarOutline()); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setMaximumBarWidth(0.11); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setMaximumBarWidth(0.11); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setMinimumBarLength(0.04); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setMinimumBarLength(0.04); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setGradientPaintTransformer(new StandardGradientPaintTransformer(GradientPaintTransformType.CENTER_VERTICAL)); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setGradientPaintTransformer(new StandardGradientPaintTransformer(GradientPaintTransformType.CENTER_VERTICAL)); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setPositiveItemLabelPositionFallback(new ItemLabelPosition(ItemLabelAnchor.INSIDE1, TextAnchor.CENTER)); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setPositiveItemLabelPositionFallback(new ItemLabelPosition(ItemLabelAnchor.INSIDE1, TextAnchor.CENTER)); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setNegativeItemLabelPositionFallback(new ItemLabelPosition(ItemLabelAnchor.INSIDE1, TextAnchor.CENTER)); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setNegativeItemLabelPositionFallback(new ItemLabelPosition(ItemLabelAnchor.INSIDE1, TextAnchor.CENTER)); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setBarPainter(new GradientBarPainter(0.1, 0.2, 0.3)); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setBarPainter(new GradientBarPainter(0.1, 0.2, 0.3)); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setShadowVisible(false); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setShadowVisible(false); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setShadowPaint(Color.red); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setShadowPaint(Color.red); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setShadowXOffset(3.3); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setShadowXOffset(3.3); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setShadowYOffset(3.3); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setShadowYOffset(3.3); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 107,196
public void testHashcode() { [EOL]     BarRenderer r1 = new BarRenderer(); [EOL]     BarRenderer r2 = new BarRenderer(); [EOL]     assertTrue(r1.equals(r2)); [EOL]     int h1 = r1.hashCode(); [EOL]     int h2 = r2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 201,208
public void testCloning() { [EOL]     BarRenderer r1 = new BarRenderer(); [EOL]     r1.setBaseItemLabelGenerator(new StandardCategoryItemLabelGenerator()); [EOL]     r1.setBarPainter(new GradientBarPainter(0.11, 0.22, 0.33)); [EOL]     BarRenderer r2 = null; [EOL]     try { [EOL]         r2 = (BarRenderer) r1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(r1 != r2); [EOL]     assertTrue(r1.getClass() == r2.getClass()); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 213,227
public void testPublicCloneable() { [EOL]     BarRenderer r1 = new BarRenderer(); [EOL]     assertTrue(r1 instanceof PublicCloneable); [EOL] } <line_num>: 232,235
public void testSerialization() { [EOL]     BarRenderer r1 = new BarRenderer(); [EOL]     BarRenderer r2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(r1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         r2 = (BarRenderer) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(r1, r2); [EOL] } <line_num>: 240,261
public void testEventNotification() { [EOL]     RendererChangeDetector detector = new RendererChangeDetector(); [EOL]     BarRenderer r1 = new BarRenderer(); [EOL]     r1.addChangeListener(detector); [EOL]     detector.setNotified(false); [EOL]     r1.setBasePaint(Color.red); [EOL]     assertTrue(detector.getNotified()); [EOL] } <line_num>: 266,276
public void testGetLegendItem() { [EOL]     DefaultCategoryDataset dataset = new DefaultCategoryDataset(); [EOL]     dataset.addValue(21.0, "R1", "C1"); [EOL]     BarRenderer r = new BarRenderer(); [EOL]     CategoryPlot plot = new CategoryPlot(dataset, new CategoryAxis("x"), new NumberAxis("y"), r); [EOL]     new JFreeChart(plot); [EOL]     LegendItem li = r.getLegendItem(0, 0); [EOL]     assertNotNull(li); [EOL]     r.setSeriesVisibleInLegend(0, Boolean.FALSE); [EOL]     li = r.getLegendItem(0, 0); [EOL]     assertNull(li); [EOL] } <line_num>: 281,293
public void testGetLegendItemSeriesIndex() { [EOL]     DefaultCategoryDataset dataset0 = new DefaultCategoryDataset(); [EOL]     dataset0.addValue(21.0, "R1", "C1"); [EOL]     dataset0.addValue(22.0, "R2", "C1"); [EOL]     DefaultCategoryDataset dataset1 = new DefaultCategoryDataset(); [EOL]     dataset1.addValue(23.0, "R3", "C1"); [EOL]     dataset1.addValue(24.0, "R4", "C1"); [EOL]     dataset1.addValue(25.0, "R5", "C1"); [EOL]     BarRenderer r = new BarRenderer(); [EOL]     CategoryPlot plot = new CategoryPlot(dataset0, new CategoryAxis("x"), new NumberAxis("y"), r); [EOL]     plot.setDataset(1, dataset1); [EOL]     new JFreeChart(plot); [EOL]     LegendItem li = r.getLegendItem(1, 2); [EOL]     assertEquals("R5", li.getLabel()); [EOL]     assertEquals(1, li.getDatasetIndex()); [EOL]     assertEquals(2, li.getSeriesIndex()); [EOL] } <line_num>: 299,316
public void testFindRangeBounds() { [EOL]     BarRenderer r = new BarRenderer(); [EOL]     assertNull(r.findRangeBounds(null)); [EOL]     DefaultCategoryDataset dataset = new DefaultCategoryDataset(); [EOL]     assertNull(r.findRangeBounds(dataset)); [EOL]     dataset.addValue(1.0, "R1", "C1"); [EOL]     assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset)); [EOL]     r.setIncludeBaseInRange(false); [EOL]     assertEquals(new Range(1.0, 1.0), r.findRangeBounds(dataset)); [EOL]     r.setIncludeBaseInRange(true); [EOL]     dataset.addValue(-2.0, "R1", "C2"); [EOL]     assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset)); [EOL]     dataset.addValue(null, "R1", "C3"); [EOL]     assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset)); [EOL] } <line_num>: 321,340
