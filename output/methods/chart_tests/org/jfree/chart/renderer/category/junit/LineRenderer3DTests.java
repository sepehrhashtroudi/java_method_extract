public LineRenderer3DTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 79,81
public static Test suite() { [EOL]     return new TestSuite(LineRenderer3DTests.class); [EOL] } <line_num>: 70,72
public void testEquals() { [EOL]     LineRenderer3D r1 = new LineRenderer3D(); [EOL]     LineRenderer3D r2 = new LineRenderer3D(); [EOL]     assertEquals(r1, r2); [EOL]     r1.setXOffset(99.9); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setXOffset(99.9); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setYOffset(111.1); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setYOffset(111.1); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setWallPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.blue)); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setWallPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.blue)); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 86,107
public void testHashcode() { [EOL]     LineRenderer3D r1 = new LineRenderer3D(); [EOL]     LineRenderer3D r2 = new LineRenderer3D(); [EOL]     assertTrue(r1.equals(r2)); [EOL]     int h1 = r1.hashCode(); [EOL]     int h2 = r2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 112,119
public void testCloning() { [EOL]     LineRenderer3D r1 = new LineRenderer3D(); [EOL]     LineRenderer3D r2 = null; [EOL]     try { [EOL]         r2 = (LineRenderer3D) r1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(r1 != r2); [EOL]     assertTrue(r1.getClass() == r2.getClass()); [EOL]     assertTrue(r1.equals(r2)); [EOL]     assertTrue(checkIndependence(r1, r2)); [EOL] } <line_num>: 124,139
public void testPublicCloneable() { [EOL]     LineRenderer3D r1 = new LineRenderer3D(); [EOL]     assertTrue(r1 instanceof PublicCloneable); [EOL] } <line_num>: 144,147
private boolean checkIndependence(LineRenderer3D r1, LineRenderer3D r2) { [EOL]     boolean b0 = r1.equals(r2); [EOL]     r1.setBaseLinesVisible(!r1.getBaseLinesVisible()); [EOL]     if (r1.equals(r2)) { [EOL]         return false; [EOL]     } [EOL]     r2.setBaseLinesVisible(r1.getBaseLinesVisible()); [EOL]     if (!r1.equals(r2)) { [EOL]         return false; [EOL]     } [EOL]     r1.setSeriesLinesVisible(1, true); [EOL]     if (r1.equals(r2)) { [EOL]         return false; [EOL]     } [EOL]     r2.setSeriesLinesVisible(1, true); [EOL]     if (!r1.equals(r2)) { [EOL]         return false; [EOL]     } [EOL]     r1.setBaseShapesVisible(!r1.getBaseShapesVisible()); [EOL]     if (r1.equals(r2)) { [EOL]         return false; [EOL]     } [EOL]     r2.setBaseShapesVisible(r1.getBaseShapesVisible()); [EOL]     if (!r1.equals(r2)) { [EOL]         return false; [EOL]     } [EOL]     r1.setSeriesShapesVisible(1, true); [EOL]     if (r1.equals(r2)) { [EOL]         return false; [EOL]     } [EOL]     r2.setSeriesShapesVisible(1, true); [EOL]     if (!r1.equals(r2)) { [EOL]         return false; [EOL]     } [EOL]     r1.setSeriesShapesFilled(0, false); [EOL]     r2.setSeriesShapesFilled(0, true); [EOL]     boolean b7 = !r1.equals(r2); [EOL]     r2.setSeriesShapesFilled(0, false); [EOL]     boolean b8 = (r1.equals(r2)); [EOL]     r1.setBaseShapesFilled(false); [EOL]     r2.setBaseShapesFilled(true); [EOL]     boolean b9 = !r1.equals(r2); [EOL]     r2.setBaseShapesFilled(false); [EOL]     boolean b10 = (r1.equals(r2)); [EOL]     return b0 && b7 && b8 && b9 && b10; [EOL] } <line_num>: 157,213
public void testSerialization() { [EOL]     LineRenderer3D r1 = new LineRenderer3D(); [EOL]     LineRenderer3D r2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(r1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         r2 = (LineRenderer3D) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(r1, r2); [EOL] } <line_num>: 218,236
