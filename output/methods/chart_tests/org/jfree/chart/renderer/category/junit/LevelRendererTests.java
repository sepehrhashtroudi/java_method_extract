public LevelRendererTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 83,85
public static Test suite() { [EOL]     return new TestSuite(LevelRendererTests.class); [EOL] } <line_num>: 74,76
public void testEquals() { [EOL]     LevelRenderer r1 = new LevelRenderer(); [EOL]     LevelRenderer r2 = new LevelRenderer(); [EOL]     assertTrue(r1.equals(r2)); [EOL]     assertTrue(r2.equals(r1)); [EOL]     r1.setItemMargin(0.123); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setItemMargin(0.123); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setMaximumItemWidth(0.234); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setMaximumItemWidth(0.234); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 90,106
public void testHashcode() { [EOL]     LevelRenderer r1 = new LevelRenderer(); [EOL]     LevelRenderer r2 = new LevelRenderer(); [EOL]     assertTrue(r1.equals(r2)); [EOL]     int h1 = r1.hashCode(); [EOL]     int h2 = r2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 111,118
public void testCloning() { [EOL]     LevelRenderer r1 = new LevelRenderer(); [EOL]     r1.setItemMargin(0.123); [EOL]     r1.setMaximumItemWidth(0.234); [EOL]     LevelRenderer r2 = null; [EOL]     try { [EOL]         r2 = (LevelRenderer) r1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         System.err.println("Failed to clone."); [EOL]     } [EOL]     assertTrue(r1 != r2); [EOL]     assertTrue(r1.getClass() == r2.getClass()); [EOL]     assertTrue(r1.equals(r2)); [EOL]     assertTrue(checkIndependence(r1, r2)); [EOL] } <line_num>: 123,140
public void testPublicCloneable() { [EOL]     LevelRenderer r1 = new LevelRenderer(); [EOL]     assertTrue(r1 instanceof PublicCloneable); [EOL] } <line_num>: 145,148
private boolean checkIndependence(LevelRenderer r1, LevelRenderer r2) { [EOL]     boolean b0 = r1.equals(r2); [EOL]     r1.setItemMargin(0.0); [EOL]     boolean b1 = !r1.equals(r2); [EOL]     r2.setItemMargin(0.0); [EOL]     boolean b2 = r1.equals(r2); [EOL]     return b0 && b1 && b2; [EOL] } <line_num>: 158,171
public void testSerialization() { [EOL]     LevelRenderer r1 = new LevelRenderer(); [EOL]     LevelRenderer r2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(r1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         r2 = (LevelRenderer) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(r1, r2); [EOL] } <line_num>: 176,198
public void testDrawWithNullInfo() { [EOL]     boolean success = false; [EOL]     try { [EOL]         DefaultCategoryDataset dataset = new DefaultCategoryDataset(); [EOL]         dataset.addValue(1.0, "S1", "C1"); [EOL]         CategoryPlot plot = new CategoryPlot(dataset, new CategoryAxis("Category"), new NumberAxis("Value"), new LevelRenderer()); [EOL]         JFreeChart chart = new JFreeChart(plot); [EOL]         chart.createBufferedImage(300, 200, null); [EOL]         success = true; [EOL]     } catch (NullPointerException e) { [EOL]         e.printStackTrace(); [EOL]         success = false; [EOL]     } [EOL]     assertTrue(success); [EOL] } <line_num>: 204,222
public void testGetLegendItemSeriesIndex() { [EOL]     DefaultCategoryDataset dataset0 = new DefaultCategoryDataset(); [EOL]     dataset0.addValue(21.0, "R1", "C1"); [EOL]     dataset0.addValue(22.0, "R2", "C1"); [EOL]     DefaultCategoryDataset dataset1 = new DefaultCategoryDataset(); [EOL]     dataset1.addValue(23.0, "R3", "C1"); [EOL]     dataset1.addValue(24.0, "R4", "C1"); [EOL]     dataset1.addValue(25.0, "R5", "C1"); [EOL]     LevelRenderer r = new LevelRenderer(); [EOL]     CategoryPlot plot = new CategoryPlot(dataset0, new CategoryAxis("x"), new NumberAxis("y"), r); [EOL]     plot.setDataset(1, dataset1); [EOL]     new JFreeChart(plot); [EOL]     LegendItem li = r.getLegendItem(1, 2); [EOL]     assertEquals("R5", li.getLabel()); [EOL]     assertEquals(1, li.getDatasetIndex()); [EOL]     assertEquals(2, li.getSeriesIndex()); [EOL] } <line_num>: 228,245
