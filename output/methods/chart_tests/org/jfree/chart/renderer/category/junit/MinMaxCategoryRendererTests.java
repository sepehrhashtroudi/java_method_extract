public MinMaxCategoryRendererTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 86,88
public static Test suite() { [EOL]     return new TestSuite(MinMaxCategoryRendererTests.class); [EOL] } <line_num>: 77,79
public void testEquals() { [EOL]     MinMaxCategoryRenderer r1 = new MinMaxCategoryRenderer(); [EOL]     MinMaxCategoryRenderer r2 = new MinMaxCategoryRenderer(); [EOL]     assertEquals(r1, r2); [EOL]     r1.setDrawLines(true); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setDrawLines(true); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setGroupPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow)); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setGroupPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow)); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setGroupStroke(new BasicStroke(1.2f)); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setGroupStroke(new BasicStroke(1.2f)); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 93,114
public void testHashcode() { [EOL]     MinMaxCategoryRenderer r1 = new MinMaxCategoryRenderer(); [EOL]     MinMaxCategoryRenderer r2 = new MinMaxCategoryRenderer(); [EOL]     assertTrue(r1.equals(r2)); [EOL]     int h1 = r1.hashCode(); [EOL]     int h2 = r2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 119,126
public void testCloning() { [EOL]     MinMaxCategoryRenderer r1 = new MinMaxCategoryRenderer(); [EOL]     MinMaxCategoryRenderer r2 = null; [EOL]     try { [EOL]         r2 = (MinMaxCategoryRenderer) r1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         System.err.println("Failed to clone."); [EOL]     } [EOL]     assertTrue(r1 != r2); [EOL]     assertTrue(r1.getClass() == r2.getClass()); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 131,143
public void testPublicCloneable() { [EOL]     MinMaxCategoryRenderer r1 = new MinMaxCategoryRenderer(); [EOL]     assertTrue(r1 instanceof PublicCloneable); [EOL] } <line_num>: 148,151
public void testSerialization() { [EOL]     MinMaxCategoryRenderer r1 = new MinMaxCategoryRenderer(); [EOL]     MinMaxCategoryRenderer r2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(r1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         r2 = (MinMaxCategoryRenderer) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         System.out.println(e.toString()); [EOL]     } [EOL]     assertEquals(r1, r2); [EOL] } <line_num>: 156,177
public void testDrawWithNullInfo() { [EOL]     boolean success = false; [EOL]     try { [EOL]         DefaultCategoryDataset dataset = new DefaultCategoryDataset(); [EOL]         dataset.addValue(1.0, "S1", "C1"); [EOL]         CategoryPlot plot = new CategoryPlot(dataset, new CategoryAxis("Category"), new NumberAxis("Value"), new MinMaxCategoryRenderer()); [EOL]         JFreeChart chart = new JFreeChart(plot); [EOL]         chart.createBufferedImage(300, 200, null); [EOL]         success = true; [EOL]     } catch (NullPointerException e) { [EOL]         e.printStackTrace(); [EOL]         success = false; [EOL]     } [EOL]     assertTrue(success); [EOL] } <line_num>: 183,201
