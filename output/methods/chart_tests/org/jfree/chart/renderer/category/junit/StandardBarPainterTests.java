public StandardBarPainterTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 76,78
public static Test suite() { [EOL]     return new TestSuite(StandardBarPainterTests.class); [EOL] } <line_num>: 67,69
public void testEquals() { [EOL]     StandardBarPainter p1 = new StandardBarPainter(); [EOL]     StandardBarPainter p2 = new StandardBarPainter(); [EOL]     assertEquals(p1, p2); [EOL] } <line_num>: 83,87
public void testHashcode() { [EOL]     StandardBarPainter p1 = new StandardBarPainter(); [EOL]     StandardBarPainter p2 = new StandardBarPainter(); [EOL]     assertTrue(p1.equals(p2)); [EOL]     int h1 = p1.hashCode(); [EOL]     int h2 = p2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 92,99
public void testCloning() { [EOL]     StandardBarPainter p1 = new StandardBarPainter(); [EOL]     assertFalse(p1 instanceof Cloneable); [EOL]     assertFalse(p1 instanceof PublicCloneable); [EOL] } <line_num>: 105,109
public void testSerialization() { [EOL]     StandardBarPainter p1 = new StandardBarPainter(); [EOL]     StandardBarPainter p2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(p1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         p2 = (StandardBarPainter) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(p1, p2); [EOL] } <line_num>: 114,131
