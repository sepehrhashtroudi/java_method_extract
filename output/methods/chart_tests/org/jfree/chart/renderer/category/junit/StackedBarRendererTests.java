public StackedBarRendererTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 79,81
public static Test suite() { [EOL]     return new TestSuite(StackedBarRendererTests.class); [EOL] } <line_num>: 70,72
public void testEquals() { [EOL]     StackedBarRenderer r1 = new StackedBarRenderer(); [EOL]     StackedBarRenderer r2 = new StackedBarRenderer(); [EOL]     assertTrue(r1.equals(r2)); [EOL]     assertTrue(r2.equals(r1)); [EOL]     r1.setRenderAsPercentages(true); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setRenderAsPercentages(true); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 86,96
public void testHashCode() { [EOL]     StackedBarRenderer r1 = new StackedBarRenderer(); [EOL]     StackedBarRenderer r2 = new StackedBarRenderer(); [EOL]     assertTrue(r1.equals(r2)); [EOL]     int h1 = r1.hashCode(); [EOL]     int h2 = r2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 101,108
public void testCloning() { [EOL]     StackedBarRenderer r1 = new StackedBarRenderer(); [EOL]     StackedBarRenderer r2 = null; [EOL]     try { [EOL]         r2 = (StackedBarRenderer) r1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         System.err.println("Failed to clone."); [EOL]     } [EOL]     assertTrue(r1 != r2); [EOL]     assertTrue(r1.getClass() == r2.getClass()); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 113,125
public void testPublicCloneable() { [EOL]     StackedBarRenderer r1 = new StackedBarRenderer(); [EOL]     assertTrue(r1 instanceof PublicCloneable); [EOL] } <line_num>: 130,133
public void testSerialization() { [EOL]     StackedBarRenderer r1 = new StackedBarRenderer(); [EOL]     StackedBarRenderer r2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(r1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         r2 = (StackedBarRenderer) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         System.out.println(e.toString()); [EOL]     } [EOL]     assertEquals(r1, r2); [EOL] } <line_num>: 138,159
public void testFindRangeBounds() { [EOL]     StackedBarRenderer r = new StackedBarRenderer(); [EOL]     assertNull(r.findRangeBounds(null)); [EOL]     DefaultCategoryDataset dataset = new DefaultCategoryDataset(); [EOL]     assertNull(r.findRangeBounds(dataset)); [EOL]     dataset.addValue(1.0, "R1", "C1"); [EOL]     assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset)); [EOL]     dataset.addValue(-2.0, "R1", "C2"); [EOL]     assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset)); [EOL]     dataset.addValue(null, "R1", "C3"); [EOL]     assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset)); [EOL]     dataset.addValue(2.0, "R2", "C1"); [EOL]     assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset)); [EOL]     dataset.addValue(null, "R2", "C2"); [EOL]     assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset)); [EOL] } <line_num>: 164,186
