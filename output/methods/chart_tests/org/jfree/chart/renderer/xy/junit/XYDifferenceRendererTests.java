public XYDifferenceRendererTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 91,93
public static Test suite() { [EOL]     return new TestSuite(XYDifferenceRendererTests.class); [EOL] } <line_num>: 82,84
public void testEquals() { [EOL]     XYDifferenceRenderer r1 = new XYDifferenceRenderer(Color.red, Color.blue, false); [EOL]     XYDifferenceRenderer r2 = new XYDifferenceRenderer(Color.red, Color.blue, false); [EOL]     assertEquals(r1, r2); [EOL]     r1.setPositivePaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.blue)); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setPositivePaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.blue)); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setNegativePaint(new GradientPaint(1.0f, 2.0f, Color.yellow, 3.0f, 4.0f, Color.blue)); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setNegativePaint(new GradientPaint(1.0f, 2.0f, Color.yellow, 3.0f, 4.0f, Color.blue)); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1 = new XYDifferenceRenderer(Color.green, Color.yellow, true); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2 = new XYDifferenceRenderer(Color.green, Color.yellow, true); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setLegendLine(new Line2D.Double(1.0, 2.0, 3.0, 4.0)); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setLegendLine(new Line2D.Double(1.0, 2.0, 3.0, 4.0)); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setRoundXCoordinates(true); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setRoundXCoordinates(true); [EOL]     assertTrue(r1.equals(r2)); [EOL]     assertFalse(r1.equals(null)); [EOL] } <line_num>: 98,140
public void testHashcode() { [EOL]     XYDifferenceRenderer r1 = new XYDifferenceRenderer(Color.red, Color.blue, false); [EOL]     XYDifferenceRenderer r2 = new XYDifferenceRenderer(Color.red, Color.blue, false); [EOL]     assertTrue(r1.equals(r2)); [EOL]     int h1 = r1.hashCode(); [EOL]     int h2 = r2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 145,154
public void testCloning() { [EOL]     XYDifferenceRenderer r1 = new XYDifferenceRenderer(Color.red, Color.blue, false); [EOL]     XYDifferenceRenderer r2 = null; [EOL]     try { [EOL]         r2 = (XYDifferenceRenderer) r1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(r1 != r2); [EOL]     assertTrue(r1.getClass() == r2.getClass()); [EOL]     assertTrue(r1.equals(r2)); [EOL]     Shape s = r1.getLegendLine(); [EOL]     if (s instanceof Line2D) { [EOL]         Line2D l = (Line2D) s; [EOL]         l.setLine(1.0, 2.0, 3.0, 4.0); [EOL]         assertFalse(r1.equals(r2)); [EOL]     } [EOL] } <line_num>: 159,180
public void testPublicCloneable() { [EOL]     XYDifferenceRenderer r1 = new XYDifferenceRenderer(); [EOL]     assertTrue(r1 instanceof PublicCloneable); [EOL] } <line_num>: 185,188
public void testSerialization() { [EOL]     XYDifferenceRenderer r1 = new XYDifferenceRenderer(Color.red, Color.blue, false); [EOL]     XYDifferenceRenderer r2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(r1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         r2 = (XYDifferenceRenderer) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(r1, r2); [EOL] } <line_num>: 193,215
public void testGetLegendItemSeriesIndex() { [EOL]     XYSeriesCollection d1 = new XYSeriesCollection(); [EOL]     XYSeries s1 = new XYSeries("S1"); [EOL]     s1.add(1.0, 1.1); [EOL]     XYSeries s2 = new XYSeries("S2"); [EOL]     s2.add(1.0, 1.1); [EOL]     d1.addSeries(s1); [EOL]     d1.addSeries(s2); [EOL]     XYSeriesCollection d2 = new XYSeriesCollection(); [EOL]     XYSeries s3 = new XYSeries("S3"); [EOL]     s3.add(1.0, 1.1); [EOL]     XYSeries s4 = new XYSeries("S4"); [EOL]     s4.add(1.0, 1.1); [EOL]     XYSeries s5 = new XYSeries("S5"); [EOL]     s5.add(1.0, 1.1); [EOL]     d2.addSeries(s3); [EOL]     d2.addSeries(s4); [EOL]     d2.addSeries(s5); [EOL]     XYDifferenceRenderer r = new XYDifferenceRenderer(); [EOL]     XYPlot plot = new XYPlot(d1, new NumberAxis("x"), new NumberAxis("y"), r); [EOL]     plot.setDataset(1, d2); [EOL]     new JFreeChart(plot); [EOL]     LegendItem li = r.getLegendItem(1, 2); [EOL]     assertEquals("S5", li.getLabel()); [EOL]     assertEquals(1, li.getDatasetIndex()); [EOL]     assertEquals(2, li.getSeriesIndex()); [EOL] } <line_num>: 221,250
