public StackedXYBarRendererTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 88,90
public static Test suite() { [EOL]     return new TestSuite(StackedXYBarRendererTests.class); [EOL] } <line_num>: 79,81
public void testEquals() { [EOL]     StackedXYBarRenderer r1 = new StackedXYBarRenderer(); [EOL]     StackedXYBarRenderer r2 = new StackedXYBarRenderer(); [EOL]     assertTrue(r1.equals(r2)); [EOL]     assertTrue(r2.equals(r1)); [EOL]     r1.setRenderAsPercentages(true); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setRenderAsPercentages(true); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 95,105
public void testHashcode() { [EOL]     StackedXYBarRenderer r1 = new StackedXYBarRenderer(); [EOL]     StackedXYBarRenderer r2 = new StackedXYBarRenderer(); [EOL]     assertTrue(r1.equals(r2)); [EOL]     int h1 = r1.hashCode(); [EOL]     int h2 = r2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL]     r1.setRenderAsPercentages(true); [EOL]     h1 = r1.hashCode(); [EOL]     h2 = r2.hashCode(); [EOL]     assertFalse(h1 == h2); [EOL] } <line_num>: 110,122
public void testCloning() { [EOL]     StackedXYBarRenderer r1 = new StackedXYBarRenderer(); [EOL]     StackedXYBarRenderer r2 = null; [EOL]     try { [EOL]         r2 = (StackedXYBarRenderer) r1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(r1 != r2); [EOL]     assertTrue(r1.getClass() == r2.getClass()); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 127,139
public void testPublicCloneable() { [EOL]     StackedXYBarRenderer r1 = new StackedXYBarRenderer(); [EOL]     assertTrue(r1 instanceof PublicCloneable); [EOL] } <line_num>: 144,147
public void testSerialization() { [EOL]     StackedXYBarRenderer r1 = new StackedXYBarRenderer(); [EOL]     r1.setSeriesPaint(0, new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow)); [EOL]     StackedXYBarRenderer r2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(r1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         r2 = (StackedXYBarRenderer) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(r1, r2); [EOL] } <line_num>: 152,172
public void testFindDomainBounds() { [EOL]     TableXYDataset dataset = RendererXYPackageTests.createTestTableXYDataset(); [EOL]     JFreeChart chart = ChartFactory.createStackedXYAreaChart("Test Chart", "X", "Y", dataset, false); [EOL]     XYPlot plot = (XYPlot) chart.getPlot(); [EOL]     plot.setRenderer(new StackedXYBarRenderer()); [EOL]     NumberAxis domainAxis = (NumberAxis) plot.getDomainAxis(); [EOL]     domainAxis.setAutoRangeIncludesZero(false); [EOL]     Range bounds = domainAxis.getRange(); [EOL]     assertFalse(bounds.contains(0.3)); [EOL]     assertTrue(bounds.contains(0.5)); [EOL]     assertTrue(bounds.contains(2.5)); [EOL]     assertFalse(bounds.contains(2.8)); [EOL] } <line_num>: 177,191
public void testFindRangeBounds() { [EOL]     TableXYDataset dataset = RendererXYPackageTests.createTestTableXYDataset(); [EOL]     JFreeChart chart = ChartFactory.createStackedXYAreaChart("Test Chart", "X", "Y", dataset, false); [EOL]     XYPlot plot = (XYPlot) chart.getPlot(); [EOL]     plot.setRenderer(new StackedXYBarRenderer()); [EOL]     NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis(); [EOL]     Range bounds = rangeAxis.getRange(); [EOL]     assertTrue(bounds.contains(6.0)); [EOL]     assertTrue(bounds.contains(8.0)); [EOL] } <line_num>: 196,207
