public StackedXYAreaRenderer2Tests(String name) { [EOL]     super(name); [EOL] } <line_num>: 90,92
public static Test suite() { [EOL]     return new TestSuite(StackedXYAreaRenderer2Tests.class); [EOL] } <line_num>: 81,83
public void testDrawWithEmptyDataset() { [EOL]     boolean success = false; [EOL]     JFreeChart chart = ChartFactory.createStackedXYAreaChart("title", "x", "y", new DefaultTableXYDataset(), true); [EOL]     XYPlot plot = (XYPlot) chart.getPlot(); [EOL]     plot.setRenderer(new StackedXYAreaRenderer2()); [EOL]     try { [EOL]         BufferedImage image = new BufferedImage(200, 100, BufferedImage.TYPE_INT_RGB); [EOL]         Graphics2D g2 = image.createGraphics(); [EOL]         chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null, null); [EOL]         g2.dispose(); [EOL]         success = true; [EOL]     } catch (Exception e) { [EOL]         success = false; [EOL]     } [EOL]     assertTrue(success); [EOL] } <line_num>: 98,116
public void testEquals() { [EOL]     StackedXYAreaRenderer2 r1 = new StackedXYAreaRenderer2(); [EOL]     StackedXYAreaRenderer2 r2 = new StackedXYAreaRenderer2(); [EOL]     assertEquals(r1, r2); [EOL]     assertEquals(r2, r1); [EOL]     r1.setRoundXCoordinates(!r1.getRoundXCoordinates()); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setRoundXCoordinates(r1.getRoundXCoordinates()); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 121,131
public void testHashcode() { [EOL]     StackedXYAreaRenderer2 r1 = new StackedXYAreaRenderer2(); [EOL]     StackedXYAreaRenderer2 r2 = new StackedXYAreaRenderer2(); [EOL]     assertTrue(r1.equals(r2)); [EOL]     int h1 = r1.hashCode(); [EOL]     int h2 = r2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 136,143
public void testCloning() { [EOL]     StackedXYAreaRenderer2 r1 = new StackedXYAreaRenderer2(); [EOL]     StackedXYAreaRenderer2 r2 = null; [EOL]     try { [EOL]         r2 = (StackedXYAreaRenderer2) r1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(r1 != r2); [EOL]     assertTrue(r1.getClass() == r2.getClass()); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 148,160
public void testPublicCloneable() { [EOL]     StackedXYAreaRenderer2 r1 = new StackedXYAreaRenderer2(); [EOL]     assertTrue(r1 instanceof PublicCloneable); [EOL] } <line_num>: 165,168
public void testSerialization() { [EOL]     StackedXYAreaRenderer2 r1 = new StackedXYAreaRenderer2(); [EOL]     StackedXYAreaRenderer2 r2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(r1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         r2 = (StackedXYAreaRenderer2) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(r1, r2); [EOL] } <line_num>: 173,191
public void testFindRangeBounds() { [EOL]     TableXYDataset dataset = RendererXYPackageTests.createTestTableXYDataset(); [EOL]     JFreeChart chart = ChartFactory.createStackedXYAreaChart("Test Chart", "X", "Y", dataset, false); [EOL]     XYPlot plot = (XYPlot) chart.getPlot(); [EOL]     StackedXYAreaRenderer2 renderer = new StackedXYAreaRenderer2(); [EOL]     plot.setRenderer(renderer); [EOL]     NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis(); [EOL]     Range bounds = rangeAxis.getRange(); [EOL]     assertTrue(bounds.contains(6.0)); [EOL]     assertTrue(bounds.contains(8.0)); [EOL]     assertNull(renderer.findRangeBounds(null)); [EOL]     assertNull(renderer.findRangeBounds(new DefaultTableXYDataset())); [EOL] } <line_num>: 196,214
