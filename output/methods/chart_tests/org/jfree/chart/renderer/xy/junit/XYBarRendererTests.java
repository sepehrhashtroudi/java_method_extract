public XYBarRendererTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 98,100
public static Test suite() { [EOL]     return new TestSuite(XYBarRendererTests.class); [EOL] } <line_num>: 89,91
public void testEquals() { [EOL]     XYBarRenderer r1 = new XYBarRenderer(); [EOL]     XYBarRenderer r2 = new XYBarRenderer(); [EOL]     assertTrue(r1.equals(r2)); [EOL]     assertTrue(r2.equals(r1)); [EOL]     r1.setBase(1.0); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setBase(1.0); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setUseYInterval(!r1.getUseYInterval()); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setUseYInterval(!r2.getUseYInterval()); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setMargin(0.10); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setMargin(0.10); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setDrawBarOutline(!r1.isDrawBarOutline()); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setDrawBarOutline(!r2.isDrawBarOutline()); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setGradientPaintTransformer(new StandardGradientPaintTransformer(GradientPaintTransformType.CENTER_HORIZONTAL)); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setGradientPaintTransformer(new StandardGradientPaintTransformer(GradientPaintTransformType.CENTER_HORIZONTAL)); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setLegendBar(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0)); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setLegendBar(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0)); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setPositiveItemLabelPositionFallback(new ItemLabelPosition()); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setPositiveItemLabelPositionFallback(new ItemLabelPosition()); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setNegativeItemLabelPositionFallback(new ItemLabelPosition()); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setNegativeItemLabelPositionFallback(new ItemLabelPosition()); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setBarPainter(new GradientXYBarPainter(0.11, 0.22, 0.33)); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setBarPainter(new GradientXYBarPainter(0.11, 0.22, 0.33)); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setShadowVisible(false); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setShadowVisible(false); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setShadowXOffset(3.3); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setShadowXOffset(3.3); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setShadowYOffset(3.3); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setShadowYOffset(3.3); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 105,187
public void testHashcode() { [EOL]     XYBarRenderer r1 = new XYBarRenderer(); [EOL]     XYBarRenderer r2 = new XYBarRenderer(); [EOL]     assertTrue(r1.equals(r2)); [EOL]     int h1 = r1.hashCode(); [EOL]     int h2 = r2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 192,199
public void testCloning() { [EOL]     XYBarRenderer r1 = new XYBarRenderer(); [EOL]     Rectangle2D rect = new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0); [EOL]     r1.setLegendBar(rect); [EOL]     XYBarRenderer r2 = null; [EOL]     try { [EOL]         r2 = (XYBarRenderer) r1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(r1 != r2); [EOL]     assertTrue(r1.getClass() == r2.getClass()); [EOL]     assertTrue(r1.equals(r2)); [EOL]     rect.setRect(4.0, 3.0, 2.0, 1.0); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setLegendBar(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0)); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 204,224
public void testPublicCloneable() { [EOL]     XYBarRenderer r1 = new XYBarRenderer(); [EOL]     assertTrue(r1 instanceof PublicCloneable); [EOL] } <line_num>: 229,232
public void testSerialization() { [EOL]     XYBarRenderer r1 = new XYBarRenderer(); [EOL]     XYBarRenderer r2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(r1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         r2 = (XYBarRenderer) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(r1, r2); [EOL] } <line_num>: 237,258
public void testSerialization2() { [EOL]     XYBarRenderer r1 = new XYBarRenderer(); [EOL]     r1.setPositiveItemLabelPositionFallback(new ItemLabelPosition()); [EOL]     XYBarRenderer r2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(r1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         r2 = (XYBarRenderer) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(r1, r2); [EOL] } <line_num>: 263,285
public void testFindDomainBounds() { [EOL]     XYSeriesCollection dataset = RendererXYPackageTests.createTestXYSeriesCollection(); [EOL]     JFreeChart chart = ChartFactory.createXYBarChart("Test Chart", "X", false, "Y", dataset, false); [EOL]     XYPlot plot = (XYPlot) chart.getPlot(); [EOL]     NumberAxis domainAxis = (NumberAxis) plot.getDomainAxis(); [EOL]     domainAxis.setAutoRangeIncludesZero(false); [EOL]     Range bounds = domainAxis.getRange(); [EOL]     assertFalse(bounds.contains(0.3)); [EOL]     assertTrue(bounds.contains(0.5)); [EOL]     assertTrue(bounds.contains(2.5)); [EOL]     assertFalse(bounds.contains(2.8)); [EOL] } <line_num>: 290,303
public void testFindRangeBounds() { [EOL]     DefaultIntervalXYDataset dataset = new DefaultIntervalXYDataset(); [EOL]     double[] x = { 1.0, 2.0, 3.0, 4.0 }; [EOL]     double[] startx = { 0.9, 1.8, 2.7, 3.6 }; [EOL]     double[] endx = { 1.1, 2.2, 3.3, 4.4 }; [EOL]     double[] y = { 1.0, 2.0, 3.0, 4.0 }; [EOL]     double[] starty = { 0.9, 1.8, 2.7, 3.6 }; [EOL]     double[] endy = { 1.1, 2.2, 3.3, 4.4 }; [EOL]     double[][] data = new double[][] { x, startx, endx, y, starty, endy }; [EOL]     dataset.addSeries("Series 1", data); [EOL]     XYBarRenderer renderer = new XYBarRenderer(); [EOL]     renderer.setUseYInterval(true); [EOL]     Range r = renderer.findRangeBounds(dataset); [EOL]     assertEquals(0.9, r.getLowerBound(), EPSILON); [EOL]     assertEquals(4.4, r.getUpperBound(), EPSILON); [EOL]     renderer.setUseYInterval(false); [EOL]     r = renderer.findRangeBounds(dataset); [EOL]     assertEquals(1.0, r.getLowerBound(), EPSILON); [EOL]     assertEquals(4.0, r.getUpperBound(), EPSILON); [EOL] } <line_num>: 310,330
public void testGetLegendItemSeriesIndex() { [EOL]     XYSeriesCollection d1 = new XYSeriesCollection(); [EOL]     XYSeries s1 = new XYSeries("S1"); [EOL]     s1.add(1.0, 1.1); [EOL]     XYSeries s2 = new XYSeries("S2"); [EOL]     s2.add(1.0, 1.1); [EOL]     d1.addSeries(s1); [EOL]     d1.addSeries(s2); [EOL]     XYSeriesCollection d2 = new XYSeriesCollection(); [EOL]     XYSeries s3 = new XYSeries("S3"); [EOL]     s3.add(1.0, 1.1); [EOL]     XYSeries s4 = new XYSeries("S4"); [EOL]     s4.add(1.0, 1.1); [EOL]     XYSeries s5 = new XYSeries("S5"); [EOL]     s5.add(1.0, 1.1); [EOL]     d2.addSeries(s3); [EOL]     d2.addSeries(s4); [EOL]     d2.addSeries(s5); [EOL]     XYBarRenderer r = new XYBarRenderer(); [EOL]     XYPlot plot = new XYPlot(new XYBarDataset(d1, 1.0), new NumberAxis("x"), new NumberAxis("y"), r); [EOL]     plot.setDataset(1, new XYBarDataset(d2, 2.0)); [EOL]     new JFreeChart(plot); [EOL]     LegendItem li = r.getLegendItem(1, 2); [EOL]     assertEquals("S5", li.getLabel()); [EOL]     assertEquals(1, li.getDatasetIndex()); [EOL]     assertEquals(2, li.getSeriesIndex()); [EOL] } <line_num>: 336,365
