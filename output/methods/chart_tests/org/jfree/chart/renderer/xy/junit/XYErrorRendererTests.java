public XYErrorRendererTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 81,83
public static Test suite() { [EOL]     return new TestSuite(XYErrorRendererTests.class); [EOL] } <line_num>: 72,74
public void testEquals() { [EOL]     XYErrorRenderer r1 = new XYErrorRenderer(); [EOL]     XYErrorRenderer r2 = new XYErrorRenderer(); [EOL]     assertEquals(r1, r2); [EOL]     r1.setDrawXError(false); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setDrawXError(false); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setDrawYError(false); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setDrawYError(false); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setCapLength(9.0); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setCapLength(9.0); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setErrorPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green)); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setErrorPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green)); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setErrorStroke(new BasicStroke(1.5f)); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setErrorStroke(new BasicStroke(1.5f)); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 88,125
public void testHashcode() { [EOL]     XYErrorRenderer r1 = new XYErrorRenderer(); [EOL]     XYErrorRenderer r2 = new XYErrorRenderer(); [EOL]     assertTrue(r1.equals(r2)); [EOL]     int h1 = r1.hashCode(); [EOL]     int h2 = r2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 130,137
public void testCloning() { [EOL]     XYErrorRenderer r1 = new XYErrorRenderer(); [EOL]     r1.setErrorPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.white)); [EOL]     XYErrorRenderer r2 = null; [EOL]     try { [EOL]         r2 = (XYErrorRenderer) r1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(r1 != r2); [EOL]     assertTrue(r1.getClass() == r2.getClass()); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 142,156
public void testCloning2() { [EOL]     XYErrorRenderer r1 = new XYErrorRenderer(); [EOL]     r1.setErrorStroke(new BasicStroke(1.5f)); [EOL]     XYErrorRenderer r2 = null; [EOL]     try { [EOL]         r2 = (XYErrorRenderer) r1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(r1 != r2); [EOL]     assertTrue(r1.getClass() == r2.getClass()); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 161,174
public void testPublicCloneable() { [EOL]     XYErrorRenderer r1 = new XYErrorRenderer(); [EOL]     assertTrue(r1 instanceof PublicCloneable); [EOL] } <line_num>: 179,182
public void testSerialization() { [EOL]     XYErrorRenderer r1 = new XYErrorRenderer(); [EOL]     r1.setErrorPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.white)); [EOL]     XYErrorRenderer r2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(r1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         r2 = (XYErrorRenderer) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(r1, r2); [EOL] } <line_num>: 187,208
public void testSerialization2() { [EOL]     XYErrorRenderer r1 = new XYErrorRenderer(); [EOL]     r1.setErrorStroke(new BasicStroke(1.5f)); [EOL]     XYErrorRenderer r2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(r1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         r2 = (XYErrorRenderer) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(r1, r2); [EOL] } <line_num>: 213,233
