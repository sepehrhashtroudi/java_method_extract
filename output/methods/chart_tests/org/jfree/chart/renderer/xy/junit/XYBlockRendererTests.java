public XYBlockRendererTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 84,86
public static Test suite() { [EOL]     return new TestSuite(XYBlockRendererTests.class); [EOL] } <line_num>: 75,77
public void testEquals() { [EOL]     XYBlockRenderer r1 = new XYBlockRenderer(); [EOL]     XYBlockRenderer r2 = new XYBlockRenderer(); [EOL]     assertTrue(r1.equals(r2)); [EOL]     assertTrue(r2.equals(r1)); [EOL]     r1.setBlockHeight(2.0); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setBlockHeight(2.0); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setBlockWidth(2.0); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setBlockWidth(2.0); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setPaintScale(new GrayPaintScale(0.0, 1.0)); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setPaintScale(new GrayPaintScale(0.0, 1.0)); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 91,117
public void testHashcode() { [EOL]     XYBlockRenderer r1 = new XYBlockRenderer(); [EOL]     XYBlockRenderer r2 = new XYBlockRenderer(); [EOL]     assertTrue(r1.equals(r2)); [EOL]     int h1 = r1.hashCode(); [EOL]     int h2 = r2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 122,129
public void testCloning() { [EOL]     XYBlockRenderer r1 = new XYBlockRenderer(); [EOL]     LookupPaintScale scale1 = new LookupPaintScale(); [EOL]     r1.setPaintScale(scale1); [EOL]     XYBlockRenderer r2 = null; [EOL]     try { [EOL]         r2 = (XYBlockRenderer) r1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(r1 != r2); [EOL]     assertTrue(r1.getClass() == r2.getClass()); [EOL]     assertTrue(r1.equals(r2)); [EOL]     scale1.add(0.5, Color.red); [EOL]     assertFalse(r1.equals(r2)); [EOL]     LookupPaintScale scale2 = (LookupPaintScale) r2.getPaintScale(); [EOL]     scale2.add(0.5, Color.red); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 134,155
public void testPublicCloneable() { [EOL]     XYBlockRenderer r1 = new XYBlockRenderer(); [EOL]     assertTrue(r1 instanceof PublicCloneable); [EOL] } <line_num>: 160,163
public void testSerialization() { [EOL]     XYBlockRenderer r1 = new XYBlockRenderer(); [EOL]     XYBlockRenderer r2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(r1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         r2 = (XYBlockRenderer) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(r1, r2); [EOL] } <line_num>: 168,186
public void testBug1766646A() { [EOL]     XYBlockRenderer r = new XYBlockRenderer(); [EOL]     Range range = r.findDomainBounds(null); [EOL]     assertTrue(range == null); [EOL]     DefaultXYZDataset emptyDataset = new DefaultXYZDataset(); [EOL]     range = r.findDomainBounds(emptyDataset); [EOL]     assertTrue(range == null); [EOL] } <line_num>: 191,198
public void testBug1766646B() { [EOL]     XYBlockRenderer r = new XYBlockRenderer(); [EOL]     Range range = r.findRangeBounds(null); [EOL]     assertTrue(range == null); [EOL]     DefaultXYZDataset emptyDataset = new DefaultXYZDataset(); [EOL]     range = r.findRangeBounds(emptyDataset); [EOL]     assertTrue(range == null); [EOL] } <line_num>: 203,210
