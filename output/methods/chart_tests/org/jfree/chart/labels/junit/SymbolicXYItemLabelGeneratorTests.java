public SymbolicXYItemLabelGeneratorTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 77,79
public static Test suite() { [EOL]     return new TestSuite(SymbolicXYItemLabelGeneratorTests.class); [EOL] } <line_num>: 68,70
public void testEquals() { [EOL]     SymbolicXYItemLabelGenerator g1 = new SymbolicXYItemLabelGenerator(); [EOL]     SymbolicXYItemLabelGenerator g2 = new SymbolicXYItemLabelGenerator(); [EOL]     assertTrue(g1.equals(g2)); [EOL]     assertTrue(g2.equals(g1)); [EOL] } <line_num>: 84,89
public void testHashCode() { [EOL]     SymbolicXYItemLabelGenerator g1 = new SymbolicXYItemLabelGenerator(); [EOL]     SymbolicXYItemLabelGenerator g2 = new SymbolicXYItemLabelGenerator(); [EOL]     assertTrue(g1.equals(g2)); [EOL]     assertTrue(g1.hashCode() == g2.hashCode()); [EOL] } <line_num>: 94,101
public void testCloning() { [EOL]     SymbolicXYItemLabelGenerator g1 = new SymbolicXYItemLabelGenerator(); [EOL]     SymbolicXYItemLabelGenerator g2 = null; [EOL]     try { [EOL]         g2 = (SymbolicXYItemLabelGenerator) g1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(g1 != g2); [EOL]     assertTrue(g1.getClass() == g2.getClass()); [EOL]     assertTrue(g1.equals(g2)); [EOL] } <line_num>: 106,118
public void testPublicCloneable() { [EOL]     SymbolicXYItemLabelGenerator g1 = new SymbolicXYItemLabelGenerator(); [EOL]     assertTrue(g1 instanceof PublicCloneable); [EOL] } <line_num>: 123,126
public void testSerialization() { [EOL]     SymbolicXYItemLabelGenerator g1 = new SymbolicXYItemLabelGenerator(); [EOL]     SymbolicXYItemLabelGenerator g2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(g1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         g2 = (SymbolicXYItemLabelGenerator) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(g1, g2); [EOL] } <line_num>: 131,150
