public StandardXYToolTipGeneratorTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 81,83
public static Test suite() { [EOL]     return new TestSuite(StandardXYToolTipGeneratorTests.class); [EOL] } <line_num>: 72,74
public void testEquals() { [EOL]     String f1 = "{1}"; [EOL]     String f2 = "{2}"; [EOL]     NumberFormat xnf1 = new DecimalFormat("0.00"); [EOL]     NumberFormat xnf2 = new DecimalFormat("0.000"); [EOL]     NumberFormat ynf1 = new DecimalFormat("0.00"); [EOL]     NumberFormat ynf2 = new DecimalFormat("0.000"); [EOL]     StandardXYToolTipGenerator g1 = null; [EOL]     StandardXYToolTipGenerator g2 = null; [EOL]     g1 = new StandardXYToolTipGenerator(f1, xnf1, ynf1); [EOL]     g2 = new StandardXYToolTipGenerator(f1, xnf1, ynf1); [EOL]     assertTrue(g1.equals(g2)); [EOL]     assertTrue(g2.equals(g1)); [EOL]     g1 = new StandardXYToolTipGenerator(f2, xnf1, ynf1); [EOL]     assertFalse(g1.equals(g2)); [EOL]     g2 = new StandardXYToolTipGenerator(f2, xnf1, ynf1); [EOL]     assertTrue(g1.equals(g2)); [EOL]     g1 = new StandardXYToolTipGenerator(f2, xnf2, ynf1); [EOL]     assertFalse(g1.equals(g2)); [EOL]     g2 = new StandardXYToolTipGenerator(f2, xnf2, ynf1); [EOL]     assertTrue(g1.equals(g2)); [EOL]     g1 = new StandardXYToolTipGenerator(f2, xnf2, ynf2); [EOL]     assertFalse(g1.equals(g2)); [EOL]     g2 = new StandardXYToolTipGenerator(f2, xnf2, ynf2); [EOL]     assertTrue(g1.equals(g2)); [EOL]     DateFormat xdf1 = new SimpleDateFormat("d-MMM"); [EOL]     DateFormat xdf2 = new SimpleDateFormat("d-MMM-yyyy"); [EOL]     DateFormat ydf1 = new SimpleDateFormat("d-MMM"); [EOL]     DateFormat ydf2 = new SimpleDateFormat("d-MMM-yyyy"); [EOL]     g1 = new StandardXYToolTipGenerator(f1, xdf1, ydf1); [EOL]     g2 = new StandardXYToolTipGenerator(f1, xdf1, ydf1); [EOL]     assertTrue(g1.equals(g2)); [EOL]     assertTrue(g2.equals(g1)); [EOL]     g1 = new StandardXYToolTipGenerator(f1, xdf2, ydf1); [EOL]     assertFalse(g1.equals(g2)); [EOL]     g2 = new StandardXYToolTipGenerator(f1, xdf2, ydf1); [EOL]     assertTrue(g1.equals(g2)); [EOL]     g1 = new StandardXYToolTipGenerator(f1, xdf2, ydf2); [EOL]     assertFalse(g1.equals(g2)); [EOL]     g2 = new StandardXYToolTipGenerator(f1, xdf2, ydf2); [EOL]     assertTrue(g1.equals(g2)); [EOL] } <line_num>: 88,141
public void testHashCode() { [EOL]     StandardXYToolTipGenerator g1 = new StandardXYToolTipGenerator(); [EOL]     StandardXYToolTipGenerator g2 = new StandardXYToolTipGenerator(); [EOL]     assertTrue(g1.equals(g2)); [EOL]     assertTrue(g1.hashCode() == g2.hashCode()); [EOL] } <line_num>: 146,153
public void testCloning() { [EOL]     StandardXYToolTipGenerator g1 = new StandardXYToolTipGenerator(); [EOL]     StandardXYToolTipGenerator g2 = null; [EOL]     try { [EOL]         g2 = (StandardXYToolTipGenerator) g1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(g1 != g2); [EOL]     assertTrue(g1.getClass() == g2.getClass()); [EOL]     assertTrue(g1.equals(g2)); [EOL] } <line_num>: 158,170
public void testPublicCloneable() { [EOL]     StandardXYToolTipGenerator g1 = new StandardXYToolTipGenerator(); [EOL]     assertTrue(g1 instanceof PublicCloneable); [EOL] } <line_num>: 175,178
public void testSerialization() { [EOL]     StandardXYToolTipGenerator g1 = new StandardXYToolTipGenerator(); [EOL]     StandardXYToolTipGenerator g2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(g1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         g2 = (StandardXYToolTipGenerator) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(g1, g2); [EOL] } <line_num>: 183,204
