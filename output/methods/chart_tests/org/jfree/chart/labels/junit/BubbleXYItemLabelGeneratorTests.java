public BubbleXYItemLabelGeneratorTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 83,85
public static Test suite() { [EOL]     return new TestSuite(BubbleXYItemLabelGeneratorTests.class); [EOL] } <line_num>: 74,76
public void testEquals() { [EOL]     String f1 = "{1}"; [EOL]     String f2 = "{2}"; [EOL]     NumberFormat xnf1 = new DecimalFormat("0.00"); [EOL]     NumberFormat xnf2 = new DecimalFormat("0.000"); [EOL]     NumberFormat ynf1 = new DecimalFormat("0.00"); [EOL]     NumberFormat ynf2 = new DecimalFormat("0.000"); [EOL]     NumberFormat znf1 = new DecimalFormat("0.00"); [EOL]     NumberFormat znf2 = new DecimalFormat("0.000"); [EOL]     BubbleXYItemLabelGenerator g1 = null; [EOL]     BubbleXYItemLabelGenerator g2 = null; [EOL]     g1 = new BubbleXYItemLabelGenerator(f1, xnf1, ynf1, znf1); [EOL]     g2 = new BubbleXYItemLabelGenerator(f1, xnf1, ynf1, znf1); [EOL]     assertTrue(g1.equals(g2)); [EOL]     assertTrue(g2.equals(g1)); [EOL]     g1 = new BubbleXYItemLabelGenerator(f2, xnf1, ynf1, znf1); [EOL]     assertFalse(g1.equals(g2)); [EOL]     g2 = new BubbleXYItemLabelGenerator(f2, xnf1, ynf1, znf1); [EOL]     assertTrue(g1.equals(g2)); [EOL]     g1 = new BubbleXYItemLabelGenerator(f2, xnf2, ynf1, znf1); [EOL]     assertFalse(g1.equals(g2)); [EOL]     g2 = new BubbleXYItemLabelGenerator(f2, xnf2, ynf1, znf1); [EOL]     assertTrue(g1.equals(g2)); [EOL]     g1 = new BubbleXYItemLabelGenerator(f2, xnf2, ynf2, znf1); [EOL]     assertFalse(g1.equals(g2)); [EOL]     g2 = new BubbleXYItemLabelGenerator(f2, xnf2, ynf2, znf1); [EOL]     assertTrue(g1.equals(g2)); [EOL]     g1 = new BubbleXYItemLabelGenerator(f2, xnf2, ynf2, znf2); [EOL]     assertFalse(g1.equals(g2)); [EOL]     g2 = new BubbleXYItemLabelGenerator(f2, xnf2, ynf2, znf2); [EOL]     assertTrue(g1.equals(g2)); [EOL]     DateFormat xdf1 = new SimpleDateFormat("d-MMM"); [EOL]     DateFormat xdf2 = new SimpleDateFormat("d-MMM-yyyy"); [EOL]     DateFormat ydf1 = new SimpleDateFormat("d-MMM"); [EOL]     DateFormat ydf2 = new SimpleDateFormat("d-MMM-yyyy"); [EOL]     DateFormat zdf1 = new SimpleDateFormat("d-MMM"); [EOL]     DateFormat zdf2 = new SimpleDateFormat("d-MMM-yyyy"); [EOL]     g1 = new BubbleXYItemLabelGenerator(f1, xdf1, ydf1, zdf1); [EOL]     g2 = new BubbleXYItemLabelGenerator(f1, xdf1, ydf1, zdf1); [EOL]     assertTrue(g1.equals(g2)); [EOL]     assertTrue(g2.equals(g1)); [EOL]     g1 = new BubbleXYItemLabelGenerator(f1, xdf2, ydf1, zdf1); [EOL]     assertFalse(g1.equals(g2)); [EOL]     g2 = new BubbleXYItemLabelGenerator(f1, xdf2, ydf1, zdf1); [EOL]     assertTrue(g1.equals(g2)); [EOL]     g1 = new BubbleXYItemLabelGenerator(f1, xdf2, ydf2, zdf1); [EOL]     assertFalse(g1.equals(g2)); [EOL]     g2 = new BubbleXYItemLabelGenerator(f1, xdf2, ydf2, zdf1); [EOL]     assertTrue(g1.equals(g2)); [EOL]     g1 = new BubbleXYItemLabelGenerator(f1, xdf2, ydf2, zdf2); [EOL]     assertFalse(g1.equals(g2)); [EOL]     g2 = new BubbleXYItemLabelGenerator(f1, xdf2, ydf2, zdf2); [EOL]     assertTrue(g1.equals(g2)); [EOL] } <line_num>: 90,156
public void testHashCode() { [EOL]     BubbleXYItemLabelGenerator g1 = new BubbleXYItemLabelGenerator(); [EOL]     BubbleXYItemLabelGenerator g2 = new BubbleXYItemLabelGenerator(); [EOL]     assertTrue(g1.equals(g2)); [EOL]     assertTrue(g1.hashCode() == g2.hashCode()); [EOL] } <line_num>: 161,168
public void testCloning() { [EOL]     BubbleXYItemLabelGenerator g1 = new BubbleXYItemLabelGenerator(); [EOL]     BubbleXYItemLabelGenerator g2 = null; [EOL]     try { [EOL]         g2 = (BubbleXYItemLabelGenerator) g1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(g1 != g2); [EOL]     assertTrue(g1.getClass() == g2.getClass()); [EOL]     assertTrue(g1.equals(g2)); [EOL] } <line_num>: 173,185
public void testPublicCloneable() { [EOL]     BubbleXYItemLabelGenerator g1 = new BubbleXYItemLabelGenerator(); [EOL]     assertTrue(g1 instanceof PublicCloneable); [EOL] } <line_num>: 190,193
public void testSerialization() { [EOL]     BubbleXYItemLabelGenerator g1 = new BubbleXYItemLabelGenerator(); [EOL]     BubbleXYItemLabelGenerator g2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(g1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         g2 = (BubbleXYItemLabelGenerator) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(g1, g2); [EOL] } <line_num>: 198,219
public void testGenerateLabel() { [EOL]     XYSeries s1 = new XYSeries("S1"); [EOL]     s1.add(1.0, 2.0); [EOL]     s1.add(2.2, 3.3); [EOL]     XYSeriesCollection dataset = new XYSeriesCollection(s1); [EOL]     BubbleXYItemLabelGenerator g = new BubbleXYItemLabelGenerator(); [EOL]     assertEquals("{3}", g.generateLabel(dataset, 0, 0)); [EOL]     assertEquals("{3}", g.generateLabel(dataset, 0, 1)); [EOL] } <line_num>: 224,234
