public WaterfallChartTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 87,89
public static Test suite() { [EOL]     return new TestSuite(WaterfallChartTests.class); [EOL] } <line_num>: 78,80
protected void setUp() { [EOL]     this.chart = createWaterfallChart(); [EOL] } <line_num>: 94,96
public void testDrawWithNullInfo() { [EOL]     boolean success = false; [EOL]     try { [EOL]         BufferedImage image = new BufferedImage(200, 100, BufferedImage.TYPE_INT_RGB); [EOL]         Graphics2D g2 = image.createGraphics(); [EOL]         this.chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null, null); [EOL]         g2.dispose(); [EOL]         success = true; [EOL]     } catch (Exception e) { [EOL]         success = false; [EOL]     } [EOL]     assertTrue(success); [EOL] } <line_num>: 102,121
public void testSetSeriesToolTipGenerator() { [EOL]     CategoryPlot plot = (CategoryPlot) this.chart.getPlot(); [EOL]     CategoryItemRenderer renderer = plot.getRenderer(); [EOL]     StandardCategoryToolTipGenerator tt = new StandardCategoryToolTipGenerator(); [EOL]     renderer.setSeriesToolTipGenerator(0, tt); [EOL]     CategoryToolTipGenerator tt2 = renderer.getToolTipGenerator(0, 0, false); [EOL]     assertTrue(tt2 == tt); [EOL] } <line_num>: 127,136
public void testSetSeriesURLGenerator() { [EOL]     CategoryPlot plot = (CategoryPlot) this.chart.getPlot(); [EOL]     CategoryItemRenderer renderer = plot.getRenderer(); [EOL]     StandardCategoryURLGenerator url1 = new StandardCategoryURLGenerator(); [EOL]     renderer.setSeriesURLGenerator(0, url1); [EOL]     CategoryURLGenerator url2 = renderer.getURLGenerator(0, 0, false); [EOL]     assertTrue(url2 == url1); [EOL] } <line_num>: 142,150
private static JFreeChart createWaterfallChart() { [EOL]     Number[][] data = new Integer[][] { { new Integer(-3), new Integer(-2) }, { new Integer(-1), new Integer(1) }, { new Integer(2), new Integer(3) } }; [EOL]     CategoryDataset dataset = DatasetUtilities.createCategoryDataset("S", "C", data); [EOL]     return ChartFactory.createWaterfallChart("Waterfall Chart", "Domain", "Range", dataset, true); [EOL] } <line_num>: 157,170
