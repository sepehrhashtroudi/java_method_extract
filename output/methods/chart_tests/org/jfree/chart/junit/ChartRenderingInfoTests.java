public ChartRenderingInfoTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 80,82
public static Test suite() { [EOL]     return new TestSuite(ChartRenderingInfoTests.class); [EOL] } <line_num>: 71,73
public void testEquals() { [EOL]     ChartRenderingInfo i1 = new ChartRenderingInfo(); [EOL]     ChartRenderingInfo i2 = new ChartRenderingInfo(); [EOL]     assertTrue(i1.equals(i2)); [EOL]     i1.setChartArea(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0)); [EOL]     assertFalse(i1.equals(i2)); [EOL]     i2.setChartArea(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0)); [EOL]     assertTrue(i1.equals(i2)); [EOL]     i1.getPlotInfo().setDataArea(new Rectangle(1, 2, 3, 4)); [EOL]     assertFalse(i1.equals(i2)); [EOL]     i2.getPlotInfo().setDataArea(new Rectangle(1, 2, 3, 4)); [EOL]     assertTrue(i1.equals(i2)); [EOL]     StandardEntityCollection e1 = new StandardEntityCollection(); [EOL]     e1.add(new ChartEntity(new Rectangle(1, 2, 3, 4))); [EOL]     i1.setEntityCollection(e1); [EOL]     assertFalse(i1.equals(i2)); [EOL]     StandardEntityCollection e2 = new StandardEntityCollection(); [EOL]     e2.add(new ChartEntity(new Rectangle(1, 2, 3, 4))); [EOL]     i2.setEntityCollection(e2); [EOL] } <line_num>: 87,109
public void testCloning() { [EOL]     ChartRenderingInfo i1 = new ChartRenderingInfo(); [EOL]     ChartRenderingInfo i2 = null; [EOL]     try { [EOL]         i2 = (ChartRenderingInfo) i1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(i1 != i2); [EOL]     assertTrue(i1.getClass() == i2.getClass()); [EOL]     assertTrue(i1.equals(i2)); [EOL]     i1.getChartArea().setRect(4.0, 3.0, 2.0, 1.0); [EOL]     assertFalse(i1.equals(i2)); [EOL]     i2.getChartArea().setRect(4.0, 3.0, 2.0, 1.0); [EOL]     assertTrue(i1.equals(i2)); [EOL]     i1.getEntityCollection().add(new ChartEntity(new Rectangle(1, 2, 2, 1))); [EOL]     assertFalse(i1.equals(i2)); [EOL]     i2.getEntityCollection().add(new ChartEntity(new Rectangle(1, 2, 2, 1))); [EOL]     assertTrue(i1.equals(i2)); [EOL] } <line_num>: 114,140
public void testSerialization() { [EOL]     ChartRenderingInfo i1 = new ChartRenderingInfo(); [EOL]     i1.setChartArea(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0)); [EOL]     ChartRenderingInfo i2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(i1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         i2 = (ChartRenderingInfo) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(i1, i2); [EOL] } <line_num>: 145,166
public void testSerialization2() { [EOL]     ChartRenderingInfo i1 = new ChartRenderingInfo(); [EOL]     i1.getPlotInfo().setDataArea(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0)); [EOL]     ChartRenderingInfo i2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(i1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         i2 = (ChartRenderingInfo) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(i1, i2); [EOL]     assertEquals(i2, i2.getPlotInfo().getOwner()); [EOL] } <line_num>: 171,194
