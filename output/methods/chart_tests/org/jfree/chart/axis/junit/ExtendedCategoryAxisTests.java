public ExtendedCategoryAxisTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 78,80
public static Test suite() { [EOL]     return new TestSuite(ExtendedCategoryAxisTests.class); [EOL] } <line_num>: 69,71
public void testEquals() { [EOL]     ExtendedCategoryAxis a1 = new ExtendedCategoryAxis("Test"); [EOL]     ExtendedCategoryAxis a2 = new ExtendedCategoryAxis("Test"); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1.addSubLabel("C1", "C1-sublabel"); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2.addSubLabel("C1", "C1-sublabel"); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1.setSubLabelFont(new Font("Dialog", Font.BOLD, 8)); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2.setSubLabelFont(new Font("Dialog", Font.BOLD, 8)); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1.setSubLabelPaint(Color.red); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2.setSubLabelPaint(Color.red); [EOL]     assertTrue(a1.equals(a2)); [EOL] } <line_num>: 85,105
public void testHashCode() { [EOL]     ExtendedCategoryAxis a1 = new ExtendedCategoryAxis("Test"); [EOL]     ExtendedCategoryAxis a2 = new ExtendedCategoryAxis("Test"); [EOL]     assertTrue(a1.equals(a2)); [EOL]     int h1 = a1.hashCode(); [EOL]     int h2 = a2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 110,117
public void testCloning() { [EOL]     ExtendedCategoryAxis a1 = new ExtendedCategoryAxis("Test"); [EOL]     ExtendedCategoryAxis a2 = null; [EOL]     try { [EOL]         a2 = (ExtendedCategoryAxis) a1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(a1 != a2); [EOL]     assertTrue(a1.getClass() == a2.getClass()); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1.addSubLabel("C1", "ABC"); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2.addSubLabel("C1", "ABC"); [EOL]     assertTrue(a1.equals(a2)); [EOL] } <line_num>: 122,141
public void testCloning2() { [EOL]     ExtendedCategoryAxis a1 = new ExtendedCategoryAxis("Test"); [EOL]     a1.setTickLabelFont("C1", new Font("Dialog", Font.PLAIN, 15)); [EOL]     a1.setTickLabelPaint("C1", new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.white)); [EOL]     ExtendedCategoryAxis a2 = null; [EOL]     try { [EOL]         a2 = (ExtendedCategoryAxis) a1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(a1 != a2); [EOL]     assertTrue(a1.getClass() == a2.getClass()); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1.setTickLabelFont("C1", null); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2.setTickLabelFont("C1", null); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1.setTickLabelPaint("C1", Color.yellow); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2.setTickLabelPaint("C1", Color.yellow); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1.addCategoryLabelToolTip("C1", "XYZ"); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2.addCategoryLabelToolTip("C1", "XYZ"); [EOL]     assertTrue(a1.equals(a2)); [EOL] } <line_num>: 147,180
public void testSerialization() { [EOL]     ExtendedCategoryAxis a1 = new ExtendedCategoryAxis("Test"); [EOL]     a1.setSubLabelPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.blue)); [EOL]     ExtendedCategoryAxis a2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(a1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         a2 = (ExtendedCategoryAxis) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(a1, a2); [EOL] } <line_num>: 185,206
