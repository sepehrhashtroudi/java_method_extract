public MarkerAxisBandTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 77,79
public static Test suite() { [EOL]     return new TestSuite(MarkerAxisBandTests.class); [EOL] } <line_num>: 68,70
public void testEquals() { [EOL]     Font font1 = new Font("SansSerif", Font.PLAIN, 12); [EOL]     Font font2 = new Font("SansSerif", Font.PLAIN, 14); [EOL]     MarkerAxisBand a1 = new MarkerAxisBand(null, 1.0, 1.0, 1.0, 1.0, font1); [EOL]     MarkerAxisBand a2 = new MarkerAxisBand(null, 1.0, 1.0, 1.0, 1.0, font1); [EOL]     assertEquals(a1, a2); [EOL]     a1 = new MarkerAxisBand(null, 2.0, 1.0, 1.0, 1.0, font1); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2 = new MarkerAxisBand(null, 2.0, 1.0, 1.0, 1.0, font1); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1 = new MarkerAxisBand(null, 2.0, 3.0, 1.0, 1.0, font1); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2 = new MarkerAxisBand(null, 2.0, 3.0, 1.0, 1.0, font1); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1 = new MarkerAxisBand(null, 2.0, 3.0, 4.0, 1.0, font1); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2 = new MarkerAxisBand(null, 2.0, 3.0, 4.0, 1.0, font1); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1 = new MarkerAxisBand(null, 2.0, 3.0, 4.0, 5.0, font1); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2 = new MarkerAxisBand(null, 2.0, 3.0, 4.0, 5.0, font1); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1 = new MarkerAxisBand(null, 2.0, 3.0, 4.0, 5.0, font2); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2 = new MarkerAxisBand(null, 2.0, 3.0, 4.0, 5.0, font2); [EOL]     assertTrue(a1.equals(a2)); [EOL] } <line_num>: 84,116
public void testHashCode() { [EOL]     Font font1 = new Font("SansSerif", Font.PLAIN, 12); [EOL]     MarkerAxisBand a1 = new MarkerAxisBand(null, 1.0, 1.0, 1.0, 1.0, font1); [EOL]     MarkerAxisBand a2 = new MarkerAxisBand(null, 1.0, 1.0, 1.0, 1.0, font1); [EOL]     assertTrue(a1.equals(a2)); [EOL]     int h1 = a1.hashCode(); [EOL]     int h2 = a2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 121,130
public void testSerialization() { [EOL]     MarkerAxisBand a1 = new MarkerAxisBand(null, 1.0, 1.0, 1.0, 1.0, null); [EOL]     MarkerAxisBand a2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(a1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         a2 = (MarkerAxisBand) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(a1, a2); [EOL] } <line_num>: 135,156
