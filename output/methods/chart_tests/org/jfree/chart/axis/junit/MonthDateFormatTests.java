public MonthDateFormatTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 78,80
public static Test suite() { [EOL]     return new TestSuite(MonthDateFormatTests.class); [EOL] } <line_num>: 69,71
public void testEquals() { [EOL]     MonthDateFormat mf1 = new MonthDateFormat(); [EOL]     MonthDateFormat mf2 = new MonthDateFormat(); [EOL]     assertTrue(mf1.equals(mf2)); [EOL]     assertTrue(mf2.equals(mf1)); [EOL]     boolean[] showYear1 = new boolean[12]; [EOL]     showYear1[0] = true; [EOL]     boolean[] showYear2 = new boolean[12]; [EOL]     showYear1[1] = true; [EOL]     mf1 = new MonthDateFormat(TimeZone.getTimeZone("PST"), Locale.US, 1, showYear1, new SimpleDateFormat("yy")); [EOL]     assertFalse(mf1.equals(mf2)); [EOL]     mf2 = new MonthDateFormat(TimeZone.getTimeZone("PST"), Locale.US, 1, showYear1, new SimpleDateFormat("yy")); [EOL]     assertTrue(mf1.equals(mf2)); [EOL]     mf1 = new MonthDateFormat(TimeZone.getTimeZone("PST"), Locale.FRANCE, 1, showYear1, new SimpleDateFormat("yy")); [EOL]     assertFalse(mf1.equals(mf2)); [EOL]     mf2 = new MonthDateFormat(TimeZone.getTimeZone("PST"), Locale.FRANCE, 1, showYear1, new SimpleDateFormat("yy")); [EOL]     assertTrue(mf1.equals(mf2)); [EOL]     mf1 = new MonthDateFormat(TimeZone.getTimeZone("PST"), Locale.FRANCE, 2, showYear1, new SimpleDateFormat("yy")); [EOL]     assertFalse(mf1.equals(mf2)); [EOL]     mf2 = new MonthDateFormat(TimeZone.getTimeZone("PST"), Locale.FRANCE, 2, showYear1, new SimpleDateFormat("yy")); [EOL]     assertTrue(mf1.equals(mf2)); [EOL]     mf1 = new MonthDateFormat(TimeZone.getTimeZone("PST"), Locale.FRANCE, 2, showYear2, new SimpleDateFormat("yy")); [EOL]     assertFalse(mf1.equals(mf2)); [EOL]     mf2 = new MonthDateFormat(TimeZone.getTimeZone("PST"), Locale.FRANCE, 2, showYear2, new SimpleDateFormat("yy")); [EOL]     assertTrue(mf1.equals(mf2)); [EOL]     mf1 = new MonthDateFormat(TimeZone.getTimeZone("PST"), Locale.FRANCE, 2, showYear2, new SimpleDateFormat("yyyy")); [EOL]     assertFalse(mf1.equals(mf2)); [EOL]     mf2 = new MonthDateFormat(TimeZone.getTimeZone("PST"), Locale.FRANCE, 2, showYear2, new SimpleDateFormat("yyyy")); [EOL]     assertTrue(mf1.equals(mf2)); [EOL] } <line_num>: 85,136
public void testHashCode() { [EOL]     MonthDateFormat mf1 = new MonthDateFormat(); [EOL]     MonthDateFormat mf2 = new MonthDateFormat(); [EOL]     assertTrue(mf1.equals(mf2)); [EOL]     int h1 = mf1.hashCode(); [EOL]     int h2 = mf2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 141,148
public void testCloning() { [EOL]     MonthDateFormat mf1 = new MonthDateFormat(); [EOL]     MonthDateFormat mf2 = null; [EOL]     mf2 = (MonthDateFormat) mf1.clone(); [EOL]     assertTrue(mf1 != mf2); [EOL]     assertTrue(mf1.getClass() == mf2.getClass()); [EOL]     assertTrue(mf1.equals(mf2)); [EOL] } <line_num>: 153,160
public void testSerialization() { [EOL]     MonthDateFormat mf1 = new MonthDateFormat(); [EOL]     MonthDateFormat mf2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(mf1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         mf2 = (MonthDateFormat) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(mf1.equals(mf2)); [EOL] } <line_num>: 165,183
