public NumberAxisTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 97,99
public static Test suite() { [EOL]     return new TestSuite(NumberAxisTests.class); [EOL] } <line_num>: 88,90
public void testCloning() { [EOL]     NumberAxis a1 = new NumberAxis("Test"); [EOL]     NumberAxis a2 = null; [EOL]     try { [EOL]         a2 = (NumberAxis) a1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(a1 != a2); [EOL]     assertTrue(a1.getClass() == a2.getClass()); [EOL]     assertTrue(a1.equals(a2)); [EOL] } <line_num>: 104,116
public void testEquals() { [EOL]     NumberAxis a1 = new NumberAxis("Test"); [EOL]     NumberAxis a2 = new NumberAxis("Test"); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1.setAutoRangeIncludesZero(false); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2.setAutoRangeIncludesZero(false); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1.setAutoRangeStickyZero(false); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2.setAutoRangeStickyZero(false); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1.setTickUnit(new NumberTickUnit(25.0)); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2.setTickUnit(new NumberTickUnit(25.0)); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1.setNumberFormatOverride(new DecimalFormat("0.00")); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2.setNumberFormatOverride(new DecimalFormat("0.00")); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1.setRangeType(RangeType.POSITIVE); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2.setRangeType(RangeType.POSITIVE); [EOL]     assertTrue(a1.equals(a2)); [EOL] } <line_num>: 121,156
public void testHashCode() { [EOL]     NumberAxis a1 = new NumberAxis("Test"); [EOL]     NumberAxis a2 = new NumberAxis("Test"); [EOL]     assertTrue(a1.equals(a2)); [EOL]     int h1 = a1.hashCode(); [EOL]     int h2 = a2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 161,168
public void testTranslateJava2DToValue() { [EOL]     NumberAxis axis = new NumberAxis(); [EOL]     axis.setRange(50.0, 100.0); [EOL]     Rectangle2D dataArea = new Rectangle2D.Double(10.0, 50.0, 400.0, 300.0); [EOL]     double y1 = axis.java2DToValue(75.0, dataArea, RectangleEdge.LEFT); [EOL]     assertEquals(y1, 95.8333333, EPSILON); [EOL]     double y2 = axis.java2DToValue(75.0, dataArea, RectangleEdge.RIGHT); [EOL]     assertEquals(y2, 95.8333333, EPSILON); [EOL]     double x1 = axis.java2DToValue(75.0, dataArea, RectangleEdge.TOP); [EOL]     assertEquals(x1, 58.125, EPSILON); [EOL]     double x2 = axis.java2DToValue(75.0, dataArea, RectangleEdge.BOTTOM); [EOL]     assertEquals(x2, 58.125, EPSILON); [EOL]     axis.setInverted(true); [EOL]     double y3 = axis.java2DToValue(75.0, dataArea, RectangleEdge.LEFT); [EOL]     assertEquals(y3, 54.1666667, EPSILON); [EOL]     double y4 = axis.java2DToValue(75.0, dataArea, RectangleEdge.RIGHT); [EOL]     assertEquals(y4, 54.1666667, EPSILON); [EOL]     double x3 = axis.java2DToValue(75.0, dataArea, RectangleEdge.TOP); [EOL]     assertEquals(x3, 91.875, EPSILON); [EOL]     double x4 = axis.java2DToValue(75.0, dataArea, RectangleEdge.BOTTOM); [EOL]     assertEquals(x4, 91.875, EPSILON); [EOL] } <line_num>: 175,196
public void testSerialization() { [EOL]     NumberAxis a1 = new NumberAxis("Test Axis"); [EOL]     NumberAxis a2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(a1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         a2 = (NumberAxis) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(a1, a2); [EOL] } <line_num>: 201,222
public void testAutoRange1() { [EOL]     DefaultCategoryDataset dataset = new DefaultCategoryDataset(); [EOL]     dataset.setValue(100.0, "Row 1", "Column 1"); [EOL]     dataset.setValue(200.0, "Row 1", "Column 2"); [EOL]     JFreeChart chart = ChartFactory.createBarChart("Test", "Categories", "Value", dataset, false); [EOL]     CategoryPlot plot = (CategoryPlot) chart.getPlot(); [EOL]     NumberAxis axis = (NumberAxis) plot.getRangeAxis(); [EOL]     assertEquals(axis.getLowerBound(), 0.0, EPSILON); [EOL]     assertEquals(axis.getUpperBound(), 210.0, EPSILON); [EOL] } <line_num>: 228,238
public void testAutoRange2() { [EOL]     DefaultCategoryDataset dataset = new DefaultCategoryDataset(); [EOL]     dataset.setValue(100.0, "Row 1", "Column 1"); [EOL]     dataset.setValue(200.0, "Row 1", "Column 2"); [EOL]     JFreeChart chart = ChartFactory.createLineChart("Test", "Categories", "Value", dataset, false); [EOL]     CategoryPlot plot = (CategoryPlot) chart.getPlot(); [EOL]     NumberAxis axis = (NumberAxis) plot.getRangeAxis(); [EOL]     axis.setAutoRangeIncludesZero(false); [EOL]     assertEquals(axis.getLowerBound(), 95.0, EPSILON); [EOL]     assertEquals(axis.getUpperBound(), 205.0, EPSILON); [EOL] } <line_num>: 245,256
public void testAutoRange3() { [EOL]     DefaultCategoryDataset dataset = new DefaultCategoryDataset(); [EOL]     dataset.setValue(100.0, "Row 1", "Column 1"); [EOL]     dataset.setValue(200.0, "Row 1", "Column 2"); [EOL]     JFreeChart chart = ChartFactory.createLineChart("Test", "Categories", "Value", dataset, false); [EOL]     CategoryPlot plot = (CategoryPlot) chart.getPlot(); [EOL]     NumberAxis axis = (NumberAxis) plot.getRangeAxis(); [EOL]     axis.setAutoRangeIncludesZero(false); [EOL]     assertEquals(axis.getLowerBound(), 95.0, EPSILON); [EOL]     assertEquals(axis.getUpperBound(), 205.0, EPSILON); [EOL]     DefaultCategoryDataset dataset2 = new DefaultCategoryDataset(); [EOL]     dataset2.setValue(900.0, "Row 1", "Column 1"); [EOL]     dataset2.setValue(1000.0, "Row 1", "Column 2"); [EOL]     plot.setDataset(dataset2); [EOL]     assertEquals(axis.getLowerBound(), 895.0, EPSILON); [EOL]     assertEquals(axis.getUpperBound(), 1005.0, EPSILON); [EOL] } <line_num>: 264,283
public void testAutoRange4() { [EOL]     DefaultCategoryDataset dataset = new DefaultCategoryDataset(); [EOL]     dataset.setValue(100.0, "Row 1", "Column 1"); [EOL]     dataset.setValue(200.0, "Row 1", "Column 2"); [EOL]     JFreeChart chart = ChartFactory.createBarChart("Test", "Categories", "Value", dataset, false); [EOL]     CategoryPlot plot = (CategoryPlot) chart.getPlot(); [EOL]     NumberAxis axis = (NumberAxis) plot.getRangeAxis(); [EOL]     axis.setAutoRangeIncludesZero(false); [EOL]     BarRenderer br = (BarRenderer) plot.getRenderer(); [EOL]     br.setIncludeBaseInRange(false); [EOL]     assertEquals(95.0, axis.getLowerBound(), EPSILON); [EOL]     assertEquals(205.0, axis.getUpperBound(), EPSILON); [EOL]     br.setIncludeBaseInRange(true); [EOL]     assertEquals(0.0, axis.getLowerBound(), EPSILON); [EOL]     assertEquals(210.0, axis.getUpperBound(), EPSILON); [EOL]     axis.setAutoRangeIncludesZero(true); [EOL]     assertEquals(0.0, axis.getLowerBound(), EPSILON); [EOL]     assertEquals(210.0, axis.getUpperBound(), EPSILON); [EOL]     br.setIncludeBaseInRange(true); [EOL]     assertEquals(0.0, axis.getLowerBound(), EPSILON); [EOL]     assertEquals(210.0, axis.getUpperBound(), EPSILON); [EOL]     DefaultCategoryDataset dataset2 = new DefaultCategoryDataset(); [EOL]     dataset2.setValue(900.0, "Row 1", "Column 1"); [EOL]     dataset2.setValue(1000.0, "Row 1", "Column 2"); [EOL]     plot.setDataset(dataset2); [EOL]     assertEquals(0.0, axis.getLowerBound(), EPSILON); [EOL]     assertEquals(1050.0, axis.getUpperBound(), EPSILON); [EOL]     br.setIncludeBaseInRange(false); [EOL]     assertEquals(0.0, axis.getLowerBound(), EPSILON); [EOL]     assertEquals(1050.0, axis.getUpperBound(), EPSILON); [EOL]     axis.setAutoRangeIncludesZero(false); [EOL]     assertEquals(895.0, axis.getLowerBound(), EPSILON); [EOL]     assertEquals(1005.0, axis.getUpperBound(), EPSILON); [EOL] } <line_num>: 289,330
public void testXYAutoRange1() { [EOL]     XYSeries series = new XYSeries("Series 1"); [EOL]     series.add(1.0, 1.0); [EOL]     series.add(2.0, 2.0); [EOL]     series.add(3.0, 3.0); [EOL]     XYSeriesCollection dataset = new XYSeriesCollection(); [EOL]     dataset.addSeries(series); [EOL]     JFreeChart chart = ChartFactory.createScatterPlot("Test", "X", "Y", dataset, false); [EOL]     XYPlot plot = (XYPlot) chart.getPlot(); [EOL]     NumberAxis axis = (NumberAxis) plot.getDomainAxis(); [EOL]     axis.setAutoRangeIncludesZero(false); [EOL]     assertEquals(0.9, axis.getLowerBound(), EPSILON); [EOL]     assertEquals(3.1, axis.getUpperBound(), EPSILON); [EOL] } <line_num>: 336,350
public void testXYAutoRange2() { [EOL]     XYSeries series = new XYSeries("Series 1"); [EOL]     series.add(1.0, 1.0); [EOL]     series.add(2.0, 2.0); [EOL]     series.add(3.0, 3.0); [EOL]     XYSeriesCollection dataset = new XYSeriesCollection(); [EOL]     dataset.addSeries(series); [EOL]     JFreeChart chart = ChartFactory.createScatterPlot("Test", "X", "Y", dataset, false); [EOL]     XYPlot plot = (XYPlot) chart.getPlot(); [EOL]     NumberAxis axis = (NumberAxis) plot.getRangeAxis(); [EOL]     axis.setAutoRangeIncludesZero(false); [EOL]     assertEquals(0.9, axis.getLowerBound(), EPSILON); [EOL]     assertEquals(3.1, axis.getUpperBound(), EPSILON); [EOL] } <line_num>: 356,370
public void testSetLowerBound() { [EOL]     NumberAxis axis = new NumberAxis("X"); [EOL]     axis.setRange(0.0, 10.0); [EOL]     axis.setLowerBound(5.0); [EOL]     assertEquals(5.0, axis.getLowerBound(), EPSILON); [EOL]     axis.setLowerBound(10.0); [EOL]     assertEquals(10.0, axis.getLowerBound(), EPSILON); [EOL]     assertEquals(11.0, axis.getUpperBound(), EPSILON); [EOL] } <line_num>: 419,431
