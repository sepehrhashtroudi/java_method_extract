public SubCategoryAxisTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 86,88
public static Test suite() { [EOL]     return new TestSuite(SubCategoryAxisTests.class); [EOL] } <line_num>: 77,79
public void testEquals() { [EOL]     SubCategoryAxis a1 = new SubCategoryAxis("Test"); [EOL]     SubCategoryAxis a2 = new SubCategoryAxis("Test"); [EOL]     assertTrue(a1.equals(a2)); [EOL]     assertTrue(a2.equals(a1)); [EOL]     a1.addSubCategory("Sub 1"); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2.addSubCategory("Sub 1"); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1.setSubLabelFont(new Font("Serif", Font.BOLD, 15)); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2.setSubLabelFont(new Font("Serif", Font.BOLD, 15)); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1.setSubLabelPaint(Color.red); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2.setSubLabelPaint(Color.red); [EOL]     assertTrue(a1.equals(a2)); [EOL] } <line_num>: 93,118
public void testHashCode() { [EOL]     SubCategoryAxis a1 = new SubCategoryAxis("Test"); [EOL]     SubCategoryAxis a2 = new SubCategoryAxis("Test"); [EOL]     assertTrue(a1.equals(a2)); [EOL]     int h1 = a1.hashCode(); [EOL]     int h2 = a2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 123,130
public void testCloning() { [EOL]     SubCategoryAxis a1 = new SubCategoryAxis("Test"); [EOL]     a1.addSubCategory("SubCategoryA"); [EOL]     SubCategoryAxis a2 = null; [EOL]     try { [EOL]         a2 = (SubCategoryAxis) a1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(a1 != a2); [EOL]     assertTrue(a1.getClass() == a2.getClass()); [EOL]     assertTrue(a1.equals(a2)); [EOL] } <line_num>: 135,148
public void testSerialization() { [EOL]     SubCategoryAxis a1 = new SubCategoryAxis("Test Axis"); [EOL]     a1.addSubCategory("SubCategoryA"); [EOL]     SubCategoryAxis a2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(a1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         a2 = (SubCategoryAxis) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(a1, a2); [EOL] } <line_num>: 153,172
public void test2275695() { [EOL]     JFreeChart chart = ChartFactory.createStackedBarChart("Test", "Category", "Value", null, true); [EOL]     CategoryPlot plot = (CategoryPlot) chart.getPlot(); [EOL]     plot.setDomainAxis(new SubCategoryAxis("SubCategoryAxis")); [EOL]     boolean success = false; [EOL]     try { [EOL]         BufferedImage image = new BufferedImage(200, 100, BufferedImage.TYPE_INT_RGB); [EOL]         Graphics2D g2 = image.createGraphics(); [EOL]         chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null, null); [EOL]         g2.dispose(); [EOL]         success = true; [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]         success = false; [EOL]     } [EOL]     assertTrue(success); [EOL] } <line_num>: 177,196
