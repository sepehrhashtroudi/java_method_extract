public LogAxisTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 86,88
public static Test suite() { [EOL]     return new TestSuite(LogAxisTests.class); [EOL] } <line_num>: 77,79
public void testCloning() { [EOL]     LogAxis a1 = new LogAxis("Test"); [EOL]     LogAxis a2 = null; [EOL]     try { [EOL]         a2 = (LogAxis) a1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(a1 != a2); [EOL]     assertTrue(a1.getClass() == a2.getClass()); [EOL]     assertTrue(a1.equals(a2)); [EOL] } <line_num>: 93,105
public void testEquals() { [EOL]     LogAxis a1 = new LogAxis("Test"); [EOL]     LogAxis a2 = new LogAxis("Test"); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1.setBase(2.0); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2.setBase(2.0); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1.setSmallestValue(0.1); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2.setSmallestValue(0.1); [EOL]     assertTrue(a1.equals(a2)); [EOL]     a1.setMinorTickCount(8); [EOL]     assertFalse(a1.equals(a2)); [EOL]     a2.setMinorTickCount(8); [EOL]     assertTrue(a1.equals(a2)); [EOL] } <line_num>: 110,129
public void testHashCode() { [EOL]     LogAxis a1 = new LogAxis("Test"); [EOL]     LogAxis a2 = new LogAxis("Test"); [EOL]     assertTrue(a1.equals(a2)); [EOL]     int h1 = a1.hashCode(); [EOL]     int h2 = a2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 134,141
public void testTranslateJava2DToValue() { [EOL]     LogAxis axis = new LogAxis(); [EOL]     axis.setRange(50.0, 100.0); [EOL]     Rectangle2D dataArea = new Rectangle2D.Double(10.0, 50.0, 400.0, 300.0); [EOL]     double y1 = axis.java2DToValue(75.0, dataArea, RectangleEdge.LEFT); [EOL]     assertEquals(94.3874312681693, y1, EPSILON); [EOL]     double y2 = axis.java2DToValue(75.0, dataArea, RectangleEdge.RIGHT); [EOL]     assertEquals(94.3874312681693, y2, EPSILON); [EOL]     double x1 = axis.java2DToValue(75.0, dataArea, RectangleEdge.TOP); [EOL]     assertEquals(55.961246381405, x1, EPSILON); [EOL]     double x2 = axis.java2DToValue(75.0, dataArea, RectangleEdge.BOTTOM); [EOL]     assertEquals(55.961246381405, x2, EPSILON); [EOL]     axis.setInverted(true); [EOL]     double y3 = axis.java2DToValue(75.0, dataArea, RectangleEdge.LEFT); [EOL]     assertEquals(52.9731547179647, y3, EPSILON); [EOL]     double y4 = axis.java2DToValue(75.0, dataArea, RectangleEdge.RIGHT); [EOL]     assertEquals(52.9731547179647, y4, EPSILON); [EOL]     double x3 = axis.java2DToValue(75.0, dataArea, RectangleEdge.TOP); [EOL]     assertEquals(89.3475453695651, x3, EPSILON); [EOL]     double x4 = axis.java2DToValue(75.0, dataArea, RectangleEdge.BOTTOM); [EOL]     assertEquals(89.3475453695651, x4, EPSILON); [EOL] } <line_num>: 148,169
public void testSerialization() { [EOL]     LogAxis a1 = new LogAxis("Test Axis"); [EOL]     LogAxis a2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(a1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         a2 = (LogAxis) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(a1, a2); [EOL] } <line_num>: 174,195
public void testAutoRange1() { [EOL]     DefaultCategoryDataset dataset = new DefaultCategoryDataset(); [EOL]     dataset.setValue(100.0, "Row 1", "Column 1"); [EOL]     dataset.setValue(200.0, "Row 1", "Column 2"); [EOL]     JFreeChart chart = ChartFactory.createBarChart("Test", "Categories", "Value", dataset, false); [EOL]     CategoryPlot plot = (CategoryPlot) chart.getPlot(); [EOL]     LogAxis axis = new LogAxis("Log(Y)"); [EOL]     plot.setRangeAxis(axis); [EOL]     assertEquals(0.0, axis.getLowerBound(), EPSILON); [EOL]     assertEquals(2.6066426411261268E7, axis.getUpperBound(), EPSILON); [EOL] } <line_num>: 201,212
public void testAutoRange3() { [EOL]     DefaultCategoryDataset dataset = new DefaultCategoryDataset(); [EOL]     dataset.setValue(100.0, "Row 1", "Column 1"); [EOL]     dataset.setValue(200.0, "Row 1", "Column 2"); [EOL]     JFreeChart chart = ChartFactory.createLineChart("Test", "Categories", "Value", dataset, false); [EOL]     CategoryPlot plot = (CategoryPlot) chart.getPlot(); [EOL]     LogAxis axis = new LogAxis("Log(Y)"); [EOL]     plot.setRangeAxis(axis); [EOL]     assertEquals(96.59363289248458, axis.getLowerBound(), EPSILON); [EOL]     assertEquals(207.0529847682752, axis.getUpperBound(), EPSILON); [EOL]     DefaultCategoryDataset dataset2 = new DefaultCategoryDataset(); [EOL]     dataset2.setValue(900.0, "Row 1", "Column 1"); [EOL]     dataset2.setValue(1000.0, "Row 1", "Column 2"); [EOL]     plot.setDataset(dataset2); [EOL]     assertEquals(895.2712433374774, axis.getLowerBound(), EPSILON); [EOL]     assertEquals(1005.2819262292991, axis.getUpperBound(), EPSILON); [EOL] } <line_num>: 219,238
public void testXYAutoRange1() { [EOL]     XYSeries series = new XYSeries("Series 1"); [EOL]     series.add(1.0, 1.0); [EOL]     series.add(2.0, 2.0); [EOL]     series.add(3.0, 3.0); [EOL]     XYSeriesCollection dataset = new XYSeriesCollection(); [EOL]     dataset.addSeries(series); [EOL]     JFreeChart chart = ChartFactory.createScatterPlot("Test", "X", "Y", dataset, false); [EOL]     XYPlot plot = (XYPlot) chart.getPlot(); [EOL]     LogAxis axis = new LogAxis("Log(Y)"); [EOL]     plot.setRangeAxis(axis); [EOL]     assertEquals(0.9465508226401592, axis.getLowerBound(), EPSILON); [EOL]     assertEquals(3.1694019256486126, axis.getUpperBound(), EPSILON); [EOL] } <line_num>: 244,258
public void testXYAutoRange2() { [EOL]     XYSeries series = new XYSeries("Series 1"); [EOL]     series.add(1.0, 1.0); [EOL]     series.add(2.0, 2.0); [EOL]     series.add(3.0, 3.0); [EOL]     XYSeriesCollection dataset = new XYSeriesCollection(); [EOL]     dataset.addSeries(series); [EOL]     JFreeChart chart = ChartFactory.createScatterPlot("Test", "X", "Y", dataset, false); [EOL]     XYPlot plot = (XYPlot) chart.getPlot(); [EOL]     LogAxis axis = new LogAxis("Log(Y)"); [EOL]     plot.setRangeAxis(axis); [EOL]     assertEquals(0.9465508226401592, axis.getLowerBound(), EPSILON); [EOL]     assertEquals(3.1694019256486126, axis.getUpperBound(), EPSILON); [EOL] } <line_num>: 264,278
public void testSetLowerBound() { [EOL]     LogAxis axis = new LogAxis("X"); [EOL]     axis.setRange(0.0, 10.0); [EOL]     axis.setLowerBound(5.0); [EOL]     assertEquals(5.0, axis.getLowerBound(), EPSILON); [EOL]     axis.setLowerBound(10.0); [EOL]     assertEquals(10.0, axis.getLowerBound(), EPSILON); [EOL]     assertEquals(11.0, axis.getUpperBound(), EPSILON); [EOL] } <line_num>: 283,291
public void testTickMarksVisibleDefault() { [EOL]     LogAxis axis = new LogAxis("Log Axis"); [EOL]     assertTrue(axis.isTickMarksVisible()); [EOL] } <line_num>: 296,299
