public AxisLocationTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 76,78
public static Test suite() { [EOL]     return new TestSuite(AxisLocationTests.class); [EOL] } <line_num>: 67,69
public void testEquals() { [EOL]     assertEquals(AxisLocation.TOP_OR_RIGHT, AxisLocation.TOP_OR_RIGHT); [EOL]     assertEquals(AxisLocation.BOTTOM_OR_RIGHT, AxisLocation.BOTTOM_OR_RIGHT); [EOL]     assertEquals(AxisLocation.TOP_OR_LEFT, AxisLocation.TOP_OR_LEFT); [EOL]     assertEquals(AxisLocation.BOTTOM_OR_LEFT, AxisLocation.BOTTOM_OR_LEFT); [EOL] } <line_num>: 83,89
public void testHashCode() { [EOL]     AxisLocation a1 = AxisLocation.TOP_OR_RIGHT; [EOL]     AxisLocation a2 = AxisLocation.TOP_OR_RIGHT; [EOL]     assertTrue(a1.equals(a2)); [EOL]     int h1 = a1.hashCode(); [EOL]     int h2 = a2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 94,101
public void testSerialization() { [EOL]     AxisLocation location1 = AxisLocation.BOTTOM_OR_RIGHT; [EOL]     AxisLocation location2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(location1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         location2 = (AxisLocation) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(location1, location2); [EOL]     boolean same = location1 == location2; [EOL]     assertEquals(true, same); [EOL] } <line_num>: 106,126
