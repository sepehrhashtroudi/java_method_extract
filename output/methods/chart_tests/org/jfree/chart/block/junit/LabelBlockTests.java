public LabelBlockTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 80,82
public static Test suite() { [EOL]     return new TestSuite(LabelBlockTests.class); [EOL] } <line_num>: 71,73
public void testEquals() { [EOL]     LabelBlock b1 = new LabelBlock("ABC", new Font("Dialog", Font.PLAIN, 12), Color.red); [EOL]     LabelBlock b2 = new LabelBlock("ABC", new Font("Dialog", Font.PLAIN, 12), Color.red); [EOL]     assertTrue(b1.equals(b2)); [EOL]     assertTrue(b2.equals(b2)); [EOL]     b1 = new LabelBlock("XYZ", new Font("Dialog", Font.PLAIN, 12), Color.red); [EOL]     assertFalse(b1.equals(b2)); [EOL]     b2 = new LabelBlock("XYZ", new Font("Dialog", Font.PLAIN, 12), Color.red); [EOL]     assertTrue(b1.equals(b2)); [EOL]     b1 = new LabelBlock("XYZ", new Font("Dialog", Font.BOLD, 12), Color.red); [EOL]     assertFalse(b1.equals(b2)); [EOL]     b2 = new LabelBlock("XYZ", new Font("Dialog", Font.BOLD, 12), Color.red); [EOL]     assertTrue(b1.equals(b2)); [EOL]     b1 = new LabelBlock("XYZ", new Font("Dialog", Font.BOLD, 12), Color.blue); [EOL]     assertFalse(b1.equals(b2)); [EOL]     b2 = new LabelBlock("XYZ", new Font("Dialog", Font.BOLD, 12), Color.blue); [EOL]     assertTrue(b1.equals(b2)); [EOL]     b1.setToolTipText("Tooltip"); [EOL]     assertFalse(b1.equals(b2)); [EOL]     b2.setToolTipText("Tooltip"); [EOL]     assertTrue(b1.equals(b2)); [EOL]     b1.setURLText("URL"); [EOL]     assertFalse(b1.equals(b2)); [EOL]     b2.setURLText("URL"); [EOL]     assertTrue(b1.equals(b2)); [EOL]     b1.setContentAlignmentPoint(TextBlockAnchor.CENTER_RIGHT); [EOL]     assertFalse(b1.equals(b2)); [EOL]     b2.setContentAlignmentPoint(TextBlockAnchor.CENTER_RIGHT); [EOL]     assertTrue(b1.equals(b2)); [EOL]     b1.setTextAnchor(RectangleAnchor.BOTTOM_RIGHT); [EOL]     assertFalse(b1.equals(b2)); [EOL]     b2.setTextAnchor(RectangleAnchor.BOTTOM_RIGHT); [EOL]     assertTrue(b1.equals(b2)); [EOL] } <line_num>: 87,135
public void testCloning() { [EOL]     LabelBlock b1 = new LabelBlock("ABC", new Font("Dialog", Font.PLAIN, 12), Color.red); [EOL]     LabelBlock b2 = null; [EOL]     try { [EOL]         b2 = (LabelBlock) b1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(b1 != b2); [EOL]     assertTrue(b1.getClass() == b2.getClass()); [EOL]     assertTrue(b1.equals(b2)); [EOL] } <line_num>: 140,154
public void testSerialization() { [EOL]     GradientPaint gp = new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.blue); [EOL]     LabelBlock b1 = new LabelBlock("ABC", new Font("Dialog", Font.PLAIN, 12), gp); [EOL]     LabelBlock b2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(b1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         b2 = (LabelBlock) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(b1, b2); [EOL] } <line_num>: 159,180
