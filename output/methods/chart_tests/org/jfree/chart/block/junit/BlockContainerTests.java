public BlockContainerTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 78,80
public static Test suite() { [EOL]     return new TestSuite(BlockContainerTests.class); [EOL] } <line_num>: 69,71
public void testEquals() { [EOL]     BlockContainer c1 = new BlockContainer(new FlowArrangement()); [EOL]     BlockContainer c2 = new BlockContainer(new FlowArrangement()); [EOL]     assertTrue(c1.equals(c2)); [EOL]     assertTrue(c2.equals(c2)); [EOL]     c1.setArrangement(new ColumnArrangement()); [EOL]     assertFalse(c1.equals(c2)); [EOL]     c2.setArrangement(new ColumnArrangement()); [EOL]     assertTrue(c1.equals(c2)); [EOL]     c1.add(new EmptyBlock(1.2, 3.4)); [EOL]     assertFalse(c1.equals(c2)); [EOL]     c2.add(new EmptyBlock(1.2, 3.4)); [EOL]     assertTrue(c1.equals(c2)); [EOL] } <line_num>: 85,100
public void testCloning() { [EOL]     BlockContainer c1 = new BlockContainer(new FlowArrangement()); [EOL]     c1.add(new EmptyBlock(1.2, 3.4)); [EOL]     BlockContainer c2 = null; [EOL]     try { [EOL]         c2 = (BlockContainer) c1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         System.err.println("Failed to clone."); [EOL]     } [EOL]     assertTrue(c1 != c2); [EOL]     assertTrue(c1.getClass() == c2.getClass()); [EOL]     assertTrue(c1.equals(c2)); [EOL] } <line_num>: 105,120
public void testSerialization() { [EOL]     BlockContainer c1 = new BlockContainer(); [EOL]     c1.add(new EmptyBlock(1.2, 3.4)); [EOL]     BlockContainer c2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(c1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         c2 = (BlockContainer) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         fail(e.toString()); [EOL]     } [EOL]     assertEquals(c1, c2); [EOL] } <line_num>: 125,145
