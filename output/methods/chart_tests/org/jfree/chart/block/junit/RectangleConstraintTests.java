public RectangleConstraintTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 74,76
public static Test suite() { [EOL]     return new TestSuite(RectangleConstraintTests.class); [EOL] } <line_num>: 65,67
public void testCalculateConstrainedSize() { [EOL]     Size2D s; [EOL]     RectangleConstraint c1 = RectangleConstraint.NONE; [EOL]     s = c1.calculateConstrainedSize(new Size2D(1.2, 3.4)); [EOL]     assertEquals(s.width, 1.2, EPSILON); [EOL]     assertEquals(s.height, 3.4, EPSILON); [EOL]     RectangleConstraint c2 = new RectangleConstraint(0.0, new Range(0.0, 0.0), LengthConstraintType.NONE, 0.0, new Range(2.0, 3.0), LengthConstraintType.RANGE); [EOL]     s = c2.calculateConstrainedSize(new Size2D(1.2, 3.4)); [EOL]     assertEquals(s.width, 1.2, EPSILON); [EOL]     assertEquals(s.height, 3.0, EPSILON); [EOL]     RectangleConstraint c3 = new RectangleConstraint(0.0, null, LengthConstraintType.NONE, 9.9, null, LengthConstraintType.FIXED); [EOL]     s = c3.calculateConstrainedSize(new Size2D(1.2, 3.4)); [EOL]     assertEquals(s.width, 1.2, EPSILON); [EOL]     assertEquals(s.height, 9.9, EPSILON); [EOL]     RectangleConstraint c4 = new RectangleConstraint(0.0, new Range(2.0, 3.0), LengthConstraintType.RANGE, 0.0, new Range(0.0, 0.0), LengthConstraintType.NONE); [EOL]     s = c4.calculateConstrainedSize(new Size2D(1.2, 3.4)); [EOL]     assertEquals(s.width, 2.0, EPSILON); [EOL]     assertEquals(s.height, 3.4, EPSILON); [EOL]     RectangleConstraint c5 = new RectangleConstraint(0.0, new Range(2.0, 3.0), LengthConstraintType.RANGE, 0.0, new Range(2.0, 3.0), LengthConstraintType.RANGE); [EOL]     s = c5.calculateConstrainedSize(new Size2D(1.2, 3.4)); [EOL]     assertEquals(s.width, 2.0, EPSILON); [EOL]     assertEquals(s.height, 3.0, EPSILON); [EOL]     RectangleConstraint c6 = new RectangleConstraint(0.0, null, LengthConstraintType.NONE, 9.9, null, LengthConstraintType.FIXED); [EOL]     s = c6.calculateConstrainedSize(new Size2D(1.2, 3.4)); [EOL]     assertEquals(s.width, 1.2, EPSILON); [EOL]     assertEquals(s.height, 9.9, EPSILON); [EOL]     RectangleConstraint c7 = RectangleConstraint.NONE; [EOL]     s = c7.calculateConstrainedSize(new Size2D(1.2, 3.4)); [EOL]     assertEquals(s.width, 1.2, EPSILON); [EOL]     assertEquals(s.height, 3.4, EPSILON); [EOL]     RectangleConstraint c8 = new RectangleConstraint(0.0, new Range(0.0, 0.0), LengthConstraintType.NONE, 0.0, new Range(2.0, 3.0), LengthConstraintType.RANGE); [EOL]     s = c8.calculateConstrainedSize(new Size2D(1.2, 3.4)); [EOL]     assertEquals(s.width, 1.2, EPSILON); [EOL]     assertEquals(s.height, 3.0, EPSILON); [EOL]     RectangleConstraint c9 = new RectangleConstraint(0.0, null, LengthConstraintType.NONE, 9.9, null, LengthConstraintType.FIXED); [EOL]     s = c9.calculateConstrainedSize(new Size2D(1.2, 3.4)); [EOL]     assertEquals(s.width, 1.2, EPSILON); [EOL]     assertEquals(s.height, 9.9, EPSILON); [EOL] } <line_num>: 81,159
