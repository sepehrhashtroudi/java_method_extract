public ColorBlockTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 78,80
public static Test suite() { [EOL]     return new TestSuite(ColorBlockTests.class); [EOL] } <line_num>: 69,71
public void testEquals() { [EOL]     ColorBlock b1 = new ColorBlock(Color.red, 1.0, 2.0); [EOL]     ColorBlock b2 = new ColorBlock(Color.red, 1.0, 2.0); [EOL]     assertTrue(b1.equals(b2)); [EOL]     assertTrue(b2.equals(b2)); [EOL]     b1 = new ColorBlock(Color.blue, 1.0, 2.0); [EOL]     assertFalse(b1.equals(b2)); [EOL]     b2 = new ColorBlock(Color.blue, 1.0, 2.0); [EOL]     assertTrue(b1.equals(b2)); [EOL]     b1 = new ColorBlock(Color.blue, 1.1, 2.0); [EOL]     assertFalse(b1.equals(b2)); [EOL]     b2 = new ColorBlock(Color.blue, 1.1, 2.0); [EOL]     assertTrue(b1.equals(b2)); [EOL]     b1 = new ColorBlock(Color.blue, 1.1, 2.2); [EOL]     assertFalse(b1.equals(b2)); [EOL]     b2 = new ColorBlock(Color.blue, 1.1, 2.2); [EOL]     assertTrue(b1.equals(b2)); [EOL] } <line_num>: 85,105
public void testCloning() { [EOL]     GradientPaint gp = new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.blue); [EOL]     Rectangle2D bounds1 = new Rectangle2D.Double(10.0, 20.0, 30.0, 40.0); [EOL]     ColorBlock b1 = new ColorBlock(gp, 1.0, 2.0); [EOL]     b1.setBounds(bounds1); [EOL]     ColorBlock b2 = null; [EOL]     try { [EOL]         b2 = (ColorBlock) b1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         fail(e.toString()); [EOL]     } [EOL]     assertTrue(b1 != b2); [EOL]     assertTrue(b1.getClass() == b2.getClass()); [EOL]     assertTrue(b1.equals(b2)); [EOL]     bounds1.setRect(1.0, 2.0, 3.0, 4.0); [EOL]     assertFalse(b1.equals(b2)); [EOL]     b2.setBounds(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0)); [EOL]     assertTrue(b1.equals(b2)); [EOL] } <line_num>: 110,133
public void testSerialization() { [EOL]     GradientPaint gp = new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.blue); [EOL]     ColorBlock b1 = new ColorBlock(gp, 1.0, 2.0); [EOL]     ColorBlock b2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(b1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         b2 = (ColorBlock) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         fail(e.toString()); [EOL]     } [EOL]     assertEquals(b1, b2); [EOL] } <line_num>: 138,158
