public ShortTextTitleTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 75,77
public static Test suite() { [EOL]     return new TestSuite(ShortTextTitleTests.class); [EOL] } <line_num>: 66,68
public void testEquals() { [EOL]     ShortTextTitle t1 = new ShortTextTitle("ABC"); [EOL]     ShortTextTitle t2 = new ShortTextTitle("ABC"); [EOL]     assertEquals(t1, t2); [EOL]     t1.setText("Test 1"); [EOL]     assertFalse(t1.equals(t2)); [EOL]     t2.setText("Test 1"); [EOL]     assertTrue(t1.equals(t2)); [EOL] } <line_num>: 82,91
public void testHashcode() { [EOL]     ShortTextTitle t1 = new ShortTextTitle("ABC"); [EOL]     ShortTextTitle t2 = new ShortTextTitle("ABC"); [EOL]     assertTrue(t1.equals(t2)); [EOL]     int h1 = t1.hashCode(); [EOL]     int h2 = t2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 96,103
public void testCloning() { [EOL]     ShortTextTitle t1 = new ShortTextTitle("ABC"); [EOL]     ShortTextTitle t2 = null; [EOL]     try { [EOL]         t2 = (ShortTextTitle) t1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(t1 != t2); [EOL]     assertTrue(t1.getClass() == t2.getClass()); [EOL]     assertTrue(t1.equals(t2)); [EOL] } <line_num>: 108,120
public void testSerialization() { [EOL]     ShortTextTitle t1 = new ShortTextTitle("ABC"); [EOL]     ShortTextTitle t2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(t1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         t2 = (ShortTextTitle) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(t1, t2); [EOL] } <line_num>: 125,146
