public ImageTitleTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 74,76
public static Test suite() { [EOL]     return new TestSuite(ImageTitleTests.class); [EOL] } <line_num>: 65,67
public void testEquals() { [EOL]     ImageTitle t1 = new ImageTitle(JFreeChart.INFO.getLogo()); [EOL]     ImageTitle t2 = new ImageTitle(JFreeChart.INFO.getLogo()); [EOL]     assertEquals(t1, t2); [EOL] } <line_num>: 81,85
public void testHashcode() { [EOL]     ImageTitle t1 = new ImageTitle(JFreeChart.INFO.getLogo()); [EOL]     ImageTitle t2 = new ImageTitle(JFreeChart.INFO.getLogo()); [EOL]     assertTrue(t1.equals(t2)); [EOL]     int h1 = t1.hashCode(); [EOL]     int h2 = t2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 90,97
public void testCloning() { [EOL]     ImageTitle t1 = new ImageTitle(JFreeChart.INFO.getLogo()); [EOL]     ImageTitle t2 = null; [EOL]     try { [EOL]         t2 = (ImageTitle) t1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(t1 != t2); [EOL]     assertTrue(t1.getClass() == t2.getClass()); [EOL]     assertTrue(t1.equals(t2)); [EOL] } <line_num>: 102,114
public void testSerialization() { [EOL] } <line_num>: 119,121
public void testWidthAndHeight() { [EOL]     ImageTitle t1 = new ImageTitle(JFreeChart.INFO.getLogo()); [EOL]     assertEquals(100, t1.getWidth(), EPSILON); [EOL]     assertEquals(100, t1.getHeight(), EPSILON); [EOL] } <line_num>: 128,132
public void testArrangeNN() { [EOL]     BufferedImage image = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB); [EOL]     Graphics2D g2 = image.createGraphics(); [EOL]     ImageTitle t = new ImageTitle(JFreeChart.INFO.getLogo()); [EOL]     Size2D s = t.arrange(g2); [EOL]     assertEquals(102.0, s.getWidth(), EPSILON); [EOL]     assertEquals(102.0, s.getHeight(), EPSILON); [EOL]     t.setPadding(1.0, 2.0, 3.0, 4.0); [EOL]     s = t.arrange(g2); [EOL]     assertEquals(106.0, s.getWidth(), EPSILON); [EOL]     assertEquals(104.0, s.getHeight(), EPSILON); [EOL]     t.setMargin(5.0, 6.0, 7.0, 8.0); [EOL]     s = t.arrange(g2); [EOL]     assertEquals(120.0, s.getWidth(), EPSILON); [EOL]     assertEquals(116.0, s.getHeight(), EPSILON); [EOL] } <line_num>: 137,155
