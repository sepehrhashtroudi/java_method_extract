public LegendTitleTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 84,86
public static Test suite() { [EOL]     return new TestSuite(LegendTitleTests.class); [EOL] } <line_num>: 75,77
public void testEquals() { [EOL]     XYPlot plot1 = new XYPlot(); [EOL]     LegendTitle t1 = new LegendTitle(plot1); [EOL]     LegendTitle t2 = new LegendTitle(plot1); [EOL]     assertEquals(t1, t2); [EOL]     t1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow)); [EOL]     assertFalse(t1.equals(t2)); [EOL]     t2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow)); [EOL]     assertTrue(t1.equals(t2)); [EOL]     t1.setLegendItemGraphicEdge(RectangleEdge.BOTTOM); [EOL]     assertFalse(t1.equals(t2)); [EOL]     t2.setLegendItemGraphicEdge(RectangleEdge.BOTTOM); [EOL]     assertTrue(t1.equals(t2)); [EOL]     t1.setLegendItemGraphicAnchor(RectangleAnchor.BOTTOM_LEFT); [EOL]     assertFalse(t1.equals(t2)); [EOL]     t2.setLegendItemGraphicAnchor(RectangleAnchor.BOTTOM_LEFT); [EOL]     assertTrue(t1.equals(t2)); [EOL]     t1.setLegendItemGraphicLocation(RectangleAnchor.TOP_LEFT); [EOL]     assertFalse(t1.equals(t2)); [EOL]     t2.setLegendItemGraphicLocation(RectangleAnchor.TOP_LEFT); [EOL]     assertTrue(t1.equals(t2)); [EOL]     t1.setItemFont(new Font("Dialog", Font.PLAIN, 19)); [EOL]     assertFalse(t1.equals(t2)); [EOL]     t2.setItemFont(new Font("Dialog", Font.PLAIN, 19)); [EOL]     assertTrue(t1.equals(t2)); [EOL] } <line_num>: 91,125
public void testHashcode() { [EOL]     XYPlot plot1 = new XYPlot(); [EOL]     LegendTitle t1 = new LegendTitle(plot1); [EOL]     LegendTitle t2 = new LegendTitle(plot1); [EOL]     assertTrue(t1.equals(t2)); [EOL]     int h1 = t1.hashCode(); [EOL]     int h2 = t2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 130,138
public void testCloning() { [EOL]     XYPlot plot = new XYPlot(); [EOL]     Rectangle2D bounds1 = new Rectangle2D.Double(10.0, 20.0, 30.0, 40.0); [EOL]     LegendTitle t1 = new LegendTitle(plot); [EOL]     t1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow)); [EOL]     t1.setBounds(bounds1); [EOL]     LegendTitle t2 = null; [EOL]     try { [EOL]         t2 = (LegendTitle) t1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(t1 != t2); [EOL]     assertTrue(t1.getClass() == t2.getClass()); [EOL]     assertTrue(t1.equals(t2)); [EOL]     bounds1.setFrame(40.0, 30.0, 20.0, 10.0); [EOL]     assertFalse(t1.equals(t2)); [EOL]     t2.setBounds(new Rectangle2D.Double(40.0, 30.0, 20.0, 10.0)); [EOL]     assertTrue(t1.equals(t2)); [EOL] } <line_num>: 143,166
public void testSerialization() { [EOL]     XYPlot plot = new XYPlot(); [EOL]     LegendTitle t1 = new LegendTitle(plot); [EOL]     LegendTitle t2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(t1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         t2 = (LegendTitle) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         fail(e.toString()); [EOL]     } [EOL]     assertTrue(t1.equals(t2)); [EOL]     assertTrue(t2.getSources()[0].equals(plot)); [EOL] } <line_num>: 171,194
