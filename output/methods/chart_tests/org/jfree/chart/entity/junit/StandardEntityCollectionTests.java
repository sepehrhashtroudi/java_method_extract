public StandardEntityCollectionTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 78,80
public static Test suite() { [EOL]     return new TestSuite(StandardEntityCollectionTests.class); [EOL] } <line_num>: 69,71
public void testEquals() { [EOL]     StandardEntityCollection c1 = new StandardEntityCollection(); [EOL]     StandardEntityCollection c2 = new StandardEntityCollection(); [EOL]     assertTrue(c1.equals(c2)); [EOL]     PieSectionEntity e1 = new PieSectionEntity(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), new DefaultPieDataset(), 0, 1, "Key", "ToolTip", "URL"); [EOL]     c1.add(e1); [EOL]     assertFalse(c1.equals(c2)); [EOL]     PieSectionEntity e2 = new PieSectionEntity(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), new DefaultPieDataset(), 0, 1, "Key", "ToolTip", "URL"); [EOL]     c2.add(e2); [EOL]     assertTrue(c1.equals(c2)); [EOL] } <line_num>: 85,100
public void testCloning() { [EOL]     PieSectionEntity e1 = new PieSectionEntity(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), new DefaultPieDataset(), 0, 1, "Key", "ToolTip", "URL"); [EOL]     StandardEntityCollection c1 = new StandardEntityCollection(); [EOL]     c1.add(e1); [EOL]     StandardEntityCollection c2 = null; [EOL]     try { [EOL]         c2 = (StandardEntityCollection) c1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(c1 != c2); [EOL]     assertTrue(c1.getClass() == c2.getClass()); [EOL]     assertTrue(c1.equals(c2)); [EOL]     c1.clear(); [EOL]     assertFalse(c1.equals(c2)); [EOL]     c2.clear(); [EOL]     assertTrue(c1.equals(c2)); [EOL] } <line_num>: 105,127
public void testSerialization() { [EOL]     PieSectionEntity e1 = new PieSectionEntity(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), new DefaultPieDataset(), 0, 1, "Key", "ToolTip", "URL"); [EOL]     StandardEntityCollection c1 = new StandardEntityCollection(); [EOL]     c1.add(e1); [EOL]     StandardEntityCollection c2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(c1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         c2 = (StandardEntityCollection) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(c1, c2); [EOL] } <line_num>: 132,154
