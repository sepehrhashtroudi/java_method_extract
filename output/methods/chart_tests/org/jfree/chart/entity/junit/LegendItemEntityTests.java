public LegendItemEntityTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 78,80
public static Test suite() { [EOL]     return new TestSuite(LegendItemEntityTests.class); [EOL] } <line_num>: 69,71
public void testEquals() { [EOL]     LegendItemEntity e1 = new LegendItemEntity(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0)); [EOL]     LegendItemEntity e2 = new LegendItemEntity(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0)); [EOL]     assertTrue(e1.equals(e2)); [EOL]     e1.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0)); [EOL]     assertFalse(e1.equals(e2)); [EOL]     e2.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0)); [EOL]     assertTrue(e1.equals(e2)); [EOL]     e1.setToolTipText("New ToolTip"); [EOL]     assertFalse(e1.equals(e2)); [EOL]     e2.setToolTipText("New ToolTip"); [EOL]     assertTrue(e1.equals(e2)); [EOL]     e1.setURLText("New URL"); [EOL]     assertFalse(e1.equals(e2)); [EOL]     e2.setURLText("New URL"); [EOL]     assertTrue(e1.equals(e2)); [EOL]     e1.setDataset(new DefaultCategoryDataset()); [EOL]     assertFalse(e1.equals(e2)); [EOL]     e2.setDataset(new DefaultCategoryDataset()); [EOL]     assertTrue(e1.equals(e2)); [EOL]     e1.setSeriesKey("A"); [EOL]     assertFalse(e1.equals(e2)); [EOL]     e2.setSeriesKey("A"); [EOL]     assertTrue(e1.equals(e2)); [EOL] } <line_num>: 85,116
public void testCloning() { [EOL]     LegendItemEntity e1 = new LegendItemEntity(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0)); [EOL]     LegendItemEntity e2 = null; [EOL]     try { [EOL]         e2 = (LegendItemEntity) e1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(e1 != e2); [EOL]     assertTrue(e1.getClass() == e2.getClass()); [EOL]     assertTrue(e1.equals(e2)); [EOL] } <line_num>: 121,135
public void testSerialization() { [EOL]     LegendItemEntity e1 = new LegendItemEntity(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0)); [EOL]     LegendItemEntity e2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(e1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         e2 = (LegendItemEntity) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(e1, e2); [EOL] } <line_num>: 140,159
