public StrokeMapTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 76,78
public static Test suite() { [EOL]     return new TestSuite(StrokeMapTests.class); [EOL] } <line_num>: 67,69
public void testGetStroke() { [EOL]     StrokeMap m1 = new StrokeMap(); [EOL]     assertEquals(null, m1.getStroke("A")); [EOL]     m1.put("A", new BasicStroke(1.1f)); [EOL]     assertEquals(new BasicStroke(1.1f), m1.getStroke("A")); [EOL]     m1.put("A", null); [EOL]     assertEquals(null, m1.getStroke("A")); [EOL]     boolean pass = false; [EOL]     try { [EOL]         m1.getStroke(null); [EOL]     } catch (IllegalArgumentException e) { [EOL]         pass = true; [EOL]     } [EOL]     assertTrue(pass); [EOL] } <line_num>: 83,100
public void testPut() { [EOL]     StrokeMap m1 = new StrokeMap(); [EOL]     m1.put("A", new BasicStroke(1.1f)); [EOL]     assertEquals(new BasicStroke(1.1f), m1.getStroke("A")); [EOL]     boolean pass = false; [EOL]     try { [EOL]         m1.put(null, new BasicStroke(1.1f)); [EOL]     } catch (IllegalArgumentException e) { [EOL]         pass = true; [EOL]     } [EOL]     assertTrue(pass); [EOL] } <line_num>: 105,119
public void testEquals() { [EOL]     StrokeMap m1 = new StrokeMap(); [EOL]     StrokeMap m2 = new StrokeMap(); [EOL]     assertTrue(m1.equals(m1)); [EOL]     assertTrue(m1.equals(m2)); [EOL]     assertFalse(m1.equals(null)); [EOL]     assertFalse(m1.equals("ABC")); [EOL]     m1.put("K1", new BasicStroke(1.1f)); [EOL]     assertFalse(m1.equals(m2)); [EOL]     m2.put("K1", new BasicStroke(1.1f)); [EOL]     assertTrue(m1.equals(m2)); [EOL]     m1.put("K2", new BasicStroke(2.2f)); [EOL]     assertFalse(m1.equals(m2)); [EOL]     m2.put("K2", new BasicStroke(2.2f)); [EOL]     assertTrue(m1.equals(m2)); [EOL]     m1.put("K2", null); [EOL]     assertFalse(m1.equals(m2)); [EOL]     m2.put("K2", null); [EOL]     assertTrue(m1.equals(m2)); [EOL] } <line_num>: 124,146
public void testCloning() { [EOL]     StrokeMap m1 = new StrokeMap(); [EOL]     StrokeMap m2 = null; [EOL]     try { [EOL]         m2 = (StrokeMap) m1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(m1.equals(m2)); [EOL]     m1.put("K1", new BasicStroke(1.1f)); [EOL]     m1.put("K2", new BasicStroke(2.2f)); [EOL]     try { [EOL]         m2 = (StrokeMap) m1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(m1.equals(m2)); [EOL] } <line_num>: 151,171
public void testSerialization1() { [EOL]     StrokeMap m1 = new StrokeMap(); [EOL]     StrokeMap m2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(m1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         m2 = (StrokeMap) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(m1, m2); [EOL] } <line_num>: 176,194
public void testSerialization2() { [EOL]     StrokeMap m1 = new StrokeMap(); [EOL]     m1.put("K1", new BasicStroke(1.1f)); [EOL]     m1.put("K2", new BasicStroke(2.2f)); [EOL]     StrokeMap m2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(m1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         m2 = (StrokeMap) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(m1, m2); [EOL] } <line_num>: 199,219
