public LineUtilitiesTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 71,73
public static Test suite() { [EOL]     return new TestSuite(LineUtilitiesTests.class); [EOL] } <line_num>: 62,64
private boolean lineEquals(Line2D line, double x1, double y1, double x2, double y2) { [EOL]     boolean result = true; [EOL]     double epsilon = 0.0000000001; [EOL]     if (Math.abs(line.getX1() - x1) > epsilon) [EOL]         result = false; [EOL]     if (Math.abs(line.getY1() - y1) > epsilon) [EOL]         result = false; [EOL]     if (Math.abs(line.getX2() - x2) > epsilon) [EOL]         result = false; [EOL]     if (Math.abs(line.getY2() - y2) > epsilon) [EOL]         result = false; [EOL]     if (result == false) { [EOL]         System.out.println(line.getX1() + ", " + line.getY1() + ", " + line.getX2() + ", " + line.getY2()); [EOL]     } [EOL]     return result; [EOL] } <line_num>: 75,88
public void testClipLine() { [EOL]     Rectangle2D rect = new Rectangle2D.Double(1.0, 1.0, 1.0, 1.0); [EOL]     Line2D line = new Line2D.Double(); [EOL]     assertFalse(LineUtilities.clipLine(line, rect)); [EOL]     assertTrue(lineEquals(line, 0.0, 0.0, 0.0, 0.0)); [EOL]     line.setLine(0.5, 0.5, 0.6, 0.6); [EOL]     assertFalse(LineUtilities.clipLine(line, rect)); [EOL]     assertTrue(lineEquals(line, 0.5, 0.5, 0.6, 0.6)); [EOL]     line.setLine(0.5, 0.5, 1.6, 0.6); [EOL]     assertFalse(LineUtilities.clipLine(line, rect)); [EOL]     assertTrue(lineEquals(line, 0.5, 0.5, 1.6, 0.6)); [EOL]     line.setLine(0.5, 0.5, 2.6, 0.6); [EOL]     assertFalse(LineUtilities.clipLine(line, rect)); [EOL]     assertTrue(lineEquals(line, 0.5, 0.5, 2.6, 0.6)); [EOL]     line.setLine(0.5, 0.5, 0.6, 1.6); [EOL]     assertFalse(LineUtilities.clipLine(line, rect)); [EOL]     assertTrue(lineEquals(line, 0.5, 0.5, 0.6, 1.6)); [EOL]     line.setLine(0.5, 0.5, 1.6, 1.6); [EOL]     assertTrue(LineUtilities.clipLine(line, rect)); [EOL]     assertTrue(lineEquals(line, 1.0, 1.0, 1.6, 1.6)); [EOL]     line.setLine(0.5, 0.5, 2.6, 1.6); [EOL]     assertTrue(LineUtilities.clipLine(line, rect)); [EOL]     assertTrue(lineEquals(line, 1.4545454545454546, 1.0, 2.0, 1.2857142857142858)); [EOL]     line.setLine(0.5, 0.5, 0.5, 2.6); [EOL]     assertFalse(LineUtilities.clipLine(line, rect)); [EOL]     assertTrue(lineEquals(line, 0.5, 0.5, 0.5, 2.6)); [EOL]     line.setLine(0.5, 0.5, 1.5, 2.6); [EOL]     assertTrue(LineUtilities.clipLine(line, rect)); [EOL]     assertTrue(lineEquals(line, 1.0, 1.55, 1.2142857142857142, 2.0)); [EOL]     line.setLine(0.5, 0.5, 2.5, 2.6); [EOL]     assertTrue(LineUtilities.clipLine(line, rect)); [EOL]     assertTrue(lineEquals(line, 1.0, 1.025, 1.9285714285714284, 2.0)); [EOL]     line.setLine(0.5, 0.5, 1.5, 1.5); [EOL]     assertTrue(LineUtilities.clipLine(line, rect)); [EOL]     assertTrue(lineEquals(line, 1.0, 1.0, 1.5, 1.5)); [EOL]     line.setLine(2.5, 1.0, 1.5, 1.5); [EOL]     assertTrue(LineUtilities.clipLine(line, rect)); [EOL]     assertTrue(lineEquals(line, 2.0, 1.25, 1.5, 1.5)); [EOL]     line.setLine(1.5, 1.5, 2.5, 1.0); [EOL]     assertTrue(LineUtilities.clipLine(line, rect)); [EOL]     assertTrue(lineEquals(line, 1.5, 1.5, 2.0, 1.25)); [EOL] } <line_num>: 90,145
