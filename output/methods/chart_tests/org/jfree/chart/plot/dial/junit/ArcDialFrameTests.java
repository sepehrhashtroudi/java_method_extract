public ArcDialFrameTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 78,80
public static Test suite() { [EOL]     return new TestSuite(ArcDialFrameTests.class); [EOL] } <line_num>: 69,71
public void testEquals() { [EOL]     ArcDialFrame f1 = new ArcDialFrame(); [EOL]     ArcDialFrame f2 = new ArcDialFrame(); [EOL]     assertTrue(f1.equals(f2)); [EOL]     f1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow)); [EOL]     assertFalse(f1.equals(f2)); [EOL]     f2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow)); [EOL]     assertTrue(f1.equals(f2)); [EOL]     f1.setForegroundPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow)); [EOL]     assertFalse(f1.equals(f2)); [EOL]     f2.setForegroundPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow)); [EOL]     assertTrue(f1.equals(f2)); [EOL]     f1.setStroke(new BasicStroke(1.1f)); [EOL]     assertFalse(f1.equals(f2)); [EOL]     f2.setStroke(new BasicStroke(1.1f)); [EOL]     assertTrue(f1.equals(f2)); [EOL]     f1.setInnerRadius(0.11); [EOL]     assertFalse(f1.equals(f2)); [EOL]     f2.setInnerRadius(0.11); [EOL]     assertTrue(f1.equals(f2)); [EOL]     f1.setOuterRadius(0.88); [EOL]     assertFalse(f1.equals(f2)); [EOL]     f2.setOuterRadius(0.88); [EOL]     assertTrue(f1.equals(f2)); [EOL]     f1.setStartAngle(99); [EOL]     assertFalse(f1.equals(f2)); [EOL]     f2.setStartAngle(99); [EOL]     assertTrue(f1.equals(f2)); [EOL]     f1.setExtent(33); [EOL]     assertFalse(f1.equals(f2)); [EOL]     f2.setExtent(33); [EOL]     assertTrue(f1.equals(f2)); [EOL]     f1.setVisible(false); [EOL]     assertFalse(f1.equals(f2)); [EOL]     f2.setVisible(false); [EOL]     assertTrue(f1.equals(f2)); [EOL] } <line_num>: 85,141
public void testHashCode() { [EOL]     ArcDialFrame f1 = new ArcDialFrame(); [EOL]     ArcDialFrame f2 = new ArcDialFrame(); [EOL]     assertTrue(f1.equals(f2)); [EOL]     int h1 = f1.hashCode(); [EOL]     int h2 = f2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 146,153
public void testCloning() { [EOL]     ArcDialFrame f1 = new ArcDialFrame(); [EOL]     ArcDialFrame f2 = null; [EOL]     try { [EOL]         f2 = (ArcDialFrame) f1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(f1 != f2); [EOL]     assertTrue(f1.getClass() == f2.getClass()); [EOL]     assertTrue(f1.equals(f2)); [EOL]     MyDialLayerChangeListener l1 = new MyDialLayerChangeListener(); [EOL]     f1.addChangeListener(l1); [EOL]     assertTrue(f1.hasListener(l1)); [EOL]     assertFalse(f2.hasListener(l1)); [EOL] } <line_num>: 158,176
public void testSerialization() { [EOL]     ArcDialFrame f1 = new ArcDialFrame(); [EOL]     ArcDialFrame f2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(f1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         f2 = (ArcDialFrame) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(f1, f2); [EOL] } <line_num>: 181,200
