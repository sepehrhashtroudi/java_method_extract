public DialPlotTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 97,99
public void plotChanged(PlotChangeEvent event) { [EOL]     this.lastEvent = event; [EOL] } <line_num>: 78,80
public static Test suite() { [EOL]     return new TestSuite(DialPlotTests.class); [EOL] } <line_num>: 88,90
public void testEquals() { [EOL]     DialPlot p1 = new DialPlot(); [EOL]     DialPlot p2 = new DialPlot(); [EOL]     assertTrue(p1.equals(p2)); [EOL]     p1.setBackground(new DialBackground(Color.green)); [EOL]     assertFalse(p1.equals(p2)); [EOL]     p2.setBackground(new DialBackground(Color.green)); [EOL]     assertTrue(p1.equals(p2)); [EOL]     p1.setBackground(null); [EOL]     assertFalse(p1.equals(p2)); [EOL]     p2.setBackground(null); [EOL]     assertTrue(p1.equals(p2)); [EOL]     DialCap cap1 = new DialCap(); [EOL]     cap1.setFillPaint(Color.red); [EOL]     p1.setCap(cap1); [EOL]     assertFalse(p1.equals(p2)); [EOL]     DialCap cap2 = new DialCap(); [EOL]     cap2.setFillPaint(Color.red); [EOL]     p2.setCap(cap2); [EOL]     assertTrue(p1.equals(p2)); [EOL]     p1.setCap(null); [EOL]     assertFalse(p1.equals(p2)); [EOL]     p2.setCap(null); [EOL]     assertTrue(p1.equals(p2)); [EOL]     StandardDialFrame f1 = new StandardDialFrame(); [EOL]     f1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.white)); [EOL]     p1.setDialFrame(f1); [EOL]     assertFalse(p1.equals(p2)); [EOL]     StandardDialFrame f2 = new StandardDialFrame(); [EOL]     f2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.white)); [EOL]     p2.setDialFrame(f2); [EOL]     assertTrue(p1.equals(p2)); [EOL]     p1.setView(0.2, 0.0, 0.8, 1.0); [EOL]     assertFalse(p1.equals(p2)); [EOL]     p2.setView(0.2, 0.0, 0.8, 1.0); [EOL]     assertTrue(p1.equals(p2)); [EOL]     p1.addLayer(new StandardDialScale()); [EOL]     assertFalse(p1.equals(p2)); [EOL]     p2.addLayer(new StandardDialScale()); [EOL]     assertTrue(p1.equals(p2)); [EOL] } <line_num>: 104,158
public void testHashCode() { [EOL]     DialPlot p1 = new DialPlot(); [EOL]     DialPlot p2 = new DialPlot(); [EOL]     assertTrue(p1.equals(p2)); [EOL]     int h1 = p1.hashCode(); [EOL]     int h2 = p2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 163,170
public void testCloning() { [EOL]     DialPlot p1 = new DialPlot(); [EOL]     DialPlot p2 = null; [EOL]     try { [EOL]         p2 = (DialPlot) p1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(p1 != p2); [EOL]     assertTrue(p1.getClass() == p2.getClass()); [EOL]     assertTrue(p1.equals(p2)); [EOL] } <line_num>: 175,187
public void testSerialization() { [EOL]     DialPlot p1 = new DialPlot(); [EOL]     DialPlot p2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(p1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         p2 = (DialPlot) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(p1, p2); [EOL] } <line_num>: 193,212
public void testBackgroundListener() { [EOL]     DialPlot p = new DialPlot(); [EOL]     DialBackground b1 = new DialBackground(Color.red); [EOL]     p.setBackground(b1); [EOL]     p.addChangeListener(this); [EOL]     this.lastEvent = null; [EOL]     b1.setPaint(Color.blue); [EOL]     assertNotNull(this.lastEvent); [EOL]     DialBackground b2 = new DialBackground(Color.green); [EOL]     p.setBackground(b2); [EOL]     this.lastEvent = null; [EOL]     b1.setPaint(Color.red); [EOL]     assertNull(this.lastEvent); [EOL]     b2.setPaint(Color.red); [EOL]     assertNotNull(this.lastEvent); [EOL] } <line_num>: 217,233
public void testCapListener() { [EOL]     DialPlot p = new DialPlot(); [EOL]     DialCap c1 = new DialCap(); [EOL]     p.setCap(c1); [EOL]     p.addChangeListener(this); [EOL]     this.lastEvent = null; [EOL]     c1.setFillPaint(Color.red); [EOL]     assertNotNull(this.lastEvent); [EOL]     DialCap c2 = new DialCap(); [EOL]     p.setCap(c2); [EOL]     this.lastEvent = null; [EOL]     c1.setFillPaint(Color.blue); [EOL]     assertNull(this.lastEvent); [EOL]     c2.setFillPaint(Color.green); [EOL]     assertNotNull(this.lastEvent); [EOL] } <line_num>: 238,254
public void testFrameListener() { [EOL]     DialPlot p = new DialPlot(); [EOL]     ArcDialFrame f1 = new ArcDialFrame(); [EOL]     p.setDialFrame(f1); [EOL]     p.addChangeListener(this); [EOL]     this.lastEvent = null; [EOL]     f1.setBackgroundPaint(Color.gray); [EOL]     assertNotNull(this.lastEvent); [EOL]     ArcDialFrame f2 = new ArcDialFrame(); [EOL]     p.setDialFrame(f2); [EOL]     this.lastEvent = null; [EOL]     f1.setBackgroundPaint(Color.blue); [EOL]     assertNull(this.lastEvent); [EOL]     f2.setBackgroundPaint(Color.green); [EOL]     assertNotNull(this.lastEvent); [EOL] } <line_num>: 259,275
public void testScaleListener() { [EOL]     DialPlot p = new DialPlot(); [EOL]     StandardDialScale s1 = new StandardDialScale(); [EOL]     p.addScale(0, s1); [EOL]     p.addChangeListener(this); [EOL]     this.lastEvent = null; [EOL]     s1.setStartAngle(22.0); [EOL]     assertNotNull(this.lastEvent); [EOL]     StandardDialScale s2 = new StandardDialScale(); [EOL]     p.addScale(0, s2); [EOL]     this.lastEvent = null; [EOL]     s1.setStartAngle(33.0); [EOL]     assertNull(this.lastEvent); [EOL]     s2.setStartAngle(33.0); [EOL]     assertNotNull(this.lastEvent); [EOL] } <line_num>: 280,296
public void testLayerListener() { [EOL]     DialPlot p = new DialPlot(); [EOL]     DialBackground b1 = new DialBackground(Color.red); [EOL]     p.addLayer(b1); [EOL]     p.addChangeListener(this); [EOL]     this.lastEvent = null; [EOL]     b1.setPaint(Color.blue); [EOL]     assertNotNull(this.lastEvent); [EOL]     DialBackground b2 = new DialBackground(Color.green); [EOL]     p.addLayer(b2); [EOL]     this.lastEvent = null; [EOL]     b1.setPaint(Color.red); [EOL]     assertNotNull(this.lastEvent); [EOL]     b2.setPaint(Color.green); [EOL]     assertNotNull(this.lastEvent); [EOL]     p.removeLayer(b2); [EOL]     this.lastEvent = null; [EOL]     b2.setPaint(Color.red); [EOL]     assertNull(this.lastEvent); [EOL] } <line_num>: 301,322
