public DialPointerTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 78,80
public static Test suite() { [EOL]     return new TestSuite(DialPointerTests.class); [EOL] } <line_num>: 69,71
public void testEquals() { [EOL]     DialPointer i1 = new DialPointer.Pin(1); [EOL]     DialPointer i2 = new DialPointer.Pin(1); [EOL]     assertTrue(i1.equals(i2)); [EOL]     i1 = new DialPointer.Pin(2); [EOL]     assertFalse(i1.equals(i2)); [EOL]     i2 = new DialPointer.Pin(2); [EOL]     assertTrue(i1.equals(i2)); [EOL]     i1.setVisible(false); [EOL]     assertFalse(i1.equals(i2)); [EOL]     i2.setVisible(false); [EOL]     assertTrue(i1.equals(i2)); [EOL] } <line_num>: 85,101
public void testEqualsPin() { [EOL]     DialPointer.Pin p1 = new DialPointer.Pin(); [EOL]     DialPointer.Pin p2 = new DialPointer.Pin(); [EOL]     assertEquals(p1, p2); [EOL]     p1.setPaint(Color.green); [EOL]     assertFalse(p1.equals(p2)); [EOL]     p2.setPaint(Color.green); [EOL]     assertTrue(p1.equals(p2)); [EOL]     BasicStroke s = new BasicStroke(4.4f); [EOL]     p1.setStroke(s); [EOL]     assertFalse(p1.equals(p2)); [EOL]     p2.setStroke(s); [EOL]     assertTrue(p1.equals(p2)); [EOL] } <line_num>: 106,121
public void testEqualsPointer() { [EOL]     DialPointer.Pointer p1 = new DialPointer.Pointer(); [EOL]     DialPointer.Pointer p2 = new DialPointer.Pointer(); [EOL]     assertEquals(p1, p2); [EOL]     p1.setFillPaint(Color.green); [EOL]     assertFalse(p1.equals(p2)); [EOL]     p2.setFillPaint(Color.green); [EOL]     assertTrue(p1.equals(p2)); [EOL]     p1.setOutlinePaint(Color.green); [EOL]     assertFalse(p1.equals(p2)); [EOL]     p2.setOutlinePaint(Color.green); [EOL]     assertTrue(p1.equals(p2)); [EOL] } <line_num>: 126,140
public void testHashCode() { [EOL]     DialPointer i1 = new DialPointer.Pin(1); [EOL]     DialPointer i2 = new DialPointer.Pin(1); [EOL]     assertTrue(i1.equals(i2)); [EOL]     int h1 = i1.hashCode(); [EOL]     int h2 = i2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 145,152
public void testCloning() { [EOL]     DialPointer i1 = new DialPointer.Pin(1); [EOL]     DialPointer i2 = null; [EOL]     try { [EOL]         i2 = (DialPointer) i1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(i1 != i2); [EOL]     assertTrue(i1.getClass() == i2.getClass()); [EOL]     assertTrue(i1.equals(i2)); [EOL]     MyDialLayerChangeListener l1 = new MyDialLayerChangeListener(); [EOL]     i1.addChangeListener(l1); [EOL]     assertTrue(i1.hasListener(l1)); [EOL]     assertFalse(i2.hasListener(l1)); [EOL] } <line_num>: 157,175
public void testSerialization() { [EOL]     DialPointer i1 = new DialPointer.Pin(1); [EOL]     DialPointer i2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(i1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         i2 = (DialPointer) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(i1, i2); [EOL] } <line_num>: 180,202
public void testSerialization2() { [EOL]     DialPointer i1 = new DialPointer.Pointer(1); [EOL]     DialPointer i2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(i1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         i2 = (DialPointer) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(i1, i2); [EOL] } <line_num>: 207,229
