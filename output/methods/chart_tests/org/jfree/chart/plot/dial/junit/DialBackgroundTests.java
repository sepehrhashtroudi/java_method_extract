public DialBackgroundTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 80,82
public static Test suite() { [EOL]     return new TestSuite(DialBackgroundTests.class); [EOL] } <line_num>: 71,73
public void testEquals() { [EOL]     DialBackground b1 = new DialBackground(); [EOL]     DialBackground b2 = new DialBackground(); [EOL]     assertTrue(b1.equals(b2)); [EOL]     b1.setPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow)); [EOL]     assertFalse(b1.equals(b2)); [EOL]     b2.setPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow)); [EOL]     assertTrue(b1.equals(b2)); [EOL]     b1.setGradientPaintTransformer(new StandardGradientPaintTransformer(GradientPaintTransformType.CENTER_VERTICAL)); [EOL]     assertFalse(b1.equals(b2)); [EOL]     b2.setGradientPaintTransformer(new StandardGradientPaintTransformer(GradientPaintTransformType.CENTER_VERTICAL)); [EOL]     assertTrue(b1.equals(b2)); [EOL]     b1.setVisible(false); [EOL]     assertFalse(b1.equals(b2)); [EOL]     b2.setVisible(false); [EOL]     assertTrue(b1.equals(b2)); [EOL] } <line_num>: 87,114
public void testHashCode() { [EOL]     DialBackground b1 = new DialBackground(Color.red); [EOL]     DialBackground b2 = new DialBackground(Color.red); [EOL]     assertTrue(b1.equals(b2)); [EOL]     int h1 = b1.hashCode(); [EOL]     int h2 = b2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 119,126
public void testCloning() { [EOL]     DialBackground b1 = new DialBackground(); [EOL]     DialBackground b2 = null; [EOL]     try { [EOL]         b2 = (DialBackground) b1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(b1 != b2); [EOL]     assertTrue(b1.getClass() == b2.getClass()); [EOL]     assertTrue(b1.equals(b2)); [EOL]     b1 = new DialBackground(); [EOL]     b1.setPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green)); [EOL]     b1.setGradientPaintTransformer(new StandardGradientPaintTransformer(GradientPaintTransformType.CENTER_VERTICAL)); [EOL]     b2 = null; [EOL]     try { [EOL]         b2 = (DialBackground) b1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(b1 != b2); [EOL]     assertTrue(b1.getClass() == b2.getClass()); [EOL]     assertTrue(b1.equals(b2)); [EOL]     MyDialLayerChangeListener l1 = new MyDialLayerChangeListener(); [EOL]     b1.addChangeListener(l1); [EOL]     assertTrue(b1.hasListener(l1)); [EOL]     assertFalse(b2.hasListener(l1)); [EOL] } <line_num>: 131,167
public void testSerialization() { [EOL]     DialBackground b1 = new DialBackground(); [EOL]     DialBackground b2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(b1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         b2 = (DialBackground) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(b1, b2); [EOL]     b1 = new DialBackground(); [EOL]     b1.setPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green)); [EOL]     b1.setGradientPaintTransformer(new StandardGradientPaintTransformer(GradientPaintTransformType.CENTER_VERTICAL)); [EOL]     b2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(b1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         b2 = (DialBackground) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(b1, b2); [EOL] } <line_num>: 173,217
