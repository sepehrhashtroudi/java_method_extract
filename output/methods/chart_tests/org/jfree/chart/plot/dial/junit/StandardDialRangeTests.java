public StandardDialRangeTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 77,79
public static Test suite() { [EOL]     return new TestSuite(StandardDialRangeTests.class); [EOL] } <line_num>: 68,70
public void testEquals() { [EOL]     StandardDialRange r1 = new StandardDialRange(); [EOL]     StandardDialRange r2 = new StandardDialRange(); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setLowerBound(1.1); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setLowerBound(1.1); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setUpperBound(11.1); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setUpperBound(11.1); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.blue)); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.blue)); [EOL]     assertTrue(r1.equals(r2)); [EOL]     r1.setVisible(false); [EOL]     assertFalse(r1.equals(r2)); [EOL]     r2.setVisible(false); [EOL]     assertTrue(r1.equals(r2)); [EOL] } <line_num>: 84,114
public void testHashCode() { [EOL]     StandardDialRange r1 = new StandardDialRange(); [EOL]     StandardDialRange r2 = new StandardDialRange(); [EOL]     assertTrue(r1.equals(r2)); [EOL]     int h1 = r1.hashCode(); [EOL]     int h2 = r2.hashCode(); [EOL]     assertEquals(h1, h2); [EOL] } <line_num>: 119,126
public void testCloning() { [EOL]     StandardDialRange r1 = new StandardDialRange(); [EOL]     StandardDialRange r2 = null; [EOL]     try { [EOL]         r2 = (StandardDialRange) r1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(r1 != r2); [EOL]     assertTrue(r1.getClass() == r2.getClass()); [EOL]     assertTrue(r1.equals(r2)); [EOL]     MyDialLayerChangeListener l1 = new MyDialLayerChangeListener(); [EOL]     r1.addChangeListener(l1); [EOL]     assertTrue(r1.hasListener(l1)); [EOL]     assertFalse(r2.hasListener(l1)); [EOL] } <line_num>: 131,149
public void testSerialization() { [EOL]     StandardDialRange r1 = new StandardDialRange(); [EOL]     StandardDialRange r2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(r1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         r2 = (StandardDialRange) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(r1, r2); [EOL] } <line_num>: 154,173
