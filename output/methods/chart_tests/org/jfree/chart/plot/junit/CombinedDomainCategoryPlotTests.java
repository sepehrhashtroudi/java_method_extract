public CombinedDomainCategoryPlotTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 104,106
public void chartChanged(ChartChangeEvent event) { [EOL]     this.events.add(event); [EOL] } <line_num>: 86,88
public static Test suite() { [EOL]     return new TestSuite(CombinedDomainCategoryPlotTests.class); [EOL] } <line_num>: 95,97
public void testRemoveSubplot() { [EOL]     CombinedDomainCategoryPlot plot = new CombinedDomainCategoryPlot(); [EOL]     CategoryPlot plot1 = new CategoryPlot(); [EOL]     CategoryPlot plot2 = new CategoryPlot(); [EOL]     plot.add(plot1); [EOL]     plot.add(plot2); [EOL]     plot.remove(plot2); [EOL]     List plots = plot.getSubplots(); [EOL]     assertTrue(plots.get(0) == plot1); [EOL]     assertEquals(1, plots.size()); [EOL] } <line_num>: 111,122
public void testEquals() { [EOL]     CombinedDomainCategoryPlot plot1 = createPlot(); [EOL]     CombinedDomainCategoryPlot plot2 = createPlot(); [EOL]     assertTrue(plot1.equals(plot2)); [EOL] } <line_num>: 127,131
public void testCloning() { [EOL]     CombinedDomainCategoryPlot plot1 = createPlot(); [EOL]     CombinedDomainCategoryPlot plot2 = null; [EOL]     try { [EOL]         plot2 = (CombinedDomainCategoryPlot) plot1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         System.err.println("Failed to clone."); [EOL]     } [EOL]     assertTrue(plot1 != plot2); [EOL]     assertTrue(plot1.getClass() == plot2.getClass()); [EOL]     assertTrue(plot1.equals(plot2)); [EOL] } <line_num>: 136,148
public void testSerialization() { [EOL]     CombinedDomainCategoryPlot plot1 = createPlot(); [EOL]     CombinedDomainCategoryPlot plot2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(plot1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         plot2 = (CombinedDomainCategoryPlot) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(plot1, plot2); [EOL] } <line_num>: 153,170
public void testNotification() { [EOL]     CombinedDomainCategoryPlot plot = createPlot(); [EOL]     JFreeChart chart = new JFreeChart(plot); [EOL]     chart.addChangeListener(this); [EOL]     CategoryPlot subplot1 = (CategoryPlot) plot.getSubplots().get(0); [EOL]     NumberAxis yAxis = (NumberAxis) subplot1.getRangeAxis(); [EOL]     yAxis.setAutoRangeIncludesZero(!yAxis.getAutoRangeIncludesZero()); [EOL]     assertEquals(1, this.events.size()); [EOL]     BufferedImage image = new BufferedImage(200, 100, BufferedImage.TYPE_INT_RGB); [EOL]     Graphics2D g2 = image.createGraphics(); [EOL]     this.events.clear(); [EOL]     chart.draw(g2, new Rectangle2D.Double(0.0, 0.0, 200.0, 100.0)); [EOL]     assertTrue(this.events.isEmpty()); [EOL] } <line_num>: 176,192
public CategoryDataset createDataset1() { [EOL]     DefaultCategoryDataset result = new DefaultCategoryDataset(); [EOL]     String series1 = "First"; [EOL]     String series2 = "Second"; [EOL]     String type1 = "Type 1"; [EOL]     String type2 = "Type 2"; [EOL]     String type3 = "Type 3"; [EOL]     String type4 = "Type 4"; [EOL]     String type5 = "Type 5"; [EOL]     String type6 = "Type 6"; [EOL]     String type7 = "Type 7"; [EOL]     String type8 = "Type 8"; [EOL]     result.addValue(1.0, series1, type1); [EOL]     result.addValue(4.0, series1, type2); [EOL]     result.addValue(3.0, series1, type3); [EOL]     result.addValue(5.0, series1, type4); [EOL]     result.addValue(5.0, series1, type5); [EOL]     result.addValue(7.0, series1, type6); [EOL]     result.addValue(7.0, series1, type7); [EOL]     result.addValue(8.0, series1, type8); [EOL]     result.addValue(5.0, series2, type1); [EOL]     result.addValue(7.0, series2, type2); [EOL]     result.addValue(6.0, series2, type3); [EOL]     result.addValue(8.0, series2, type4); [EOL]     result.addValue(4.0, series2, type5); [EOL]     result.addValue(4.0, series2, type6); [EOL]     result.addValue(2.0, series2, type7); [EOL]     result.addValue(1.0, series2, type8); [EOL]     return result; [EOL] } <line_num>: 199,237
public CategoryDataset createDataset2() { [EOL]     DefaultCategoryDataset result = new DefaultCategoryDataset(); [EOL]     String series1 = "Third"; [EOL]     String series2 = "Fourth"; [EOL]     String type1 = "Type 1"; [EOL]     String type2 = "Type 2"; [EOL]     String type3 = "Type 3"; [EOL]     String type4 = "Type 4"; [EOL]     String type5 = "Type 5"; [EOL]     String type6 = "Type 6"; [EOL]     String type7 = "Type 7"; [EOL]     String type8 = "Type 8"; [EOL]     result.addValue(11.0, series1, type1); [EOL]     result.addValue(14.0, series1, type2); [EOL]     result.addValue(13.0, series1, type3); [EOL]     result.addValue(15.0, series1, type4); [EOL]     result.addValue(15.0, series1, type5); [EOL]     result.addValue(17.0, series1, type6); [EOL]     result.addValue(17.0, series1, type7); [EOL]     result.addValue(18.0, series1, type8); [EOL]     result.addValue(15.0, series2, type1); [EOL]     result.addValue(17.0, series2, type2); [EOL]     result.addValue(16.0, series2, type3); [EOL]     result.addValue(18.0, series2, type4); [EOL]     result.addValue(14.0, series2, type5); [EOL]     result.addValue(14.0, series2, type6); [EOL]     result.addValue(12.0, series2, type7); [EOL]     result.addValue(11.0, series2, type8); [EOL]     return result; [EOL] } <line_num>: 244,282
private CombinedDomainCategoryPlot createPlot() { [EOL]     CategoryDataset dataset1 = createDataset1(); [EOL]     NumberAxis rangeAxis1 = new NumberAxis("Value"); [EOL]     rangeAxis1.setStandardTickUnits(NumberAxis.createIntegerTickUnits()); [EOL]     LineAndShapeRenderer renderer1 = new LineAndShapeRenderer(); [EOL]     renderer1.setBaseToolTipGenerator(new StandardCategoryToolTipGenerator()); [EOL]     CategoryPlot subplot1 = new CategoryPlot(dataset1, null, rangeAxis1, renderer1); [EOL]     subplot1.setDomainGridlinesVisible(true); [EOL]     CategoryDataset dataset2 = createDataset2(); [EOL]     NumberAxis rangeAxis2 = new NumberAxis("Value"); [EOL]     rangeAxis2.setStandardTickUnits(NumberAxis.createIntegerTickUnits()); [EOL]     BarRenderer renderer2 = new BarRenderer(); [EOL]     renderer2.setBaseToolTipGenerator(new StandardCategoryToolTipGenerator()); [EOL]     CategoryPlot subplot2 = new CategoryPlot(dataset2, null, rangeAxis2, renderer2); [EOL]     subplot2.setDomainGridlinesVisible(true); [EOL]     CategoryAxis domainAxis = new CategoryAxis("Category"); [EOL]     CombinedDomainCategoryPlot plot = new CombinedDomainCategoryPlot(domainAxis); [EOL]     plot.add(subplot1, 2); [EOL]     plot.add(subplot2, 1); [EOL]     return plot; [EOL] } <line_num>: 289,322
