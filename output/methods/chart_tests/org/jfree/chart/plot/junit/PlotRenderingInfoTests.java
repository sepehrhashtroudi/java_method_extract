public PlotRenderingInfoTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 78,80
public static Test suite() { [EOL]     return new TestSuite(PlotRenderingInfoTests.class); [EOL] } <line_num>: 69,71
public void testEquals() { [EOL]     PlotRenderingInfo p1 = new PlotRenderingInfo(new ChartRenderingInfo()); [EOL]     PlotRenderingInfo p2 = new PlotRenderingInfo(new ChartRenderingInfo()); [EOL]     assertTrue(p1.equals(p2)); [EOL]     assertTrue(p2.equals(p1)); [EOL]     p1.setPlotArea(new Rectangle(2, 3, 4, 5)); [EOL]     assertFalse(p1.equals(p2)); [EOL]     p2.setPlotArea(new Rectangle(2, 3, 4, 5)); [EOL]     assertTrue(p1.equals(p2)); [EOL]     p1.setDataArea(new Rectangle(2, 4, 6, 8)); [EOL]     assertFalse(p1.equals(p2)); [EOL]     p2.setDataArea(new Rectangle(2, 4, 6, 8)); [EOL]     assertTrue(p1.equals(p2)); [EOL]     p1.addSubplotInfo(new PlotRenderingInfo(null)); [EOL]     assertFalse(p1.equals(p2)); [EOL]     p2.addSubplotInfo(new PlotRenderingInfo(null)); [EOL]     assertTrue(p1.equals(p2)); [EOL]     p1.getSubplotInfo(0).setDataArea(new Rectangle(1, 2, 3, 4)); [EOL]     assertFalse(p1.equals(p2)); [EOL]     p2.getSubplotInfo(0).setDataArea(new Rectangle(1, 2, 3, 4)); [EOL]     assertTrue(p1.equals(p2)); [EOL] } <line_num>: 85,110
public void testCloning() { [EOL]     PlotRenderingInfo p1 = new PlotRenderingInfo(new ChartRenderingInfo()); [EOL]     p1.setPlotArea(new Rectangle2D.Double()); [EOL]     PlotRenderingInfo p2 = null; [EOL]     try { [EOL]         p2 = (PlotRenderingInfo) p1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(p1 != p2); [EOL]     assertTrue(p1.getClass() == p2.getClass()); [EOL]     assertTrue(p1.equals(p2)); [EOL]     p1.getPlotArea().setRect(1.0, 2.0, 3.0, 4.0); [EOL]     assertFalse(p1.equals(p2)); [EOL]     p2.getPlotArea().setRect(1.0, 2.0, 3.0, 4.0); [EOL]     assertTrue(p1.equals(p2)); [EOL]     p1.getDataArea().setRect(4.0, 3.0, 2.0, 1.0); [EOL]     assertFalse(p1.equals(p2)); [EOL]     p2.getDataArea().setRect(4.0, 3.0, 2.0, 1.0); [EOL]     assertTrue(p1.equals(p2)); [EOL] } <line_num>: 115,139
public void testSerialization() { [EOL]     PlotRenderingInfo p1 = new PlotRenderingInfo(new ChartRenderingInfo()); [EOL]     PlotRenderingInfo p2 = null; [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(p1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         p2 = (PlotRenderingInfo) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         System.out.println(e.toString()); [EOL]     } [EOL]     assertEquals(p1, p2); [EOL] } <line_num>: 144,166
