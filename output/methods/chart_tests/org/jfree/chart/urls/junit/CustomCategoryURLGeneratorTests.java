public CustomCategoryURLGeneratorTests(String name) { [EOL]     super(name); [EOL] } <line_num>: 77,79
public static Test suite() { [EOL]     return new TestSuite(CustomCategoryURLGeneratorTests.class); [EOL] } <line_num>: 68,70
public void testEquals() { [EOL]     CustomCategoryURLGenerator g1 = new CustomCategoryURLGenerator(); [EOL]     CustomCategoryURLGenerator g2 = new CustomCategoryURLGenerator(); [EOL]     assertTrue(g1.equals(g2)); [EOL]     List u1 = new java.util.ArrayList(); [EOL]     u1.add("URL A1"); [EOL]     u1.add("URL A2"); [EOL]     u1.add("URL A3"); [EOL]     g1.addURLSeries(u1); [EOL]     assertFalse(g1.equals(g2)); [EOL]     List u2 = new java.util.ArrayList(); [EOL]     u2.add("URL A1"); [EOL]     u2.add("URL A2"); [EOL]     u2.add("URL A3"); [EOL]     g2.addURLSeries(u2); [EOL]     assertTrue(g1.equals(g2)); [EOL] } <line_num>: 84,100
public void testCloning() { [EOL]     CustomCategoryURLGenerator g1 = new CustomCategoryURLGenerator(); [EOL]     List u1 = new java.util.ArrayList(); [EOL]     u1.add("URL A1"); [EOL]     u1.add("URL A2"); [EOL]     u1.add("URL A3"); [EOL]     g1.addURLSeries(u1); [EOL]     CustomCategoryURLGenerator g2 = null; [EOL]     try { [EOL]         g2 = (CustomCategoryURLGenerator) g1.clone(); [EOL]     } catch (CloneNotSupportedException e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertTrue(g1 != g2); [EOL]     assertTrue(g1.getClass() == g2.getClass()); [EOL]     assertTrue(g1.equals(g2)); [EOL]     List u2 = new java.util.ArrayList(); [EOL]     u2.add("URL XXX"); [EOL]     g1.addURLSeries(u2); [EOL]     assertFalse(g1.equals(g2)); [EOL]     g2.addURLSeries(new java.util.ArrayList(u2)); [EOL]     assertTrue(g1.equals(g2)); [EOL] } <line_num>: 105,130
public void testPublicCloneable() { [EOL]     CustomCategoryURLGenerator g1 = new CustomCategoryURLGenerator(); [EOL]     assertTrue(g1 instanceof PublicCloneable); [EOL] } <line_num>: 135,138
public void testSerialization() { [EOL]     List u1 = new java.util.ArrayList(); [EOL]     u1.add("URL A1"); [EOL]     u1.add("URL A2"); [EOL]     u1.add("URL A3"); [EOL]     List u2 = new java.util.ArrayList(); [EOL]     u2.add("URL B1"); [EOL]     u2.add("URL B2"); [EOL]     u2.add("URL B3"); [EOL]     CustomCategoryURLGenerator g1 = new CustomCategoryURLGenerator(); [EOL]     CustomCategoryURLGenerator g2 = null; [EOL]     g1.addURLSeries(u1); [EOL]     g1.addURLSeries(u2); [EOL]     try { [EOL]         ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]         ObjectOutput out = new ObjectOutputStream(buffer); [EOL]         out.writeObject(g1); [EOL]         out.close(); [EOL]         ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray())); [EOL]         g2 = (CustomCategoryURLGenerator) in.readObject(); [EOL]         in.close(); [EOL]     } catch (Exception e) { [EOL]         e.printStackTrace(); [EOL]     } [EOL]     assertEquals(g1, g2); [EOL] } <line_num>: 143,177
public void testAddURLSeries() { [EOL]     CustomCategoryURLGenerator g1 = new CustomCategoryURLGenerator(); [EOL]     g1.addURLSeries(null); [EOL]     assertEquals(1, g1.getListCount()); [EOL]     assertEquals(0, g1.getURLCount(0)); [EOL]     List list1 = new java.util.ArrayList(); [EOL]     list1.add("URL1"); [EOL]     g1.addURLSeries(list1); [EOL]     assertEquals(2, g1.getListCount()); [EOL]     assertEquals(0, g1.getURLCount(0)); [EOL]     assertEquals(1, g1.getURLCount(1)); [EOL]     assertEquals("URL1", g1.getURL(1, 0)); [EOL]     list1.clear(); [EOL]     assertEquals("URL1", g1.getURL(1, 0)); [EOL] } <line_num>: 182,202
