public CompressorInputStream createCompressorInputStream(final String name, final InputStream in) throws CompressorException { [EOL]     if (name == null || in == null) { [EOL]         throw new IllegalArgumentException("Compressor name and stream must not be null."); [EOL]     } [EOL]     try { [EOL]         if ("gz".equalsIgnoreCase(name)) { [EOL]             return new GzipCompressorInputStream(in); [EOL]         } else if ("bzip2".equalsIgnoreCase(name)) { [EOL]             return new BZip2CompressorInputStream(in); [EOL]         } [EOL]         throw new CompressorException("Compressor: " + name + " not found."); [EOL]     } catch (IOException e) { [EOL]         throw new CompressorException("Could not create CompressorInputStream", e); [EOL]     } [EOL] } <line_num>: 49,67
public CompressorOutputStream createCompressorOutputStream(final String name, final OutputStream out) throws CompressorException { [EOL]     if (name == null || out == null) { [EOL]         throw new IllegalArgumentException("Compressor name and stream must not be null."); [EOL]     } [EOL]     try { [EOL]         if ("gz".equalsIgnoreCase(name)) { [EOL]             return new GzipCompressorOutputStream(out); [EOL]         } else if ("bzip2".equalsIgnoreCase(name)) { [EOL]             return new BZip2CompressorOutputStream(out); [EOL]         } [EOL]         throw new CompressorException("Compressor: " + name + " not found."); [EOL]     } catch (IOException e) { [EOL]         throw new CompressorException("Could not create CompressorOutputStream", e); [EOL]     } [EOL] } <line_num>: 69,88
