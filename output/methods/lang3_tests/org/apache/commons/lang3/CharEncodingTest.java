private void assertSupportedEncoding(final String name) { [EOL]     assertTrue("Encoding should be supported: " + name, CharEncoding.isSupported(name)); [EOL] } <line_num>: 36,38
@Test [EOL] public void testConstructor() { [EOL]     new CharEncoding(); [EOL] } <line_num>: 43,46
@Test [EOL] public void testMustBeSupportedJava1_3_1() { [EOL]     if (SystemUtils.isJavaVersionAtLeast(JAVA_1_3)) { [EOL]         this.assertSupportedEncoding(CharEncoding.ISO_8859_1); [EOL]         this.assertSupportedEncoding(CharEncoding.US_ASCII); [EOL]         this.assertSupportedEncoding(CharEncoding.UTF_16); [EOL]         this.assertSupportedEncoding(CharEncoding.UTF_16BE); [EOL]         this.assertSupportedEncoding(CharEncoding.UTF_16LE); [EOL]         this.assertSupportedEncoding(CharEncoding.UTF_8); [EOL]     } else { [EOL]         this.warn("Java 1.3 tests not run since the current version is " + SystemUtils.JAVA_SPECIFICATION_VERSION); [EOL]     } [EOL] } <line_num>: 48,60
@Test [EOL] public void testSupported() { [EOL]     assertTrue(CharEncoding.isSupported("UTF8")); [EOL]     assertTrue(CharEncoding.isSupported("UTF-8")); [EOL]     assertTrue(CharEncoding.isSupported("ASCII")); [EOL] } <line_num>: 62,67
@Test [EOL] public void testNotSupported() { [EOL]     assertFalse(CharEncoding.isSupported(null)); [EOL]     assertFalse(CharEncoding.isSupported("")); [EOL]     assertFalse(CharEncoding.isSupported(" ")); [EOL]     assertFalse(CharEncoding.isSupported("\t\r\n")); [EOL]     assertFalse(CharEncoding.isSupported("DOESNOTEXIST")); [EOL]     assertFalse(CharEncoding.isSupported("this is not a valid encoding name")); [EOL] } <line_num>: 69,77
@Test [EOL] public void testWorksOnJava1_1_8() { [EOL]     if (SystemUtils.isJavaVersionAtLeast(JAVA_1_1)) { [EOL]         this.assertSupportedEncoding(CharEncoding.ISO_8859_1); [EOL]         this.assertSupportedEncoding(CharEncoding.US_ASCII); [EOL]         this.assertSupportedEncoding(CharEncoding.UTF_8); [EOL]     } else { [EOL]         this.warn("Java 1.1 tests not run since the current version is " + SystemUtils.JAVA_SPECIFICATION_VERSION); [EOL]     } [EOL] } <line_num>: 79,92
@Test [EOL] public void testWorksOnJava1_2_2() { [EOL]     if (SystemUtils.isJavaVersionAtLeast(JAVA_1_2)) { [EOL]         this.assertSupportedEncoding(CharEncoding.ISO_8859_1); [EOL]         this.assertSupportedEncoding(CharEncoding.US_ASCII); [EOL]         this.assertSupportedEncoding(CharEncoding.UTF_8); [EOL]     } else { [EOL]         this.warn("Java 1.2 tests not run since the current version is " + SystemUtils.JAVA_SPECIFICATION_VERSION); [EOL]     } [EOL] } <line_num>: 94,107
void warn(final String msg) { [EOL]     System.err.println(msg); [EOL] } <line_num>: 109,111
