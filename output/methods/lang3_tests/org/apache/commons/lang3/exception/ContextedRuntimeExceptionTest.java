@Override [EOL] @Before [EOL] public void setUp() throws Exception { [EOL]     exceptionContext = new ContextedRuntimeException(new Exception(TEST_MESSAGE)); [EOL]     super.setUp(); [EOL] } <line_num>: 34,39
@Test [EOL] public void testContextedException() { [EOL]     exceptionContext = new ContextedRuntimeException(); [EOL]     final String message = exceptionContext.getMessage(); [EOL]     final String trace = ExceptionUtils.getStackTrace(exceptionContext); [EOL]     assertTrue(trace.indexOf("ContextedException") >= 0); [EOL]     assertTrue(StringUtils.isEmpty(message)); [EOL] } <line_num>: 41,48
@Test [EOL] public void testContextedExceptionString() { [EOL]     exceptionContext = new ContextedRuntimeException(TEST_MESSAGE); [EOL]     assertEquals(TEST_MESSAGE, exceptionContext.getMessage()); [EOL]     final String trace = ExceptionUtils.getStackTrace(exceptionContext); [EOL]     assertTrue(trace.indexOf(TEST_MESSAGE) >= 0); [EOL] } <line_num>: 50,57
@Test [EOL] public void testContextedExceptionThrowable() { [EOL]     exceptionContext = new ContextedRuntimeException(new Exception(TEST_MESSAGE)); [EOL]     final String message = exceptionContext.getMessage(); [EOL]     final String trace = ExceptionUtils.getStackTrace(exceptionContext); [EOL]     assertTrue(trace.indexOf("ContextedException") >= 0); [EOL]     assertTrue(trace.indexOf(TEST_MESSAGE) >= 0); [EOL]     assertTrue(message.indexOf(TEST_MESSAGE) >= 0); [EOL] } <line_num>: 59,67
@Test [EOL] public void testContextedExceptionStringThrowable() { [EOL]     exceptionContext = new ContextedRuntimeException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE)); [EOL]     final String message = exceptionContext.getMessage(); [EOL]     final String trace = ExceptionUtils.getStackTrace(exceptionContext); [EOL]     assertTrue(trace.indexOf("ContextedException") >= 0); [EOL]     assertTrue(trace.indexOf(TEST_MESSAGE) >= 0); [EOL]     assertTrue(trace.indexOf(TEST_MESSAGE_2) >= 0); [EOL]     assertTrue(message.indexOf(TEST_MESSAGE_2) >= 0); [EOL] } <line_num>: 69,78
@Test [EOL] public void testContextedExceptionStringThrowableContext() { [EOL]     exceptionContext = new ContextedRuntimeException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE), new DefaultExceptionContext() { [EOL]     }); [EOL]     final String message = exceptionContext.getMessage(); [EOL]     final String trace = ExceptionUtils.getStackTrace(exceptionContext); [EOL]     assertTrue(trace.indexOf("ContextedException") >= 0); [EOL]     assertTrue(trace.indexOf(TEST_MESSAGE) >= 0); [EOL]     assertTrue(trace.indexOf(TEST_MESSAGE_2) >= 0); [EOL]     assertTrue(message.indexOf(TEST_MESSAGE_2) >= 0); [EOL] } <line_num>: 80,90
@Test [EOL] public void testNullExceptionPassing() { [EOL]     exceptionContext = new ContextedRuntimeException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE), null).addContextValue("test1", null).addContextValue("test2", "some value").addContextValue("test Date", new Date()).addContextValue("test Nbr", Integer.valueOf(5)).addContextValue("test Poorly written obj", new ObjectWithFaultyToString()); [EOL]     final String message = exceptionContext.getMessage(); [EOL]     assertTrue(message != null); [EOL] } <line_num>: 92,103
@Test [EOL] public void testRawMessage() { [EOL]     assertEquals(Exception.class.getName() + ": " + TEST_MESSAGE, exceptionContext.getRawMessage()); [EOL]     exceptionContext = new ContextedRuntimeException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE), new DefaultExceptionContext()); [EOL]     assertEquals(TEST_MESSAGE_2, exceptionContext.getRawMessage()); [EOL]     exceptionContext = new ContextedRuntimeException(null, new Exception(TEST_MESSAGE), new DefaultExceptionContext()); [EOL]     assertNull(exceptionContext.getRawMessage()); [EOL] } <line_num>: 105,112
