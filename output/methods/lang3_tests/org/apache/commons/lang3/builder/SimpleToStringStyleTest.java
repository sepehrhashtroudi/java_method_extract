@Before [EOL] public void setUp() throws Exception { [EOL]     ToStringBuilder.setDefaultStyle(ToStringStyle.SIMPLE_STYLE); [EOL] } <line_num>: 38,41
@After [EOL] public void tearDown() throws Exception { [EOL]     ToStringBuilder.setDefaultStyle(ToStringStyle.DEFAULT_STYLE); [EOL] } <line_num>: 43,46
@Test [EOL] public void testBlank() { [EOL]     assertEquals("", new ToStringBuilder(base).toString()); [EOL] } <line_num>: 50,53
@Test [EOL] public void testAppendSuper() { [EOL]     assertEquals("", new ToStringBuilder(base).appendSuper("").toString()); [EOL]     assertEquals("<null>", new ToStringBuilder(base).appendSuper("<null>").toString()); [EOL]     assertEquals("hello", new ToStringBuilder(base).appendSuper("").append("a", "hello").toString()); [EOL]     assertEquals("<null>,hello", new ToStringBuilder(base).appendSuper("<null>").append("a", "hello").toString()); [EOL]     assertEquals("hello", new ToStringBuilder(base).appendSuper(null).append("a", "hello").toString()); [EOL] } <line_num>: 55,63
@Test [EOL] public void testObject() { [EOL]     final Integer i3 = Integer.valueOf(3); [EOL]     final Integer i4 = Integer.valueOf(4); [EOL]     assertEquals("<null>", new ToStringBuilder(base).append((Object) null).toString()); [EOL]     assertEquals("3", new ToStringBuilder(base).append(i3).toString()); [EOL]     assertEquals("<null>", new ToStringBuilder(base).append("a", (Object) null).toString()); [EOL]     assertEquals("3", new ToStringBuilder(base).append("a", i3).toString()); [EOL]     assertEquals("3,4", new ToStringBuilder(base).append("a", i3).append("b", i4).toString()); [EOL]     assertEquals("<Integer>", new ToStringBuilder(base).append("a", i3, false).toString()); [EOL]     assertEquals("<size=0>", new ToStringBuilder(base).append("a", new ArrayList<Object>(), false).toString()); [EOL]     assertEquals("[]", new ToStringBuilder(base).append("a", new ArrayList<Object>(), true).toString()); [EOL]     assertEquals("<size=0>", new ToStringBuilder(base).append("a", new HashMap<Object, Object>(), false).toString()); [EOL]     assertEquals("{}", new ToStringBuilder(base).append("a", new HashMap<Object, Object>(), true).toString()); [EOL]     assertEquals("<size=0>", new ToStringBuilder(base).append("a", (Object) new String[0], false).toString()); [EOL]     assertEquals("{}", new ToStringBuilder(base).append("a", (Object) new String[0], true).toString()); [EOL] } <line_num>: 65,81
@Test [EOL] public void testPerson() { [EOL]     final Person p = new Person(); [EOL]     p.name = "Jane Q. Public"; [EOL]     p.age = 47; [EOL]     p.smoker = false; [EOL]     assertEquals("Jane Q. Public,47,false", new ToStringBuilder(p).append("name", p.name).append("age", p.age).append("smoker", p.smoker).toString()); [EOL] } <line_num>: 83,90
@Test [EOL] public void testLong() { [EOL]     assertEquals("3", new ToStringBuilder(base).append(3L).toString()); [EOL]     assertEquals("3", new ToStringBuilder(base).append("a", 3L).toString()); [EOL]     assertEquals("3,4", new ToStringBuilder(base).append("a", 3L).append("b", 4L).toString()); [EOL] } <line_num>: 92,97
@Test [EOL] public void testObjectArray() { [EOL]     Object[] array = new Object[] { null, base, new int[] { 3, 6 } }; [EOL]     assertEquals("{<null>,5,{3,6}}", new ToStringBuilder(base).append(array).toString()); [EOL]     assertEquals("{<null>,5,{3,6}}", new ToStringBuilder(base).append((Object) array).toString()); [EOL]     array = null; [EOL]     assertEquals("<null>", new ToStringBuilder(base).append(array).toString()); [EOL]     assertEquals("<null>", new ToStringBuilder(base).append((Object) array).toString()); [EOL] } <line_num>: 99,107
@Test [EOL] public void testLongArray() { [EOL]     long[] array = new long[] { 1, 2, -3, 4 }; [EOL]     assertEquals("{1,2,-3,4}", new ToStringBuilder(base).append(array).toString()); [EOL]     assertEquals("{1,2,-3,4}", new ToStringBuilder(base).append((Object) array).toString()); [EOL]     array = null; [EOL]     assertEquals("<null>", new ToStringBuilder(base).append(array).toString()); [EOL]     assertEquals("<null>", new ToStringBuilder(base).append((Object) array).toString()); [EOL] } <line_num>: 109,117
@Test [EOL] public void testLongArrayArray() { [EOL]     long[][] array = new long[][] { { 1, 2 }, null, { 5 } }; [EOL]     assertEquals("{{1,2},<null>,{5}}", new ToStringBuilder(base).append(array).toString()); [EOL]     assertEquals("{{1,2},<null>,{5}}", new ToStringBuilder(base).append((Object) array).toString()); [EOL]     array = null; [EOL]     assertEquals("<null>", new ToStringBuilder(base).append(array).toString()); [EOL]     assertEquals("<null>", new ToStringBuilder(base).append((Object) array).toString()); [EOL] } <line_num>: 119,127
