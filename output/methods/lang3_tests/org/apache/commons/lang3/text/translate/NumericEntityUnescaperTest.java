@Test [EOL] public void testSupplementaryUnescaping() { [EOL]     final NumericEntityUnescaper neu = new NumericEntityUnescaper(); [EOL]     final String input = "&#68642;"; [EOL]     final String expected = "\uD803\uDC22"; [EOL]     final String result = neu.translate(input); [EOL]     assertEquals("Failed to unescape numeric entities supplementary characters", expected, result); [EOL] } <line_num>: 31,39
@Test [EOL] public void testOutOfBounds() { [EOL]     final NumericEntityUnescaper neu = new NumericEntityUnescaper(); [EOL]     assertEquals("Failed to ignore when last character is &", "Test &", neu.translate("Test &")); [EOL]     assertEquals("Failed to ignore when last character is &", "Test &#", neu.translate("Test &#")); [EOL]     assertEquals("Failed to ignore when last character is &", "Test &#x", neu.translate("Test &#x")); [EOL]     assertEquals("Failed to ignore when last character is &", "Test &#X", neu.translate("Test &#X")); [EOL] } <line_num>: 41,49
@Test [EOL] public void testUnfinishedEntity() { [EOL]     NumericEntityUnescaper neu = new NumericEntityUnescaper(NumericEntityUnescaper.OPTION.semiColonOptional); [EOL]     String input = "Test &#x30 not test"; [EOL]     String expected = "Test \u0030 not test"; [EOL]     String result = neu.translate(input); [EOL]     assertEquals("Failed to support unfinished entities (i.e. missing semi-colon)", expected, result); [EOL]     neu = new NumericEntityUnescaper(); [EOL]     input = "Test &#x30 not test"; [EOL]     expected = input; [EOL]     result = neu.translate(input); [EOL]     assertEquals("Failed to ignore unfinished entities (i.e. missing semi-colon)", expected, result); [EOL]     neu = new NumericEntityUnescaper(NumericEntityUnescaper.OPTION.errorIfNoSemiColon); [EOL]     input = "Test &#x30 not test"; [EOL]     try { [EOL]         result = neu.translate(input); [EOL]         fail("IllegalArgumentException expected"); [EOL]     } catch (final IllegalArgumentException iae) { [EOL]     } [EOL] } <line_num>: 51,79
