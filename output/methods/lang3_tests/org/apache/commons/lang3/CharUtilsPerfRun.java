public static void main(final String[] args) { [EOL]     new CharUtilsPerfRun().run(); [EOL] } <line_num>: 74,76
private void printSysInfo() { [EOL]     System.out.println(VERSION); [EOL]     System.out.println("Now: " + Calendar.getInstance().getTime()); [EOL]     System.out.println(System.getProperty("java.vendor") + " " + System.getProperty("java.runtime.name") + " " + System.getProperty("java.runtime.version")); [EOL]     System.out.println(System.getProperty("java.vm.vendor") + " " + System.getProperty("java.vm.name") + " " + System.getProperty("java.vm.version")); [EOL]     System.out.println(System.getProperty("os.name") + " " + System.getProperty("os.version") + " " + System.getProperty("os.arch") + " " + System.getProperty("sun.cpu.isalist")); [EOL] } <line_num>: 78,98
private void run() { [EOL]     this.printSysInfo(); [EOL]     long start; [EOL]     start = System.currentTimeMillis(); [EOL]     this.printlnTotal("Do nohting", start); [EOL]     run_CharUtils_isAsciiNumeric(WARM_UP); [EOL]     start = System.currentTimeMillis(); [EOL]     run_CharUtils_isAsciiNumeric(COUNT); [EOL]     this.printlnTotal("run_CharUtils_isAsciiNumeric", start); [EOL]     run_inlined_CharUtils_isAsciiNumeric(WARM_UP); [EOL]     start = System.currentTimeMillis(); [EOL]     run_inlined_CharUtils_isAsciiNumeric(COUNT); [EOL]     this.printlnTotal("run_inlined_CharUtils_isAsciiNumeric", start); [EOL]     run_CharSet(WARM_UP); [EOL]     start = System.currentTimeMillis(); [EOL]     run_CharSet(COUNT); [EOL]     this.printlnTotal("run_CharSet", start); [EOL] } <line_num>: 100,123
private int run_CharSet(final int loopCount) { [EOL]     int t = 0; [EOL]     for (int i = 0; i < loopCount; i++) { [EOL]         for (final char ch : CHAR_SAMPLES) { [EOL]             final boolean b = CharSet.ASCII_NUMERIC.contains(ch); [EOL]             t += b ? 1 : 0; [EOL]         } [EOL]     } [EOL]     return t; [EOL] } <line_num>: 125,134
private int run_CharUtils_isAsciiNumeric(final int loopCount) { [EOL]     int t = 0; [EOL]     for (int i = 0; i < loopCount; i++) { [EOL]         for (final char ch : CHAR_SAMPLES) { [EOL]             final boolean b = CharUtils.isAsciiNumeric(ch); [EOL]             t += b ? 1 : 0; [EOL]         } [EOL]     } [EOL]     return t; [EOL] } <line_num>: 136,145
private int run_inlined_CharUtils_isAsciiNumeric(final int loopCount) { [EOL]     int t = 0; [EOL]     for (int i = 0; i < loopCount; i++) { [EOL]         for (final char ch : CHAR_SAMPLES) { [EOL]             final boolean b = ch >= '0' && ch <= '9'; [EOL]             t += b ? 1 : 0; [EOL]         } [EOL]     } [EOL]     return t; [EOL] } <line_num>: 147,156
private void printlnTotal(final String prefix, final long start) { [EOL]     final long total = System.currentTimeMillis() - start; [EOL]     System.out.println(prefix + ": " + NumberFormat.getInstance().format(total) + " milliseconds."); [EOL] } <line_num>: 158,161
