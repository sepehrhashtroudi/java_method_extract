@Before [EOL] public void setUp() throws Exception { [EOL]     init = new ConstantInitializer<Integer>(VALUE); [EOL] } <line_num>: 39,42
private void checkEquals(final Object obj, final boolean expected) { [EOL]     assertTrue("Wrong result of equals", expected == init.equals(obj)); [EOL]     if (obj != null) { [EOL]         assertTrue("Not symmetric", expected == obj.equals(init)); [EOL]         if (expected) { [EOL]             assertEquals("Different hash codes", init.hashCode(), obj.hashCode()); [EOL]         } [EOL]     } [EOL] } <line_num>: 50,59
@Test [EOL] public void testGetObject() { [EOL]     assertEquals("Wrong object", VALUE, init.getObject()); [EOL] } <line_num>: 64,67
@Test [EOL] public void testGet() throws ConcurrentException { [EOL]     assertEquals("Wrong object", VALUE, init.get()); [EOL] } <line_num>: 72,75
@Test [EOL] public void testEqualsTrue() { [EOL]     checkEquals(init, true); [EOL]     ConstantInitializer<Integer> init2 = new ConstantInitializer<Integer>(Integer.valueOf(VALUE.intValue())); [EOL]     checkEquals(init2, true); [EOL]     init = new ConstantInitializer<Integer>(null); [EOL]     init2 = new ConstantInitializer<Integer>(null); [EOL]     checkEquals(init2, true); [EOL] } <line_num>: 80,89
@Test [EOL] public void testEqualsFalse() { [EOL]     ConstantInitializer<Integer> init2 = new ConstantInitializer<Integer>(null); [EOL]     checkEquals(init2, false); [EOL]     init2 = new ConstantInitializer<Integer>(VALUE + 1); [EOL]     checkEquals(init2, false); [EOL] } <line_num>: 94,101
@Test [EOL] public void testEqualsWithOtherObjects() { [EOL]     checkEquals(null, false); [EOL]     checkEquals(this, false); [EOL]     checkEquals(new ConstantInitializer<String>("Test"), false); [EOL] } <line_num>: 106,111
@Test [EOL] public void testToString() { [EOL]     final String s = init.toString(); [EOL]     final Pattern pattern = Pattern.compile("ConstantInitializer@\\d+ \\[ object = " + VALUE + " \\]"); [EOL]     assertTrue("Wrong string: " + s, pattern.matcher(s).matches()); [EOL] } <line_num>: 116,123
@Test [EOL] public void testToStringNull() { [EOL]     final String s = new ConstantInitializer<Object>(null).toString(); [EOL]     assertTrue("Object not found: " + s, s.indexOf("object = null") > 0); [EOL] } <line_num>: 128,132
