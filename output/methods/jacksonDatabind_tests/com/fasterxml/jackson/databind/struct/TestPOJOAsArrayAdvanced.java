@JsonCreator [EOL] public CreatorAsArray(@JsonProperty("x") int x, @JsonProperty("y") int y) { [EOL]     this.x = x; [EOL]     this.y = y; [EOL] } <line_num>: 17,22
@JsonCreator [EOL] public CreatorAsArrayShuffled(@JsonProperty("x") int x, @JsonProperty("y") int y) { [EOL]     this.x = x; [EOL]     this.y = y; [EOL] } <line_num>: 35,40
public int getX() { [EOL]     return x; [EOL] } <line_num>: 24,24
public int getY() { [EOL]     return y; [EOL] } <line_num>: 25,25
public int getX() { [EOL]     return x; [EOL] } <line_num>: 42,42
public int getY() { [EOL]     return y; [EOL] } <line_num>: 43,43
public void testWithView() throws Exception { [EOL]     AsArrayWithView input = new AsArrayWithView(); [EOL]     input.a = 1; [EOL]     input.b = 2; [EOL]     input.c = 3; [EOL]     String json = MAPPER.writerWithView(ViewA.class).writeValueAsString(input); [EOL]     assertEquals("[1,null,3]", json); [EOL]     AsArrayWithView output = MAPPER.reader(AsArrayWithView.class).withView(ViewB.class).readValue("[1,2,3]"); [EOL]     assertEquals(3, output.c); [EOL]     assertEquals(2, output.b); [EOL]     assertEquals(0, output.a); [EOL] } <line_num>: 68,85
public void testWithCreatorsOrdered() throws Exception { [EOL]     CreatorAsArray input = new CreatorAsArray(3, 4); [EOL]     input.a = 1; [EOL]     input.b = 2; [EOL]     String json = MAPPER.writeValueAsString(input); [EOL]     assertEquals("[3,4,1,2]", json); [EOL]     CreatorAsArray output = MAPPER.readValue(json, CreatorAsArray.class); [EOL]     assertEquals(1, output.a); [EOL]     assertEquals(2, output.b); [EOL]     assertEquals(3, output.x); [EOL]     assertEquals(4, output.y); [EOL] } <line_num>: 87,103
public void testWithCreatorsShuffled() throws Exception { [EOL]     CreatorAsArrayShuffled input = new CreatorAsArrayShuffled(3, 4); [EOL]     input.a = 1; [EOL]     input.b = 2; [EOL]     String json = MAPPER.writeValueAsString(input); [EOL]     assertEquals("[1,2,3,4]", json); [EOL]     CreatorAsArrayShuffled output = MAPPER.readValue(json, CreatorAsArrayShuffled.class); [EOL]     assertEquals(1, output.a); [EOL]     assertEquals(2, output.b); [EOL]     assertEquals(3, output.x); [EOL]     assertEquals(4, output.y); [EOL] } <line_num>: 106,122
