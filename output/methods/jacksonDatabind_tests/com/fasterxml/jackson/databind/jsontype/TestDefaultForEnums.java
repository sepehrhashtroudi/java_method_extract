public EnumHolder() { [EOL] } <line_num>: 19,19
public EnumHolder(TestEnum e) { [EOL]     value = e; [EOL] } <line_num>: 20,20
public void testSimpleEnumBean() throws Exception { [EOL]     TimeUnitBean bean = new TimeUnitBean(); [EOL]     bean.timeUnit = TimeUnit.SECONDS; [EOL]     ObjectMapper m = new ObjectMapper(); [EOL]     String json = m.writeValueAsString(bean); [EOL]     TimeUnitBean result = m.readValue(json, TimeUnitBean.class); [EOL]     assertEquals(TimeUnit.SECONDS, result.timeUnit); [EOL]     m = new ObjectMapper(); [EOL]     m.enableDefaultTyping(); [EOL]     json = m.writeValueAsString(bean); [EOL]     result = m.readValue(json, TimeUnitBean.class); [EOL]     assertEquals(TimeUnit.SECONDS, result.timeUnit); [EOL] } <line_num>: 33,51
public void testSimpleEnumsInObjectArray() throws Exception { [EOL]     ObjectMapper m = new ObjectMapper(); [EOL]     m.enableDefaultTyping(); [EOL]     String json = m.writeValueAsString(new Object[] { TestEnum.A }); [EOL]     assertEquals("[[\"com.fasterxml.jackson.databind.jsontype.TestDefaultForEnums$TestEnum\",\"A\"]]", json); [EOL]     Object[] value = m.readValue(json, Object[].class); [EOL]     assertEquals(1, value.length); [EOL]     assertSame(TestEnum.A, value[0]); [EOL] } <line_num>: 53,66
public void testSimpleEnumsAsField() throws Exception { [EOL]     ObjectMapper m = new ObjectMapper(); [EOL]     m.enableDefaultTyping(); [EOL]     String json = m.writeValueAsString(new EnumHolder(TestEnum.B)); [EOL]     assertEquals("{\"value\":[\"com.fasterxml.jackson.databind.jsontype.TestDefaultForEnums$TestEnum\",\"B\"]}", json); [EOL]     EnumHolder holder = m.readValue(json, EnumHolder.class); [EOL]     assertSame(TestEnum.B, holder.value); [EOL] } <line_num>: 68,76
