@JsonView(ViewB.class) [EOL] public void setB(int value) { [EOL]     b = value; [EOL] } <line_num>: 31,32
public void testSimple() throws Exception { [EOL]     Bean bean = mapper.readValue("{\"a\":3, \"aa\":\"foo\", \"b\": 9 }", Bean.class); [EOL]     assertEquals(3, bean.a); [EOL]     assertEquals("foo", bean.aa); [EOL]     assertEquals(9, bean.b); [EOL]     bean = mapper.readerWithView(ViewAA.class).withType(Bean.class).readValue("{\"a\":3, \"aa\":\"foo\", \"b\": 9 }"); [EOL]     assertEquals(3, bean.a); [EOL]     assertEquals("foo", bean.aa); [EOL]     assertEquals(0, bean.b); [EOL]     bean = mapper.readerWithView(ViewA.class).withType(Bean.class).readValue("{\"a\":1, \"aa\":\"x\", \"b\": 3 }"); [EOL]     assertEquals(1, bean.a); [EOL]     assertNull(bean.aa); [EOL]     assertEquals(0, bean.b); [EOL]     bean = mapper.reader(Bean.class).withView(ViewB.class).readValue("{\"a\":-3, \"aa\":\"y\", \"b\": 2 }"); [EOL]     assertEquals(0, bean.a); [EOL]     assertEquals("y", bean.aa); [EOL]     assertEquals(2, bean.b); [EOL] } <line_num>: 51,83
public void testWithoutDefaultInclusion() throws Exception { [EOL]     DefaultsBean bean = mapper.readValue("{\"a\":3, \"b\": 9 }", DefaultsBean.class); [EOL]     assertEquals(3, bean.a); [EOL]     assertEquals(9, bean.b); [EOL]     ObjectMapper myMapper = new ObjectMapper(); [EOL]     myMapper.disable(MapperFeature.DEFAULT_VIEW_INCLUSION); [EOL]     bean = myMapper.readerWithView(ViewAA.class).withType(DefaultsBean.class).readValue("{\"a\":1, \"b\": 2 }"); [EOL]     assertEquals(0, bean.a); [EOL]     assertEquals(2, bean.b); [EOL] } <line_num>: 85,103
