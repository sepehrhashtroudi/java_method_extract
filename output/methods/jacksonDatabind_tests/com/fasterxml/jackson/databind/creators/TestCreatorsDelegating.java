public BooleanBean(Boolean v) { [EOL]     value = v; [EOL] } <line_num>: 14,14
@JsonCreator [EOL] public CtorBean711(@JacksonInject String n, int a) { [EOL]     name = n; [EOL]     age = a; [EOL] } <line_num>: 28,33
private FactoryBean711(int a, String n1, String n2) { [EOL]     age = a; [EOL]     name1 = n1; [EOL]     name2 = n2; [EOL] } <line_num>: 43,47
@JsonCreator [EOL] protected static BooleanBean create(Boolean value) { [EOL]     return new BooleanBean(value); [EOL] } <line_num>: 16,19
@JsonCreator [EOL] public static FactoryBean711 create(@JacksonInject String n1, int a, @JacksonInject String n2) { [EOL]     return new FactoryBean711(a, n1, n2); [EOL] } <line_num>: 49,52
public void testBooleanDelegate() throws Exception { [EOL]     ObjectMapper m = new ObjectMapper(); [EOL]     BooleanBean bb = m.readValue("true", BooleanBean.class); [EOL]     assertEquals(Boolean.TRUE, bb.value); [EOL]     bb = m.readValue(quote("true"), BooleanBean.class); [EOL]     assertEquals(Boolean.TRUE, bb.value); [EOL] } <line_num>: 61,71
public void testWithCtorAndDelegate() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     mapper.setInjectableValues(new InjectableValues.Std().addValue(String.class, "Pooka")); [EOL]     CtorBean711 bean = null; [EOL]     try { [EOL]         bean = mapper.readValue("38", CtorBean711.class); [EOL]     } catch (JsonMappingException e) { [EOL]         fail("Did not expect problems, got: " + e.getMessage()); [EOL]     } [EOL]     assertEquals(38, bean.age); [EOL]     assertEquals("Pooka", bean.name); [EOL] } <line_num>: 74,88
public void testWithFactoryAndDelegate() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     mapper.setInjectableValues(new InjectableValues.Std().addValue(String.class, "Fygar")); [EOL]     FactoryBean711 bean = null; [EOL]     try { [EOL]         bean = mapper.readValue("38", FactoryBean711.class); [EOL]     } catch (JsonMappingException e) { [EOL]         fail("Did not expect problems, got: " + e.getMessage()); [EOL]     } [EOL]     assertEquals(38, bean.age); [EOL]     assertEquals("Fygar", bean.name1); [EOL]     assertEquals("Fygar", bean.name2); [EOL] } <line_num>: 90,105
