public int getC() { [EOL]     return -6; [EOL] } <line_num>: 24,24
public String getD() { [EOL]     return "abc"; [EOL] } <line_num>: 25,25
public void testExplicitIgnoralWithBean() throws Exception { [EOL]     IgnoreSome value = new IgnoreSome(); [EOL]     Map<String, Object> result = writeAndMap(MAPPER, value); [EOL]     assertEquals(2, result.size()); [EOL]     assertFalse(result.containsKey("b")); [EOL]     assertFalse(result.containsKey("c")); [EOL]     assertEquals(Integer.valueOf(value.a), result.get("a")); [EOL]     assertEquals(value.getD(), result.get("d")); [EOL] } <line_num>: 74,85
public void testExplicitIgnoralWithMap() throws Exception { [EOL]     MyMap value = new MyMap(); [EOL]     value.put("a", "b"); [EOL]     value.put("@class", MyMap.class.getName()); [EOL]     Map<String, Object> result = writeAndMap(MAPPER, value); [EOL]     assertEquals(1, result.size()); [EOL]     assertFalse(result.containsKey("@class")); [EOL]     assertEquals(value.get("a"), result.get("a")); [EOL] } <line_num>: 87,99
public void testIgnoreViaOnlyProps() throws Exception { [EOL]     assertEquals("{\"value\":{\"x\":1}}", MAPPER.writeValueAsString(new WrapperWithPropIgnore())); [EOL] } <line_num>: 101,105
public void testIgnoreWithMapProperty() throws Exception { [EOL]     assertEquals("{\"value\":{\"b\":2}}", MAPPER.writeValueAsString(new MapWrapper())); [EOL] } <line_num>: 107,110
public void testIgnoreViaPropsAndClass() throws Exception { [EOL]     assertEquals("{\"value\":{\"y\":2}}", MAPPER.writeValueAsString(new WrapperWithPropIgnore2())); [EOL] } <line_num>: 112,116
