public void testRootViaMapper() throws Exception { [EOL]     ObjectMapper mapper = rootMapper(); [EOL]     String json = mapper.writeValueAsString(new Bean()); [EOL]     assertEquals("{\"rudy\":{\"a\":3}}", json); [EOL]     Bean bean = mapper.readValue(json, Bean.class); [EOL]     assertNotNull(bean); [EOL]     json = mapper.writeValueAsString(new RootBeanWithEmpty()); [EOL]     assertEquals("{\"RootBeanWithEmpty\":{\"a\":2}}", json); [EOL]     RootBeanWithEmpty bean2 = mapper.readValue(json, RootBeanWithEmpty.class); [EOL]     assertNotNull(bean2); [EOL]     assertEquals(2, bean2.a); [EOL] } <line_num>: 29,43
public void testRootViaWriterAndReader() throws Exception { [EOL]     ObjectMapper mapper = rootMapper(); [EOL]     String json = mapper.writer().writeValueAsString(new Bean()); [EOL]     assertEquals("{\"rudy\":{\"a\":3}}", json); [EOL]     Bean bean = mapper.reader(Bean.class).readValue(json); [EOL]     assertNotNull(bean); [EOL] } <line_num>: 45,52
public void testReconfiguringOfWrapping() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     final Bean input = new Bean(); [EOL]     String jsonUnwrapped = mapper.writeValueAsString(input); [EOL]     assertEquals("{\"a\":3}", jsonUnwrapped); [EOL]     String jsonWrapped = mapper.writer(SerializationFeature.WRAP_ROOT_VALUE).writeValueAsString(input); [EOL]     assertEquals("{\"rudy\":{\"a\":3}}", jsonWrapped); [EOL]     Bean result = mapper.readValue(jsonUnwrapped, Bean.class); [EOL]     assertNotNull(result); [EOL]     try { [EOL]         result = mapper.reader(Bean.class).with(DeserializationFeature.UNWRAP_ROOT_VALUE).readValue(jsonUnwrapped); [EOL]         fail("Should have failed"); [EOL]     } catch (JsonMappingException e) { [EOL]         verifyException(e, "Root name 'a'"); [EOL]     } [EOL]     result = mapper.reader(Bean.class).with(DeserializationFeature.UNWRAP_ROOT_VALUE).readValue(jsonWrapped); [EOL]     assertNotNull(result); [EOL] } <line_num>: 54,80
public void testRootUsingExplicitConfig() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     ObjectWriter writer = mapper.writer().withRootName("wrapper"); [EOL]     String json = writer.writeValueAsString(new Bean()); [EOL]     assertEquals("{\"wrapper\":{\"a\":3}}", json); [EOL]     ObjectReader reader = mapper.reader(Bean.class).withRootName("wrapper"); [EOL]     Bean bean = reader.readValue(json); [EOL]     assertNotNull(bean); [EOL]     ObjectMapper wrapping = rootMapper(); [EOL]     json = wrapping.writer().withRootName("something").writeValueAsString(new Bean()); [EOL]     assertEquals("{\"something\":{\"a\":3}}", json); [EOL]     json = wrapping.writer().withRootName("").writeValueAsString(new Bean()); [EOL]     assertEquals("{\"a\":3}", json); [EOL]     bean = wrapping.reader(Bean.class).withRootName("").readValue(json); [EOL]     assertNotNull(bean); [EOL] } <line_num>: 83,103
private ObjectMapper rootMapper() { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     mapper.configure(SerializationFeature.WRAP_ROOT_VALUE, true); [EOL]     mapper.configure(DeserializationFeature.UNWRAP_ROOT_VALUE, true); [EOL]     return mapper; [EOL] } <line_num>: 111,117
