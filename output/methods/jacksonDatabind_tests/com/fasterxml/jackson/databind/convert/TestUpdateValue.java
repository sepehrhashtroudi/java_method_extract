public void testBeanUpdate() throws Exception { [EOL]     Bean bean = new Bean(); [EOL]     assertEquals("b", bean.b); [EOL]     assertEquals(3, bean.c.length); [EOL]     assertNull(bean.child); [EOL]     Object ob = MAPPER.readerForUpdating(bean).readValue("{ \"b\":\"x\", \"c\":[4,5], \"child\":{ \"a\":\"y\"} }"); [EOL]     assertSame(ob, bean); [EOL]     assertEquals("a", bean.a); [EOL]     assertEquals("x", bean.b); [EOL]     assertArrayEquals(new int[] { 4, 5 }, bean.c); [EOL]     Bean child = bean.child; [EOL]     assertNotNull(child); [EOL]     assertEquals("y", child.a); [EOL]     assertEquals("b", child.b); [EOL]     assertArrayEquals(new int[] { 1, 2, 3 }, child.c); [EOL]     assertNull(child.child); [EOL] } <line_num>: 56,76
public void testListUpdate() throws Exception { [EOL]     List<String> strs = new ArrayList<String>(); [EOL]     strs.add("a"); [EOL]     Object ob = MAPPER.readerForUpdating(strs).readValue("[ \"b\", \"c\", \"d\" ]"); [EOL]     assertSame(strs, ob); [EOL]     assertEquals(4, strs.size()); [EOL]     assertEquals("a", strs.get(0)); [EOL]     assertEquals("b", strs.get(1)); [EOL]     assertEquals("c", strs.get(2)); [EOL]     assertEquals("d", strs.get(3)); [EOL] } <line_num>: 78,90
public void testMapUpdate() throws Exception { [EOL]     Map<String, String> strs = new HashMap<String, String>(); [EOL]     strs.put("a", "a"); [EOL]     strs.put("b", "b"); [EOL]     Object ob = MAPPER.readerForUpdating(strs).readValue("{ \"c\" : \"c\", \"a\" : \"z\" }"); [EOL]     assertSame(strs, ob); [EOL]     assertEquals(3, strs.size()); [EOL]     assertEquals("z", strs.get("a")); [EOL]     assertEquals("b", strs.get("b")); [EOL]     assertEquals("c", strs.get("c")); [EOL] } <line_num>: 92,104
public void testUpdateSequence() throws Exception { [EOL]     XYBean toUpdate = new XYBean(); [EOL]     Iterator<XYBean> it = MAPPER.readerForUpdating(toUpdate).readValues("{\"x\":1,\"y\":2}\n{\"x\":16}{\"y\":37}"); [EOL]     assertTrue(it.hasNext()); [EOL]     XYBean value = it.next(); [EOL]     assertSame(toUpdate, value); [EOL]     assertEquals(1, value.x); [EOL]     assertEquals(2, value.y); [EOL]     assertTrue(it.hasNext()); [EOL]     value = it.next(); [EOL]     assertSame(toUpdate, value); [EOL]     assertEquals(16, value.x); [EOL]     assertEquals(2, value.y); [EOL]     assertTrue(it.hasNext()); [EOL]     value = it.next(); [EOL]     assertSame(toUpdate, value); [EOL]     assertEquals(16, value.x); [EOL]     assertEquals(37, value.y); [EOL]     assertFalse(it.hasNext()); [EOL] } <line_num>: 107,132
public void testUpdatingWithViews() throws Exception { [EOL]     Updateable bean = new Updateable(); [EOL]     bean.num = 100; [EOL]     bean.str = "test"; [EOL]     Updateable result = MAPPER.readerForUpdating(bean).withView(TextView.class).readValue("{\"num\": 10, \"str\":\"foobar\"}"); [EOL]     assertSame(bean, result); [EOL]     assertEquals(100, bean.num); [EOL]     assertEquals("foobar", bean.str); [EOL] } <line_num>: 135,147
