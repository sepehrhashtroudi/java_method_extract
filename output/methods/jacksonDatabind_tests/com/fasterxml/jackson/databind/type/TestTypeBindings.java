@Override [EOL] public Set<java.util.Map.Entry<K, Collection<V>>> entrySet() { [EOL]     return null; [EOL] } <line_num>: 20,23
@Override [EOL] public Set<java.util.Map.Entry<K, Collection<V>>> entrySet() { [EOL]     return null; [EOL] } <line_num>: 25,28
public void testAbstract() throws Exception { [EOL]     TypeFactory tf = TypeFactory.defaultInstance(); [EOL]     TypeBindings b = new TypeBindings(tf, AbstractType.class); [EOL]     assertEquals(2, b.getBindingCount()); [EOL]     JavaType obType = tf.constructType(Object.class); [EOL]     assertEquals(obType, b.findType("A")); [EOL]     assertEquals(obType, b.findType("B")); [EOL] } <line_num>: 38,49
public void testSimple() throws Exception { [EOL]     TypeFactory tf = TypeFactory.defaultInstance(); [EOL]     TypeBindings b = new TypeBindings(tf, LongStringType.class); [EOL]     assertEquals(2, b.getBindingCount()); [EOL]     assertEquals(tf.constructType(Long.class), b.findType("A")); [EOL]     assertEquals(tf.constructType(String.class), b.findType("B")); [EOL] } <line_num>: 51,59
public void testInnerType() throws Exception { [EOL]     TypeFactory tf = TypeFactory.defaultInstance(); [EOL]     JavaType type = tf.constructType(InnerGenericTyping.InnerClass.class); [EOL]     assertEquals(MapType.class, type.getClass()); [EOL]     JavaType keyType = type.getKeyType(); [EOL]     assertEquals(Object.class, keyType.getRawClass()); [EOL]     JavaType valueType = type.getContentType(); [EOL]     assertEquals(Collection.class, valueType.getRawClass()); [EOL]     JavaType vt2 = valueType.getContentType(); [EOL]     assertEquals(Object.class, vt2.getRawClass()); [EOL] } <line_num>: 63,74
