public Wrapper() { [EOL] } <line_num>: 39,39
public Wrapper(T v) { [EOL]     value = v; [EOL] } <line_num>: 41,41
public abstract void setNumber(T value); <line_num>: 12,12
@Override [EOL] public void setNumber(Long value) { [EOL]     _number = value.intValue(); [EOL] } <line_num>: 20,24
@Override [EOL] public boolean equals(Object o) { [EOL]     return (o instanceof Wrapper<?>) && (((Wrapper<?>) o).value.equals(value)); [EOL] } <line_num>: 43,46
public void testSimpleNumberBean() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     NumberBean result = mapper.readValue("{\"number\":17}", NumberBean.class); [EOL]     assertEquals(17, result._number); [EOL] } <line_num>: 55,60
public void testGenericWrapper() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     Wrapper<SimpleBean> result = mapper.readValue("{\"value\": { \"x\" : 13 } }", new TypeReference<Wrapper<SimpleBean>>() { [EOL]     }); [EOL]     assertNotNull(result); [EOL]     assertEquals(Wrapper.class, result.getClass()); [EOL]     Object contents = result.value; [EOL]     assertNotNull(contents); [EOL]     assertEquals(SimpleBean.class, contents.getClass()); [EOL]     SimpleBean bean = (SimpleBean) contents; [EOL]     assertEquals(13, bean.x); [EOL] } <line_num>: 65,78
public void testMultipleWrappers() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     Wrapper<Boolean> result = mapper.readValue("{\"value\": true}", new TypeReference<Wrapper<Boolean>>() { [EOL]     }); [EOL]     assertEquals(new Wrapper<Boolean>(Boolean.TRUE), result); [EOL]     Wrapper<String> result2 = mapper.readValue("{\"value\": \"abc\"}", new TypeReference<Wrapper<String>>() { [EOL]     }); [EOL]     assertEquals(new Wrapper<String>("abc"), result2); [EOL]     Wrapper<Long> result3 = mapper.readValue("{\"value\": 7}", new TypeReference<Wrapper<Long>>() { [EOL]     }); [EOL]     assertEquals(new Wrapper<Long>(7L), result3); [EOL] } <line_num>: 85,103
public void testArrayOfGenericWrappers() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     Wrapper<SimpleBean>[] result = mapper.readValue("[ {\"value\": { \"x\" : 9 } } ]", new TypeReference<Wrapper<SimpleBean>[]>() { [EOL]     }); [EOL]     assertNotNull(result); [EOL]     assertEquals(Wrapper[].class, result.getClass()); [EOL]     assertEquals(1, result.length); [EOL]     Wrapper<SimpleBean> elem = result[0]; [EOL]     Object contents = elem.value; [EOL]     assertNotNull(contents); [EOL]     assertEquals(SimpleBean.class, contents.getClass()); [EOL]     SimpleBean bean = (SimpleBean) contents; [EOL]     assertEquals(9, bean.x); [EOL] } <line_num>: 108,123
