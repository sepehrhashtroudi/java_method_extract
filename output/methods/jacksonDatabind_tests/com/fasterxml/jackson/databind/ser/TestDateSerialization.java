public TimeZoneBean(String name) { [EOL]     tz = TimeZone.getTimeZone(name); [EOL] } <line_num>: 17,19
public DateAsNumberBean(long l) { [EOL]     date = new java.util.Date(l); [EOL] } <line_num>: 27,27
public DateAsStringBean(long l) { [EOL]     date = new java.util.Date(l); [EOL] } <line_num>: 33,33
public DateInCETBean(long l) { [EOL]     date = new java.util.Date(l); [EOL] } <line_num>: 39,39
public TimeZone getTz() { [EOL]     return tz; [EOL] } <line_num>: 21,21
public void testDateNumeric() throws IOException { [EOL]     assertTrue(MAPPER.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)); [EOL]     String json = MAPPER.writeValueAsString(new Date(199L)); [EOL]     assertEquals("199", json); [EOL] } <line_num>: 50,57
public void testDateISO8601() throws IOException { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     mapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false); [EOL]     String json = mapper.writeValueAsString(new Date(0L)); [EOL]     assertEquals("\"1970-01-01T00:00:00.000+0000\"", json); [EOL] } <line_num>: 59,66
public void testDateOther() throws IOException { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     DateFormat df = new SimpleDateFormat("yyyy-MM-dd'X'HH:mm:ss"); [EOL]     df.setTimeZone(TimeZone.getTimeZone("PST")); [EOL]     mapper.setDateFormat(df); [EOL]     assertEquals(quote("1969-12-31X16:00:00"), mapper.writeValueAsString(new Date(0L))); [EOL] } <line_num>: 68,76
@SuppressWarnings("deprecation") [EOL] public void testSqlDate() throws IOException { [EOL]     java.sql.Date date = new java.sql.Date(99, Calendar.APRIL, 1); [EOL]     assertEquals(quote("1999-04-01"), MAPPER.writeValueAsString(date)); [EOL] } <line_num>: 78,84
public void testTimeZone() throws IOException { [EOL]     TimeZone input = TimeZone.getTimeZone("PST"); [EOL]     String json = MAPPER.writeValueAsString(input); [EOL]     assertEquals(quote("PST"), json); [EOL] } <line_num>: 86,91
public void testTimeZoneInBean() throws IOException { [EOL]     String json = MAPPER.writeValueAsString(new TimeZoneBean("PST")); [EOL]     assertEquals("{\"tz\":\"PST\"}", json); [EOL] } <line_num>: 94,98
public void testDateUsingObjectWriter() throws IOException { [EOL]     DateFormat df = new SimpleDateFormat("yyyy-MM-dd'X'HH:mm:ss"); [EOL]     df.setTimeZone(TimeZone.getTimeZone("PST")); [EOL]     assertEquals(quote("1969-12-31X16:00:00"), MAPPER.writer(df).writeValueAsString(new Date(0L))); [EOL]     ObjectWriter w = MAPPER.writer((DateFormat) null); [EOL]     assertEquals("0", w.writeValueAsString(new Date(0L))); [EOL]     w = w.with(df); [EOL]     assertEquals(quote("1969-12-31X16:00:00"), w.writeValueAsString(new Date(0L))); [EOL]     w = w.with((DateFormat) null); [EOL]     assertEquals("0", w.writeValueAsString(new Date(0L))); [EOL] } <line_num>: 101,114
public void testDatesAsMapKeys() throws IOException { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     Map<Date, Integer> map = new HashMap<Date, Integer>(); [EOL]     assertFalse(mapper.isEnabled(SerializationFeature.WRITE_DATE_KEYS_AS_TIMESTAMPS)); [EOL]     map.put(new Date(0L), Integer.valueOf(1)); [EOL]     assertEquals("{\"1970-01-01T00:00:00.000+0000\":1}", mapper.writeValueAsString(map)); [EOL]     mapper.configure(SerializationFeature.WRITE_DATE_KEYS_AS_TIMESTAMPS, true); [EOL]     assertEquals("{\"0\":1}", mapper.writeValueAsString(map)); [EOL] } <line_num>: 117,129
public void testDateWithJsonFormat() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     String json; [EOL]     mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS); [EOL]     json = mapper.writeValueAsString(new DateAsNumberBean(0L)); [EOL]     assertEquals("{\"date\":0}", json); [EOL]     mapper.enable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS); [EOL]     json = mapper.writer().with(getUTCTimeZone()).writeValueAsString(new DateAsStringBean(0L)); [EOL]     assertEquals("{\"date\":\"1970-01-01\"}", json); [EOL]     json = mapper.writeValueAsString(new DateInCETBean(0L)); [EOL]     assertEquals("{\"date\":\"1970-01-01,01:00\"}", json); [EOL] } <line_num>: 132,150
public void testWithTimeZoneOverride() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     mapper.setDateFormat(new SimpleDateFormat("yyyy-MM-dd/HH:mm z")); [EOL]     mapper.setTimeZone(TimeZone.getTimeZone("PST")); [EOL]     mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS); [EOL]     String json = mapper.writeValueAsString(new Date(0)); [EOL]     assertEquals(quote("1969-12-31/16:00 PST"), json); [EOL] } <line_num>: 156,165
