public String getUsername() { [EOL]     return username; [EOL] } <line_num>: 36,38
public void setUsername(String value) { [EOL]     this.username = value; [EOL] } <line_num>: 40,42
@JsonIgnore [EOL] @JsonProperty(value = "user_password") [EOL] public java.lang.String getUserPassword() { [EOL]     return userPassword; [EOL] } <line_num>: 44,48
@JsonProperty(value = "user_password") [EOL] public void setUserPassword(String value) { [EOL]     this.userPassword = value; [EOL] } <line_num>: 50,53
public void testSimpleInclusionFilter() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     FilterProvider prov = new SimpleFilterProvider().addFilter("RootFilter", SimpleBeanPropertyFilter.filterOutAllExcept("a")); [EOL]     assertEquals("{\"a\":\"a\"}", mapper.writer(prov).writeValueAsString(new Bean())); [EOL]     mapper = new ObjectMapper(); [EOL]     mapper.setFilters(prov); [EOL]     assertEquals("{\"a\":\"a\"}", mapper.writeValueAsString(new Bean())); [EOL] } <line_num>: 62,73
public void testSimpleExclusionFilter() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     FilterProvider prov = new SimpleFilterProvider().addFilter("RootFilter", SimpleBeanPropertyFilter.serializeAllExcept("a")); [EOL]     assertEquals("{\"b\":\"b\"}", mapper.writer(prov).writeValueAsString(new Bean())); [EOL] } <line_num>: 75,81
public void testMissingFilter() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     try { [EOL]         mapper.writeValueAsString(new Bean()); [EOL]         fail("Should have failed without configured filter"); [EOL]     } catch (JsonMappingException e) { [EOL]         verifyException(e, "Can not resolve BeanPropertyFilter with id 'RootFilter'"); [EOL]     } [EOL]     SimpleFilterProvider fp = new SimpleFilterProvider().setFailOnUnknownId(false); [EOL]     mapper.setFilters(fp); [EOL]     String json = mapper.writeValueAsString(new Bean()); [EOL]     assertEquals("{\"a\":\"a\",\"b\":\"b\"}", json); [EOL] } <line_num>: 84,100
public void testDefaultFilter() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     FilterProvider prov = new SimpleFilterProvider().setDefaultFilter(SimpleBeanPropertyFilter.filterOutAllExcept("b")); [EOL]     assertEquals("{\"b\":\"b\"}", mapper.writer(prov).writeValueAsString(new Bean())); [EOL] } <line_num>: 103,108
public void testIssue89() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     Pod pod = new Pod(); [EOL]     pod.username = "Bob"; [EOL]     pod.userPassword = "s3cr3t!"; [EOL]     String json = mapper.writeValueAsString(pod); [EOL]     assertEquals("{\"username\":\"Bob\"}", json); [EOL]     Pod pod2 = mapper.readValue("{\"username\":\"Bill\",\"user_password\":\"foo!\"}", Pod.class); [EOL]     assertEquals("Bill", pod2.username); [EOL]     assertEquals("foo!", pod2.userPassword); [EOL] } <line_num>: 111,125
