public Bean(Bean next, String name) { [EOL]     _next = next; [EOL]     _name = name; [EOL] } <line_num>: 28,31
public Bean getNext() { [EOL]     return _next; [EOL] } <line_num>: 33,33
public String getName() { [EOL]     return _name; [EOL] } <line_num>: 34,34
public void assignNext(Bean n) { [EOL]     _next = n; [EOL] } <line_num>: 36,36
public void testLinked() throws Exception { [EOL]     Bean last = new Bean(null, "last"); [EOL]     Bean first = new Bean(last, "first"); [EOL]     Map<String, Object> map = writeAndMap(new ObjectMapper(), first); [EOL]     assertEquals(2, map.size()); [EOL]     assertEquals("first", map.get("name")); [EOL]     @SuppressWarnings("unchecked") [EOL]     Map<String, Object> map2 = (Map<String, Object>) map.get("next"); [EOL]     assertNotNull(map2); [EOL]     assertEquals(2, map2.size()); [EOL]     assertEquals("last", map2.get("name")); [EOL]     assertNull(map2.get("next")); [EOL] } <line_num>: 45,60
public void testSelfReference() throws Exception { [EOL]     Bean selfRef = new Bean(null, "self-refs"); [EOL]     Bean first = new Bean(selfRef, "first"); [EOL]     selfRef.assignNext(selfRef); [EOL]     ObjectMapper m = new ObjectMapper(); [EOL]     Bean[] wrapper = new Bean[] { first }; [EOL]     try { [EOL]         writeAndMap(m, wrapper); [EOL]     } catch (JsonMappingException e) { [EOL]         verifyException(e, "Direct self-reference leading to cycle"); [EOL]     } [EOL] } <line_num>: 65,77
