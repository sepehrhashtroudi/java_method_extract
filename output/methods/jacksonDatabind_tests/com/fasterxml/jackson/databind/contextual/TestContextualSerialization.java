public ContextualBean(String s) { [EOL]     _value = s; [EOL] } <line_num>: 43,43
public AnnotatedContextualBean(String s) { [EOL]     value = s; [EOL] } <line_num>: 56,56
public ContextualBeanWrapper(String s) { [EOL]     wrapped = new ContextualBean(s); [EOL] } <line_num>: 66,68
public ContextualArrayBean(String... strings) { [EOL]     beans = strings; [EOL] } <line_num>: 76,78
public ContextualArrayElementBean(String... strings) { [EOL]     beans = strings; [EOL] } <line_num>: 87,89
public ContextualListBean(String... strings) { [EOL]     for (String string : strings) { [EOL]         beans.add(string); [EOL]     } [EOL] } <line_num>: 97,101
public BeanWithClassConfig(String v) { [EOL]     value = v; [EOL] } <line_num>: 119,119
public AnnotatedContextualSerializer() { [EOL]     this(""); [EOL] } <line_num>: 131,131
public AnnotatedContextualSerializer(String p) { [EOL]     _prefix = p; [EOL] } <line_num>: 132,134
public ContextualAndResolvable() { [EOL]     this(0, 0); [EOL] } <line_num>: 168,168
public ContextualAndResolvable(int resolved, int contextual) { [EOL]     isContextual = contextual; [EOL]     isResolved = resolved; [EOL] } <line_num>: 170,174
@Prefix("see:") [EOL] public String getValue() { [EOL]     return _value; [EOL] } <line_num>: 45,46
@Override [EOL] public void serialize(String value, JsonGenerator jgen, SerializerProvider provider) throws IOException { [EOL]     jgen.writeString(_prefix + value); [EOL] } <line_num>: 136,140
@Override [EOL] public JsonSerializer<?> createContextual(SerializerProvider prov, BeanProperty property) throws JsonMappingException { [EOL]     String prefix = "UNKNOWN"; [EOL]     Prefix ann = null; [EOL]     if (property != null) { [EOL]         ann = property.getAnnotation(Prefix.class); [EOL]         if (ann == null) { [EOL]             ann = property.getContextAnnotation(Prefix.class); [EOL]         } [EOL]     } [EOL]     if (ann != null) { [EOL]         prefix = ann.value(); [EOL]     } [EOL]     return new AnnotatedContextualSerializer(prefix); [EOL] } <line_num>: 142,158
@Override [EOL] public void serialize(String value, JsonGenerator jgen, SerializerProvider provider) throws IOException { [EOL]     jgen.writeString("contextual=" + isContextual + ",resolved=" + isResolved); [EOL] } <line_num>: 176,180
@Override [EOL] public JsonSerializer<?> createContextual(SerializerProvider prov, BeanProperty property) throws JsonMappingException { [EOL]     return new ContextualAndResolvable(isResolved, isContextual + 1); [EOL] } <line_num>: 182,187
@Override [EOL] public void resolve(SerializerProvider provider) { [EOL]     ++isResolved; [EOL] } <line_num>: 189,192
public void testMethodAnnotations() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     SimpleModule module = new SimpleModule("test", Version.unknownVersion()); [EOL]     module.addSerializer(String.class, new AnnotatedContextualSerializer()); [EOL]     mapper.registerModule(module); [EOL]     assertEquals("{\"value\":\"see:foobar\"}", mapper.writeValueAsString(new ContextualBean("foobar"))); [EOL] } <line_num>: 203,210
public void testClassAnnotations() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     SimpleModule module = new SimpleModule("test", Version.unknownVersion()); [EOL]     module.addSerializer(String.class, new AnnotatedContextualSerializer()); [EOL]     mapper.registerModule(module); [EOL]     assertEquals("{\"value\":\"Voila->xyz\"}", mapper.writeValueAsString(new BeanWithClassConfig("xyz"))); [EOL] } <line_num>: 214,221
public void testWrappedBean() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     SimpleModule module = new SimpleModule("test", Version.unknownVersion()); [EOL]     module.addSerializer(String.class, new AnnotatedContextualSerializer()); [EOL]     mapper.registerModule(module); [EOL]     assertEquals("{\"wrapped\":{\"value\":\"see:xyz\"}}", mapper.writeValueAsString(new ContextualBeanWrapper("xyz"))); [EOL] } <line_num>: 223,230
public void testMethodAnnotationInArray() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     SimpleModule module = new SimpleModule("test", Version.unknownVersion()); [EOL]     module.addSerializer(String.class, new AnnotatedContextualSerializer()); [EOL]     mapper.registerModule(module); [EOL]     ContextualArrayBean beans = new ContextualArrayBean("123"); [EOL]     assertEquals("{\"beans\":[\"array->123\"]}", mapper.writeValueAsString(beans)); [EOL] } <line_num>: 233,241
public void testMethodAnnotationInList() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     SimpleModule module = new SimpleModule("test", Version.unknownVersion()); [EOL]     module.addSerializer(String.class, new AnnotatedContextualSerializer()); [EOL]     mapper.registerModule(module); [EOL]     ContextualListBean beans = new ContextualListBean("abc"); [EOL]     assertEquals("{\"beans\":[\"list->abc\"]}", mapper.writeValueAsString(beans)); [EOL] } <line_num>: 244,252
public void testMethodAnnotationInMap() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     SimpleModule module = new SimpleModule("test", Version.unknownVersion()); [EOL]     module.addSerializer(String.class, new AnnotatedContextualSerializer()); [EOL]     mapper.registerModule(module); [EOL]     ContextualMapBean map = new ContextualMapBean(); [EOL]     map.beans.put("first", "In Map"); [EOL]     assertEquals("{\"beans\":{\"first\":\"map->In Map\"}}", mapper.writeValueAsString(map)); [EOL] } <line_num>: 255,264
public void testContextualViaAnnotation() throws Exception { [EOL]     ObjectMapper mapper = new ObjectMapper(); [EOL]     AnnotatedContextualBean bean = new AnnotatedContextualBean("abc"); [EOL]     assertEquals("{\"value\":\"prefix->abc\"}", mapper.writeValueAsString(bean)); [EOL] } <line_num>: 266,271
