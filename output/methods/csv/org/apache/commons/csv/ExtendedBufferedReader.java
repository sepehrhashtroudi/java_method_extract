ExtendedBufferedReader(Reader r) { [EOL]     super(r); [EOL] } <line_num>: 51,53
@Override [EOL] public int read() throws IOException { [EOL]     int current = super.read(); [EOL]     if (current == '\r' || (current == '\n' && lastChar != '\r')) { [EOL]         lineCounter++; [EOL]     } [EOL]     lastChar = current; [EOL]     return lastChar; [EOL] } <line_num>: 55,63
int readAgain() { [EOL]     return lastChar; [EOL] } <line_num>: 75,77
@Override [EOL] public int read(char[] buf, int offset, int length) throws IOException { [EOL]     if (length == 0) { [EOL]         return 0; [EOL]     } [EOL]     int len = super.read(buf, offset, length); [EOL]     if (len > 0) { [EOL]         for (int i = offset; i < offset + len; i++) { [EOL]             char ch = buf[i]; [EOL]             if (ch == '\n') { [EOL]                 if ('\r' != (i > 0 ? buf[i - 1] : lastChar)) { [EOL]                     lineCounter++; [EOL]                 } [EOL]             } else if (ch == '\r') { [EOL]                 lineCounter++; [EOL]             } [EOL]         } [EOL]         lastChar = buf[offset + len - 1]; [EOL]     } else if (len == -1) { [EOL]         lastChar = END_OF_STREAM; [EOL]     } [EOL]     return len; [EOL] } <line_num>: 79,107
@Override [EOL] public String readLine() throws IOException { [EOL]     String line = super.readLine(); [EOL]     if (line != null) { [EOL]         if (line.length() > 0) { [EOL]             lastChar = line.charAt(line.length() - 1); [EOL]         } [EOL]         lineCounter++; [EOL]     } else { [EOL]         lastChar = END_OF_STREAM; [EOL]     } [EOL]     return line; [EOL] } <line_num>: 121,135
int lookAhead() throws IOException { [EOL]     super.mark(1); [EOL]     int c = super.read(); [EOL]     super.reset(); [EOL]     return c; [EOL] } <line_num>: 145,151
int getLineNumber() { [EOL]     return lineCounter; [EOL] } <line_num>: 158,160
