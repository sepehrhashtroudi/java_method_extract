@Test [EOL] public void handlesBaseUri() { [EOL]     Tag tag = Tag.valueOf("a"); [EOL]     Attributes attribs = new Attributes(); [EOL]     attribs.put("relHref", "/foo"); [EOL]     attribs.put("absHref", "http://bar/qux"); [EOL]     Element noBase = new Element(tag, "", attribs); [EOL]     assertEquals("", noBase.absUrl("relHref")); [EOL]     assertEquals("http://bar/qux", noBase.absUrl("absHref")); [EOL]     Element withBase = new Element(tag, "http://foo/", attribs); [EOL]     assertEquals("http://foo/foo", withBase.absUrl("relHref")); [EOL]     assertEquals("http://bar/qux", withBase.absUrl("absHref")); [EOL]     assertEquals("", withBase.absUrl("noval")); [EOL]     Element dodgyBase = new Element(tag, "wtf://no-such-protocol/", attribs); [EOL]     assertEquals("http://bar/qux", dodgyBase.absUrl("absHref")); [EOL]     assertEquals("", dodgyBase.absUrl("relHref")); [EOL] } <line_num>: 13,31
@Test [EOL] public void handlesAbsPrefix() { [EOL]     Document doc = Jsoup.parse("<a href=/foo>Hello</a>", "http://jsoup.org/"); [EOL]     Element a = doc.select("a").first(); [EOL]     assertEquals("/foo", a.attr("href")); [EOL]     assertEquals("http://jsoup.org/foo", a.attr("abs:href")); [EOL]     assertFalse(a.hasAttr("abs:href")); [EOL] } <line_num>: 33,39
@Test [EOL] public void testRemove() { [EOL]     Document doc = Jsoup.parse("<p>One <span>two</span> three</p>"); [EOL]     Element p = doc.select("p").first(); [EOL]     p.childNode(0).remove(); [EOL]     assertEquals("two three", p.text()); [EOL]     assertEquals("<span>two</span> three", p.html()); [EOL] } <line_num>: 41,48
@Test [EOL] public void testReplace() { [EOL]     Document doc = Jsoup.parse("<p>One <span>two</span> three</p>"); [EOL]     Element p = doc.select("p").first(); [EOL]     Element insert = doc.createElement("em").text("foo"); [EOL]     p.childNode(1).replaceWith(insert); [EOL]     assertEquals("One <em>foo</em> three", p.html()); [EOL] } <line_num>: 50,57
