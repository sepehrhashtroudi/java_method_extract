@Test [EOL] public void testEmptyInput() throws Exception { [EOL]     ExtendedBufferedReader br = getBufferedReader(""); [EOL]     assertEquals(ExtendedBufferedReader.END_OF_STREAM, br.read()); [EOL]     assertEquals(ExtendedBufferedReader.END_OF_STREAM, br.lookAhead()); [EOL]     assertEquals(ExtendedBufferedReader.END_OF_STREAM, br.readAgain()); [EOL]     assertNull(br.readLine()); [EOL]     assertEquals(0, br.read(new char[10], 0, 0)); [EOL] } <line_num>: 28,36
@Test [EOL] public void testReadLookahead1() { [EOL] } <line_num>: 38,39
@Test [EOL] public void testReadLookahead2() throws Exception { [EOL]     char[] ref = new char[5]; [EOL]     char[] res = new char[5]; [EOL]     ExtendedBufferedReader br = getBufferedReader("abcdefg"); [EOL]     ref[0] = 'a'; [EOL]     ref[1] = 'b'; [EOL]     ref[2] = 'c'; [EOL]     assertEquals(3, br.read(res, 0, 3)); [EOL]     assertArrayEquals(ref, res); [EOL]     assertEquals('c', br.readAgain()); [EOL]     assertEquals('d', br.lookAhead()); [EOL]     ref[4] = 'd'; [EOL]     assertEquals(1, br.read(res, 4, 1)); [EOL]     assertArrayEquals(ref, res); [EOL]     assertEquals('d', br.readAgain()); [EOL] } <line_num>: 92,110
@Test [EOL] public void testReadLine() throws Exception { [EOL]     ExtendedBufferedReader br = getBufferedReader(""); [EOL]     assertNull(br.readLine()); [EOL]     br = getBufferedReader("\n"); [EOL]     assertEquals("", br.readLine()); [EOL]     assertNull(br.readLine()); [EOL]     br = getBufferedReader("foo\n\nhello"); [EOL]     assertEquals(0, br.getLineNumber()); [EOL]     assertEquals("foo", br.readLine()); [EOL]     assertEquals(1, br.getLineNumber()); [EOL]     assertEquals("", br.readLine()); [EOL]     assertEquals(2, br.getLineNumber()); [EOL]     assertEquals("hello", br.readLine()); [EOL]     assertEquals(3, br.getLineNumber()); [EOL]     assertNull(br.readLine()); [EOL]     assertEquals(3, br.getLineNumber()); [EOL]     br = getBufferedReader("foo\n\nhello"); [EOL]     assertEquals('f', br.read()); [EOL]     assertEquals('o', br.lookAhead()); [EOL]     assertEquals("oo", br.readLine()); [EOL]     assertEquals(1, br.getLineNumber()); [EOL]     assertEquals('\n', br.lookAhead()); [EOL]     assertEquals("", br.readLine()); [EOL]     assertEquals(2, br.getLineNumber()); [EOL]     assertEquals('h', br.lookAhead()); [EOL]     assertEquals("hello", br.readLine()); [EOL]     assertNull(br.readLine()); [EOL]     assertEquals(3, br.getLineNumber()); [EOL]     br = getBufferedReader("foo\rbaar\r\nfoo"); [EOL]     assertEquals("foo", br.readLine()); [EOL]     assertEquals('b', br.lookAhead()); [EOL]     assertEquals("baar", br.readLine()); [EOL]     assertEquals('f', br.lookAhead()); [EOL]     assertEquals("foo", br.readLine()); [EOL]     assertNull(br.readLine()); [EOL] } <line_num>: 112,153
@Test [EOL] public void testReadChar() { [EOL] } <line_num>: 160,161
private ExtendedBufferedReader getBufferedReader(String s) { [EOL]     return new ExtendedBufferedReader(new StringReader(s)); [EOL] } <line_num>: 191,193
