public GnuParseTest(String name) { [EOL]     super(name); [EOL] } <line_num>: 31,34
public static Test suite() { [EOL]     return new TestSuite(GnuParseTest.class); [EOL] } <line_num>: 27,29
public void setUp() { [EOL]     _options = new Options().addOption("a", "enable-a", false, "turn [a] on or off").addOption("b", "bfile", true, "set the value of [b]").addOption("c", "copt", false, "turn [c] on or off"); [EOL]     _parser = new GnuParser(); [EOL] } <line_num>: 36,53
public void tearDown() { [EOL] } <line_num>: 55,58
public void testSimpleShort() { [EOL]     String[] args = new String[] { "-a", "-b", "toast", "foo", "bar" }; [EOL]     try { [EOL]         CommandLine cl = _parser.parse(_options, args); [EOL]         assertTrue("Confirm -a is set", cl.hasOption("a")); [EOL]         assertTrue("Confirm -b is set", cl.hasOption("b")); [EOL]         assertTrue("Confirm arg of -b", cl.getOptionValue("b").equals("toast")); [EOL]         assertTrue("Confirm size of extra args", cl.getArgList().size() == 2); [EOL]     } catch (ParseException e) { [EOL]         fail(e.toString()); [EOL]     } [EOL] } <line_num>: 60,79
public void testSimpleLong() { [EOL]     String[] args = new String[] { "--enable-a", "--bfile", "toast", "foo", "bar" }; [EOL]     try { [EOL]         CommandLine cl = _parser.parse(_options, args); [EOL]         assertTrue("Confirm -a is set", cl.hasOption("a")); [EOL]         assertTrue("Confirm -b is set", cl.hasOption("b")); [EOL]         assertTrue("Confirm arg of -b", cl.getOptionValue("b").equals("toast")); [EOL]         assertTrue("Confirm size of extra args", cl.getArgList().size() == 2); [EOL]     } catch (ParseException e) { [EOL]         fail(e.toString()); [EOL]     } [EOL] } <line_num>: 81,100
public void testExtraOption() { [EOL]     String[] args = new String[] { "-a", "-d", "-b", "toast", "foo", "bar" }; [EOL]     boolean caught = false; [EOL]     try { [EOL]         CommandLine cl = _parser.parse(_options, args); [EOL]         assertTrue("Confirm -a is set", cl.hasOption("a")); [EOL]         assertTrue("Confirm -b is set", cl.hasOption("b")); [EOL]         assertTrue("confirm arg of -b", cl.getOptionValue("b").equals("toast")); [EOL]         assertTrue("Confirm size of extra args", cl.getArgList().size() == 3); [EOL]     } catch (UnrecognizedOptionException e) { [EOL]         caught = true; [EOL]     } catch (ParseException e) { [EOL]         fail(e.toString()); [EOL]     } [EOL]     assertTrue("Confirm UnrecognizedOptionException caught", caught); [EOL] } <line_num>: 102,127
public void testMissingArg() { [EOL]     String[] args = new String[] { "-b" }; [EOL]     boolean caught = false; [EOL]     try { [EOL]         CommandLine cl = _parser.parse(_options, args); [EOL]     } catch (MissingArgumentException e) { [EOL]         caught = true; [EOL]     } catch (ParseException e) { [EOL]         fail(e.toString()); [EOL]     } [EOL]     assertTrue("Confirm MissingArgumentException caught", caught); [EOL] } <line_num>: 129,150
public void testStop() { [EOL]     String[] args = new String[] { "-c", "foober", "-b", "toast" }; [EOL]     try { [EOL]         CommandLine cl = _parser.parse(_options, args, true); [EOL]         assertTrue("Confirm -c is set", cl.hasOption("c")); [EOL]         assertTrue("Confirm  3 extra args: " + cl.getArgList().size(), cl.getArgList().size() == 3); [EOL]     } catch (ParseException e) { [EOL]         fail(e.toString()); [EOL]     } [EOL] } <line_num>: 152,169
public void testMultiple() { [EOL]     String[] args = new String[] { "-c", "foobar", "-b", "toast" }; [EOL]     try { [EOL]         CommandLine cl = _parser.parse(_options, args, true); [EOL]         assertTrue("Confirm -c is set", cl.hasOption("c")); [EOL]         assertTrue("Confirm  3 extra args: " + cl.getArgList().size(), cl.getArgList().size() == 3); [EOL]         cl = _parser.parse(_options, cl.getArgs()); [EOL]         assertTrue("Confirm -c is not set", !cl.hasOption("c")); [EOL]         assertTrue("Confirm -b is set", cl.hasOption("b")); [EOL]         assertTrue("Confirm arg of -b", cl.getOptionValue("b").equals("toast")); [EOL]         assertTrue("Confirm  1 extra arg: " + cl.getArgList().size(), cl.getArgList().size() == 1); [EOL]         assertTrue("Confirm  value of extra arg: " + cl.getArgList().get(0), cl.getArgList().get(0).equals("foobar")); [EOL]     } catch (ParseException e) { [EOL]         fail(e.toString()); [EOL]     } [EOL] } <line_num>: 171,196
public void testMultipleWithLong() { [EOL]     String[] args = new String[] { "--copt", "foobar", "--bfile", "toast" }; [EOL]     try { [EOL]         CommandLine cl = _parser.parse(_options, args, true); [EOL]         assertTrue("Confirm -c is set", cl.hasOption("c")); [EOL]         assertTrue("Confirm  3 extra args: " + cl.getArgList().size(), cl.getArgList().size() == 3); [EOL]         cl = _parser.parse(_options, cl.getArgs()); [EOL]         assertTrue("Confirm -c is not set", !cl.hasOption("c")); [EOL]         assertTrue("Confirm -b is set", cl.hasOption("b")); [EOL]         assertTrue("Confirm arg of -b", cl.getOptionValue("b").equals("toast")); [EOL]         assertTrue("Confirm  1 extra arg: " + cl.getArgList().size(), cl.getArgList().size() == 1); [EOL]         assertTrue("Confirm  value of extra arg: " + cl.getArgList().get(0), cl.getArgList().get(0).equals("foobar")); [EOL]     } catch (ParseException e) { [EOL]         fail(e.toString()); [EOL]     } [EOL] } <line_num>: 198,223
public void testDoubleDash() { [EOL]     String[] args = new String[] { "--copt", "--", "-b", "toast" }; [EOL]     try { [EOL]         CommandLine cl = _parser.parse(_options, args); [EOL]         assertTrue("Confirm -c is set", cl.hasOption("c")); [EOL]         assertTrue("Confirm -b is not set", !cl.hasOption("b")); [EOL]         assertTrue("Confirm 2 extra args: " + cl.getArgList().size(), cl.getArgList().size() == 2); [EOL]     } catch (ParseException e) { [EOL]         fail(e.toString()); [EOL]     } [EOL] } <line_num>: 225,244
public void testSingleDash() { [EOL]     String[] args = new String[] { "--copt", "-b", "-", "-a", "-" }; [EOL]     try { [EOL]         CommandLine cl = _parser.parse(_options, args); [EOL]         assertTrue("Confirm -a is set", cl.hasOption("a")); [EOL]         assertTrue("Confirm -b is set", cl.hasOption("b")); [EOL]         assertTrue("Confirm arg of -b", cl.getOptionValue("b").equals("-")); [EOL]         assertTrue("Confirm 1 extra arg: " + cl.getArgList().size(), cl.getArgList().size() == 1); [EOL]         assertTrue("Confirm value of extra arg: " + cl.getArgList().get(0), cl.getArgList().get(0).equals("-")); [EOL]     } catch (ParseException e) { [EOL]         fail(e.toString()); [EOL]     } [EOL] } <line_num>: 246,268
