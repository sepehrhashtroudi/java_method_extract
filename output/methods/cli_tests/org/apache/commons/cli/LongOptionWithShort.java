public LongOptionWithShort(String name) { [EOL]     super(name); [EOL] } <line_num>: 31,33
public static Test suite() { [EOL]     return new TestSuite(LongOptionWithShort.class); [EOL] } <line_num>: 35,37
public void testLongOptionWithShort() { [EOL]     Option help = new Option("h", "help", false, "print this message"); [EOL]     Option version = new Option("v", "version", false, "print version information"); [EOL]     Option newRun = new Option("n", "new", false, "Create NLT cache entries only for new items"); [EOL]     Option trackerRun = new Option("t", "tracker", false, "Create NLT cache entries only for tracker items"); [EOL]     Option timeLimit = OptionBuilder.withLongOpt("limit").hasArg().withValueSeparator().withDescription("Set time limit for execution, in mintues").create("l"); [EOL]     Option age = OptionBuilder.withLongOpt("age").hasArg().withValueSeparator().withDescription("Age (in days) of cache item before being recomputed").create("a"); [EOL]     Option server = OptionBuilder.withLongOpt("server").hasArg().withValueSeparator().withDescription("The NLT server address").create("s"); [EOL]     Option numResults = OptionBuilder.withLongOpt("results").hasArg().withValueSeparator().withDescription("Number of results per item").create("r"); [EOL]     Option configFile = OptionBuilder.withLongOpt("file").hasArg().withValueSeparator().withDescription("Use the specified configuration file").create(); [EOL]     Options options = new Options(); [EOL]     options.addOption(help); [EOL]     options.addOption(version); [EOL]     options.addOption(newRun); [EOL]     options.addOption(trackerRun); [EOL]     options.addOption(timeLimit); [EOL]     options.addOption(age); [EOL]     options.addOption(server); [EOL]     options.addOption(numResults); [EOL]     options.addOption(configFile); [EOL]     CommandLineParser parser = new PosixParser(); [EOL]     String[] args = new String[] { "-v", "-l", "10", "-age", "5", "-file", "filename" }; [EOL]     try { [EOL]         CommandLine line = parser.parse(options, args); [EOL]         assertTrue(line.hasOption("v")); [EOL]         assertEquals(line.getOptionValue("l"), "10"); [EOL]         assertEquals(line.getOptionValue("limit"), "10"); [EOL]         assertEquals(line.getOptionValue("a"), "5"); [EOL]         assertEquals(line.getOptionValue("age"), "5"); [EOL]         assertEquals(line.getOptionValue("file"), "filename"); [EOL]     } catch (ParseException exp) { [EOL]         fail("Unexpected exception:" + exp.getMessage()); [EOL]     } [EOL] } <line_num>: 42,112
