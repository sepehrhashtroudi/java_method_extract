public OptionsTest(String name) { [EOL]     super(name); [EOL] } <line_num>: 37,40
public static Test suite() { [EOL]     return new TestSuite(OptionsTest.class); [EOL] } <line_num>: 32,35
public void setUp() { [EOL] } <line_num>: 42,44
public void tearDown() { [EOL] } <line_num>: 46,48
public void testHelpOptions() { [EOL]     Option longOnly1 = OptionBuilder.withLongOpt("long-only1").create(); [EOL]     Option longOnly2 = OptionBuilder.withLongOpt("long-only2").create(); [EOL]     Option shortOnly1 = OptionBuilder.create("1"); [EOL]     Option shortOnly2 = OptionBuilder.create("2"); [EOL]     Option bothA = OptionBuilder.withLongOpt("bothA").create("a"); [EOL]     Option bothB = OptionBuilder.withLongOpt("bothB").create("b"); [EOL]     Options options = new Options(); [EOL]     options.addOption(longOnly1); [EOL]     options.addOption(longOnly2); [EOL]     options.addOption(shortOnly1); [EOL]     options.addOption(shortOnly2); [EOL]     options.addOption(bothA); [EOL]     options.addOption(bothB); [EOL]     Collection allOptions = new ArrayList(); [EOL]     allOptions.add(longOnly1); [EOL]     allOptions.add(longOnly2); [EOL]     allOptions.add(shortOnly1); [EOL]     allOptions.add(shortOnly2); [EOL]     allOptions.add(bothA); [EOL]     allOptions.add(bothB); [EOL]     Collection helpOptions = options.helpOptions(); [EOL]     assertTrue("Everything in all should be in help", helpOptions.containsAll(allOptions)); [EOL]     assertTrue("Everything in help should be in all", allOptions.containsAll(helpOptions)); [EOL] } <line_num>: 50,94
