public ValueTest(String name) { [EOL]     super(name); [EOL] } <line_num>: 36,39
public static Test suite() { [EOL]     return new TestSuite(ValueTest.class); [EOL] } <line_num>: 28,30
public void setUp() { [EOL]     opts.addOption("a", false, "toggle -a"); [EOL]     opts.addOption("b", true, "set -b"); [EOL]     opts.addOption("c", "c", false, "toggle -c"); [EOL]     opts.addOption("d", "d", true, "set -d"); [EOL]     opts.addOption(OptionBuilder.hasOptionalArg().create('e')); [EOL]     opts.addOption(OptionBuilder.hasOptionalArg().withLongOpt("fish").create()); [EOL]     opts.addOption(OptionBuilder.hasOptionalArgs().withLongOpt("gravy").create()); [EOL]     opts.addOption(OptionBuilder.hasOptionalArgs(2).withLongOpt("hide").create()); [EOL]     opts.addOption(OptionBuilder.hasOptionalArgs(2).create('i')); [EOL]     opts.addOption(OptionBuilder.hasOptionalArgs().create('j')); [EOL]     opts.addOption(OptionBuilder.hasArgs().withValueSeparator(',').create('k')); [EOL]     String[] args = new String[] { "-a", "-b", "foo", "--c", "--d", "bar" }; [EOL]     try { [EOL]         CommandLineParser parser = new PosixParser(); [EOL]         _cl = parser.parse(opts, args); [EOL]     } catch (ParseException e) { [EOL]         fail("Cannot setUp() CommandLine: " + e.toString()); [EOL]     } [EOL] } <line_num>: 41,100
public void tearDown() { [EOL] } <line_num>: 102,105
public void testShortNoArg() { [EOL]     assertTrue(_cl.hasOption("a")); [EOL]     assertNull(_cl.getOptionValue("a")); [EOL] } <line_num>: 107,111
public void testShortWithArg() { [EOL]     assertTrue(_cl.hasOption("b")); [EOL]     assertNotNull(_cl.getOptionValue("b")); [EOL]     assertEquals(_cl.getOptionValue("b"), "foo"); [EOL] } <line_num>: 113,118
public void testLongNoArg() { [EOL]     assertTrue(_cl.hasOption("c")); [EOL]     assertNull(_cl.getOptionValue("c")); [EOL] } <line_num>: 120,124
public void testLongWithArg() { [EOL]     assertTrue(_cl.hasOption("d")); [EOL]     assertNotNull(_cl.getOptionValue("d")); [EOL]     assertEquals(_cl.getOptionValue("d"), "bar"); [EOL] } <line_num>: 126,131
public void testShortOptionalArgNoValue() { [EOL]     String[] args = new String[] { "-e" }; [EOL]     try { [EOL]         CommandLineParser parser = new PosixParser(); [EOL]         CommandLine cmd = parser.parse(opts, args); [EOL]         assertTrue(cmd.hasOption("e")); [EOL]         assertNull(cmd.getOptionValue("e")); [EOL]     } catch (ParseException e) { [EOL]         fail("Cannot setUp() CommandLine: " + e.toString()); [EOL]     } [EOL] } <line_num>: 133,148
public void testShortOptionalArgValue() { [EOL]     String[] args = new String[] { "-e", "everything" }; [EOL]     try { [EOL]         CommandLineParser parser = new PosixParser(); [EOL]         CommandLine cmd = parser.parse(opts, args); [EOL]         assertTrue(cmd.hasOption("e")); [EOL]         assertEquals("everything", cmd.getOptionValue("e")); [EOL]     } catch (ParseException e) { [EOL]         fail("Cannot setUp() CommandLine: " + e.toString()); [EOL]     } [EOL] } <line_num>: 150,165
public void testLongOptionalNoValue() { [EOL]     String[] args = new String[] { "--fish" }; [EOL]     try { [EOL]         CommandLineParser parser = new PosixParser(); [EOL]         CommandLine cmd = parser.parse(opts, args); [EOL]         assertTrue(cmd.hasOption("fish")); [EOL]         assertNull(cmd.getOptionValue("fish")); [EOL]     } catch (ParseException e) { [EOL]         fail("Cannot setUp() CommandLine: " + e.toString()); [EOL]     } [EOL] } <line_num>: 167,182
public void testLongOptionalArgValue() { [EOL]     String[] args = new String[] { "--fish", "face" }; [EOL]     try { [EOL]         CommandLineParser parser = new PosixParser(); [EOL]         CommandLine cmd = parser.parse(opts, args); [EOL]         assertTrue(cmd.hasOption("fish")); [EOL]         assertEquals("face", cmd.getOptionValue("fish")); [EOL]     } catch (ParseException e) { [EOL]         fail("Cannot setUp() CommandLine: " + e.toString()); [EOL]     } [EOL] } <line_num>: 184,199
public void testShortOptionalArgValues() { [EOL]     String[] args = new String[] { "-j", "ink", "idea" }; [EOL]     try { [EOL]         CommandLineParser parser = new PosixParser(); [EOL]         CommandLine cmd = parser.parse(opts, args); [EOL]         assertTrue(cmd.hasOption("j")); [EOL]         assertEquals("ink", cmd.getOptionValue("j")); [EOL]         assertEquals("ink", cmd.getOptionValues("j")[0]); [EOL]         assertEquals("idea", cmd.getOptionValues("j")[1]); [EOL]         assertEquals(cmd.getArgs().length, 0); [EOL]     } catch (ParseException e) { [EOL]         fail("Cannot setUp() CommandLine: " + e.toString()); [EOL]     } [EOL] } <line_num>: 201,219
public void testLongOptionalArgValues() { [EOL]     String[] args = new String[] { "--gravy", "gold", "garden" }; [EOL]     try { [EOL]         CommandLineParser parser = new PosixParser(); [EOL]         CommandLine cmd = parser.parse(opts, args); [EOL]         assertTrue(cmd.hasOption("gravy")); [EOL]         assertEquals("gold", cmd.getOptionValue("gravy")); [EOL]         assertEquals("gold", cmd.getOptionValues("gravy")[0]); [EOL]         assertEquals("garden", cmd.getOptionValues("gravy")[1]); [EOL]         assertEquals(cmd.getArgs().length, 0); [EOL]     } catch (ParseException e) { [EOL]         fail("Cannot setUp() CommandLine: " + e.toString()); [EOL]     } [EOL] } <line_num>: 221,239
public void testShortOptionalNArgValues() { [EOL]     String[] args = new String[] { "-i", "ink", "idea", "isotope", "ice" }; [EOL]     try { [EOL]         CommandLineParser parser = new PosixParser(); [EOL]         CommandLine cmd = parser.parse(opts, args); [EOL]         assertTrue(cmd.hasOption("i")); [EOL]         assertEquals("ink", cmd.getOptionValue("i")); [EOL]         assertEquals("ink", cmd.getOptionValues("i")[0]); [EOL]         assertEquals("idea", cmd.getOptionValues("i")[1]); [EOL]         assertEquals(cmd.getArgs().length, 2); [EOL]         assertEquals("isotope", cmd.getArgs()[0]); [EOL]         assertEquals("ice", cmd.getArgs()[1]); [EOL]     } catch (ParseException e) { [EOL]         fail("Cannot setUp() CommandLine: " + e.toString()); [EOL]     } [EOL] } <line_num>: 241,261
public void testLongOptionalNArgValues() { [EOL]     String[] args = new String[] { "--hide", "house", "hair", "head" }; [EOL]     CommandLineParser parser = new PosixParser(); [EOL]     try { [EOL]         CommandLine cmd = parser.parse(opts, args); [EOL]         assertTrue(cmd.hasOption("hide")); [EOL]         assertEquals("house", cmd.getOptionValue("hide")); [EOL]         assertEquals("house", cmd.getOptionValues("hide")[0]); [EOL]         assertEquals("hair", cmd.getOptionValues("hide")[1]); [EOL]         assertEquals(cmd.getArgs().length, 1); [EOL]         assertEquals("head", cmd.getArgs()[0]); [EOL]     } catch (ParseException e) { [EOL]         fail("Cannot setUp() CommandLine: " + e.toString()); [EOL]     } [EOL] } <line_num>: 263,285
public void testPropertyOptionSingularValue() { [EOL]     Properties properties = new Properties(); [EOL]     properties.setProperty("hide", "seek"); [EOL]     CommandLineParser parser = new PosixParser(); [EOL]     try { [EOL]         CommandLine cmd = parser.parse(opts, null, properties); [EOL]         assertTrue(cmd.hasOption("hide")); [EOL]         assertEquals("seek", cmd.getOptionValue("hide")); [EOL]         assertTrue(!cmd.hasOption("fake")); [EOL]     } catch (ParseException e) { [EOL]         fail("Cannot setUp() CommandLine: " + e.toString()); [EOL]     } [EOL] } <line_num>: 287,305
public void testPropertyOptionFlags() { [EOL]     Properties properties = new Properties(); [EOL]     properties.setProperty("a", "true"); [EOL]     properties.setProperty("c", "yes"); [EOL]     properties.setProperty("e", "1"); [EOL]     CommandLineParser parser = new PosixParser(); [EOL]     try { [EOL]         CommandLine cmd = parser.parse(opts, null, properties); [EOL]         assertTrue(cmd.hasOption("a")); [EOL]         assertTrue(cmd.hasOption("c")); [EOL]         assertTrue(cmd.hasOption("e")); [EOL]     } catch (ParseException e) { [EOL]         fail("Cannot setUp() CommandLine: " + e.toString()); [EOL]     } [EOL]     properties = new Properties(); [EOL]     properties.setProperty("a", "false"); [EOL]     properties.setProperty("c", "no"); [EOL]     properties.setProperty("e", "0"); [EOL]     try { [EOL]         CommandLine cmd = parser.parse(opts, null, properties); [EOL]         assertTrue(!cmd.hasOption("a")); [EOL]         assertTrue(!cmd.hasOption("c")); [EOL]         assertTrue(!cmd.hasOption("e")); [EOL]     } catch (ParseException e) { [EOL]         fail("Cannot setUp() CommandLine: " + e.toString()); [EOL]     } [EOL]     properties = new Properties(); [EOL]     properties.setProperty("a", "TRUE"); [EOL]     properties.setProperty("c", "nO"); [EOL]     properties.setProperty("e", "TrUe"); [EOL]     try { [EOL]         CommandLine cmd = parser.parse(opts, null, properties); [EOL]         assertTrue(cmd.hasOption("a")); [EOL]         assertTrue(!cmd.hasOption("c")); [EOL]         assertTrue(cmd.hasOption("e")); [EOL]     } catch (ParseException e) { [EOL]         fail("Cannot setUp() CommandLine: " + e.toString()); [EOL]     } [EOL]     properties = new Properties(); [EOL]     properties.setProperty("a", "just a string"); [EOL]     properties.setProperty("e", ""); [EOL]     try { [EOL]         CommandLine cmd = parser.parse(opts, null, properties); [EOL]         assertTrue(!cmd.hasOption("a")); [EOL]         assertTrue(!cmd.hasOption("c")); [EOL]         assertTrue(!cmd.hasOption("e")); [EOL]     } catch (ParseException e) { [EOL]         fail("Cannot setUp() CommandLine: " + e.toString()); [EOL]     } [EOL] } <line_num>: 307,375
public void testPropertyOptionMultipleValues() { [EOL]     Properties properties = new Properties(); [EOL]     properties.setProperty("k", "one,two"); [EOL]     CommandLineParser parser = new PosixParser(); [EOL]     String[] values = new String[] { "one", "two" }; [EOL]     try { [EOL]         CommandLine cmd = parser.parse(opts, null, properties); [EOL]         assertTrue(cmd.hasOption("k")); [EOL]         assertTrue(Arrays.equals(values, cmd.getOptionValues('k'))); [EOL]     } catch (ParseException e) { [EOL]         fail("Cannot setUp() CommandLine: " + e.toString()); [EOL]     } [EOL] } <line_num>: 377,397
public void testPropertyOverrideValues() { [EOL]     String[] args = new String[] { "-j", "found", "-i", "ink" }; [EOL]     Properties properties = new Properties(); [EOL]     properties.setProperty("j", "seek"); [EOL]     try { [EOL]         CommandLineParser parser = new PosixParser(); [EOL]         CommandLine cmd = parser.parse(opts, args, properties); [EOL]         assertTrue(cmd.hasOption("j")); [EOL]         assertEquals("found", cmd.getOptionValue("j")); [EOL]         assertTrue(cmd.hasOption("i")); [EOL]         assertEquals("ink", cmd.getOptionValue("i")); [EOL]         assertTrue(!cmd.hasOption("fake")); [EOL]     } catch (ParseException e) { [EOL]         fail("Cannot setUp() CommandLine: " + e.toString()); [EOL]     } [EOL] } <line_num>: 399,424
