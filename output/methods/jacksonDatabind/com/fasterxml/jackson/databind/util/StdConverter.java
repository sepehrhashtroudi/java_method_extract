@Override [EOL] public abstract OUT convert(IN value); <line_num>: 22,23
@Override [EOL] public JavaType getInputType(TypeFactory typeFactory) { [EOL]     JavaType[] types = typeFactory.findTypeParameters(getClass(), Converter.class); [EOL]     if (types == null || types.length < 2) { [EOL]         throw new IllegalStateException("Can not find OUT type parameter for Converter of type " + getClass().getName()); [EOL]     } [EOL]     return types[0]; [EOL] } <line_num>: 25,33
@Override [EOL] public JavaType getOutputType(TypeFactory typeFactory) { [EOL]     JavaType[] types = typeFactory.findTypeParameters(getClass(), Converter.class); [EOL]     if (types == null || types.length < 2) { [EOL]         throw new IllegalStateException("Can not find OUT type parameter for Converter of type " + getClass().getName()); [EOL]     } [EOL]     return types[1]; [EOL] } <line_num>: 35,43
