protected NameTransformer() { [EOL] } <line_num>: 26,26
public Chained(NameTransformer t1, NameTransformer t2) { [EOL]     _t1 = t1; [EOL]     _t2 = t2; [EOL] } <line_num>: 113,116
@Override [EOL] public String transform(String name) { [EOL]     return name; [EOL] } <line_num>: 15,18
@Override [EOL] public String reverse(String transformed) { [EOL]     return transformed; [EOL] } <line_num>: 19,23
@Override [EOL] public String transform(String name) { [EOL]     return prefix + name + suffix; [EOL] } <line_num>: 40,41
@Override [EOL] public String reverse(String transformed) { [EOL]     if (transformed.startsWith(prefix)) { [EOL]         String str = transformed.substring(prefix.length()); [EOL]         if (str.endsWith(suffix)) { [EOL]             return str.substring(0, str.length() - suffix.length()); [EOL]         } [EOL]     } [EOL]     return null; [EOL] } <line_num>: 42,51
@Override [EOL] public String toString() { [EOL]     return "[PreAndSuffixTransformer('" + prefix + "','" + suffix + "')]"; [EOL] } <line_num>: 52,53
@Override [EOL] public String transform(String name) { [EOL]     return prefix + name; [EOL] } <line_num>: 57,58
@Override [EOL] public String reverse(String transformed) { [EOL]     if (transformed.startsWith(prefix)) { [EOL]         return transformed.substring(prefix.length()); [EOL]     } [EOL]     return null; [EOL] } <line_num>: 59,65
@Override [EOL] public String toString() { [EOL]     return "[PrefixTransformer('" + prefix + "')]"; [EOL] } <line_num>: 66,67
@Override [EOL] public String transform(String name) { [EOL]     return name + suffix; [EOL] } <line_num>: 72,73
@Override [EOL] public String reverse(String transformed) { [EOL]     if (transformed.endsWith(suffix)) { [EOL]         return transformed.substring(0, transformed.length() - suffix.length()); [EOL]     } [EOL]     return null; [EOL] } <line_num>: 74,80
@Override [EOL] public String toString() { [EOL]     return "[SuffixTransformer('" + suffix + "')]"; [EOL] } <line_num>: 81,82
public static NameTransformer simpleTransformer(final String prefix, final String suffix) { [EOL]     boolean hasPrefix = (prefix != null) && (prefix.length() > 0); [EOL]     boolean hasSuffix = (suffix != null) && (suffix.length() > 0); [EOL]     if (hasPrefix) { [EOL]         if (hasSuffix) { [EOL]             return new NameTransformer() { [EOL]  [EOL]                 @Override [EOL]                 public String transform(String name) { [EOL]                     return prefix + name + suffix; [EOL]                 } [EOL]  [EOL]                 @Override [EOL]                 public String reverse(String transformed) { [EOL]                     if (transformed.startsWith(prefix)) { [EOL]                         String str = transformed.substring(prefix.length()); [EOL]                         if (str.endsWith(suffix)) { [EOL]                             return str.substring(0, str.length() - suffix.length()); [EOL]                         } [EOL]                     } [EOL]                     return null; [EOL]                 } [EOL]  [EOL]                 @Override [EOL]                 public String toString() { [EOL]                     return "[PreAndSuffixTransformer('" + prefix + "','" + suffix + "')]"; [EOL]                 } [EOL]             }; [EOL]         } [EOL]         return new NameTransformer() { [EOL]  [EOL]             @Override [EOL]             public String transform(String name) { [EOL]                 return prefix + name; [EOL]             } [EOL]  [EOL]             @Override [EOL]             public String reverse(String transformed) { [EOL]                 if (transformed.startsWith(prefix)) { [EOL]                     return transformed.substring(prefix.length()); [EOL]                 } [EOL]                 return null; [EOL]             } [EOL]  [EOL]             @Override [EOL]             public String toString() { [EOL]                 return "[PrefixTransformer('" + prefix + "')]"; [EOL]             } [EOL]         }; [EOL]     } [EOL]     if (hasSuffix) { [EOL]         return new NameTransformer() { [EOL]  [EOL]             @Override [EOL]             public String transform(String name) { [EOL]                 return name + suffix; [EOL]             } [EOL]  [EOL]             @Override [EOL]             public String reverse(String transformed) { [EOL]                 if (transformed.endsWith(suffix)) { [EOL]                     return transformed.substring(0, transformed.length() - suffix.length()); [EOL]                 } [EOL]                 return null; [EOL]             } [EOL]  [EOL]             @Override [EOL]             public String toString() { [EOL]                 return "[SuffixTransformer('" + suffix + "')]"; [EOL]             } [EOL]         }; [EOL]     } [EOL]     return NOP; [EOL] } <line_num>: 32,86
public static NameTransformer chainedTransformer(NameTransformer t1, NameTransformer t2) { [EOL]     return new Chained(t1, t2); [EOL] } <line_num>: 93,95
public abstract String transform(String name); <line_num>: 100,100
public abstract String reverse(String transformed); <line_num>: 107,107
@Override [EOL] public String transform(String name) { [EOL]     return _t1.transform(_t2.transform(name)); [EOL] } <line_num>: 118,121
@Override [EOL] public String reverse(String transformed) { [EOL]     transformed = _t1.reverse(transformed); [EOL]     if (transformed != null) { [EOL]         transformed = _t2.reverse(transformed); [EOL]     } [EOL]     return transformed; [EOL] } <line_num>: 123,130
@Override [EOL] public String toString() { [EOL]     return "[ChainedTransformer(" + _t1 + ", " + _t2 + ")]"; [EOL] } <line_num>: 132,133
