public RootNameLookup() { [EOL] } <line_num>: 24,24
public SerializedString findRootName(JavaType rootType, MapperConfig<?> config) { [EOL]     return findRootName(rootType.getRawClass(), config); [EOL] } <line_num>: 26,29
public synchronized SerializedString findRootName(Class<?> rootType, MapperConfig<?> config) { [EOL]     ClassKey key = new ClassKey(rootType); [EOL]     if (_rootNames == null) { [EOL]         _rootNames = new LRUMap<ClassKey, SerializedString>(20, 200); [EOL]     } else { [EOL]         SerializedString name = _rootNames.get(key); [EOL]         if (name != null) { [EOL]             return name; [EOL]         } [EOL]     } [EOL]     BeanDescription beanDesc = config.introspectClassAnnotations(rootType); [EOL]     AnnotationIntrospector intr = config.getAnnotationIntrospector(); [EOL]     AnnotatedClass ac = beanDesc.getClassInfo(); [EOL]     PropertyName pname = intr.findRootName(ac); [EOL]     String nameStr; [EOL]     if (pname == null || !pname.hasSimpleName()) { [EOL]         nameStr = rootType.getSimpleName(); [EOL]     } else { [EOL]         nameStr = pname.getSimpleName(); [EOL]     } [EOL]     SerializedString name = new SerializedString(nameStr); [EOL]     _rootNames.put(key, name); [EOL]     return name; [EOL] } <line_num>: 31,58
