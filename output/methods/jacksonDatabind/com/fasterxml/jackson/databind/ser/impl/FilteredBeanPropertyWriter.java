protected SingleView(BeanPropertyWriter delegate, Class<?> view) { [EOL]     super(delegate); [EOL]     _delegate = delegate; [EOL]     _view = view; [EOL] } <line_num>: 36,41
protected MultiView(BeanPropertyWriter delegate, Class<?>[] views) { [EOL]     super(delegate); [EOL]     _delegate = delegate; [EOL]     _views = views; [EOL] } <line_num>: 88,92
public static BeanPropertyWriter constructViewBased(BeanPropertyWriter base, Class<?>[] viewsToIncludeIn) { [EOL]     if (viewsToIncludeIn.length == 1) { [EOL]         return new SingleView(base, viewsToIncludeIn[0]); [EOL]     } [EOL]     return new MultiView(base, viewsToIncludeIn); [EOL] } <line_num>: 15,21
@Override [EOL] public SingleView rename(NameTransformer transformer) { [EOL]     return new SingleView(_delegate.rename(transformer), _view); [EOL] } <line_num>: 43,46
@Override [EOL] public void assignSerializer(JsonSerializer<Object> ser) { [EOL]     _delegate.assignSerializer(ser); [EOL] } <line_num>: 48,51
@Override [EOL] public void assignNullSerializer(JsonSerializer<Object> nullSer) { [EOL]     _delegate.assignNullSerializer(nullSer); [EOL] } <line_num>: 53,56
@Override [EOL] public void serializeAsField(Object bean, JsonGenerator jgen, SerializerProvider prov) throws Exception { [EOL]     Class<?> activeView = prov.getActiveView(); [EOL]     if (activeView == null || _view.isAssignableFrom(activeView)) { [EOL]         _delegate.serializeAsField(bean, jgen, prov); [EOL]     } [EOL] } <line_num>: 58,66
@Override [EOL] public void serializeAsColumn(Object bean, JsonGenerator jgen, SerializerProvider prov) throws Exception { [EOL]     Class<?> activeView = prov.getActiveView(); [EOL]     if (activeView == null || _view.isAssignableFrom(activeView)) { [EOL]         _delegate.serializeAsColumn(bean, jgen, prov); [EOL]     } else { [EOL]         _delegate.serializeAsPlaceholder(bean, jgen, prov); [EOL]     } [EOL] } <line_num>: 68,78
@Override [EOL] public MultiView rename(NameTransformer transformer) { [EOL]     return new MultiView(_delegate.rename(transformer), _views); [EOL] } <line_num>: 94,97
@Override [EOL] public void assignSerializer(JsonSerializer<Object> ser) { [EOL]     _delegate.assignSerializer(ser); [EOL] } <line_num>: 99,102
@Override [EOL] public void assignNullSerializer(JsonSerializer<Object> nullSer) { [EOL]     _delegate.assignNullSerializer(nullSer); [EOL] } <line_num>: 104,107
@Override [EOL] public void serializeAsField(Object bean, JsonGenerator jgen, SerializerProvider prov) throws Exception { [EOL]     final Class<?> activeView = prov.getActiveView(); [EOL]     if (activeView != null) { [EOL]         int i = 0, len = _views.length; [EOL]         for (; i < len; ++i) { [EOL]             if (_views[i].isAssignableFrom(activeView)) [EOL]                 break; [EOL]         } [EOL]         if (i == len) { [EOL]             return; [EOL]         } [EOL]     } [EOL]     _delegate.serializeAsField(bean, jgen, prov); [EOL] } <line_num>: 109,125
@Override [EOL] public void serializeAsColumn(Object bean, JsonGenerator jgen, SerializerProvider prov) throws Exception { [EOL]     final Class<?> activeView = prov.getActiveView(); [EOL]     if (activeView != null) { [EOL]         int i = 0, len = _views.length; [EOL]         for (; i < len; ++i) { [EOL]             if (_views[i].isAssignableFrom(activeView)) [EOL]                 break; [EOL]         } [EOL]         if (i == len) { [EOL]             _delegate.serializeAsPlaceholder(bean, jgen, prov); [EOL]             return; [EOL]         } [EOL]     } [EOL]     _delegate.serializeAsColumn(bean, jgen, prov); [EOL] } <line_num>: 127,144
