protected StringArraySerializer() { [EOL]     super(String[].class, null); [EOL]     _elementSerializer = null; [EOL] } <line_num>: 49,52
@SuppressWarnings("unchecked") [EOL] public StringArraySerializer(StringArraySerializer src, BeanProperty prop, JsonSerializer<?> ser) { [EOL]     super(src, prop); [EOL]     _elementSerializer = (JsonSerializer<Object>) ser; [EOL] } <line_num>: 54,59
@Override [EOL] public ContainerSerializer<?> _withValueTypeSerializer(TypeSerializer vts) { [EOL]     return this; [EOL] } <line_num>: 65,68
@Override [EOL] public JsonSerializer<?> createContextual(SerializerProvider provider, BeanProperty property) throws JsonMappingException { [EOL]     JsonSerializer<?> ser = null; [EOL]     if (property != null) { [EOL]         AnnotatedMember m = property.getMember(); [EOL]         if (m != null) { [EOL]             Object serDef = provider.getAnnotationIntrospector().findContentSerializer(m); [EOL]             if (serDef != null) { [EOL]                 ser = provider.serializerInstance(m, serDef); [EOL]             } [EOL]         } [EOL]     } [EOL]     if (ser == null) { [EOL]         ser = _elementSerializer; [EOL]     } [EOL]     ser = findConvertingContentSerializer(provider, property, ser); [EOL]     if (ser == null) { [EOL]         ser = provider.findValueSerializer(String.class, property); [EOL]     } else if (ser instanceof ContextualSerializer) { [EOL]         ser = ((ContextualSerializer) ser).createContextual(provider, property); [EOL]     } [EOL]     if (isDefaultSerializer(ser)) { [EOL]         ser = null; [EOL]     } [EOL]     if (ser == _elementSerializer) { [EOL]         return this; [EOL]     } [EOL]     return new StringArraySerializer(this, property, ser); [EOL] } <line_num>: 76,115
@Override [EOL] public JavaType getContentType() { [EOL]     return VALUE_TYPE; [EOL] } <line_num>: 123,126
@Override [EOL] public JsonSerializer<?> getContentSerializer() { [EOL]     return _elementSerializer; [EOL] } <line_num>: 128,131
@Override [EOL] public boolean isEmpty(String[] value) { [EOL]     return (value == null) || (value.length == 0); [EOL] } <line_num>: 133,136
@Override [EOL] public boolean hasSingleElement(String[] value) { [EOL]     return (value.length == 1); [EOL] } <line_num>: 138,141
@Override [EOL] public void serializeContents(String[] value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonGenerationException { [EOL]     final int len = value.length; [EOL]     if (len == 0) { [EOL]         return; [EOL]     } [EOL]     if (_elementSerializer != null) { [EOL]         serializeContentsSlow(value, jgen, provider, _elementSerializer); [EOL]         return; [EOL]     } [EOL]     for (int i = 0; i < len; ++i) { [EOL]         String str = value[i]; [EOL]         if (str == null) { [EOL]             jgen.writeNull(); [EOL]         } else { [EOL]             jgen.writeString(value[i]); [EOL]         } [EOL]     } [EOL] } <line_num>: 149,178
private void serializeContentsSlow(String[] value, JsonGenerator jgen, SerializerProvider provider, JsonSerializer<Object> ser) throws IOException, JsonGenerationException { [EOL]     for (int i = 0, len = value.length; i < len; ++i) { [EOL]         String str = value[i]; [EOL]         if (str == null) { [EOL]             provider.defaultSerializeNull(jgen); [EOL]         } else { [EOL]             ser.serialize(value[i], jgen, provider); [EOL]         } [EOL]     } [EOL] } <line_num>: 180,192
@Override [EOL] public JsonNode getSchema(SerializerProvider provider, Type typeHint) { [EOL]     ObjectNode o = createSchemaNode("array", true); [EOL]     o.put("items", createSchemaNode("string")); [EOL]     return o; [EOL] } <line_num>: 194,200
@Override [EOL] public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint) throws JsonMappingException { [EOL]     if (visitor != null) { [EOL]         JsonArrayFormatVisitor v2 = visitor.expectArrayFormat(typeHint); [EOL]         if (v2 != null) { [EOL]             v2.itemsFormat(JsonFormatTypes.STRING); [EOL]         } [EOL]     } [EOL] } <line_num>: 202,212
