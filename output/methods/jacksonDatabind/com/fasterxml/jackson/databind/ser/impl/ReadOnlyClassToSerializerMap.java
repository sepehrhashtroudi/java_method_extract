private ReadOnlyClassToSerializerMap(JsonSerializerMap map) { [EOL]     _map = map; [EOL] } <line_num>: 29,32
public ReadOnlyClassToSerializerMap instance() { [EOL]     return new ReadOnlyClassToSerializerMap(_map); [EOL] } <line_num>: 34,37
public static ReadOnlyClassToSerializerMap from(HashMap<TypeKey, JsonSerializer<Object>> src) { [EOL]     return new ReadOnlyClassToSerializerMap(new JsonSerializerMap(src)); [EOL] } <line_num>: 44,47
public JsonSerializer<Object> typedValueSerializer(JavaType type) { [EOL]     if (_cacheKey == null) { [EOL]         _cacheKey = new TypeKey(type, true); [EOL]     } else { [EOL]         _cacheKey.resetTyped(type); [EOL]     } [EOL]     return _map.find(_cacheKey); [EOL] } <line_num>: 49,57
public JsonSerializer<Object> typedValueSerializer(Class<?> cls) { [EOL]     if (_cacheKey == null) { [EOL]         _cacheKey = new TypeKey(cls, true); [EOL]     } else { [EOL]         _cacheKey.resetTyped(cls); [EOL]     } [EOL]     return _map.find(_cacheKey); [EOL] } <line_num>: 59,67
public JsonSerializer<Object> untypedValueSerializer(JavaType type) { [EOL]     if (_cacheKey == null) { [EOL]         _cacheKey = new TypeKey(type, false); [EOL]     } else { [EOL]         _cacheKey.resetUntyped(type); [EOL]     } [EOL]     return _map.find(_cacheKey); [EOL] } <line_num>: 69,77
public JsonSerializer<Object> untypedValueSerializer(Class<?> cls) { [EOL]     if (_cacheKey == null) { [EOL]         _cacheKey = new TypeKey(cls, false); [EOL]     } else { [EOL]         _cacheKey.resetUntyped(cls); [EOL]     } [EOL]     return _map.find(_cacheKey); [EOL] } <line_num>: 79,87
