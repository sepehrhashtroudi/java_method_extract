public SerializerCache() { [EOL] } <line_num>: 38,38
public TypeKey(Class<?> key, boolean typed) { [EOL]     _class = key; [EOL]     _type = null; [EOL]     _isTyped = typed; [EOL]     _hashCode = hash(key, typed); [EOL] } <line_num>: 207,212
public TypeKey(JavaType key, boolean typed) { [EOL]     _type = key; [EOL]     _class = null; [EOL]     _isTyped = typed; [EOL]     _hashCode = hash(key, typed); [EOL] } <line_num>: 214,219
public ReadOnlyClassToSerializerMap getReadOnlyLookupMap() { [EOL]     ReadOnlyClassToSerializerMap m; [EOL]     synchronized (this) { [EOL]         m = _readOnlyMap; [EOL]         if (m == null) { [EOL]             _readOnlyMap = m = ReadOnlyClassToSerializerMap.from(_sharedMap); [EOL]         } [EOL]     } [EOL]     return m.instance(); [EOL] } <line_num>: 44,54
public synchronized int size() { [EOL]     return _sharedMap.size(); [EOL] } <line_num>: 62,64
public JsonSerializer<Object> untypedValueSerializer(Class<?> type) { [EOL]     synchronized (this) { [EOL]         return _sharedMap.get(new TypeKey(type, false)); [EOL]     } [EOL] } <line_num>: 70,75
public JsonSerializer<Object> untypedValueSerializer(JavaType type) { [EOL]     synchronized (this) { [EOL]         return _sharedMap.get(new TypeKey(type, false)); [EOL]     } [EOL] } <line_num>: 77,82
public JsonSerializer<Object> typedValueSerializer(JavaType type) { [EOL]     synchronized (this) { [EOL]         return _sharedMap.get(new TypeKey(type, true)); [EOL]     } [EOL] } <line_num>: 84,89
public JsonSerializer<Object> typedValueSerializer(Class<?> cls) { [EOL]     synchronized (this) { [EOL]         return _sharedMap.get(new TypeKey(cls, true)); [EOL]     } [EOL] } <line_num>: 91,96
public void addTypedSerializer(JavaType type, JsonSerializer<Object> ser) { [EOL]     synchronized (this) { [EOL]         if (_sharedMap.put(new TypeKey(type, true), ser) == null) { [EOL]             _readOnlyMap = null; [EOL]         } [EOL]     } [EOL] } <line_num>: 109,117
public void addTypedSerializer(Class<?> cls, JsonSerializer<Object> ser) { [EOL]     synchronized (this) { [EOL]         if (_sharedMap.put(new TypeKey(cls, true), ser) == null) { [EOL]             _readOnlyMap = null; [EOL]         } [EOL]     } [EOL] } <line_num>: 119,127
public void addAndResolveNonTypedSerializer(Class<?> type, JsonSerializer<Object> ser, SerializerProvider provider) throws JsonMappingException { [EOL]     synchronized (this) { [EOL]         if (_sharedMap.put(new TypeKey(type, false), ser) == null) { [EOL]             _readOnlyMap = null; [EOL]         } [EOL]         if (ser instanceof ResolvableSerializer) { [EOL]             ((ResolvableSerializer) ser).resolve(provider); [EOL]         } [EOL]     } [EOL] } <line_num>: 129,149
public void addAndResolveNonTypedSerializer(JavaType type, JsonSerializer<Object> ser, SerializerProvider provider) throws JsonMappingException { [EOL]     synchronized (this) { [EOL]         if (_sharedMap.put(new TypeKey(type, false), ser) == null) { [EOL]             _readOnlyMap = null; [EOL]         } [EOL]         if (ser instanceof ResolvableSerializer) { [EOL]             ((ResolvableSerializer) ser).resolve(provider); [EOL]         } [EOL]     } [EOL] } <line_num>: 151,171
public synchronized void flush() { [EOL]     _sharedMap.clear(); [EOL] } <line_num>: 177,179
private final static int hash(Class<?> cls, boolean typed) { [EOL]     int hash = cls.getName().hashCode(); [EOL]     if (typed) { [EOL]         ++hash; [EOL]     } [EOL]     return hash; [EOL] } <line_num>: 221,227
private final static int hash(JavaType type, boolean typed) { [EOL]     int hash = type.hashCode() - 1; [EOL]     if (typed) { [EOL]         --hash; [EOL]     } [EOL]     return hash; [EOL] } <line_num>: 229,235
public void resetTyped(Class<?> cls) { [EOL]     _type = null; [EOL]     _class = cls; [EOL]     _isTyped = true; [EOL]     _hashCode = hash(cls, true); [EOL] } <line_num>: 237,242
public void resetUntyped(Class<?> cls) { [EOL]     _type = null; [EOL]     _class = cls; [EOL]     _isTyped = false; [EOL]     _hashCode = hash(cls, false); [EOL] } <line_num>: 244,249
public void resetTyped(JavaType type) { [EOL]     _type = type; [EOL]     _class = null; [EOL]     _isTyped = true; [EOL]     _hashCode = hash(type, true); [EOL] } <line_num>: 251,256
public void resetUntyped(JavaType type) { [EOL]     _type = type; [EOL]     _class = null; [EOL]     _isTyped = false; [EOL]     _hashCode = hash(type, false); [EOL] } <line_num>: 258,263
@Override [EOL] public final int hashCode() { [EOL]     return _hashCode; [EOL] } <line_num>: 265,265
@Override [EOL] public final String toString() { [EOL]     if (_class != null) { [EOL]         return "{class: " + _class.getName() + ", typed? " + _isTyped + "}"; [EOL]     } [EOL]     return "{type: " + _type + ", typed? " + _isTyped + "}"; [EOL] } <line_num>: 267,272
@Override [EOL] public final boolean equals(Object o) { [EOL]     if (o == null) [EOL]         return false; [EOL]     if (o == this) [EOL]         return true; [EOL]     if (o.getClass() != getClass()) { [EOL]         return false; [EOL]     } [EOL]     TypeKey other = (TypeKey) o; [EOL]     if (other._isTyped == _isTyped) { [EOL]         if (_class != null) { [EOL]             return other._class == _class; [EOL]         } [EOL]         return _type.equals(other._type); [EOL]     } [EOL]     return false; [EOL] } <line_num>: 275,290
