public IterableSerializer(JavaType elemType, boolean staticTyping, TypeSerializer vts, BeanProperty property) { [EOL]     super(Iterable.class, elemType, staticTyping, vts, property, null); [EOL] } <line_num>: 20,24
public IterableSerializer(IterableSerializer src, BeanProperty property, TypeSerializer vts, JsonSerializer<?> valueSerializer) { [EOL]     super(src, property, vts, valueSerializer); [EOL] } <line_num>: 26,30
@Override [EOL] public ContainerSerializer<?> _withValueTypeSerializer(TypeSerializer vts) { [EOL]     return new IterableSerializer(_elementType, _staticTyping, vts, _property); [EOL] } <line_num>: 32,35
@Override [EOL] public IterableSerializer withResolved(BeanProperty property, TypeSerializer vts, JsonSerializer<?> elementSerializer) { [EOL]     return new IterableSerializer(this, property, vts, elementSerializer); [EOL] } <line_num>: 37,41
@Override [EOL] public boolean isEmpty(Iterable<?> value) { [EOL]     return (value == null) || !value.iterator().hasNext(); [EOL] } <line_num>: 43,47
@Override [EOL] public boolean hasSingleElement(Iterable<?> value) { [EOL]     return false; [EOL] } <line_num>: 49,53
@Override [EOL] public void serializeContents(Iterable<?> value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonGenerationException { [EOL]     Iterator<?> it = value.iterator(); [EOL]     if (it.hasNext()) { [EOL]         final TypeSerializer typeSer = _valueTypeSerializer; [EOL]         JsonSerializer<Object> prevSerializer = null; [EOL]         Class<?> prevClass = null; [EOL]         do { [EOL]             Object elem = it.next(); [EOL]             if (elem == null) { [EOL]                 provider.defaultSerializeNull(jgen); [EOL]             } else { [EOL]                 Class<?> cc = elem.getClass(); [EOL]                 JsonSerializer<Object> currSerializer; [EOL]                 if (cc == prevClass) { [EOL]                     currSerializer = prevSerializer; [EOL]                 } else { [EOL]                     currSerializer = provider.findValueSerializer(cc, _property); [EOL]                     prevSerializer = currSerializer; [EOL]                     prevClass = cc; [EOL]                 } [EOL]                 if (typeSer == null) { [EOL]                     currSerializer.serialize(elem, jgen, provider); [EOL]                 } else { [EOL]                     currSerializer.serializeWithType(elem, jgen, provider, typeSer); [EOL]                 } [EOL]             } [EOL]         } while (it.hasNext()); [EOL]     } [EOL] } <line_num>: 55,88
