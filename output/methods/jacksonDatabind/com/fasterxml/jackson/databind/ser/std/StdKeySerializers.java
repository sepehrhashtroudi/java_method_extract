private StdKeySerializers() { [EOL] } <line_num>: 21,21
public StringKeySerializer() { [EOL]     super(String.class); [EOL] } <line_num>: 56,56
public DateKeySerializer() { [EOL]     super(Date.class); [EOL] } <line_num>: 71,71
public CalendarKeySerializer() { [EOL]     super(Calendar.class); [EOL] } <line_num>: 86,86
@SuppressWarnings("unchecked") [EOL] public static JsonSerializer<Object> getStdKeySerializer(JavaType keyType) { [EOL]     if (keyType == null) { [EOL]         return DEFAULT_KEY_SERIALIZER; [EOL]     } [EOL]     Class<?> cls = keyType.getRawClass(); [EOL]     if (cls == String.class) { [EOL]         return DEFAULT_STRING_SERIALIZER; [EOL]     } [EOL]     if (cls == Object.class) { [EOL]         return DEFAULT_KEY_SERIALIZER; [EOL]     } [EOL]     if (Date.class.isAssignableFrom(cls)) { [EOL]         return (JsonSerializer<Object>) DateKeySerializer.instance; [EOL]     } [EOL]     if (Calendar.class.isAssignableFrom(cls)) { [EOL]         return (JsonSerializer<Object>) CalendarKeySerializer.instance; [EOL]     } [EOL]     return DEFAULT_KEY_SERIALIZER; [EOL] } <line_num>: 23,45
@Override [EOL] public void serialize(String value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonGenerationException { [EOL]     jgen.writeFieldName(value); [EOL] } <line_num>: 58,63
@Override [EOL] public void serialize(Date value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonGenerationException { [EOL]     provider.defaultSerializeDateKey(value, jgen); [EOL] } <line_num>: 73,78
@Override [EOL] public void serialize(Calendar value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonGenerationException { [EOL]     provider.defaultSerializeDateKey(value.getTimeInMillis(), jgen); [EOL] } <line_num>: 88,93
