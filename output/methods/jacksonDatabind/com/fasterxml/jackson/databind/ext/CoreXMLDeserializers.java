public DurationDeserializer() { [EOL]     super(Duration.class); [EOL] } <line_num>: 69,69
public GregorianCalendarDeserializer() { [EOL]     super(XMLGregorianCalendar.class); [EOL] } <line_num>: 84,84
public QNameDeserializer() { [EOL]     super(QName.class); [EOL] } <line_num>: 111,111
@Override [EOL] public JsonDeserializer<?> findBeanDeserializer(JavaType type, DeserializationConfig config, BeanDescription beanDesc) { [EOL]     Class<?> raw = type.getRawClass(); [EOL]     if (raw == QName.class) { [EOL]         return QNameDeserializer.instance; [EOL]     } [EOL]     if (raw == XMLGregorianCalendar.class) { [EOL]         return GregorianCalendarDeserializer.instance; [EOL]     } [EOL]     if (raw == Duration.class) { [EOL]         return DurationDeserializer.instance; [EOL]     } [EOL]     return null; [EOL] } <line_num>: 41,56
@Override [EOL] protected Duration _deserialize(String value, DeserializationContext ctxt) throws IllegalArgumentException { [EOL]     return _dataTypeFactory.newDuration(value); [EOL] } <line_num>: 71,76
@Override [EOL] public XMLGregorianCalendar deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException, JsonProcessingException { [EOL]     Date d = _parseDate(jp, ctxt); [EOL]     if (d == null) { [EOL]         return null; [EOL]     } [EOL]     GregorianCalendar calendar = new GregorianCalendar(); [EOL]     calendar.setTime(d); [EOL]     TimeZone tz = ctxt.getTimeZone(); [EOL]     if (tz != null) { [EOL]         calendar.setTimeZone(tz); [EOL]     } [EOL]     return _dataTypeFactory.newXMLGregorianCalendar(calendar); [EOL] } <line_num>: 86,101
@Override [EOL] protected QName _deserialize(String value, DeserializationContext ctxt) throws IllegalArgumentException { [EOL]     return QName.valueOf(value); [EOL] } <line_num>: 113,118
