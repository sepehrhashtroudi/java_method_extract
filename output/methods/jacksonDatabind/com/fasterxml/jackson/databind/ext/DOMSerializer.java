public DOMSerializer() { [EOL]     super(Node.class); [EOL]     DOMImplementationRegistry registry; [EOL]     try { [EOL]         registry = DOMImplementationRegistry.newInstance(); [EOL]     } catch (Exception e) { [EOL]         throw new IllegalStateException("Could not instantiate DOMImplementationRegistry: " + e.getMessage(), e); [EOL]     } [EOL]     _domImpl = (DOMImplementationLS) registry.getDOMImplementation("LS"); [EOL] } <line_num>: 23,33
@Override [EOL] public void serialize(Node value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonGenerationException { [EOL]     if (_domImpl == null) [EOL]         throw new IllegalStateException("Could not find DOM LS"); [EOL]     LSSerializer writer = _domImpl.createLSSerializer(); [EOL]     jgen.writeString(writer.writeToString(value)); [EOL] } <line_num>: 35,42
@Override [EOL] public JsonNode getSchema(SerializerProvider provider, java.lang.reflect.Type typeHint) { [EOL]     return createSchemaNode("string", true); [EOL] } <line_num>: 44,49
@Override [EOL] public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint) throws JsonMappingException { [EOL]     if (visitor != null) [EOL]         visitor.expectAnyFormat(typeHint); [EOL] } <line_num>: 51,56
