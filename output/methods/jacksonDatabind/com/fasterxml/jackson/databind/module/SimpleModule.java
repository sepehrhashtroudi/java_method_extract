public SimpleModule() { [EOL]     _name = "SimpleModule-" + System.identityHashCode(this); [EOL]     _version = Version.unknownVersion(); [EOL] } <line_num>: 82,86
public SimpleModule(String name) { [EOL]     this(name, Version.unknownVersion()); [EOL] } <line_num>: 92,94
public SimpleModule(Version version) { [EOL]     _name = version.getArtifactId(); [EOL]     _version = version; [EOL] } <line_num>: 100,103
public SimpleModule(String name, Version version) { [EOL]     _name = name; [EOL]     _version = version; [EOL] } <line_num>: 114,117
public SimpleModule(String name, Version version, Map<Class<?>, JsonDeserializer<?>> deserializers) { [EOL]     this(name, version, deserializers, null); [EOL] } <line_num>: 122,125
public SimpleModule(String name, Version version, List<JsonSerializer<?>> serializers) { [EOL]     this(name, version, null, serializers); [EOL] } <line_num>: 130,133
public SimpleModule(String name, Version version, Map<Class<?>, JsonDeserializer<?>> deserializers, List<JsonSerializer<?>> serializers) { [EOL]     _name = name; [EOL]     _version = version; [EOL]     if (deserializers != null) { [EOL]         _deserializers = new SimpleDeserializers(deserializers); [EOL]     } [EOL]     if (serializers != null) { [EOL]         _serializers = new SimpleSerializers(serializers); [EOL]     } [EOL] } <line_num>: 138,150
public void setSerializers(SimpleSerializers s) { [EOL]     _serializers = s; [EOL] } <line_num>: 161,163
public void setDeserializers(SimpleDeserializers d) { [EOL]     _deserializers = d; [EOL] } <line_num>: 168,170
public void setKeySerializers(SimpleSerializers ks) { [EOL]     _keySerializers = ks; [EOL] } <line_num>: 175,177
public void setKeyDeserializers(SimpleKeyDeserializers kd) { [EOL]     _keyDeserializers = kd; [EOL] } <line_num>: 182,184
public void setAbstractTypes(SimpleAbstractTypeResolver atr) { [EOL]     _abstractTypes = atr; [EOL] } <line_num>: 189,191
public void setValueInstantiators(SimpleValueInstantiators svi) { [EOL]     _valueInstantiators = svi; [EOL] } <line_num>: 196,198
public SimpleModule setDeserializerModifier(BeanDeserializerModifier mod) { [EOL]     _deserializerModifier = mod; [EOL]     return this; [EOL] } <line_num>: 203,206
public SimpleModule setSerializerModifier(BeanSerializerModifier mod) { [EOL]     _serializerModifier = mod; [EOL]     return this; [EOL] } <line_num>: 211,214
public SimpleModule addSerializer(JsonSerializer<?> ser) { [EOL]     if (_serializers == null) { [EOL]         _serializers = new SimpleSerializers(); [EOL]     } [EOL]     _serializers.addSerializer(ser); [EOL]     return this; [EOL] } <line_num>: 222,229
public <T> SimpleModule addSerializer(Class<? extends T> type, JsonSerializer<T> ser) { [EOL]     if (_serializers == null) { [EOL]         _serializers = new SimpleSerializers(); [EOL]     } [EOL]     _serializers.addSerializer(type, ser); [EOL]     return this; [EOL] } <line_num>: 231,238
public <T> SimpleModule addKeySerializer(Class<? extends T> type, JsonSerializer<T> ser) { [EOL]     if (_keySerializers == null) { [EOL]         _keySerializers = new SimpleSerializers(); [EOL]     } [EOL]     _keySerializers.addSerializer(type, ser); [EOL]     return this; [EOL] } <line_num>: 240,247
public <T> SimpleModule addDeserializer(Class<T> type, JsonDeserializer<? extends T> deser) { [EOL]     if (_deserializers == null) { [EOL]         _deserializers = new SimpleDeserializers(); [EOL]     } [EOL]     _deserializers.addDeserializer(type, deser); [EOL]     return this; [EOL] } <line_num>: 249,256
public SimpleModule addKeyDeserializer(Class<?> type, KeyDeserializer deser) { [EOL]     if (_keyDeserializers == null) { [EOL]         _keyDeserializers = new SimpleKeyDeserializers(); [EOL]     } [EOL]     _keyDeserializers.addDeserializer(type, deser); [EOL]     return this; [EOL] } <line_num>: 258,265
public <T> SimpleModule addAbstractTypeMapping(Class<T> superType, Class<? extends T> subType) { [EOL]     if (_abstractTypes == null) { [EOL]         _abstractTypes = new SimpleAbstractTypeResolver(); [EOL]     } [EOL]     _abstractTypes = _abstractTypes.addMapping(superType, subType); [EOL]     return this; [EOL] } <line_num>: 272,281
public SimpleModule addValueInstantiator(Class<?> beanType, ValueInstantiator inst) { [EOL]     if (_valueInstantiators == null) { [EOL]         _valueInstantiators = new SimpleValueInstantiators(); [EOL]     } [EOL]     _valueInstantiators = _valueInstantiators.addValueInstantiator(beanType, inst); [EOL]     return this; [EOL] } <line_num>: 290,297
public SimpleModule registerSubtypes(Class<?>... subtypes) { [EOL]     if (_subtypes == null) { [EOL]         _subtypes = new LinkedHashSet<NamedType>(Math.max(16, subtypes.length)); [EOL]     } [EOL]     for (Class<?> subtype : subtypes) { [EOL]         _subtypes.add(new NamedType(subtype)); [EOL]     } [EOL]     return this; [EOL] } <line_num>: 304,313
public SimpleModule registerSubtypes(NamedType... subtypes) { [EOL]     if (_subtypes == null) { [EOL]         _subtypes = new LinkedHashSet<NamedType>(Math.max(16, subtypes.length)); [EOL]     } [EOL]     for (NamedType subtype : subtypes) { [EOL]         _subtypes.add(subtype); [EOL]     } [EOL]     return this; [EOL] } <line_num>: 320,329
public SimpleModule setMixInAnnotation(Class<?> targetType, Class<?> mixinClass) { [EOL]     if (_mixins == null) { [EOL]         _mixins = new HashMap<Class<?>, Class<?>>(); [EOL]     } [EOL]     _mixins.put(targetType, mixinClass); [EOL]     return this; [EOL] } <line_num>: 339,346
@Override [EOL] public String getModuleName() { [EOL]     return _name; [EOL] } <line_num>: 354,357
@Override [EOL] public void setupModule(SetupContext context) { [EOL]     if (_serializers != null) { [EOL]         context.addSerializers(_serializers); [EOL]     } [EOL]     if (_deserializers != null) { [EOL]         context.addDeserializers(_deserializers); [EOL]     } [EOL]     if (_keySerializers != null) { [EOL]         context.addKeySerializers(_keySerializers); [EOL]     } [EOL]     if (_keyDeserializers != null) { [EOL]         context.addKeyDeserializers(_keyDeserializers); [EOL]     } [EOL]     if (_abstractTypes != null) { [EOL]         context.addAbstractTypeResolver(_abstractTypes); [EOL]     } [EOL]     if (_valueInstantiators != null) { [EOL]         context.addValueInstantiators(_valueInstantiators); [EOL]     } [EOL]     if (_deserializerModifier != null) { [EOL]         context.addBeanDeserializerModifier(_deserializerModifier); [EOL]     } [EOL]     if (_serializerModifier != null) { [EOL]         context.addBeanSerializerModifier(_serializerModifier); [EOL]     } [EOL]     if (_subtypes != null && _subtypes.size() > 0) { [EOL]         context.registerSubtypes(_subtypes.toArray(new NamedType[_subtypes.size()])); [EOL]     } [EOL]     if (_mixins != null) { [EOL]         for (Map.Entry<Class<?>, Class<?>> entry : _mixins.entrySet()) { [EOL]             context.setMixInAnnotations(entry.getKey(), entry.getValue()); [EOL]         } [EOL]     } [EOL] } <line_num>: 359,394
@Override [EOL] public Version version() { [EOL]     return _version; [EOL] } <line_num>: 396,399
