protected ObjectWriter(ObjectMapper mapper, SerializationConfig config, JavaType rootType, PrettyPrinter pp) { [EOL]     _config = config; [EOL]     _serializerProvider = mapper._serializerProvider; [EOL]     _serializerFactory = mapper._serializerFactory; [EOL]     _jsonFactory = mapper._jsonFactory; [EOL]     if (rootType != null) { [EOL]         rootType = rootType.withStaticTyping(); [EOL]     } [EOL]     _rootType = rootType; [EOL]     _prettyPrinter = pp; [EOL]     _schema = null; [EOL]     _rootSerializer = _prefetchRootSerializer(config, rootType); [EOL] } <line_num>: 106,123
protected ObjectWriter(ObjectMapper mapper, SerializationConfig config) { [EOL]     _config = config; [EOL]     _serializerProvider = mapper._serializerProvider; [EOL]     _serializerFactory = mapper._serializerFactory; [EOL]     _jsonFactory = mapper._jsonFactory; [EOL]     _rootType = null; [EOL]     _rootSerializer = null; [EOL]     _prettyPrinter = null; [EOL]     _schema = null; [EOL] } <line_num>: 128,140
protected ObjectWriter(ObjectMapper mapper, SerializationConfig config, FormatSchema s) { [EOL]     _config = config; [EOL]     _serializerProvider = mapper._serializerProvider; [EOL]     _serializerFactory = mapper._serializerFactory; [EOL]     _jsonFactory = mapper._jsonFactory; [EOL]     _rootType = null; [EOL]     _rootSerializer = null; [EOL]     _prettyPrinter = null; [EOL]     _schema = s; [EOL] } <line_num>: 145,158
protected ObjectWriter(ObjectWriter base, SerializationConfig config, JavaType rootType, JsonSerializer<Object> rootSer, PrettyPrinter pp, FormatSchema s) { [EOL]     _config = config; [EOL]     _serializerProvider = base._serializerProvider; [EOL]     _serializerFactory = base._serializerFactory; [EOL]     _jsonFactory = base._jsonFactory; [EOL]     _rootType = rootType; [EOL]     _rootSerializer = rootSer; [EOL]     _prettyPrinter = pp; [EOL]     _schema = s; [EOL] } <line_num>: 163,177
protected ObjectWriter(ObjectWriter base, SerializationConfig config) { [EOL]     _config = config; [EOL]     _serializerProvider = base._serializerProvider; [EOL]     _serializerFactory = base._serializerFactory; [EOL]     _jsonFactory = base._jsonFactory; [EOL]     _schema = base._schema; [EOL]     _rootType = base._rootType; [EOL]     _rootSerializer = base._rootSerializer; [EOL]     _prettyPrinter = base._prettyPrinter; [EOL] } <line_num>: 182,194
@Override [EOL] public Version version() { [EOL]     return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION; [EOL] } <line_num>: 200,203
public ObjectWriter with(SerializationFeature feature) { [EOL]     SerializationConfig newConfig = _config.with(feature); [EOL]     return (newConfig == _config) ? this : new ObjectWriter(this, newConfig); [EOL] } <line_num>: 215,219
public ObjectWriter with(SerializationFeature first, SerializationFeature... other) { [EOL]     SerializationConfig newConfig = _config.with(first, other); [EOL]     return (newConfig == _config) ? this : new ObjectWriter(this, newConfig); [EOL] } <line_num>: 225,230
public ObjectWriter withFeatures(SerializationFeature... features) { [EOL]     SerializationConfig newConfig = _config.withFeatures(features); [EOL]     return (newConfig == _config) ? this : new ObjectWriter(this, newConfig); [EOL] } <line_num>: 236,240
public ObjectWriter without(SerializationFeature feature) { [EOL]     SerializationConfig newConfig = _config.without(feature); [EOL]     return (newConfig == _config) ? this : new ObjectWriter(this, newConfig); [EOL] } <line_num>: 246,250
public ObjectWriter without(SerializationFeature first, SerializationFeature... other) { [EOL]     SerializationConfig newConfig = _config.without(first, other); [EOL]     return (newConfig == _config) ? this : new ObjectWriter(this, newConfig); [EOL] } <line_num>: 256,261
public ObjectWriter withoutFeatures(SerializationFeature... features) { [EOL]     SerializationConfig newConfig = _config.withoutFeatures(features); [EOL]     return (newConfig == _config) ? this : new ObjectWriter(this, newConfig); [EOL] } <line_num>: 267,271
public ObjectWriter with(DateFormat df) { [EOL]     SerializationConfig newConfig = _config.with(df); [EOL]     return (newConfig == _config) ? this : new ObjectWriter(this, newConfig); [EOL] } <line_num>: 281,285
public ObjectWriter withDefaultPrettyPrinter() { [EOL]     return with(new DefaultPrettyPrinter()); [EOL] } <line_num>: 291,294
public ObjectWriter with(FilterProvider filterProvider) { [EOL]     if (filterProvider == _config.getFilterProvider()) { [EOL]         return this; [EOL]     } [EOL]     return new ObjectWriter(this, _config.withFilters(filterProvider)); [EOL] } <line_num>: 300,306
public ObjectWriter with(PrettyPrinter pp) { [EOL]     if (pp == _prettyPrinter) { [EOL]         return this; [EOL]     } [EOL]     if (pp == null) { [EOL]         pp = NULL_PRETTY_PRINTER; [EOL]     } [EOL]     return new ObjectWriter(this, _config, _rootType, _rootSerializer, pp, _schema); [EOL] } <line_num>: 312,322
public ObjectWriter withRootName(String rootName) { [EOL]     SerializationConfig newConfig = _config.withRootName(rootName); [EOL]     return (newConfig == _config) ? this : new ObjectWriter(this, newConfig); [EOL] } <line_num>: 332,336
public ObjectWriter withSchema(FormatSchema schema) { [EOL]     if (_schema == schema) { [EOL]         return this; [EOL]     } [EOL]     _verifySchemaType(schema); [EOL]     return new ObjectWriter(this, _config, _rootType, _rootSerializer, _prettyPrinter, schema); [EOL] } <line_num>: 346,353
public ObjectWriter withType(JavaType rootType) { [EOL]     rootType = rootType.withStaticTyping(); [EOL]     JsonSerializer<Object> rootSer = _prefetchRootSerializer(_config, rootType); [EOL]     return new ObjectWriter(this, _config, rootType, rootSer, _prettyPrinter, _schema); [EOL] } <line_num>: 363,369
public ObjectWriter withType(Class<?> rootType) { [EOL]     return withType(_config.constructType(rootType)); [EOL] } <line_num>: 376,378
public ObjectWriter withType(TypeReference<?> rootType) { [EOL]     return withType(_config.getTypeFactory().constructType(rootType.getType())); [EOL] } <line_num>: 380,382
public ObjectWriter withView(Class<?> view) { [EOL]     SerializationConfig newConfig = _config.withView(view); [EOL]     return (newConfig == _config) ? this : new ObjectWriter(this, newConfig); [EOL] } <line_num>: 392,395
public ObjectWriter with(Locale l) { [EOL]     SerializationConfig newConfig = _config.with(l); [EOL]     return (newConfig == _config) ? this : new ObjectWriter(this, newConfig); [EOL] } <line_num>: 397,400
public ObjectWriter with(TimeZone tz) { [EOL]     SerializationConfig newConfig = _config.with(tz); [EOL]     return (newConfig == _config) ? this : new ObjectWriter(this, newConfig); [EOL] } <line_num>: 402,405
public ObjectWriter with(Base64Variant b64variant) { [EOL]     SerializationConfig newConfig = _config.with(b64variant); [EOL]     return (newConfig == _config) ? this : new ObjectWriter(this, newConfig); [EOL] } <line_num>: 413,416
public boolean isEnabled(SerializationFeature f) { [EOL]     return _config.isEnabled(f); [EOL] } <line_num>: 424,426
public boolean isEnabled(MapperFeature f) { [EOL]     return _config.isEnabled(f); [EOL] } <line_num>: 428,430
public boolean isEnabled(JsonParser.Feature f) { [EOL]     return _jsonFactory.isEnabled(f); [EOL] } <line_num>: 432,434
public SerializationConfig getConfig() { [EOL]     return _config; [EOL] } <line_num>: 439,441
@Deprecated [EOL] public JsonFactory getJsonFactory() { [EOL]     return _jsonFactory; [EOL] } <line_num>: 446,449
public JsonFactory getFactory() { [EOL]     return _jsonFactory; [EOL] } <line_num>: 454,456
public TypeFactory getTypeFactory() { [EOL]     return _config.getTypeFactory(); [EOL] } <line_num>: 458,460
public boolean hasPrefetchedSerializer() { [EOL]     return _rootSerializer != null; [EOL] } <line_num>: 470,472
public void writeValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException { [EOL]     _configureJsonGenerator(jgen); [EOL]     if (_config.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) && (value instanceof Closeable)) { [EOL]         _writeCloseableValue(jgen, value, _config); [EOL]     } else { [EOL]         if (_rootType == null) { [EOL]             _serializerProvider(_config).serializeValue(jgen, value); [EOL]         } else { [EOL]             _serializerProvider(_config).serializeValue(jgen, value, _rootType, _rootSerializer); [EOL]         } [EOL]         if (_config.isEnabled(SerializationFeature.FLUSH_AFTER_WRITE_VALUE)) { [EOL]             jgen.flush(); [EOL]         } [EOL]     } [EOL] } <line_num>: 484,502
public void writeValue(File resultFile, Object value) throws IOException, JsonGenerationException, JsonMappingException { [EOL]     _configAndWriteValue(_jsonFactory.createGenerator(resultFile, JsonEncoding.UTF8), value); [EOL] } <line_num>: 514,518
public void writeValue(OutputStream out, Object value) throws IOException, JsonGenerationException, JsonMappingException { [EOL]     _configAndWriteValue(_jsonFactory.createGenerator(out, JsonEncoding.UTF8), value); [EOL] } <line_num>: 531,535
public void writeValue(Writer w, Object value) throws IOException, JsonGenerationException, JsonMappingException { [EOL]     _configAndWriteValue(_jsonFactory.createGenerator(w), value); [EOL] } <line_num>: 547,551
public String writeValueAsString(Object value) throws JsonProcessingException { [EOL]     SegmentedStringWriter sw = new SegmentedStringWriter(_jsonFactory._getBufferRecycler()); [EOL]     try { [EOL]         _configAndWriteValue(_jsonFactory.createGenerator(sw), value); [EOL]     } catch (JsonProcessingException e) { [EOL]         throw e; [EOL]     } catch (IOException e) { [EOL]         throw JsonMappingException.fromUnexpectedIOE(e); [EOL]     } [EOL]     return sw.getAndClear(); [EOL] } <line_num>: 561,574
public byte[] writeValueAsBytes(Object value) throws JsonProcessingException { [EOL]     ByteArrayBuilder bb = new ByteArrayBuilder(_jsonFactory._getBufferRecycler()); [EOL]     try { [EOL]         _configAndWriteValue(_jsonFactory.createGenerator(bb, JsonEncoding.UTF8), value); [EOL]     } catch (JsonProcessingException e) { [EOL]         throw e; [EOL]     } catch (IOException e) { [EOL]         throw JsonMappingException.fromUnexpectedIOE(e); [EOL]     } [EOL]     byte[] result = bb.toByteArray(); [EOL]     bb.release(); [EOL]     return result; [EOL] } <line_num>: 585,599
public void acceptJsonFormatVisitor(JavaType type, JsonFormatVisitorWrapper visitor) throws JsonMappingException { [EOL]     if (type == null) { [EOL]         throw new IllegalArgumentException("type must be provided"); [EOL]     } [EOL]     _serializerProvider(_config).acceptJsonFormatVisitor(type, visitor); [EOL] } <line_num>: 619,626
public boolean canSerialize(Class<?> type) { [EOL]     return _serializerProvider(_config).hasSerializerFor(type); [EOL] } <line_num>: 628,630
protected DefaultSerializerProvider _serializerProvider(SerializationConfig config) { [EOL]     return _serializerProvider.createInstance(config, _serializerFactory); [EOL] } <line_num>: 642,644
protected void _verifySchemaType(FormatSchema schema) { [EOL]     if (schema != null) { [EOL]         if (!_jsonFactory.canUseSchema(schema)) { [EOL]             throw new IllegalArgumentException("Can not use FormatSchema of type " + schema.getClass().getName() + " for format " + _jsonFactory.getFormatName()); [EOL]         } [EOL]     } [EOL] } <line_num>: 655,663
protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException { [EOL]     _configureJsonGenerator(jgen); [EOL]     if (_config.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) && (value instanceof Closeable)) { [EOL]         _writeCloseable(jgen, value, _config); [EOL]         return; [EOL]     } [EOL]     boolean closed = false; [EOL]     try { [EOL]         if (_rootType == null) { [EOL]             _serializerProvider(_config).serializeValue(jgen, value); [EOL]         } else { [EOL]             _serializerProvider(_config).serializeValue(jgen, value, _rootType, _rootSerializer); [EOL]         } [EOL]         closed = true; [EOL]         jgen.close(); [EOL]     } finally { [EOL]         if (!closed) { [EOL]             try { [EOL]                 jgen.close(); [EOL]             } catch (IOException ioe) { [EOL]             } [EOL]         } [EOL]     } [EOL] } <line_num>: 669,697
private final void _writeCloseable(JsonGenerator jgen, Object value, SerializationConfig cfg) throws IOException, JsonGenerationException, JsonMappingException { [EOL]     Closeable toClose = (Closeable) value; [EOL]     try { [EOL]         if (_rootType == null) { [EOL]             _serializerProvider(cfg).serializeValue(jgen, value); [EOL]         } else { [EOL]             _serializerProvider(cfg).serializeValue(jgen, value, _rootType, _rootSerializer); [EOL]         } [EOL]         JsonGenerator tmpJgen = jgen; [EOL]         jgen = null; [EOL]         tmpJgen.close(); [EOL]         Closeable tmpToClose = toClose; [EOL]         toClose = null; [EOL]         tmpToClose.close(); [EOL]     } finally { [EOL]         if (jgen != null) { [EOL]             try { [EOL]                 jgen.close(); [EOL]             } catch (IOException ioe) { [EOL]             } [EOL]         } [EOL]         if (toClose != null) { [EOL]             try { [EOL]                 toClose.close(); [EOL]             } catch (IOException ioe) { [EOL]             } [EOL]         } [EOL]     } [EOL] } <line_num>: 703,734
private final void _writeCloseableValue(JsonGenerator jgen, Object value, SerializationConfig cfg) throws IOException, JsonGenerationException, JsonMappingException { [EOL]     Closeable toClose = (Closeable) value; [EOL]     try { [EOL]         if (_rootType == null) { [EOL]             _serializerProvider(cfg).serializeValue(jgen, value); [EOL]         } else { [EOL]             _serializerProvider(cfg).serializeValue(jgen, value, _rootType, _rootSerializer); [EOL]         } [EOL]         if (_config.isEnabled(SerializationFeature.FLUSH_AFTER_WRITE_VALUE)) { [EOL]             jgen.flush(); [EOL]         } [EOL]         Closeable tmpToClose = toClose; [EOL]         toClose = null; [EOL]         tmpToClose.close(); [EOL]     } finally { [EOL]         if (toClose != null) { [EOL]             try { [EOL]                 toClose.close(); [EOL]             } catch (IOException ioe) { [EOL]             } [EOL]         } [EOL]     } [EOL] } <line_num>: 740,763
protected JsonSerializer<Object> _prefetchRootSerializer(SerializationConfig config, JavaType valueType) { [EOL]     if (valueType == null || !_config.isEnabled(SerializationFeature.EAGER_SERIALIZER_FETCH)) { [EOL]         return null; [EOL]     } [EOL]     try { [EOL]         return _serializerProvider(config).findTypedValueSerializer(valueType, true, null); [EOL]     } catch (JsonProcessingException e) { [EOL]         return null; [EOL]     } [EOL] } <line_num>: 770,782
private void _configureJsonGenerator(JsonGenerator jgen) { [EOL]     if (_prettyPrinter != null) { [EOL]         PrettyPrinter pp = _prettyPrinter; [EOL]         if (pp == NULL_PRETTY_PRINTER) { [EOL]             jgen.setPrettyPrinter(null); [EOL]         } else { [EOL]             if (pp instanceof Instantiatable<?>) { [EOL]                 pp = (PrettyPrinter) ((Instantiatable<?>) pp).createInstance(); [EOL]             } [EOL]             jgen.setPrettyPrinter(pp); [EOL]         } [EOL]     } else if (_config.isEnabled(SerializationFeature.INDENT_OUTPUT)) { [EOL]         jgen.useDefaultPrettyPrinter(); [EOL]     } [EOL]     if (_schema != null) { [EOL]         jgen.setSchema(_schema); [EOL]     } [EOL] } <line_num>: 790,812
