protected MinimalClassNameIdResolver(JavaType baseType, TypeFactory typeFactory) { [EOL]     super(baseType, typeFactory); [EOL]     String base = baseType.getRawClass().getName(); [EOL]     int ix = base.lastIndexOf('.'); [EOL]     if (ix < 0) { [EOL]         _basePackageName = ""; [EOL]         _basePackagePrefix = "."; [EOL]     } else { [EOL]         _basePackagePrefix = base.substring(0, ix + 1); [EOL]         _basePackageName = base.substring(0, ix); [EOL]     } [EOL] } <line_num>: 23,35
@Override [EOL] public JsonTypeInfo.Id getMechanism() { [EOL]     return JsonTypeInfo.Id.MINIMAL_CLASS; [EOL] } <line_num>: 37,38
@Override [EOL] public String idFromValue(Object value) { [EOL]     String n = value.getClass().getName(); [EOL]     if (n.startsWith(_basePackagePrefix)) { [EOL]         return n.substring(_basePackagePrefix.length() - 1); [EOL]     } [EOL]     return n; [EOL] } <line_num>: 40,49
@Override [EOL] public JavaType typeFromId(String id) { [EOL]     if (id.startsWith(".")) { [EOL]         StringBuilder sb = new StringBuilder(id.length() + _basePackageName.length()); [EOL]         if (_basePackageName.length() == 0) { [EOL]             sb.append(id.substring(1)); [EOL]         } else { [EOL]             sb.append(_basePackageName).append(id); [EOL]         } [EOL]         id = sb.toString(); [EOL]     } [EOL]     return super.typeFromId(id); [EOL] } <line_num>: 51,66
