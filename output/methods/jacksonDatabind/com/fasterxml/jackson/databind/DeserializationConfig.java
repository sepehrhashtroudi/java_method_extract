public DeserializationConfig(BaseSettings base, SubtypeResolver str, Map<ClassKey, Class<?>> mixins) { [EOL]     super(base, str, mixins); [EOL]     _deserFeatures = collectFeatureDefaults(DeserializationFeature.class); [EOL]     _nodeFactory = JsonNodeFactory.instance; [EOL]     _problemHandlers = null; [EOL] } <line_num>: 69,76
private DeserializationConfig(DeserializationConfig src, SubtypeResolver str) { [EOL]     super(src, str); [EOL]     _deserFeatures = src._deserFeatures; [EOL]     _nodeFactory = src._nodeFactory; [EOL]     _problemHandlers = src._problemHandlers; [EOL] } <line_num>: 82,88
private DeserializationConfig(DeserializationConfig src, int mapperFeatures, int deserFeatures) { [EOL]     super(src, mapperFeatures); [EOL]     _deserFeatures = deserFeatures; [EOL]     _nodeFactory = src._nodeFactory; [EOL]     _problemHandlers = src._problemHandlers; [EOL] } <line_num>: 90,97
private DeserializationConfig(DeserializationConfig src, BaseSettings base) { [EOL]     super(src, base); [EOL]     _deserFeatures = src._deserFeatures; [EOL]     _nodeFactory = src._nodeFactory; [EOL]     _problemHandlers = src._problemHandlers; [EOL] } <line_num>: 99,105
private DeserializationConfig(DeserializationConfig src, JsonNodeFactory f) { [EOL]     super(src); [EOL]     _deserFeatures = src._deserFeatures; [EOL]     _problemHandlers = src._problemHandlers; [EOL]     _nodeFactory = f; [EOL] } <line_num>: 107,113
private DeserializationConfig(DeserializationConfig src, LinkedNode<DeserializationProblemHandler> problemHandlers) { [EOL]     super(src); [EOL]     _deserFeatures = src._deserFeatures; [EOL]     _problemHandlers = problemHandlers; [EOL]     _nodeFactory = src._nodeFactory; [EOL] } <line_num>: 115,122
private DeserializationConfig(DeserializationConfig src, String rootName) { [EOL]     super(src, rootName); [EOL]     _deserFeatures = src._deserFeatures; [EOL]     _problemHandlers = src._problemHandlers; [EOL]     _nodeFactory = src._nodeFactory; [EOL] } <line_num>: 124,130
private DeserializationConfig(DeserializationConfig src, Class<?> view) { [EOL]     super(src, view); [EOL]     _deserFeatures = src._deserFeatures; [EOL]     _problemHandlers = src._problemHandlers; [EOL]     _nodeFactory = src._nodeFactory; [EOL] } <line_num>: 132,138
protected DeserializationConfig(DeserializationConfig src, Map<ClassKey, Class<?>> mixins) { [EOL]     super(src, mixins); [EOL]     _deserFeatures = src._deserFeatures; [EOL]     _problemHandlers = src._problemHandlers; [EOL]     _nodeFactory = src._nodeFactory; [EOL] } <line_num>: 143,149
protected BaseSettings getBaseSettings() { [EOL]     return _base; [EOL] } <line_num>: 152,152
@Override [EOL] public DeserializationConfig with(MapperFeature... features) { [EOL]     int newMapperFlags = _mapperFeatures; [EOL]     for (MapperFeature f : features) { [EOL]         newMapperFlags |= f.getMask(); [EOL]     } [EOL]     return (newMapperFlags == _mapperFeatures) ? this : new DeserializationConfig(this, newMapperFlags, _deserFeatures); [EOL] } <line_num>: 160,169
@Override [EOL] public DeserializationConfig without(MapperFeature... features) { [EOL]     int newMapperFlags = _mapperFeatures; [EOL]     for (MapperFeature f : features) { [EOL]         newMapperFlags &= ~f.getMask(); [EOL]     } [EOL]     return (newMapperFlags == _mapperFeatures) ? this : new DeserializationConfig(this, newMapperFlags, _deserFeatures); [EOL] } <line_num>: 171,180
@Override [EOL] public DeserializationConfig with(ClassIntrospector ci) { [EOL]     return _withBase(_base.withClassIntrospector(ci)); [EOL] } <line_num>: 182,185
@Override [EOL] public DeserializationConfig with(AnnotationIntrospector ai) { [EOL]     return _withBase(_base.withAnnotationIntrospector(ai)); [EOL] } <line_num>: 187,190
@Override [EOL] public DeserializationConfig with(VisibilityChecker<?> vc) { [EOL]     return _withBase(_base.withVisibilityChecker(vc)); [EOL] } <line_num>: 192,195
@Override [EOL] public DeserializationConfig withVisibility(PropertyAccessor forMethod, JsonAutoDetect.Visibility visibility) { [EOL]     return _withBase(_base.withVisibility(forMethod, visibility)); [EOL] } <line_num>: 197,200
@Override [EOL] public DeserializationConfig with(TypeResolverBuilder<?> trb) { [EOL]     return _withBase(_base.withTypeResolverBuilder(trb)); [EOL] } <line_num>: 202,205
@Override [EOL] public DeserializationConfig with(SubtypeResolver str) { [EOL]     return (_subtypeResolver == str) ? this : new DeserializationConfig(this, str); [EOL] } <line_num>: 207,210
@Override [EOL] public DeserializationConfig with(PropertyNamingStrategy pns) { [EOL]     return _withBase(_base.withPropertyNamingStrategy(pns)); [EOL] } <line_num>: 212,215
@Override [EOL] public DeserializationConfig withRootName(String rootName) { [EOL]     if (rootName == null) { [EOL]         if (_rootName == null) { [EOL]             return this; [EOL]         } [EOL]     } else if (rootName.equals(_rootName)) { [EOL]         return this; [EOL]     } [EOL]     return new DeserializationConfig(this, rootName); [EOL] } <line_num>: 217,227
@Override [EOL] public DeserializationConfig with(TypeFactory tf) { [EOL]     return _withBase(_base.withTypeFactory(tf)); [EOL] } <line_num>: 229,232
@Override [EOL] public DeserializationConfig with(DateFormat df) { [EOL]     return _withBase(_base.withDateFormat(df)); [EOL] } <line_num>: 234,237
@Override [EOL] public DeserializationConfig with(HandlerInstantiator hi) { [EOL]     return _withBase(_base.withHandlerInstantiator(hi)); [EOL] } <line_num>: 239,242
@Override [EOL] public DeserializationConfig withInsertedAnnotationIntrospector(AnnotationIntrospector ai) { [EOL]     return _withBase(_base.withInsertedAnnotationIntrospector(ai)); [EOL] } <line_num>: 244,247
@Override [EOL] public DeserializationConfig withAppendedAnnotationIntrospector(AnnotationIntrospector ai) { [EOL]     return _withBase(_base.withAppendedAnnotationIntrospector(ai)); [EOL] } <line_num>: 249,252
@Override [EOL] public DeserializationConfig withView(Class<?> view) { [EOL]     return (_view == view) ? this : new DeserializationConfig(this, view); [EOL] } <line_num>: 254,257
@Override [EOL] public DeserializationConfig with(Locale l) { [EOL]     return _withBase(_base.with(l)); [EOL] } <line_num>: 259,262
@Override [EOL] public DeserializationConfig with(TimeZone tz) { [EOL]     return _withBase(_base.with(tz)); [EOL] } <line_num>: 264,267
@Override [EOL] public DeserializationConfig with(Base64Variant base64) { [EOL]     return _withBase(_base.with(base64)); [EOL] } <line_num>: 269,272
private final DeserializationConfig _withBase(BaseSettings newBase) { [EOL]     return (_base == newBase) ? this : new DeserializationConfig(this, newBase); [EOL] } <line_num>: 274,276
public DeserializationConfig with(JsonNodeFactory f) { [EOL]     if (_nodeFactory == f) { [EOL]         return this; [EOL]     } [EOL]     return new DeserializationConfig(this, f); [EOL] } <line_num>: 288,293
public DeserializationConfig withHandler(DeserializationProblemHandler h) { [EOL]     if (LinkedNode.contains(_problemHandlers, h)) { [EOL]         return this; [EOL]     } [EOL]     return new DeserializationConfig(this, new LinkedNode<DeserializationProblemHandler>(h, _problemHandlers)); [EOL] } <line_num>: 299,307
public DeserializationConfig withNoProblemHandlers() { [EOL]     if (_problemHandlers == null) { [EOL]         return this; [EOL]     } [EOL]     return new DeserializationConfig(this, (LinkedNode<DeserializationProblemHandler>) null); [EOL] } <line_num>: 313,319
public DeserializationConfig with(DeserializationFeature feature) { [EOL]     int newDeserFeatures = (_deserFeatures | feature.getMask()); [EOL]     return (newDeserFeatures == _deserFeatures) ? this : new DeserializationConfig(this, _mapperFeatures, newDeserFeatures); [EOL] } <line_num>: 325,330
public DeserializationConfig with(DeserializationFeature first, DeserializationFeature... features) { [EOL]     int newDeserFeatures = _deserFeatures | first.getMask(); [EOL]     for (DeserializationFeature f : features) { [EOL]         newDeserFeatures |= f.getMask(); [EOL]     } [EOL]     return (newDeserFeatures == _deserFeatures) ? this : new DeserializationConfig(this, _mapperFeatures, newDeserFeatures); [EOL] } <line_num>: 336,345
public DeserializationConfig withFeatures(DeserializationFeature... features) { [EOL]     int newDeserFeatures = _deserFeatures; [EOL]     for (DeserializationFeature f : features) { [EOL]         newDeserFeatures |= f.getMask(); [EOL]     } [EOL]     return (newDeserFeatures == _deserFeatures) ? this : new DeserializationConfig(this, _mapperFeatures, newDeserFeatures); [EOL] } <line_num>: 351,359
public DeserializationConfig without(DeserializationFeature feature) { [EOL]     int newDeserFeatures = _deserFeatures & ~feature.getMask(); [EOL]     return (newDeserFeatures == _deserFeatures) ? this : new DeserializationConfig(this, _mapperFeatures, newDeserFeatures); [EOL] } <line_num>: 365,370
public DeserializationConfig without(DeserializationFeature first, DeserializationFeature... features) { [EOL]     int newDeserFeatures = _deserFeatures & ~first.getMask(); [EOL]     for (DeserializationFeature f : features) { [EOL]         newDeserFeatures &= ~f.getMask(); [EOL]     } [EOL]     return (newDeserFeatures == _deserFeatures) ? this : new DeserializationConfig(this, _mapperFeatures, newDeserFeatures); [EOL] } <line_num>: 376,385
public DeserializationConfig withoutFeatures(DeserializationFeature... features) { [EOL]     int newDeserFeatures = _deserFeatures; [EOL]     for (DeserializationFeature f : features) { [EOL]         newDeserFeatures &= ~f.getMask(); [EOL]     } [EOL]     return (newDeserFeatures == _deserFeatures) ? this : new DeserializationConfig(this, _mapperFeatures, newDeserFeatures); [EOL] } <line_num>: 391,399
@Override [EOL] public AnnotationIntrospector getAnnotationIntrospector() { [EOL]     if (isEnabled(MapperFeature.USE_ANNOTATIONS)) { [EOL]         return super.getAnnotationIntrospector(); [EOL]     } [EOL]     return NopAnnotationIntrospector.instance; [EOL] } <line_num>: 411,421
@Override [EOL] public boolean useRootWrapping() { [EOL]     if (_rootName != null) { [EOL]         return (_rootName.length() > 0); [EOL]     } [EOL]     return isEnabled(DeserializationFeature.UNWRAP_ROOT_VALUE); [EOL] } <line_num>: 423,430
@Override [EOL] public BeanDescription introspectClassAnnotations(JavaType type) { [EOL]     return getClassIntrospector().forClassAnnotations(this, type, this); [EOL] } <line_num>: 436,439
@Override [EOL] public BeanDescription introspectDirectClassAnnotations(JavaType type) { [EOL]     return getClassIntrospector().forDirectClassAnnotations(this, type, this); [EOL] } <line_num>: 446,449
@Override [EOL] public VisibilityChecker<?> getDefaultVisibilityChecker() { [EOL]     VisibilityChecker<?> vchecker = super.getDefaultVisibilityChecker(); [EOL]     if (!isEnabled(MapperFeature.AUTO_DETECT_SETTERS)) { [EOL]         vchecker = vchecker.withSetterVisibility(Visibility.NONE); [EOL]     } [EOL]     if (!isEnabled(MapperFeature.AUTO_DETECT_CREATORS)) { [EOL]         vchecker = vchecker.withCreatorVisibility(Visibility.NONE); [EOL]     } [EOL]     if (!isEnabled(MapperFeature.AUTO_DETECT_FIELDS)) { [EOL]         vchecker = vchecker.withFieldVisibility(Visibility.NONE); [EOL]     } [EOL]     return vchecker; [EOL] } <line_num>: 451,465
public final boolean isEnabled(DeserializationFeature f) { [EOL]     return (_deserFeatures & f.getMask()) != 0; [EOL] } <line_num>: 467,469
public final int getDeserializationFeatures() { [EOL]     return _deserFeatures; [EOL] } <line_num>: 477,479
public LinkedNode<DeserializationProblemHandler> getProblemHandlers() { [EOL]     return _problemHandlers; [EOL] } <line_num>: 485,487
public final JsonNodeFactory getNodeFactory() { [EOL]     return _nodeFactory; [EOL] } <line_num>: 489,491
@SuppressWarnings("unchecked") [EOL] public <T extends BeanDescription> T introspect(JavaType type) { [EOL]     return (T) getClassIntrospector().forDeserialization(this, type, this); [EOL] } <line_num>: 505,508
@SuppressWarnings("unchecked") [EOL] public <T extends BeanDescription> T introspectForCreation(JavaType type) { [EOL]     return (T) getClassIntrospector().forCreation(this, type, this); [EOL] } <line_num>: 514,517
@SuppressWarnings("unchecked") [EOL] public <T extends BeanDescription> T introspectForBuilder(JavaType type) { [EOL]     return (T) getClassIntrospector().forDeserializationWithBuilder(this, type, this); [EOL] } <line_num>: 522,525
