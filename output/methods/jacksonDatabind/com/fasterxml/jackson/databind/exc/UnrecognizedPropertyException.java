public UnrecognizedPropertyException(String msg, JsonLocation loc, Class<?> referringClass, String propName, Collection<Object> propertyIds) { [EOL]     super(msg, loc); [EOL]     _referringClass = referringClass; [EOL]     _unrecognizedPropertyName = propName; [EOL]     _propertyIds = propertyIds; [EOL] } <line_num>: 44,53
public static UnrecognizedPropertyException from(JsonParser jp, Object fromObjectOrClass, String propertyName, Collection<Object> propertyIds) { [EOL]     if (fromObjectOrClass == null) { [EOL]         throw new IllegalArgumentException(); [EOL]     } [EOL]     Class<?> ref; [EOL]     if (fromObjectOrClass instanceof Class<?>) { [EOL]         ref = (Class<?>) fromObjectOrClass; [EOL]     } else { [EOL]         ref = fromObjectOrClass.getClass(); [EOL]     } [EOL]     String msg = "Unrecognized field \"" + propertyName + "\" (class " + ref.getName() + "), not marked as ignorable"; [EOL]     UnrecognizedPropertyException e = new UnrecognizedPropertyException(msg, jp.getCurrentLocation(), ref, propertyName, propertyIds); [EOL]     e.prependPath(fromObjectOrClass, propertyName); [EOL]     return e; [EOL] } <line_num>: 65,84
@Override [EOL] public String getMessageSuffix() { [EOL]     String suffix = _propertiesAsString; [EOL]     if (suffix == null && _propertyIds != null) { [EOL]         StringBuilder sb = new StringBuilder(100); [EOL]         int len = _propertyIds.size(); [EOL]         if (len == 1) { [EOL]             sb.append(" (one known property: \""); [EOL]             sb.append(String.valueOf(_propertyIds.iterator().next())); [EOL]             sb.append('"'); [EOL]         } else { [EOL]             sb.append(" (").append(len).append(" known properties: "); [EOL]             Iterator<Object> it = _propertyIds.iterator(); [EOL]             while (it.hasNext()) { [EOL]                 sb.append(", \""); [EOL]                 sb.append(String.valueOf(it.next())); [EOL]                 sb.append('"'); [EOL]                 if (sb.length() > MAX_DESC_LENGTH) { [EOL]                     sb.append(" [truncated]"); [EOL]                     break; [EOL]                 } [EOL]             } [EOL]         } [EOL]         sb.append("])"); [EOL]         _propertiesAsString = suffix = sb.toString(); [EOL]     } [EOL]     return suffix; [EOL] } <line_num>: 94,123
public Class<?> getReferringClass() { [EOL]     return _referringClass; [EOL] } <line_num>: 135,137
public String getUnrecognizedPropertyName() { [EOL]     return _unrecognizedPropertyName; [EOL] } <line_num>: 144,146
public Collection<Object> getKnownPropertyIds() { [EOL]     if (_propertyIds == null) { [EOL]         return null; [EOL]     } [EOL]     return Collections.unmodifiableCollection(_propertyIds); [EOL] } <line_num>: 148,154
