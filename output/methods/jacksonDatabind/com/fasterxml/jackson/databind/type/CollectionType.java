private CollectionType(Class<?> collT, JavaType elemT, Object valueHandler, Object typeHandler, boolean asStatic) { [EOL]     super(collT, elemT, valueHandler, typeHandler, asStatic); [EOL] } <line_num>: 19,23
@Override [EOL] protected JavaType _narrow(Class<?> subclass) { [EOL]     return new CollectionType(subclass, _elementType, null, null, _asStatic); [EOL] } <line_num>: 25,28
@Override [EOL] public JavaType narrowContentsBy(Class<?> contentClass) { [EOL]     if (contentClass == _elementType.getRawClass()) { [EOL]         return this; [EOL]     } [EOL]     return new CollectionType(_class, _elementType.narrowBy(contentClass), _valueHandler, _typeHandler, _asStatic); [EOL] } <line_num>: 30,39
@Override [EOL] public JavaType widenContentsBy(Class<?> contentClass) { [EOL]     if (contentClass == _elementType.getRawClass()) { [EOL]         return this; [EOL]     } [EOL]     return new CollectionType(_class, _elementType.widenBy(contentClass), _valueHandler, _typeHandler, _asStatic); [EOL] } <line_num>: 41,50
public static CollectionType construct(Class<?> rawType, JavaType elemT) { [EOL]     return new CollectionType(rawType, elemT, null, null, false); [EOL] } <line_num>: 52,56
@Override [EOL] public CollectionType withTypeHandler(Object h) { [EOL]     return new CollectionType(_class, _elementType, _valueHandler, h, _asStatic); [EOL] } <line_num>: 59,62
@Override [EOL] public CollectionType withContentTypeHandler(Object h) { [EOL]     return new CollectionType(_class, _elementType.withTypeHandler(h), _valueHandler, _typeHandler, _asStatic); [EOL] } <line_num>: 65,70
@Override [EOL] public CollectionType withValueHandler(Object h) { [EOL]     return new CollectionType(_class, _elementType, h, _typeHandler, _asStatic); [EOL] } <line_num>: 72,75
@Override [EOL] public CollectionType withContentValueHandler(Object h) { [EOL]     return new CollectionType(_class, _elementType.withValueHandler(h), _valueHandler, _typeHandler, _asStatic); [EOL] } <line_num>: 77,81
@Override [EOL] public CollectionType withStaticTyping() { [EOL]     if (_asStatic) { [EOL]         return this; [EOL]     } [EOL]     return new CollectionType(_class, _elementType.withStaticTyping(), _valueHandler, _typeHandler, true); [EOL] } <line_num>: 83,90
@Override [EOL] public String toString() { [EOL]     return "[collection type; class " + _class.getName() + ", contains " + _elementType + "]"; [EOL] } <line_num>: 98,102
