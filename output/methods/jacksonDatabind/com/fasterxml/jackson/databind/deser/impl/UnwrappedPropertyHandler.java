public UnwrappedPropertyHandler() { [EOL] } <line_num>: 22,22
public void addProperty(SettableBeanProperty property) { [EOL]     _properties.add(property); [EOL] } <line_num>: 24,26
public void renameAll(NameTransformer transformer) { [EOL]     ArrayList<SettableBeanProperty> oldProps = new ArrayList<SettableBeanProperty>(_properties); [EOL]     Iterator<SettableBeanProperty> it = oldProps.iterator(); [EOL]     _properties.clear(); [EOL]     while (it.hasNext()) { [EOL]         SettableBeanProperty prop = it.next(); [EOL]         String newName = transformer.transform(prop.getName()); [EOL]         prop = prop.withName(newName); [EOL]         JsonDeserializer<?> deser = prop.getValueDeserializer(); [EOL]         if (deser != null) { [EOL]             @SuppressWarnings("unchecked") [EOL]             JsonDeserializer<Object> newDeser = (JsonDeserializer<Object>) deser.unwrappingDeserializer(transformer); [EOL]             if (newDeser != deser) { [EOL]                 prop = prop.withValueDeserializer(newDeser); [EOL]             } [EOL]         } [EOL]         _properties.add(prop); [EOL]     } [EOL] } <line_num>: 28,48
public Object processUnwrapped(JsonParser originalParser, DeserializationContext ctxt, Object bean, TokenBuffer buffered) throws IOException, JsonProcessingException { [EOL]     for (int i = 0, len = _properties.size(); i < len; ++i) { [EOL]         SettableBeanProperty prop = _properties.get(i); [EOL]         JsonParser jp = buffered.asParser(); [EOL]         jp.nextToken(); [EOL]         prop.deserializeAndSet(jp, ctxt, bean); [EOL]     } [EOL]     return bean; [EOL] } <line_num>: 50,61
