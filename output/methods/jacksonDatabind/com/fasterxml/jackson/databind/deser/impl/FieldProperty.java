public FieldProperty(BeanPropertyDefinition propDef, JavaType type, TypeDeserializer typeDeser, Annotations contextAnnotations, AnnotatedField field) { [EOL]     super(propDef, type, typeDeser, contextAnnotations); [EOL]     _annotated = field; [EOL]     _field = field.getAnnotated(); [EOL] } <line_num>: 39,45
protected FieldProperty(FieldProperty src, JsonDeserializer<?> deser) { [EOL]     super(src, deser); [EOL]     _annotated = src._annotated; [EOL]     _field = src._field; [EOL] } <line_num>: 47,51
protected FieldProperty(FieldProperty src, String newName) { [EOL]     super(src, newName); [EOL]     _annotated = src._annotated; [EOL]     _field = src._field; [EOL] } <line_num>: 53,57
protected FieldProperty(FieldProperty src, Field f) { [EOL]     super(src); [EOL]     _annotated = src._annotated; [EOL]     if (f == null) { [EOL]         throw new IllegalArgumentException("No Field passed for property '" + src.getName() + "' (class " + src.getDeclaringClass().getName() + ")"); [EOL]     } [EOL]     _field = f; [EOL] } <line_num>: 62,71
@Override [EOL] public FieldProperty withName(String newName) { [EOL]     return new FieldProperty(this, newName); [EOL] } <line_num>: 73,76
@Override [EOL] public FieldProperty withValueDeserializer(JsonDeserializer<?> deser) { [EOL]     return new FieldProperty(this, deser); [EOL] } <line_num>: 78,81
@Override [EOL] public <A extends Annotation> A getAnnotation(Class<A> acls) { [EOL]     return _annotated.getAnnotation(acls); [EOL] } <line_num>: 89,92
@Override [EOL] public AnnotatedMember getMember() { [EOL]     return _annotated; [EOL] } <line_num>: 94,94
@Override [EOL] public void deserializeAndSet(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException, JsonProcessingException { [EOL]     set(instance, deserialize(jp, ctxt)); [EOL] } <line_num>: 102,108
@Override [EOL] public Object deserializeSetAndReturn(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException, JsonProcessingException { [EOL]     return setAndReturn(instance, deserialize(jp, ctxt)); [EOL] } <line_num>: 110,116
@Override [EOL] public final void set(Object instance, Object value) throws IOException { [EOL]     try { [EOL]         _field.set(instance, value); [EOL]     } catch (Exception e) { [EOL]         _throwAsIOE(e, value); [EOL]     } [EOL] } <line_num>: 118,127
@Override [EOL] public Object setAndReturn(Object instance, Object value) throws IOException { [EOL]     try { [EOL]         _field.set(instance, value); [EOL]     } catch (Exception e) { [EOL]         _throwAsIOE(e, value); [EOL]     } [EOL]     return instance; [EOL] } <line_num>: 129,139
Object readResolve() { [EOL]     return new FieldProperty(this, _annotated.getAnnotated()); [EOL] } <line_num>: 147,149
