public InnerClassProperty(SettableBeanProperty delegate, Constructor<?> ctor) { [EOL]     super(delegate); [EOL]     _delegate = delegate; [EOL]     _creator = ctor; [EOL] } <line_num>: 37,43
protected InnerClassProperty(InnerClassProperty src, JsonDeserializer<?> deser) { [EOL]     super(src, deser); [EOL]     _delegate = src._delegate.withValueDeserializer(deser); [EOL]     _creator = src._creator; [EOL] } <line_num>: 45,50
protected InnerClassProperty(InnerClassProperty src, String newName) { [EOL]     super(src, newName); [EOL]     _delegate = src._delegate.withName(newName); [EOL]     _creator = src._creator; [EOL] } <line_num>: 52,56
@Override [EOL] public InnerClassProperty withName(String newName) { [EOL]     return new InnerClassProperty(this, newName); [EOL] } <line_num>: 58,61
@Override [EOL] public InnerClassProperty withValueDeserializer(JsonDeserializer<?> deser) { [EOL]     return new InnerClassProperty(this, deser); [EOL] } <line_num>: 63,66
@Override [EOL] public <A extends Annotation> A getAnnotation(Class<A> acls) { [EOL]     return _delegate.getAnnotation(acls); [EOL] } <line_num>: 70,73
@Override [EOL] public AnnotatedMember getMember() { [EOL]     return _delegate.getMember(); [EOL] } <line_num>: 75,75
@Override [EOL] public void deserializeAndSet(JsonParser jp, DeserializationContext ctxt, Object bean) throws IOException, JsonProcessingException { [EOL]     JsonToken t = jp.getCurrentToken(); [EOL]     Object value; [EOL]     if (t == JsonToken.VALUE_NULL) { [EOL]         value = (_nullProvider == null) ? null : _nullProvider.nullValue(ctxt); [EOL]     } else if (_valueTypeDeserializer != null) { [EOL]         value = _valueDeserializer.deserializeWithType(jp, ctxt, _valueTypeDeserializer); [EOL]     } else { [EOL]         try { [EOL]             value = _creator.newInstance(bean); [EOL]         } catch (Exception e) { [EOL]             ClassUtil.unwrapAndThrowAsIAE(e, "Failed to instantiate class " + _creator.getDeclaringClass().getName() + ", problem: " + e.getMessage()); [EOL]             value = null; [EOL]         } [EOL]         _valueDeserializer.deserialize(jp, ctxt, value); [EOL]     } [EOL]     set(bean, value); [EOL] } <line_num>: 83,104
@Override [EOL] public Object deserializeSetAndReturn(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException, JsonProcessingException { [EOL]     return setAndReturn(instance, deserialize(jp, ctxt)); [EOL] } <line_num>: 106,112
@Override [EOL] public final void set(Object instance, Object value) throws IOException { [EOL]     _delegate.set(instance, value); [EOL] } <line_num>: 114,118
@Override [EOL] public Object setAndReturn(Object instance, Object value) throws IOException { [EOL]     return _delegate.setAndReturn(instance, value); [EOL] } <line_num>: 120,125
