@SuppressWarnings("unchecked") [EOL] public EnumSetDeserializer(JavaType enumType, JsonDeserializer<?> deser) { [EOL]     super(EnumSet.class); [EOL]     _enumType = enumType; [EOL]     _enumClass = (Class<Enum>) enumType.getRawClass(); [EOL]     _enumDeserializer = (JsonDeserializer<Enum<?>>) deser; [EOL] } <line_num>: 37,44
public EnumSetDeserializer withDeserializer(JsonDeserializer<?> deser) { [EOL]     if (_enumDeserializer == deser) { [EOL]         return this; [EOL]     } [EOL]     return new EnumSetDeserializer(_enumType, deser); [EOL] } <line_num>: 46,51
@Override [EOL] public boolean isCachable() { [EOL]     return true; [EOL] } <line_num>: 57,58
@Override [EOL] public JsonDeserializer<?> createContextual(DeserializationContext ctxt, BeanProperty property) throws JsonMappingException { [EOL]     JsonDeserializer<?> deser = _enumDeserializer; [EOL]     if (deser == null) { [EOL]         deser = ctxt.findContextualValueDeserializer(_enumType, property); [EOL]     } else { [EOL]         if (deser instanceof ContextualDeserializer) { [EOL]             deser = ((ContextualDeserializer) deser).createContextual(ctxt, property); [EOL]         } [EOL]     } [EOL]     return withDeserializer(deser); [EOL] } <line_num>: 60,73
@SuppressWarnings("unchecked") [EOL] @Override [EOL] public EnumSet<?> deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException, JsonProcessingException { [EOL]     if (!jp.isExpectedStartArrayToken()) { [EOL]         throw ctxt.mappingException(EnumSet.class); [EOL]     } [EOL]     EnumSet result = constructSet(); [EOL]     JsonToken t; [EOL]     while ((t = jp.nextToken()) != JsonToken.END_ARRAY) { [EOL]         if (t == JsonToken.VALUE_NULL) { [EOL]             throw ctxt.mappingException(_enumClass); [EOL]         } [EOL]         Enum<?> value = _enumDeserializer.deserialize(jp, ctxt); [EOL]         if (value != null) { [EOL]             result.add(value); [EOL]         } [EOL]     } [EOL]     return result; [EOL] } <line_num>: 81,111
@Override [EOL] public Object deserializeWithType(JsonParser jp, DeserializationContext ctxt, TypeDeserializer typeDeserializer) throws IOException, JsonProcessingException { [EOL]     return typeDeserializer.deserializeTypedFromArray(jp, ctxt); [EOL] } <line_num>: 113,119
@SuppressWarnings("unchecked") [EOL] private EnumSet constructSet() { [EOL]     return EnumSet.noneOf(_enumClass); [EOL] } <line_num>: 121,126
