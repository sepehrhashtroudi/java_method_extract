@Deprecated [EOL] public CreatorProperty(String name, JavaType type, TypeDeserializer typeDeser, Annotations contextAnnotations, AnnotatedParameter param, int index, Object injectableValueId) { [EOL]     this(name, type, null, typeDeser, contextAnnotations, param, index, injectableValueId, true); [EOL] } <line_num>: 55,62
public CreatorProperty(String name, JavaType type, PropertyName wrapperName, TypeDeserializer typeDeser, Annotations contextAnnotations, AnnotatedParameter param, int index, Object injectableValueId, boolean isRequired) { [EOL]     super(name, type, wrapperName, typeDeser, contextAnnotations, isRequired); [EOL]     _annotated = param; [EOL]     _creatorIndex = index; [EOL]     _injectableValueId = injectableValueId; [EOL] } <line_num>: 76,86
protected CreatorProperty(CreatorProperty src, String newName) { [EOL]     super(src, newName); [EOL]     _annotated = src._annotated; [EOL]     _creatorIndex = src._creatorIndex; [EOL]     _injectableValueId = src._injectableValueId; [EOL] } <line_num>: 88,93
protected CreatorProperty(CreatorProperty src, JsonDeserializer<?> deser) { [EOL]     super(src, deser); [EOL]     _annotated = src._annotated; [EOL]     _creatorIndex = src._creatorIndex; [EOL]     _injectableValueId = src._injectableValueId; [EOL] } <line_num>: 95,100
@Override [EOL] public CreatorProperty withName(String newName) { [EOL]     return new CreatorProperty(this, newName); [EOL] } <line_num>: 102,105
@Override [EOL] public CreatorProperty withValueDeserializer(JsonDeserializer<?> deser) { [EOL]     return new CreatorProperty(this, deser); [EOL] } <line_num>: 107,110
public Object findInjectableValue(DeserializationContext context, Object beanInstance) { [EOL]     if (_injectableValueId == null) { [EOL]         throw new IllegalStateException("Property '" + getName() + "' (type " + getClass().getName() + ") has no injectable value id configured"); [EOL]     } [EOL]     return context.findInjectableValue(_injectableValueId, this, beanInstance); [EOL] } <line_num>: 116,123
public void inject(DeserializationContext context, Object beanInstance) throws IOException { [EOL]     set(beanInstance, findInjectableValue(context, beanInstance)); [EOL] } <line_num>: 128,132
@Override [EOL] public <A extends Annotation> A getAnnotation(Class<A> acls) { [EOL]     if (_annotated == null) { [EOL]         return null; [EOL]     } [EOL]     return _annotated.getAnnotation(acls); [EOL] } <line_num>: 140,146
@Override [EOL] public AnnotatedMember getMember() { [EOL]     return _annotated; [EOL] } <line_num>: 148,148
@Override [EOL] public int getCreatorIndex() { [EOL]     return _creatorIndex; [EOL] } <line_num>: 150,152
@Override [EOL] public void deserializeAndSet(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException, JsonProcessingException { [EOL]     set(instance, deserialize(jp, ctxt)); [EOL] } <line_num>: 160,166
@Override [EOL] public Object deserializeSetAndReturn(JsonParser jp, DeserializationContext ctxt, Object instance) throws IOException, JsonProcessingException { [EOL]     return setAndReturn(instance, deserialize(jp, ctxt)); [EOL] } <line_num>: 168,174
@Override [EOL] public void set(Object instance, Object value) throws IOException { [EOL]     throw new IllegalStateException("Method should never be called on a " + getClass().getName()); [EOL] } <line_num>: 176,183
@Override [EOL] public Object setAndReturn(Object instance, Object value) throws IOException { [EOL]     return instance; [EOL] } <line_num>: 185,189
@Override [EOL] public Object getInjectableValueId() { [EOL]     return _injectableValueId; [EOL] } <line_num>: 191,194
@Override [EOL] public String toString() { [EOL]     return "[creator property, name '" + getName() + "'; inject id '" + _injectableValueId + "']"; [EOL] } <line_num>: 196,197
