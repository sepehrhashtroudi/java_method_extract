public VariableTest(String name) { [EOL]     super(name); [EOL] } <line_num>: 39,41
public void setUp() { [EOL]     if (context == null) { [EOL]         context = JXPathContext.newContext(null); [EOL]         context.setFactory(new VariableFactory()); [EOL]         Variables vars = context.getVariables(); [EOL]         vars.declareVariable("a", new Double(1)); [EOL]         vars.declareVariable("b", new Double(1)); [EOL]         vars.declareVariable("c", null); [EOL]         vars.declareVariable("d", new String[] { "a", "b" }); [EOL]         vars.declareVariable("integer", new Integer(1)); [EOL]         vars.declareVariable("nan", new Double(Double.NaN)); [EOL]         vars.declareVariable("x", null); [EOL]     } [EOL] } <line_num>: 43,57
public void testVariables() { [EOL]     assertXPathValueAndPointer(context, "$a", new Double(1), "$a"); [EOL] } <line_num>: 59,62
public void testVariablesInExpressions() { [EOL]     assertXPathValue(context, "$a = $b", Boolean.TRUE); [EOL]     assertXPathValue(context, "$a = $nan", Boolean.FALSE); [EOL]     assertXPathValue(context, "$a + 1", new Double(2)); [EOL]     assertXPathValue(context, "$c", null); [EOL]     assertXPathValue(context, "$d[2]", "b"); [EOL] } <line_num>: 64,74
public void testInvalidVariableName() { [EOL]     boolean exception = false; [EOL]     try { [EOL]         context.getValue("$none"); [EOL]     } catch (Exception ex) { [EOL]         exception = true; [EOL]     } [EOL]     assertTrue("Evaluating '$none', expected exception - did not get it", exception); [EOL]     exception = false; [EOL]     try { [EOL]         context.setValue("$none", new Integer(1)); [EOL]     } catch (Exception ex) { [EOL]         exception = true; [EOL]     } [EOL]     assertTrue("Setting '$none = 1', expected exception - did not get it", exception); [EOL] } <line_num>: 76,98
public void testNestedContext() { [EOL]     JXPathContext nestedContext = JXPathContext.newContext(context, null); [EOL]     assertXPathValue(nestedContext, "$a", new Double(1)); [EOL] } <line_num>: 100,104
public void testSetValue() { [EOL]     assertXPathSetValue(context, "$x", new Integer(1)); [EOL] } <line_num>: 106,108
public void testCreatePathDeclareVariable() { [EOL]     assertXPathCreatePath(context, "$string", null, "$string"); [EOL] } <line_num>: 110,113
public void testCreatePathAndSetValueDeclareVariable() { [EOL]     assertXPathCreatePathAndSetValue(context, "$string", "Value", "$string"); [EOL] } <line_num>: 115,122
public void testCreatePathDeclareVariableSetCollectionElement() { [EOL]     assertXPathCreatePath(context, "$stringArray[2]", "", "$stringArray[2]"); [EOL]     assertEquals("Created <" + "$stringArray[1]" + ">", "Value1", context.getValue("$stringArray[1]")); [EOL] } <line_num>: 124,138
public void testCreateAndSetValuePathDeclareVariableSetCollectionElement() { [EOL]     assertXPathCreatePathAndSetValue(context, "$stringArray[2]", "Value2", "$stringArray[2]"); [EOL]     assertEquals("Created <" + "$stringArray[1]" + ">", "Value1", context.getValue("$stringArray[1]")); [EOL] } <line_num>: 140,154
public void testCreatePathExpandCollection() { [EOL]     context.getVariables().declareVariable("array", new String[] { "Value1" }); [EOL]     assertXPathCreatePath(context, "$array[2]", "", "$array[2]"); [EOL]     assertEquals("Created <" + "$array[1]" + ">", "Value1", context.getValue("$array[1]")); [EOL] } <line_num>: 156,169
public void testCreatePathAndSetValueExpandCollection() { [EOL]     context.getVariables().declareVariable("array", new String[] { "Value1" }); [EOL]     assertXPathCreatePathAndSetValue(context, "$array[2]", "Value2", "$array[2]"); [EOL]     assertEquals("Created <" + "$array[1]" + ">", "Value1", context.getValue("$array[1]")); [EOL] } <line_num>: 171,188
public void testCreatePathDeclareVariableSetProperty() { [EOL]     assertXPathCreatePath(context, "$test/boolean", Boolean.FALSE, "$test/boolean"); [EOL] } <line_num>: 190,199
public void testCreatePathAndSetValueDeclareVariableSetProperty() { [EOL]     assertXPathCreatePathAndSetValue(context, "$test/boolean", Boolean.TRUE, "$test/boolean"); [EOL] } <line_num>: 201,210
public void testCreatePathDeclareVariableSetCollectionElementProperty() { [EOL]     assertXPathCreatePath(context, "$testArray[2]/boolean", Boolean.FALSE, "$testArray[2]/boolean"); [EOL] } <line_num>: 212,223
public void testCreatePathAndSetValueDeclVarSetCollectionElementProperty() { [EOL]     assertXPathCreatePathAndSetValue(context, "$testArray[2]/boolean", Boolean.TRUE, "$testArray[2]/boolean"); [EOL] } <line_num>: 225,236
public void testRemovePathUndeclareVariable() { [EOL]     context.getVariables().declareVariable("temp", "temp"); [EOL]     context.removePath("$temp"); [EOL]     assertTrue("Undeclare variable", !context.getVariables().isDeclaredVariable("temp")); [EOL] } <line_num>: 238,246
public void testRemovePathArrayElement() { [EOL]     context.getVariables().declareVariable("temp", new String[] { "temp1", "temp2" }); [EOL]     context.removePath("$temp[1]"); [EOL]     assertEquals("Remove array element", "temp2", context.getValue("$temp[1]")); [EOL] } <line_num>: 248,258
public void testRemovePathCollectionElement() { [EOL]     context.getVariables().declareVariable("temp", list("temp1", "temp2")); [EOL]     context.removePath("$temp[1]"); [EOL]     assertEquals("Remove collection element", "temp2", context.getValue("$temp[1]")); [EOL] } <line_num>: 260,268
