public TestDateTimeConstants(String name) { [EOL]     super(name); [EOL] } <line_num>: 47,49
public static void main(String[] args) { [EOL]     junit.textui.TestRunner.run(suite()); [EOL] } <line_num>: 32,34
public static TestSuite suite() { [EOL]     return new TestSuite(TestDateTimeConstants.class); [EOL] } <line_num>: 39,41
public void testConstructor() { [EOL]     DateTimeConstants c = new DateTimeConstants() { [EOL]     }; [EOL]     c.toString(); [EOL] } <line_num>: 52,56
public void testHalfdaysOfDay() { [EOL]     assertEquals(0, DateTimeConstants.AM); [EOL]     assertEquals(1, DateTimeConstants.PM); [EOL] } <line_num>: 58,61
public void testDaysOfWeek() { [EOL]     assertEquals(1, DateTimeConstants.MONDAY); [EOL]     assertEquals(2, DateTimeConstants.TUESDAY); [EOL]     assertEquals(3, DateTimeConstants.WEDNESDAY); [EOL]     assertEquals(4, DateTimeConstants.THURSDAY); [EOL]     assertEquals(5, DateTimeConstants.FRIDAY); [EOL]     assertEquals(6, DateTimeConstants.SATURDAY); [EOL]     assertEquals(7, DateTimeConstants.SUNDAY); [EOL] } <line_num>: 63,71
public void testMonthsOfYear() { [EOL]     assertEquals(1, DateTimeConstants.JANUARY); [EOL]     assertEquals(2, DateTimeConstants.FEBRUARY); [EOL]     assertEquals(3, DateTimeConstants.MARCH); [EOL]     assertEquals(4, DateTimeConstants.APRIL); [EOL]     assertEquals(5, DateTimeConstants.MAY); [EOL]     assertEquals(6, DateTimeConstants.JUNE); [EOL]     assertEquals(7, DateTimeConstants.JULY); [EOL]     assertEquals(8, DateTimeConstants.AUGUST); [EOL]     assertEquals(9, DateTimeConstants.SEPTEMBER); [EOL]     assertEquals(10, DateTimeConstants.OCTOBER); [EOL]     assertEquals(11, DateTimeConstants.NOVEMBER); [EOL]     assertEquals(12, DateTimeConstants.DECEMBER); [EOL] } <line_num>: 73,86
public void testEras() { [EOL]     assertEquals(0, DateTimeConstants.BC); [EOL]     assertEquals(0, DateTimeConstants.BCE); [EOL]     assertEquals(1, DateTimeConstants.AD); [EOL]     assertEquals(1, DateTimeConstants.CE); [EOL] } <line_num>: 88,93
public void testMaths() { [EOL]     assertEquals(1000, DateTimeConstants.MILLIS_PER_SECOND); [EOL]     assertEquals(60 * 1000, DateTimeConstants.MILLIS_PER_MINUTE); [EOL]     assertEquals(60 * 60 * 1000, DateTimeConstants.MILLIS_PER_HOUR); [EOL]     assertEquals(24 * 60 * 60 * 1000, DateTimeConstants.MILLIS_PER_DAY); [EOL]     assertEquals(7 * 24 * 60 * 60 * 1000, DateTimeConstants.MILLIS_PER_WEEK); [EOL]     assertEquals(60, DateTimeConstants.SECONDS_PER_MINUTE); [EOL]     assertEquals(60 * 60, DateTimeConstants.SECONDS_PER_HOUR); [EOL]     assertEquals(24 * 60 * 60, DateTimeConstants.SECONDS_PER_DAY); [EOL]     assertEquals(7 * 24 * 60 * 60, DateTimeConstants.SECONDS_PER_WEEK); [EOL]     assertEquals(60, DateTimeConstants.MINUTES_PER_HOUR); [EOL]     assertEquals(24 * 60, DateTimeConstants.MINUTES_PER_DAY); [EOL]     assertEquals(7 * 24 * 60, DateTimeConstants.MINUTES_PER_WEEK); [EOL]     assertEquals(24, DateTimeConstants.HOURS_PER_DAY); [EOL]     assertEquals(7 * 24, DateTimeConstants.HOURS_PER_WEEK); [EOL]     assertEquals(7, DateTimeConstants.DAYS_PER_WEEK); [EOL] } <line_num>: 95,115
