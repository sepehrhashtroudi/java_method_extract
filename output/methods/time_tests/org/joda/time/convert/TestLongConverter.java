public TestLongConverter(String name) { [EOL]     super(name); [EOL] } <line_num>: 55,57
public static void main(String[] args) { [EOL]     junit.textui.TestRunner.run(suite()); [EOL] } <line_num>: 47,49
public static TestSuite suite() { [EOL]     return new TestSuite(TestLongConverter.class); [EOL] } <line_num>: 51,53
protected void setUp() throws Exception { [EOL]     JULIAN = JulianChronology.getInstance(); [EOL]     ISO = ISOChronology.getInstance(); [EOL] } <line_num>: 59,62
public void testSingleton() throws Exception { [EOL]     Class cls = LongConverter.class; [EOL]     assertEquals(false, Modifier.isPublic(cls.getModifiers())); [EOL]     assertEquals(false, Modifier.isProtected(cls.getModifiers())); [EOL]     assertEquals(false, Modifier.isPrivate(cls.getModifiers())); [EOL]     Constructor con = cls.getDeclaredConstructor((Class[]) null); [EOL]     assertEquals(1, cls.getDeclaredConstructors().length); [EOL]     assertEquals(true, Modifier.isProtected(con.getModifiers())); [EOL]     Field fld = cls.getDeclaredField("INSTANCE"); [EOL]     assertEquals(false, Modifier.isPublic(fld.getModifiers())); [EOL]     assertEquals(false, Modifier.isProtected(fld.getModifiers())); [EOL]     assertEquals(false, Modifier.isPrivate(fld.getModifiers())); [EOL] } <line_num>: 65,79
public void testSupportedType() throws Exception { [EOL]     assertEquals(Long.class, LongConverter.INSTANCE.getSupportedType()); [EOL] } <line_num>: 82,84
public void testGetInstantMillis_Object_Chronology() throws Exception { [EOL]     assertEquals(123L, LongConverter.INSTANCE.getInstantMillis(new Long(123L), JULIAN)); [EOL]     assertEquals(123L, LongConverter.INSTANCE.getInstantMillis(new Long(123L), (Chronology) null)); [EOL] } <line_num>: 87,90
public void testGetChronology_Object_Zone() throws Exception { [EOL]     assertEquals(ISO_PARIS, LongConverter.INSTANCE.getChronology(new Long(123L), PARIS)); [EOL]     assertEquals(ISO, LongConverter.INSTANCE.getChronology(new Long(123L), (DateTimeZone) null)); [EOL] } <line_num>: 93,96
public void testGetChronology_Object_Chronology() throws Exception { [EOL]     assertEquals(JULIAN, LongConverter.INSTANCE.getChronology(new Long(123L), JULIAN)); [EOL]     assertEquals(ISO, LongConverter.INSTANCE.getChronology(new Long(123L), (Chronology) null)); [EOL] } <line_num>: 98,101
public void testGetPartialValues() throws Exception { [EOL]     TimeOfDay tod = new TimeOfDay(); [EOL]     int[] expected = ISOChronology.getInstance().get(tod, 12345678L); [EOL]     int[] actual = LongConverter.INSTANCE.getPartialValues(tod, new Long(12345678L), ISOChronology.getInstance()); [EOL]     assertEquals(true, Arrays.equals(expected, actual)); [EOL] } <line_num>: 104,109
public void testGetDurationMillis_Object() throws Exception { [EOL]     assertEquals(123L, LongConverter.INSTANCE.getDurationMillis(new Long(123L))); [EOL] } <line_num>: 112,114
public void testToString() { [EOL]     assertEquals("Converter[java.lang.Long]", LongConverter.INSTANCE.toString()); [EOL] } <line_num>: 117,119
