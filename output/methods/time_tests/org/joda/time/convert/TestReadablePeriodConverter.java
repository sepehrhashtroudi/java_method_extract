public TestReadablePeriodConverter(String name) { [EOL]     super(name); [EOL] } <line_num>: 57,59
public static void main(String[] args) { [EOL]     junit.textui.TestRunner.run(suite()); [EOL] } <line_num>: 49,51
public static TestSuite suite() { [EOL]     return new TestSuite(TestReadablePeriodConverter.class); [EOL] } <line_num>: 53,55
protected void setUp() throws Exception { [EOL]     JULIAN = JulianChronology.getInstance(); [EOL]     ISO = ISOChronology.getInstance(); [EOL] } <line_num>: 61,64
public void testSingleton() throws Exception { [EOL]     Class cls = ReadablePeriodConverter.class; [EOL]     assertEquals(false, Modifier.isPublic(cls.getModifiers())); [EOL]     assertEquals(false, Modifier.isProtected(cls.getModifiers())); [EOL]     assertEquals(false, Modifier.isPrivate(cls.getModifiers())); [EOL]     Constructor con = cls.getDeclaredConstructor((Class[]) null); [EOL]     assertEquals(1, cls.getDeclaredConstructors().length); [EOL]     assertEquals(true, Modifier.isProtected(con.getModifiers())); [EOL]     Field fld = cls.getDeclaredField("INSTANCE"); [EOL]     assertEquals(false, Modifier.isPublic(fld.getModifiers())); [EOL]     assertEquals(false, Modifier.isProtected(fld.getModifiers())); [EOL]     assertEquals(false, Modifier.isPrivate(fld.getModifiers())); [EOL] } <line_num>: 67,81
public void testSupportedType() throws Exception { [EOL]     assertEquals(ReadablePeriod.class, ReadablePeriodConverter.INSTANCE.getSupportedType()); [EOL] } <line_num>: 84,86
public void testGetPeriodType_Object() throws Exception { [EOL]     assertEquals(PeriodType.standard(), ReadablePeriodConverter.INSTANCE.getPeriodType(new Period(123L, PeriodType.standard()))); [EOL]     assertEquals(PeriodType.yearMonthDayTime(), ReadablePeriodConverter.INSTANCE.getPeriodType(new Period(123L, PeriodType.yearMonthDayTime()))); [EOL] } <line_num>: 89,94
public void testSetInto_Object() throws Exception { [EOL]     MutablePeriod m = new MutablePeriod(PeriodType.yearMonthDayTime()); [EOL]     ReadablePeriodConverter.INSTANCE.setInto(m, new Period(0, 0, 0, 3, 0, 4, 0, 5), null); [EOL]     assertEquals(0, m.getYears()); [EOL]     assertEquals(0, m.getMonths()); [EOL]     assertEquals(0, m.getWeeks()); [EOL]     assertEquals(3, m.getDays()); [EOL]     assertEquals(0, m.getHours()); [EOL]     assertEquals(4, m.getMinutes()); [EOL]     assertEquals(0, m.getSeconds()); [EOL]     assertEquals(5, m.getMillis()); [EOL] } <line_num>: 96,107
public void testToString() { [EOL]     assertEquals("Converter[org.joda.time.ReadablePeriod]", ReadablePeriodConverter.INSTANCE.toString()); [EOL] } <line_num>: 110,112
