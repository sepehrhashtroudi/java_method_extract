public TestISOPeriodFormatParsing(String name) { [EOL]     super(name); [EOL] } <line_num>: 67,69
public static void main(String[] args) { [EOL]     junit.textui.TestRunner.run(suite()); [EOL] } <line_num>: 59,61
public static TestSuite suite() { [EOL]     return new TestSuite(TestISOPeriodFormatParsing.class); [EOL] } <line_num>: 63,65
protected void setUp() throws Exception { [EOL]     DateTimeUtils.setCurrentMillisFixed(TEST_TIME_NOW); [EOL]     originalDateTimeZone = DateTimeZone.getDefault(); [EOL]     originalTimeZone = TimeZone.getDefault(); [EOL]     originalLocale = Locale.getDefault(); [EOL]     DateTimeZone.setDefault(LONDON); [EOL]     TimeZone.setDefault(TimeZone.getTimeZone("Europe/London")); [EOL]     Locale.setDefault(Locale.UK); [EOL] } <line_num>: 71,79
protected void tearDown() throws Exception { [EOL]     DateTimeUtils.setCurrentMillisSystem(); [EOL]     DateTimeZone.setDefault(originalDateTimeZone); [EOL]     TimeZone.setDefault(originalTimeZone); [EOL]     Locale.setDefault(originalLocale); [EOL]     originalDateTimeZone = null; [EOL]     originalTimeZone = null; [EOL]     originalLocale = null; [EOL] } <line_num>: 81,89
public void testParseStandard1() { [EOL]     PeriodFormatter parser = ISOPeriodFormat.standard(); [EOL]     Period p = parser.parsePeriod("P1Y2M3W4DT5H6M7.008S"); [EOL]     assertEquals(new Period(1, 2, 3, 4, 5, 6, 7, 8), p); [EOL] } <line_num>: 92,96
public void testParseStandard2() { [EOL]     PeriodFormatter parser = ISOPeriodFormat.standard(); [EOL]     Period p = parser.parsePeriod("P0Y0M0W0DT5H6M7.008S"); [EOL]     assertEquals(new Period(0, 0, 0, 0, 5, 6, 7, 8), p); [EOL] } <line_num>: 99,103
public void testParseStandard3() { [EOL]     PeriodFormatter parser = ISOPeriodFormat.standard(); [EOL]     Period p = parser.parsePeriod("P0DT5H6M7.008S"); [EOL]     assertEquals(new Period(0, 0, 0, 0, 5, 6, 7, 8), p); [EOL] } <line_num>: 106,110
public void testParseStandard4() { [EOL]     PeriodFormatter parser = ISOPeriodFormat.standard(); [EOL]     Period p = parser.parsePeriod("P2Y3DT5H6M7.008S"); [EOL]     assertEquals(new Period(2, 0, 0, 3, 5, 6, 7, 8), p); [EOL] } <line_num>: 113,117
public void testParseStandard5() { [EOL]     PeriodFormatter parser = ISOPeriodFormat.standard(); [EOL]     Period p = parser.parsePeriod("P2YT5H6M7.008S"); [EOL]     assertEquals(new Period(2, 0, 0, 0, 5, 6, 7, 8), p); [EOL] } <line_num>: 120,124
public void testParseStandard6() { [EOL]     PeriodFormatter parser = ISOPeriodFormat.standard(); [EOL]     Period p = parser.parsePeriod("PT5H6M7.008S"); [EOL]     assertEquals(new Period(0, 0, 0, 0, 5, 6, 7, 8), p); [EOL] } <line_num>: 127,131
public void testParseStandard7() { [EOL]     PeriodFormatter parser = ISOPeriodFormat.standard(); [EOL]     Period p = parser.parsePeriod("P1Y2M3W4D"); [EOL]     assertEquals(new Period(1, 2, 3, 4, 0, 0, 0, 0), p); [EOL] } <line_num>: 134,138
public void testParseStandard8() { [EOL]     PeriodFormatter parser = ISOPeriodFormat.standard(); [EOL]     Period p = parser.parsePeriod("PT5H6M7S"); [EOL]     assertEquals(new Period(0, 0, 0, 0, 5, 6, 7, 0), p); [EOL] } <line_num>: 141,145
public void testParseStandard9() { [EOL]     PeriodFormatter parser = ISOPeriodFormat.standard(); [EOL]     Period p = parser.parsePeriod("PT0S"); [EOL]     assertEquals(new Period(0, 0, 0, 0, 0, 0, 0, 0), p); [EOL] } <line_num>: 148,152
public void testParseStandard10() { [EOL]     PeriodFormatter parser = ISOPeriodFormat.standard(); [EOL]     Period p = parser.parsePeriod("P0D"); [EOL]     assertEquals(new Period(0, 0, 0, 0, 0, 0, 0, 0), p); [EOL] } <line_num>: 155,159
public void testParseStandard11() { [EOL]     PeriodFormatter parser = ISOPeriodFormat.standard(); [EOL]     Period p = parser.parsePeriod("P0Y"); [EOL]     assertEquals(new Period(0, 0, 0, 0, 0, 0, 0, 0), p); [EOL] } <line_num>: 162,166
public void testParseStandardFail1() { [EOL]     PeriodFormatter parser = ISOPeriodFormat.standard(); [EOL]     try { [EOL]         parser.parsePeriod("P1Y2S"); [EOL]         fail(); [EOL]     } catch (IllegalArgumentException ex) { [EOL]     } [EOL] } <line_num>: 169,175
public void testParseStandardFail2() { [EOL]     PeriodFormatter parser = ISOPeriodFormat.standard(); [EOL]     try { [EOL]         parser.parsePeriod("PS"); [EOL]         fail(); [EOL]     } catch (IllegalArgumentException ex) { [EOL]     } [EOL] } <line_num>: 178,184
public void testParseStandardFail3() { [EOL]     PeriodFormatter parser = ISOPeriodFormat.standard(); [EOL]     try { [EOL]         parser.parsePeriod("PTS"); [EOL]         fail(); [EOL]     } catch (IllegalArgumentException ex) { [EOL]     } [EOL] } <line_num>: 187,193
public void testParseStandardFail4() { [EOL]     PeriodFormatter parser = ISOPeriodFormat.standard(); [EOL]     try { [EOL]         parser.parsePeriod("PXS"); [EOL]         fail(); [EOL]     } catch (IllegalArgumentException ex) { [EOL]     } [EOL] } <line_num>: 196,202
