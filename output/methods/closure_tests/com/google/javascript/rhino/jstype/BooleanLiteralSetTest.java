public void testIntersection() { [EOL]     assertEquals(EMPTY, EMPTY.intersection(EMPTY)); [EOL]     assertEquals(EMPTY, EMPTY.intersection(TRUE)); [EOL]     assertEquals(EMPTY, EMPTY.intersection(FALSE)); [EOL]     assertEquals(EMPTY, EMPTY.intersection(BOTH)); [EOL]     assertEquals(EMPTY, TRUE.intersection(EMPTY)); [EOL]     assertEquals(TRUE, TRUE.intersection(TRUE)); [EOL]     assertEquals(EMPTY, TRUE.intersection(FALSE)); [EOL]     assertEquals(TRUE, TRUE.intersection(BOTH)); [EOL]     assertEquals(EMPTY, FALSE.intersection(EMPTY)); [EOL]     assertEquals(EMPTY, FALSE.intersection(TRUE)); [EOL]     assertEquals(FALSE, FALSE.intersection(FALSE)); [EOL]     assertEquals(FALSE, FALSE.intersection(BOTH)); [EOL]     assertEquals(EMPTY, BOTH.intersection(EMPTY)); [EOL]     assertEquals(TRUE, BOTH.intersection(TRUE)); [EOL]     assertEquals(FALSE, BOTH.intersection(FALSE)); [EOL]     assertEquals(BOTH, BOTH.intersection(BOTH)); [EOL] } <line_num>: 54,71
public void testUnion() { [EOL]     assertEquals(EMPTY, EMPTY.union(EMPTY)); [EOL]     assertEquals(TRUE, EMPTY.union(TRUE)); [EOL]     assertEquals(FALSE, EMPTY.union(FALSE)); [EOL]     assertEquals(BOTH, EMPTY.union(BOTH)); [EOL]     assertEquals(TRUE, TRUE.union(EMPTY)); [EOL]     assertEquals(TRUE, TRUE.union(TRUE)); [EOL]     assertEquals(BOTH, TRUE.union(FALSE)); [EOL]     assertEquals(BOTH, TRUE.union(BOTH)); [EOL]     assertEquals(FALSE, FALSE.union(EMPTY)); [EOL]     assertEquals(BOTH, FALSE.union(TRUE)); [EOL]     assertEquals(FALSE, FALSE.union(FALSE)); [EOL]     assertEquals(BOTH, FALSE.union(BOTH)); [EOL]     assertEquals(BOTH, BOTH.union(EMPTY)); [EOL]     assertEquals(BOTH, BOTH.union(TRUE)); [EOL]     assertEquals(BOTH, BOTH.union(FALSE)); [EOL]     assertEquals(BOTH, BOTH.union(BOTH)); [EOL] } <line_num>: 73,90
public void testGet() { [EOL]     assertEquals(TRUE, BooleanLiteralSet.get(true)); [EOL]     assertEquals(FALSE, BooleanLiteralSet.get(false)); [EOL] } <line_num>: 92,95
public void testContains() { [EOL]     assertFalse(EMPTY.contains(true)); [EOL]     assertFalse(EMPTY.contains(false)); [EOL]     assertTrue(TRUE.contains(true)); [EOL]     assertFalse(TRUE.contains(false)); [EOL]     assertFalse(FALSE.contains(true)); [EOL]     assertTrue(FALSE.contains(false)); [EOL]     assertTrue(BOTH.contains(true)); [EOL]     assertTrue(BOTH.contains(false)); [EOL] } <line_num>: 97,106
