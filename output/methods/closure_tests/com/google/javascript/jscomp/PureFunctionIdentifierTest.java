public PureFunctionIdentifierTest() { [EOL]     super(kExterns); [EOL]     enableTypeCheck(CheckLevel.ERROR); [EOL] } <line_num>: 168,171
NoSideEffectCallEnumerator(Compiler compiler) { [EOL]     this.compiler = compiler; [EOL] } <line_num>: 1219,1221
@Override [EOL] protected int getNumRepetitions() { [EOL]     return 1; [EOL] } <line_num>: 173,177
@Override [EOL] protected void tearDown() throws Exception { [EOL]     super.tearDown(); [EOL]     noSideEffectCalls.clear(); [EOL]     localResultCalls.clear(); [EOL]     boolean regExpHaveSideEffects = true; [EOL] } <line_num>: 179,185
public void testIssue303() throws Exception { [EOL]     checkMarkedCalls("/** @constructor */ function F() {" + "  var self = this;" + "  window.setTimeout(function() {" + "    window.location = self.location;" + "  }, 0);" + "}" + "F.prototype.setLocation = function(x) {" + "  this.location = x;" + "};" + "(new F()).setLocation('http://www.google.com/');", ImmutableList.<String>of()); [EOL] } <line_num>: 187,200
public void testIssue303b() throws Exception { [EOL]     checkMarkedCalls("/** @constructor */ function F() {" + "  var self = this;" + "  window.setTimeout(function() {" + "    window.location = self.location;" + "  }, 0);" + "}" + "F.prototype.setLocation = function(x) {" + "  this.location = x;" + "};" + "function x() {" + "  (new F()).setLocation('http://www.google.com/');" + "} window['x'] = x;", ImmutableList.<String>of()); [EOL] } <line_num>: 202,217
public void testAnnotationInExterns_new1() throws Exception { [EOL]     checkMarkedCalls("externSENone()", ImmutableList.<String>of("externSENone")); [EOL] } <line_num>: 219,222
public void testAnnotationInExterns_new2() throws Exception { [EOL]     checkMarkedCalls("externSEThis()", ImmutableList.<String>of()); [EOL] } <line_num>: 224,227
public void testAnnotationInExterns_new3() throws Exception { [EOL]     checkMarkedCalls("new externObjSEThis()", ImmutableList.<String>of("externObjSEThis")); [EOL] } <line_num>: 229,232
public void testAnnotationInExterns_new4() throws Exception { [EOL]     checkMarkedCalls("new externObjSEThis().externObjSEThisMethod('')", ImmutableList.<String>of("externObjSEThis", "NEW STRING externObjSEThisMethod")); [EOL] } <line_num>: 234,241
public void testAnnotationInExterns_new5() throws Exception { [EOL]     checkMarkedCalls("function f() { new externObjSEThis() };" + "f();", ImmutableList.<String>of("externObjSEThis", "f")); [EOL] } <line_num>: 243,248
public void testAnnotationInExterns_new6() throws Exception { [EOL]     checkMarkedCalls("function f() {" + "  new externObjSEThis().externObjSEThisMethod('') " + "};" + "f();", ImmutableList.<String>of("externObjSEThis", "NEW STRING externObjSEThisMethod")); [EOL] } <line_num>: 250,264
public void testAnnotationInExterns_new7() throws Exception { [EOL]     checkMarkedCalls("function f() {" + "  var x = new externObjSEThis(); " + "  x.externObjSEThisMethod('') " + "};" + "f();", ImmutableList.<String>of("externObjSEThis")); [EOL] } <line_num>: 266,277
public void testAnnotationInExterns_new8() throws Exception { [EOL]     checkMarkedCalls("function f(x) {" + "  x.externObjSEThisMethod('') " + "};" + "f(new externObjSEThis());", ImmutableList.<String>of("externObjSEThis")); [EOL] } <line_num>: 279,289
public void testAnnotationInExterns_new9() throws Exception { [EOL]     checkMarkedCalls("function f(x) {" + "  x = new externObjSEThis(); " + "  x.externObjSEThisMethod('') " + "};" + "f(g);", ImmutableList.<String>of("externObjSEThis")); [EOL] } <line_num>: 291,303
public void testAnnotationInExterns_new10() throws Exception { [EOL]     checkMarkedCalls("function f() {" + "  new externObjSEThis().externObjSEThisMethod2('') " + "};" + "f();", ImmutableList.<String>of("externObjSEThis")); [EOL] } <line_num>: 305,316
public void testAnnotationInExterns1() throws Exception { [EOL]     checkMarkedCalls("externSef1()", ImmutableList.<String>of()); [EOL] } <line_num>: 318,320
public void testAnnotationInExterns2() throws Exception { [EOL]     checkMarkedCalls("externSef2()", ImmutableList.<String>of()); [EOL] } <line_num>: 322,324
public void testAnnotationInExterns3() throws Exception { [EOL]     checkMarkedCalls("externNsef1()", ImmutableList.of("externNsef1")); [EOL] } <line_num>: 326,328
public void testAnnotationInExterns4() throws Exception { [EOL]     checkMarkedCalls("externNsef2()", ImmutableList.of("externNsef2")); [EOL] } <line_num>: 330,332
public void testAnnotationInExterns5() throws Exception { [EOL]     checkMarkedCalls("externNsef3()", ImmutableList.of("externNsef3")); [EOL] } <line_num>: 334,336
public void testNamespaceAnnotationInExterns1() throws Exception { [EOL]     checkMarkedCalls("externObj.sef1()", ImmutableList.<String>of()); [EOL] } <line_num>: 338,340
public void testNamespaceAnnotationInExterns2() throws Exception { [EOL]     checkMarkedCalls("externObj.nsef1()", ImmutableList.of("externObj.nsef1")); [EOL] } <line_num>: 342,344
public void testNamespaceAnnotationInExterns3() throws Exception { [EOL]     checkMarkedCalls("externObj.nsef2()", ImmutableList.of("externObj.nsef2")); [EOL] } <line_num>: 346,348
public void testNamespaceAnnotationInExterns4() throws Exception { [EOL]     checkMarkedCalls("externObj.partialFn()", ImmutableList.<String>of()); [EOL] } <line_num>: 350,353
public void testNamespaceAnnotationInExterns5() throws Exception { [EOL]     String templateSrc = "var o = {}; o.<fnName> = function(){}; o.<fnName>()"; [EOL]     checkMarkedCalls(templateSrc.replaceAll("<fnName>", "notPartialFn"), ImmutableList.of("o.notPartialFn")); [EOL]     checkMarkedCalls(templateSrc.replaceAll("<fnName>", "partialFn"), ImmutableList.<String>of()); [EOL] } <line_num>: 355,367
public void testNamespaceAnnotationInExterns6() throws Exception { [EOL]     checkMarkedCalls("externObj.partialSharedFn()", ImmutableList.<String>of()); [EOL] } <line_num>: 369,372
public void testConstructorAnnotationInExterns1() throws Exception { [EOL]     checkMarkedCalls("new externSefConstructor()", ImmutableList.<String>of()); [EOL] } <line_num>: 374,377
public void testConstructorAnnotationInExterns2() throws Exception { [EOL]     checkMarkedCalls("var a = new externSefConstructor();" + "a.sefFnOfSefObj()", ImmutableList.<String>of()); [EOL] } <line_num>: 379,383
public void testConstructorAnnotationInExterns3() throws Exception { [EOL]     checkMarkedCalls("var a = new externSefConstructor();" + "a.nsefFnOfSefObj()", ImmutableList.of("a.nsefFnOfSefObj")); [EOL] } <line_num>: 385,389
public void testConstructorAnnotationInExterns4() throws Exception { [EOL]     checkMarkedCalls("var a = new externSefConstructor();" + "a.externShared()", ImmutableList.<String>of()); [EOL] } <line_num>: 391,395
public void testConstructorAnnotationInExterns5() throws Exception { [EOL]     checkMarkedCalls("new externNsefConstructor()", ImmutableList.of("externNsefConstructor")); [EOL] } <line_num>: 397,400
public void testConstructorAnnotationInExterns6() throws Exception { [EOL]     checkMarkedCalls("var a = new externNsefConstructor();" + "a.sefFnOfNsefObj()", ImmutableList.of("externNsefConstructor")); [EOL] } <line_num>: 402,406
public void testConstructorAnnotationInExterns7() throws Exception { [EOL]     checkMarkedCalls("var a = new externNsefConstructor();" + "a.nsefFnOfNsefObj()", ImmutableList.of("externNsefConstructor", "a.nsefFnOfNsefObj")); [EOL] } <line_num>: 408,413
public void testConstructorAnnotationInExterns8() throws Exception { [EOL]     checkMarkedCalls("var a = new externNsefConstructor();" + "a.externShared()", ImmutableList.of("externNsefConstructor")); [EOL] } <line_num>: 415,419
public void testSharedFunctionName1() throws Exception { [EOL]     checkMarkedCalls("var a; " + "if (true) {" + "  a = new externNsefConstructor()" + "} else {" + "  a = new externSefConstructor()" + "}" + "a.externShared()", ImmutableList.of("externNsefConstructor")); [EOL] } <line_num>: 421,430
public void testSharedFunctionName2() throws Exception { [EOL]     boolean broken = true; [EOL]     if (broken) { [EOL]         checkMarkedCalls("var a; " + "if (true) {" + "  a = new externNsefConstructor()" + "} else {" + "  a = new externNsefConstructor2()" + "}" + "a.externShared()", ImmutableList.of("externNsefConstructor", "externNsefConstructor2")); [EOL]     } else { [EOL]         checkMarkedCalls("var a; " + "if (true) {" + "  a = new externNsefConstructor()" + "} else {" + "  a = new externNsefConstructor2()" + "}" + "a.externShared()", ImmutableList.of("externNsefConstructor", "externNsefConstructor2", "a.externShared")); [EOL]     } [EOL] } <line_num>: 432,458
public void testAnnotationInExternStubs1() throws Exception { [EOL]     checkMarkedCalls("o.propWithStubBefore('a');", ImmutableList.<String>of("o.propWithStubBefore")); [EOL] } <line_num>: 460,463
public void testAnnotationInExternStubs1b() throws Exception { [EOL]     checkMarkedCalls("o.propWithStubBeforeWithJSDoc('a');", ImmutableList.<String>of("o.propWithStubBeforeWithJSDoc")); [EOL] } <line_num>: 465,468
public void testAnnotationInExternStubs2() throws Exception { [EOL]     checkMarkedCalls("o.propWithStubAfter('a');", ImmutableList.<String>of("o.propWithStubAfter")); [EOL] } <line_num>: 470,473
public void testAnnotationInExternStubs2b() throws Exception { [EOL]     checkMarkedCalls("o.propWithStubAfter('a');", ImmutableList.<String>of("o.propWithStubAfter")); [EOL] } <line_num>: 475,478
public void testAnnotationInExternStubs3() throws Exception { [EOL]     checkMarkedCalls("propWithAnnotatedStubAfter('a');", ImmutableList.<String>of()); [EOL] } <line_num>: 480,483
public void testAnnotationInExternStubs4() throws Exception { [EOL]     String externs = "/**@constructor*/function externObj5(){}\n" + "externObj5.prototype.propWithAnnotatedStubAfter = function(s) {};\n" + "/**\n" + " * @param {string} s id.\n" + " * @return {string}\n" + " * @nosideeffects\n" + " */\n" + "externObj5.prototype.propWithAnnotatedStubAfter;\n"; [EOL]     List<String> expected = ImmutableList.<String>of(); [EOL]     testSame(externs, "o.prototype.propWithAnnotatedStubAfter", TypeValidator.DUP_VAR_DECLARATION, false); [EOL]     assertEquals(expected, noSideEffectCalls); [EOL]     noSideEffectCalls.clear(); [EOL] } <line_num>: 485,506
public void testAnnotationInExternStubs5() throws Exception { [EOL]     String externs = "/**@constructor*/function externObj5(){}\n" + "/**\n" + " * @param {string} s id.\n" + " * @return {string}\n" + " * @nosideeffects\n" + " */\n" + "externObj5.prototype.propWithAnnotatedStubAfter = function(s) {};\n" + "/**\n" + " * @param {string} s id.\n" + " * @return {string}\n" + " */\n" + "externObj5.prototype.propWithAnnotatedStubAfter;\n"; [EOL]     List<String> expected = ImmutableList.<String>of(); [EOL]     testSame(externs, "o.prototype.propWithAnnotatedStubAfter", TypeValidator.DUP_VAR_DECLARATION, false); [EOL]     assertEquals(expected, noSideEffectCalls); [EOL]     noSideEffectCalls.clear(); [EOL] } <line_num>: 508,533
public void testNoSideEffectsSimple() throws Exception { [EOL]     String prefix = "function f(){"; [EOL]     String suffix = "} f()"; [EOL]     List<String> expected = ImmutableList.of("f"); [EOL]     checkMarkedCalls(prefix + "" + suffix, expected); [EOL]     checkMarkedCalls(prefix + "return 1" + suffix, expected); [EOL]     checkMarkedCalls(prefix + "return 1 + 2" + suffix, expected); [EOL]     checkMarkedCalls(prefix + "var a = 1; return a" + suffix, expected); [EOL]     checkMarkedCalls(prefix + "var a = 1; a = 2; return a" + suffix, expected); [EOL]     checkMarkedCalls(prefix + "var a = 1; a = 2; return a + 1" + suffix, expected); [EOL]     checkMarkedCalls(prefix + "var a = {foo : 1}; return a.foo" + suffix, expected); [EOL]     checkMarkedCalls(prefix + "var a = {foo : 1}; return a.foo + 1" + suffix, expected); [EOL]     checkMarkedCalls(prefix + "return externObj" + suffix, expected); [EOL]     checkMarkedCalls("function g(x) { x.foo = 3; }" + prefix + "return externObj.foo" + suffix, expected); [EOL] } <line_num>: 535,569
public void testResultLocalitySimple() throws Exception { [EOL]     String prefix = "var g; function f(){"; [EOL]     String suffix = "} f()"; [EOL]     List<String> expected = ImmutableList.of("f"); [EOL]     List<String> notExpected = ImmutableList.of(); [EOL]     checkLocalityOfMarkedCalls(prefix + "" + suffix, expected); [EOL]     checkLocalityOfMarkedCalls(prefix + "return 1" + suffix, expected); [EOL]     checkLocalityOfMarkedCalls(prefix + "return 1 + 2" + suffix, expected); [EOL]     checkLocalityOfMarkedCalls(prefix + "return g" + suffix, notExpected); [EOL]     checkLocalityOfMarkedCalls(prefix + "return 1; return 2" + suffix, expected); [EOL]     checkLocalityOfMarkedCalls(prefix + "return 1; return g" + suffix, notExpected); [EOL]     checkLocalityOfMarkedCalls(prefix + "var a = 1; return a" + suffix, notExpected); [EOL]     checkLocalityOfMarkedCalls(prefix + "var a = 1; a = 2; return a" + suffix, notExpected); [EOL]     checkLocalityOfMarkedCalls(prefix + "var a = 1; a = 2; return a + 1" + suffix, expected); [EOL]     checkLocalityOfMarkedCalls(prefix + "return {foo : 1}.foo" + suffix, notExpected); [EOL]     checkLocalityOfMarkedCalls(prefix + "var a = {foo : 1}; return a.foo" + suffix, notExpected); [EOL]     checkLocalityOfMarkedCalls(prefix + "return externObj" + suffix, notExpected); [EOL]     checkLocalityOfMarkedCalls("function inner(x) { x.foo = 3; }" + prefix + "return externObj.foo" + suffix, notExpected); [EOL] } <line_num>: 571,620
public void testExternCalls() throws Exception { [EOL]     String prefix = "function f(){"; [EOL]     String suffix = "} f()"; [EOL]     checkMarkedCalls(prefix + "externNsef1()" + suffix, ImmutableList.of("externNsef1", "f")); [EOL]     checkMarkedCalls(prefix + "externObj.nsef1()" + suffix, ImmutableList.of("externObj.nsef1", "f")); [EOL]     checkMarkedCalls(prefix + "externSef1()" + suffix, ImmutableList.<String>of()); [EOL]     checkMarkedCalls(prefix + "externObj.sef1()" + suffix, ImmutableList.<String>of()); [EOL] } <line_num>: 622,635
public void testApply() throws Exception { [EOL]     checkMarkedCalls("function f() {return 42}" + "f.apply()", ImmutableList.of("f.apply")); [EOL] } <line_num>: 637,641
public void testCall() throws Exception { [EOL]     checkMarkedCalls("function f() {return 42}" + "f.call()", ImmutableList.<String>of("f.call")); [EOL] } <line_num>: 643,647
public void testInference1() throws Exception { [EOL]     checkMarkedCalls("function f() {return g()}" + "function g() {return 42}" + "f()", ImmutableList.of("g", "f")); [EOL] } <line_num>: 649,654
public void testInference2() throws Exception { [EOL]     checkMarkedCalls("var a = 1;" + "function f() {g()}" + "function g() {a=2}" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 656,662
public void testInference3() throws Exception { [EOL]     checkMarkedCalls("var f = function() {return g()};" + "var g = function() {return 42};" + "f()", ImmutableList.of("g", "f")); [EOL] } <line_num>: 664,669
public void testInference4() throws Exception { [EOL]     checkMarkedCalls("var a = 1;" + "var f = function() {g()};" + "var g = function() {a=2};" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 671,677
public void testInference5() throws Exception { [EOL]     checkMarkedCalls("var goog = {};" + "goog.f = function() {return goog.g()};" + "goog.g = function() {return 42};" + "goog.f()", ImmutableList.of("goog.g", "goog.f")); [EOL] } <line_num>: 679,685
public void testInference6() throws Exception { [EOL]     checkMarkedCalls("var a = 1;" + "var goog = {};" + "goog.f = function() {goog.g()};" + "goog.g = function() {a=2};" + "goog.f()", ImmutableList.<String>of()); [EOL] } <line_num>: 687,694
public void testLocalizedSideEffects1() throws Exception { [EOL]     checkMarkedCalls("function f() {" + "  var x = {foo : 0}; return function() {x.foo++};" + "}" + "f()", ImmutableList.<String>of("f")); [EOL] } <line_num>: 696,704
public void testLocalizedSideEffects2() throws Exception { [EOL]     checkMarkedCalls("function f() {" + "  var x = {foo : 0}; (function() {x.foo++})();" + "}" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 706,714
public void testLocalizedSideEffects3() throws Exception { [EOL]     checkMarkedCalls("var g = {foo:1}; function f() {var x = g; x.foo++}" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 716,722
public void testLocalizedSideEffects4() throws Exception { [EOL]     checkMarkedCalls("function f() {var x = []; x[0] = 1;}" + "f()", ImmutableList.<String>of("f")); [EOL] } <line_num>: 724,730
public void testLocalizedSideEffects5() throws Exception { [EOL]     checkMarkedCalls("var g = [];function f() {var x = g; x[0] = 1;}" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 732,738
public void testLocalizedSideEffects6() throws Exception { [EOL]     checkMarkedCalls("function f() {" + "  var x = {}; x.foo = 1; return x;" + "}" + "f()", ImmutableList.<String>of("f")); [EOL] } <line_num>: 740,748
public void testLocalizedSideEffects7() throws Exception { [EOL]     checkMarkedCalls("/** @constructor A */ function A() {};" + "function f() {" + "  var a = []; a[1] = 1; return a;" + "}" + "f()", ImmutableList.<String>of("f")); [EOL] } <line_num>: 750,759
public void testLocalizedSideEffects8() throws Exception { [EOL]     checkMarkedCalls("/** @constructor A */ function A() {};" + "function f() {" + "  var a = new A; a.foo = 1; return a;" + "}" + "f()", ImmutableList.<String>of("A")); [EOL] } <line_num>: 761,771
public void testLocalizedSideEffects9() throws Exception { [EOL]     checkMarkedCalls("/** @constructor A */ function A() {this.x = 1};" + "function f() {" + "  var a = new A; a.foo = 1; return a;" + "}" + "f()", ImmutableList.<String>of("A")); [EOL] } <line_num>: 773,783
public void testLocalizedSideEffects10() throws Exception { [EOL]     checkMarkedCalls("/** @constructor A */ function A() {};" + "A.prototype.g = function() {this.x = 1};" + "function f() {" + "  var a = new A; a.g(); return a;" + "}" + "f()", ImmutableList.<String>of("A")); [EOL] } <line_num>: 785,795
public void testLocalizedSideEffects11() throws Exception { [EOL]     checkMarkedCalls("/** @constructor */ function A() {}" + "A.prototype.update = function() { this.x = 1; };" + "/** @constructor */ function B() { " + "  this.a_ = new A();" + "}" + "B.prototype.updateA = function() {" + "  var b = this.a_;" + "  b.update();" + "};" + "var x = new B();" + "x.updateA();", ImmutableList.of("A", "B")); [EOL] } <line_num>: 797,812
public void testUnaryOperators1() throws Exception { [EOL]     checkMarkedCalls("function f() {var x = 1; x++}" + "f()", ImmutableList.of("f")); [EOL] } <line_num>: 814,818
public void testUnaryOperators2() throws Exception { [EOL]     checkMarkedCalls("var x = 1;" + "function f() {x++}" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 820,825
public void testUnaryOperators3() throws Exception { [EOL]     checkMarkedCalls("function f() {var x = {foo : 0}; x.foo++}" + "f()", ImmutableList.<String>of("f")); [EOL] } <line_num>: 827,831
public void testUnaryOperators4() throws Exception { [EOL]     checkMarkedCalls("var x = {foo : 0};" + "function f() {x.foo++}" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 833,838
public void testUnaryOperators5() throws Exception { [EOL]     checkMarkedCalls("function f(x) {x.foo++}" + "f({foo : 0})", ImmutableList.<String>of()); [EOL] } <line_num>: 840,844
public void testDeleteOperator1() throws Exception { [EOL]     checkMarkedCalls("var x = {};" + "function f() {delete x}" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 846,851
public void testDeleteOperator2() throws Exception { [EOL]     checkMarkedCalls("function f() {var x = {}; delete x}" + "f()", ImmutableList.of("f")); [EOL] } <line_num>: 853,857
public void testOrOperator1() throws Exception { [EOL]     checkMarkedCalls("var f = externNsef1 || externNsef2;\n" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 859,863
public void testOrOperator2() throws Exception { [EOL]     checkMarkedCalls("var f = function(){} || externNsef2;\n" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 865,869
public void testOrOperator3() throws Exception { [EOL]     checkMarkedCalls("var f = externNsef2 || function(){};\n" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 871,875
public void testOrOperators4() throws Exception { [EOL]     checkMarkedCalls("var f = function(){} || function(){};\n" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 877,881
public void testAndOperator1() throws Exception { [EOL]     checkMarkedCalls("var f = externNsef1 && externNsef2;\n" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 883,887
public void testAndOperator2() throws Exception { [EOL]     checkMarkedCalls("var f = function(){} && externNsef2;\n" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 889,893
public void testAndOperator3() throws Exception { [EOL]     checkMarkedCalls("var f = externNsef2 && function(){};\n" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 895,899
public void testAndOperators4() throws Exception { [EOL]     checkMarkedCalls("var f = function(){} && function(){};\n" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 901,905
public void testHookOperator1() throws Exception { [EOL]     checkMarkedCalls("var f = true ? externNsef1 : externNsef2;\n" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 907,911
public void testHookOperator2() throws Exception { [EOL]     checkMarkedCalls("var f = true ? function(){} : externNsef2;\n" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 913,917
public void testHookOperator3() throws Exception { [EOL]     checkMarkedCalls("var f = true ? externNsef2 : function(){};\n" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 919,923
public void testHookOperators4() throws Exception { [EOL]     checkMarkedCalls("var f = true ? function(){} : function(){};\n" + "f()", ImmutableList.<String>of()); [EOL] } <line_num>: 925,929
public void testThrow1() throws Exception { [EOL]     checkMarkedCalls("function f(){throw Error()};\n" + "f()", ImmutableList.<String>of("Error")); [EOL] } <line_num>: 931,935
public void testThrow2() throws Exception { [EOL]     checkMarkedCalls("/**@constructor*/function A(){throw Error()};\n" + "function f(){return new A()}\n" + "f()", ImmutableList.<String>of("Error")); [EOL] } <line_num>: 937,942
public void testAssignmentOverride() throws Exception { [EOL]     checkMarkedCalls("/**@constructor*/function A(){}\n" + "A.prototype.foo = function(){};\n" + "var a = new A;\n" + "a.foo();\n", ImmutableList.<String>of("A", "a.foo")); [EOL]     checkMarkedCalls("/**@constructor*/function A(){}\n" + "A.prototype.foo = function(){};\n" + "var x = 1\n" + "function f(){x = 10}\n" + "var a = new A;\n" + "a.foo = f;\n" + "a.foo();\n", ImmutableList.<String>of("A")); [EOL] } <line_num>: 944,959
public void testInheritance1() throws Exception { [EOL]     String source = CompilerTypeTestCase.CLOSURE_DEFS + "/**@constructor*/function I(){}\n" + "I.prototype.foo = function(){};\n" + "I.prototype.bar = function(){this.foo()};\n" + "/**@constructor\n@extends {I}*/function A(){};\n" + "goog.inherits(A, I)\n;" + "/** @override */A.prototype.foo = function(){var data=24};\n" + "var i = new I();i.foo();i.bar();\n" + "var a = new A();a.foo();a.bar();"; [EOL]     checkMarkedCalls(source, ImmutableList.of("this.foo", "goog.inherits", "I", "i.foo", "i.bar", "A", "a.foo", "a.bar")); [EOL] } <line_num>: 961,977
public void testInheritance2() throws Exception { [EOL]     String source = CompilerTypeTestCase.CLOSURE_DEFS + "/**@constructor*/function I(){}\n" + "I.prototype.foo = function(){};\n" + "I.prototype.bar = function(){this.foo()};\n" + "/**@constructor\n@extends {I}*/function A(){};\n" + "goog.inherits(A, I)\n;" + "/** @override */A.prototype.foo = function(){this.data=24};\n" + "var i = new I();i.foo();i.bar();\n" + "var a = new A();a.foo();a.bar();"; [EOL]     checkMarkedCalls(source, ImmutableList.of("goog.inherits", "I", "A")); [EOL] } <line_num>: 979,992
public void testCallBeforeDefinition() throws Exception { [EOL]     checkMarkedCalls("f(); function f(){}", ImmutableList.of("f")); [EOL]     checkMarkedCalls("var a = {}; a.f(); a.f = function (){}", ImmutableList.of("a.f")); [EOL] } <line_num>: 994,1000
public void testConstructorThatModifiesThis1() throws Exception { [EOL]     String source = "/**@constructor*/function A(){this.foo = 1}\n" + "function f() {return new A}" + "f()"; [EOL]     checkMarkedCalls(source, ImmutableList.of("A", "f")); [EOL] } <line_num>: 1002,1008
public void testConstructorThatModifiesThis2() throws Exception { [EOL]     String source = "/**@constructor*/function A(){this.foo()}\n" + "A.prototype.foo = function(){this.data=24};\n" + "function f() {return new A}" + "f()"; [EOL]     checkMarkedCalls(source, ImmutableList.of("A", "f")); [EOL] } <line_num>: 1010,1017
public void testConstructorThatModifiesThis3() throws Exception { [EOL]     String source = "/**@constructor*/function A(){this.foo()}\n" + "A.prototype.foo = function(){this.bar()};\n" + "A.prototype.bar = function(){this.data=24};\n" + "function f() {return new A}" + "f()"; [EOL]     checkMarkedCalls(source, ImmutableList.of("A", "f")); [EOL] } <line_num>: 1019,1029
public void testConstructorThatModifiesThis4() throws Exception { [EOL]     String source = "/**@constructor*/function A(){foo.call(this)}\n" + "function foo(){this.data=24};\n" + "function f() {return new A}" + "f()"; [EOL]     checkMarkedCalls(source, ImmutableList.of("A", "f")); [EOL] } <line_num>: 1031,1040
public void testConstructorThatModifiesGlobal1() throws Exception { [EOL]     String source = "var b = 0;" + "/**@constructor*/function A(){b=1};\n" + "function f() {return new A}" + "f()"; [EOL]     checkMarkedCalls(source, ImmutableList.<String>of()); [EOL] } <line_num>: 1042,1049
public void testConstructorThatModifiesGlobal2() throws Exception { [EOL]     String source = "var b = 0;" + "/**@constructor*/function A(){this.foo()}\n" + "A.prototype.foo = function(){b=1};\n" + "function f() {return new A}" + "f()"; [EOL]     checkMarkedCalls(source, ImmutableList.<String>of()); [EOL] } <line_num>: 1051,1059
public void testCallFunctionThatModifiesThis() throws Exception { [EOL]     String source = "/**@constructor*/function A(){}\n" + "A.prototype.foo = function(){this.data=24};\n" + "function f(){var a = new A; return a}\n" + "function g(){var a = new A; a.foo(); return a}\n" + "f(); g()"; [EOL]     checkMarkedCalls(source, ImmutableList.<String>of("A", "A", "f")); [EOL] } <line_num>: 1061,1069
public void testCallFunctionFOrG() throws Exception { [EOL]     String source = "function f(){}\n" + "function g(){}\n" + "function h(){ (f || g)() }\n" + "h()"; [EOL]     checkMarkedCalls(source, ImmutableList.<String>of("(f || g)", "h")); [EOL] } <line_num>: 1071,1078
public void testCallFunctionFOrGViaHook() throws Exception { [EOL]     String source = "function f(){}\n" + "function g(){}\n" + "function h(){ (false ? f : g)() }\n" + "h()"; [EOL]     checkMarkedCalls(source, ImmutableList.<String>of("(f : g)", "h")); [EOL] } <line_num>: 1080,1087
public void testCallFunctionForGorH() throws Exception { [EOL]     String source = "function f(){}\n" + "function g(){}\n" + "function h(){}\n" + "function i(){ (false ? f : (g || h))() }\n" + "i()"; [EOL]     checkMarkedCalls(source, ImmutableList.<String>of("(f : (g || h))", "i")); [EOL] } <line_num>: 1089,1097
public void testCallFunctionFOrGWithSideEffects() throws Exception { [EOL]     String source = "var x = 0;\n" + "function f(){x = 10}\n" + "function g(){}\n" + "function h(){ (f || g)() }\n" + "function i(){ (g || f)() }\n" + "function j(){ (f || f)() }\n" + "function k(){ (g || g)() }\n" + "h(); i(); j(); k()"; [EOL]     checkMarkedCalls(source, ImmutableList.<String>of("(g || g)", "k")); [EOL] } <line_num>: 1099,1110
public void testCallFunctionFOrGViaHookWithSideEffects() throws Exception { [EOL]     String source = "var x = 0;\n" + "function f(){x = 10}\n" + "function g(){}\n" + "function h(){ (false ? f : g)() }\n" + "function i(){ (false ? g : f)() }\n" + "function j(){ (false ? f : f)() }\n" + "function k(){ (false ? g : g)() }\n" + "h(); i(); j(); k()"; [EOL]     checkMarkedCalls(source, ImmutableList.<String>of("(g : g)", "k")); [EOL] } <line_num>: 1112,1123
public void testCallRegExpWithSideEffects() throws Exception { [EOL]     String source = "var x = 0;\n" + "function k(){(/a/).exec('')}\n" + "k()"; [EOL]     regExpHaveSideEffects = true; [EOL]     checkMarkedCalls(source, ImmutableList.<String>of()); [EOL]     regExpHaveSideEffects = false; [EOL]     checkMarkedCalls(source, ImmutableList.<String>of("REGEXP STRING exec", "k")); [EOL] } <line_num>: 1125,1135
public void testAnonymousFunction1() throws Exception { [EOL]     String source = "(function (){})();"; [EOL]     checkMarkedCalls(source, ImmutableList.<String>of("FUNCTION")); [EOL] } <line_num>: 1137,1142
public void testAnonymousFunction2() throws Exception { [EOL]     String source = "(Error || function (){})();"; [EOL]     checkMarkedCalls(source, ImmutableList.<String>of("(Error || FUNCTION)")); [EOL] } <line_num>: 1144,1149
public void testAnonymousFunction3() throws Exception { [EOL]     String source = "var a = (Error || function (){})();"; [EOL]     checkMarkedCalls(source, ImmutableList.<String>of("(Error || FUNCTION)")); [EOL] } <line_num>: 1151,1156
public void testAnonymousFunction4() throws Exception { [EOL]     String source = "var a = (Error || function (){});" + "a();"; [EOL]     checkMarkedCalls(source, ImmutableList.<String>of()); [EOL] } <line_num>: 1159,1165
public void testInvalidAnnotation1() throws Exception { [EOL]     test("/** @nosideeffects */ function foo() {}", null, INVALID_NO_SIDE_EFFECT_ANNOTATION); [EOL] } <line_num>: 1167,1170
public void testInvalidAnnotation2() throws Exception { [EOL]     test("var f = /** @nosideeffects */ function() {}", null, INVALID_NO_SIDE_EFFECT_ANNOTATION); [EOL] } <line_num>: 1172,1175
public void testInvalidAnnotation3() throws Exception { [EOL]     test("/** @nosideeffects */ var f = function() {}", null, INVALID_NO_SIDE_EFFECT_ANNOTATION); [EOL] } <line_num>: 1177,1180
public void testInvalidAnnotation4() throws Exception { [EOL]     test("var f = function() {};" + "/** @nosideeffects */ f.x = function() {}", null, INVALID_NO_SIDE_EFFECT_ANNOTATION); [EOL] } <line_num>: 1182,1186
public void testInvalidAnnotation5() throws Exception { [EOL]     test("var f = function() {};" + "f.x = /** @nosideeffects */ function() {}", null, INVALID_NO_SIDE_EFFECT_ANNOTATION); [EOL] } <line_num>: 1188,1192
void checkMarkedCalls(String source, List<String> expected) { [EOL]     testSame(source); [EOL]     assertEquals(expected, noSideEffectCalls); [EOL]     noSideEffectCalls.clear(); [EOL] } <line_num>: 1194,1198
void checkLocalityOfMarkedCalls(String source, List<String> expected) { [EOL]     testSame(source); [EOL]     assertEquals(expected, localResultCalls); [EOL]     localResultCalls.clear(); [EOL] } <line_num>: 1200,1204
@Override [EOL] protected CompilerPass getProcessor(Compiler compiler) { [EOL]     return new NoSideEffectCallEnumerator(compiler); [EOL] } <line_num>: 1206,1209
@Override [EOL] public void process(Node externs, Node root) { [EOL]     compiler.setHasRegExpGlobalReferences(regExpHaveSideEffects); [EOL]     SimpleDefinitionFinder defFinder = new SimpleDefinitionFinder(compiler); [EOL]     defFinder.process(externs, root); [EOL]     PureFunctionIdentifier passUnderTest = new PureFunctionIdentifier(compiler, defFinder); [EOL]     passUnderTest.process(externs, root); [EOL]     String debugReport = passUnderTest.getDebugReport(); [EOL]     NodeTraversal.traverse(compiler, externs, this); [EOL]     NodeTraversal.traverse(compiler, root, this); [EOL] } <line_num>: 1223,1237
@Override [EOL] public void visit(NodeTraversal t, Node n, Node parent) { [EOL]     if (n.isNew()) { [EOL]         if (!NodeUtil.constructorCallHasSideEffects(n)) { [EOL]             noSideEffectCalls.add(generateNameString(n.getFirstChild())); [EOL]         } [EOL]     } else if (n.isCall()) { [EOL]         if (!NodeUtil.functionCallHasSideEffects(n)) { [EOL]             noSideEffectCalls.add(generateNameString(n.getFirstChild())); [EOL]         } [EOL]         if (NodeUtil.callHasLocalResult(n)) { [EOL]             localResultCalls.add(generateNameString(n.getFirstChild())); [EOL]         } [EOL]     } [EOL] } <line_num>: 1239,1253
private String generateNameString(Node node) { [EOL]     if (node.isOr()) { [EOL]         return "(" + generateNameString(node.getFirstChild()) + " || " + generateNameString(node.getLastChild()) + ")"; [EOL]     } else if (node.isHook()) { [EOL]         return "(" + generateNameString(node.getFirstChild().getNext()) + " : " + generateNameString(node.getLastChild()) + ")"; [EOL]     } else { [EOL]         String result = node.getQualifiedName(); [EOL]         if (result == null) { [EOL]             if (node.isFunction()) { [EOL]                 result = node.toString(false, false, false).trim(); [EOL]             } else { [EOL]                 result = node.getFirstChild().toString(false, false, false); [EOL]                 result += " " + node.getLastChild().toString(false, false, false); [EOL]             } [EOL]         } [EOL]         return result; [EOL]     } [EOL] } <line_num>: 1255,1274
