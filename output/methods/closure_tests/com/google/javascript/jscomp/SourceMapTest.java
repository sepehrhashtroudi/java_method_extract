public SourceMapTest() { [EOL] } <line_num>: 34,35
public void testPrefixReplacement1() throws IOException { [EOL]     mappings = new ArrayList<SourceMap.LocationMapping>(); [EOL]     mappings.add(new SourceMap.LocationMapping("pre/", "")); [EOL]     checkSourceMap2("", "pre/file1", "", "pre/file2", "{\n" + "\"version\":2,\n" + "\"file\":\"testcode\",\n" + "\"lineCount\":1,\n" + "\"lineMaps\":[\"\"],\n" + "\"mappings\":[],\n" + "\"sources\":[\"file1\",\"file2\"],\n" + "\"names\":[]\n" + "}\n"); [EOL] } <line_num>: 39,52
public void testPrefixReplacement2() throws IOException { [EOL]     mappings = new ArrayList<SourceMap.LocationMapping>(); [EOL]     mappings.add(new SourceMap.LocationMapping("pre/file", "src")); [EOL]     checkSourceMap2("", "pre/file1", "", "pre/file2", "{\n" + "\"version\":2,\n" + "\"file\":\"testcode\",\n" + "\"lineCount\":1,\n" + "\"lineMaps\":[\"\"],\n" + "\"mappings\":[],\n" + "\"sources\":[\"src1\",\"src2\"],\n" + "\"names\":[]\n" + "}\n"); [EOL] } <line_num>: 54,67
public void testPrefixReplacement3() throws IOException { [EOL]     mappings = new ArrayList<SourceMap.LocationMapping>(); [EOL]     mappings.add(new SourceMap.LocationMapping("file1", "x")); [EOL]     mappings.add(new SourceMap.LocationMapping("file2", "y")); [EOL]     checkSourceMap2("", "file1", "", "file2", "{\n" + "\"version\":2,\n" + "\"file\":\"testcode\",\n" + "\"lineCount\":1,\n" + "\"lineMaps\":[\"\"],\n" + "\"mappings\":[],\n" + "\"sources\":[\"x\",\"y\"],\n" + "\"names\":[]\n" + "}\n"); [EOL] } <line_num>: 69,83
public void testPrefixReplacement4() throws IOException { [EOL]     mappings = new ArrayList<SourceMap.LocationMapping>(); [EOL]     mappings.add(new SourceMap.LocationMapping("file1", "x")); [EOL]     mappings.add(new SourceMap.LocationMapping("file", "y")); [EOL]     checkSourceMap2("", "file1", "", "file2", "{\n" + "\"version\":2,\n" + "\"file\":\"testcode\",\n" + "\"lineCount\":1,\n" + "\"lineMaps\":[\"\"],\n" + "\"mappings\":[],\n" + "\"sources\":[\"x\",\"y2\"],\n" + "\"names\":[]\n" + "}\n"); [EOL] } <line_num>: 85,99
@Override [EOL] protected CompilerOptions getCompilerOptions() { [EOL]     CompilerOptions options = super.getCompilerOptions(); [EOL]     if (mappings != null) { [EOL]         options.sourceMapLocationMappings = mappings; [EOL]     } [EOL]     return options; [EOL] } <line_num>: 101,108
@Override [EOL] public void setUp() { [EOL]     super.setUp(); [EOL] } <line_num>: 110,113
private void checkSourceMap2(String js1, String file1, String js2, String file2, String expectedMap) throws IOException { [EOL]     RunResult result = compile(js1, file1, js2, file2); [EOL]     assertEquals(expectedMap, result.sourceMapFileContent); [EOL]     assertEquals(result.sourceMapFileContent, getSourceMap(result)); [EOL] } <line_num>: 115,121
@Override [EOL] protected Format getSourceMapFormat() { [EOL]     return Format.V2; [EOL] } <line_num>: 123,126
@Override [EOL] protected SourceMapConsumer getSourceMapConsumer() { [EOL]     return new SourceMapConsumerV2(); [EOL] } <line_num>: 128,131
