@Override [EOL] public CompilerPass getProcessor(Compiler compiler) { [EOL]     return new ConvertToDottedProperties(compiler); [EOL] } <line_num>: 24,26
public void testConvert() { [EOL]     test("a['p']", "a.p"); [EOL]     test("a['_p_']", "a._p_"); [EOL]     test("a['_']", "a._"); [EOL]     test("a['$']", "a.$"); [EOL]     test("a.b.c['p']", "a.b.c.p"); [EOL]     test("a.b['c'].p", "a.b.c.p"); [EOL]     test("a['p']();", "a.p();"); [EOL]     test("a()['p']", "a().p"); [EOL]     test("a['\u0041A']", "a.AA"); [EOL] } <line_num>: 28,39
public void testDoNotConvert() { [EOL]     testSame("a[0]"); [EOL]     testSame("a['']"); [EOL]     testSame("a[' ']"); [EOL]     testSame("a[',']"); [EOL]     testSame("a[';']"); [EOL]     testSame("a[':']"); [EOL]     testSame("a['.']"); [EOL]     testSame("a['0']"); [EOL]     testSame("a['p ']"); [EOL]     testSame("a['p' + '']"); [EOL]     testSame("a[p]"); [EOL]     testSame("a[P]"); [EOL]     testSame("a[$]"); [EOL]     testSame("a[p()]"); [EOL]     testSame("a['default']"); [EOL]     test("a['\u1d17A']", "a['\u1d17A']"); [EOL]     test("a['\u00d1StuffAfter']", "a['\u00d1StuffAfter']"); [EOL] } <line_num>: 41,63
public void testQuotedProps() { [EOL]     testSame("({'':0})"); [EOL]     testSame("({'1.0':0})"); [EOL]     testSame("({'\u1d17A':0})"); [EOL] } <line_num>: 66,70
public void test5746867() { [EOL]     testSame("var a = { '$\\\\' : 5 };"); [EOL]     testSame("var a = { 'x\\\\u0041$\\\\' : 5 };"); [EOL] } <line_num>: 72,75
