@Override [EOL] protected CompilerPass getProcessor(Compiler compiler) { [EOL]     return new CheckRequiresForConstructors(compiler, CheckLevel.WARNING); [EOL] } <line_num>: 30,33
public void testPassWithNoNewNodes() { [EOL]     String js = "var str = 'g4'; /* does not use new */"; [EOL]     testSame(js); [EOL] } <line_num>: 35,38
public void testPassWithOneNew() { [EOL]     String js = "var goog = {};" + "goog.require('foo.bar.goo'); var bar = new foo.bar.goo();"; [EOL]     testSame(js); [EOL] } <line_num>: 40,45
public void testPassWithOneNewOuterClass() { [EOL]     String js = "var goog = {};" + "goog.require('goog.foo.Bar'); var bar = new goog.foo.Bar.Baz();"; [EOL]     testSame(js); [EOL] } <line_num>: 47,52
public void testPassWithOneNewOuterClassWithUpperPrefix() { [EOL]     String js = "var goog = {};" + "goog.require('goog.foo.IDBar'); var bar = new goog.foo.IDBar.Baz();"; [EOL]     testSame(js); [EOL] } <line_num>: 54,59
public void testFailWithOneNew() { [EOL]     String[] js = new String[] { "var foo = {}; var bar = new foo.bar();" }; [EOL]     String warning = "'foo.bar' used but not goog.require'd"; [EOL]     test(js, js, null, MISSING_REQUIRE_WARNING, warning); [EOL] } <line_num>: 61,65
public void testPassWithTwoNewNodes() { [EOL]     String js = "var goog = {};" + "goog.require('goog.foo.Bar');goog.require('goog.foo.Baz');" + "var str = new goog.foo.Bar('g4'), num = new goog.foo.Baz(5); "; [EOL]     testSame(js); [EOL] } <line_num>: 67,73
public void testPassWithNestedNewNodes() { [EOL]     String js = "var goog = {}; goog.require('goog.foo.Bar'); " + "var str = new goog.foo.Bar(new goog.foo.Bar('5')); "; [EOL]     testSame(js); [EOL] } <line_num>: 75,80
public void testFailWithNestedNewNodes() { [EOL]     String[] js = new String[] { "var goog = {}; goog.require('goog.foo.Bar'); " + "var str = new goog.foo.Bar(new goog.foo.Baz('5')); " }; [EOL]     String warning = "'goog.foo.Baz' used but not goog.require'd"; [EOL]     test(js, js, null, MISSING_REQUIRE_WARNING, warning); [EOL] } <line_num>: 82,88
public void testPassWithLocalFunctions() { [EOL]     String js = "/** @constructor */ function tempCtor() {}; var foo = new tempCtor();"; [EOL]     testSame(js); [EOL] } <line_num>: 90,94
public void testPassWithLocalVariables() { [EOL]     String js = "/** @constructor */ var nodeCreator = function() {};" + "var newNode = new nodeCreator();"; [EOL]     testSame(js); [EOL] } <line_num>: 96,101
public void testFailWithLocalVariableInMoreThanOneFile() { [EOL]     String localVar = "/** @constructor */ function tempCtor() {}" + "function baz(){" + " /** @constructor */ function tempCtor() {}; " + "var foo = new tempCtor();}"; [EOL]     String[] js = new String[] { localVar, " var foo = new tempCtor();" }; [EOL]     String warning = "'tempCtor' used but not goog.require'd"; [EOL]     test(js, js, null, MISSING_REQUIRE_WARNING, warning); [EOL] } <line_num>: 103,113
public void testNewNodesMetaTraditionalFunctionForm() { [EOL]     String js = "/** @constructor */ function Bar(){}; " + "Bar.prototype.bar = function(){ return new Bar();};"; [EOL]     testSame(js); [EOL] } <line_num>: 115,123
public void testNewNodesMeta() { [EOL]     String js = "var goog = {};" + "/** @constructor */goog.ui.Option = function(){};" + "goog.ui.Option.optionDecorator = function(){" + "  return new goog.ui.Option(); };"; [EOL]     testSame(js); [EOL] } <line_num>: 125,132
public void testShouldWarnWhenInstantiatingObjectsDefinedInGlobalScope() { [EOL]     String good = "/** @constructor */ function Bar(){}; " + "Bar.prototype.bar = function(){return new Bar();};"; [EOL]     String bad = "/** @constructor */ function Foo(){ var bar = new Bar();}"; [EOL]     String[] js = new String[] { good, bad }; [EOL]     String warning = "'Bar' used but not goog.require'd"; [EOL]     test(js, js, null, MISSING_REQUIRE_WARNING, warning); [EOL] } <line_num>: 134,144
public void testShouldWarnWhenInstantiatingGlobalClassesFromGlobalScope() { [EOL]     String good = "/** @constructor */ function Baz(){}; " + "Baz.prototype.bar = function(){return new Baz();};"; [EOL]     String bad = "var baz = new Baz()"; [EOL]     String[] js = new String[] { good, bad }; [EOL]     String warning = "'Baz' used but not goog.require'd"; [EOL]     test(js, js, null, MISSING_REQUIRE_WARNING, warning); [EOL] } <line_num>: 146,156
public void testIgnoresNativeObject() { [EOL]     String externs = "/** @constructor */ function String(val) {}"; [EOL]     String js = "var str = new String('4');"; [EOL]     test(externs, js, js, null, null); [EOL] } <line_num>: 158,162
public void testNewNodesWithMoreThanOneFile() { [EOL]     String[] js = new String[] { "var goog = {};" + "/** @constructor */ function Bar() {}" + "goog.require('Bar');", "var bar = new Bar();" }; [EOL]     String warning = "'Bar' used but not goog.require'd"; [EOL]     test(js, js, null, MISSING_REQUIRE_WARNING, warning); [EOL] } <line_num>: 164,173
public void testPassWithoutWarningsAndMultipleFiles() { [EOL]     String[] js = new String[] { "var goog = {};" + "goog.require('Foo'); var foo = new Foo();", "goog.require('Bar'); var bar = new Bar();" }; [EOL]     testSame(js); [EOL] } <line_num>: 175,181
public void testFailWithWarningsAndMultipleFiles() { [EOL]     String[] js = new String[] { "var goog = {};" + "/** @constructor */ function Bar() {}" + "goog.require('Bar');", "var bar = new Bar();" }; [EOL]     String warning = "'Bar' used but not goog.require'd"; [EOL]     test(js, js, null, MISSING_REQUIRE_WARNING, warning); [EOL] } <line_num>: 183,192
public void testCanStillCallNumberWithoutNewOperator() { [EOL]     String externs = "/** @constructor */ function Number(opt_value) {}"; [EOL]     String js = "var n = Number('42');"; [EOL]     test(externs, js, js, null, null); [EOL]     js = "var n = Number();"; [EOL]     test(externs, js, js, null, null); [EOL] } <line_num>: 194,200
public void testRequiresAreCaughtBeforeProcessed() { [EOL]     String js = "var foo = {}; var bar = new foo.bar.goo();"; [EOL]     SourceFile input = SourceFile.fromCode("foo.js", js); [EOL]     Compiler compiler = new Compiler(); [EOL]     CompilerOptions opts = new CompilerOptions(); [EOL]     opts.checkRequires = CheckLevel.WARNING; [EOL]     opts.closurePass = true; [EOL]     Result result = compiler.compile(ImmutableList.<SourceFile>of(), ImmutableList.of(input), opts); [EOL]     JSError[] warnings = result.warnings; [EOL]     assertNotNull(warnings); [EOL]     assertTrue(warnings.length > 0); [EOL]     String expectation = "'foo.bar.goo' used but not goog.require'd"; [EOL]     for (JSError warning : warnings) { [EOL]         if (expectation.equals(warning.description)) { [EOL]             return; [EOL]         } [EOL]     } [EOL]     fail("Could not find the following warning:" + expectation); [EOL] } <line_num>: 202,225
public void testNoWarningsForThisConstructor() { [EOL]     String js = "var goog = {};" + "/** @constructor */goog.Foo = function() {};" + "goog.Foo.bar = function() {" + "  return new this.constructor; " + "};"; [EOL]     testSame(js); [EOL] } <line_num>: 227,235
public void testBug2062487() { [EOL]     testSame("var goog = {};" + "/** @constructor */goog.Foo = function() {" + "  /** @constructor */ this.x_ = function() {};" + "  this.y_ = new this.x_();" + "};"); [EOL] } <line_num>: 237,244
public void testIgnoreDuplicateWarningsForSingleClasses() { [EOL]     String[] js = new String[] { "var goog = {};" + "/** @constructor */goog.Foo = function() {};" + "goog.Foo.bar = function(){" + "  var first = new goog.Forgot();" + "  var second = new goog.Forgot();" + "};" }; [EOL]     String warning = "'goog.Forgot' used but not goog.require'd"; [EOL]     test(js, js, null, MISSING_REQUIRE_WARNING, warning); [EOL] } <line_num>: 246,257
