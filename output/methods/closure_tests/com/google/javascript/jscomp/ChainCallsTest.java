@Override [EOL] protected CompilerPass getProcessor(final Compiler compiler) { [EOL]     return new ChainCalls(compiler); [EOL] } <line_num>: 24,27
@Override [EOL] protected int getNumRepetitions() { [EOL]     return 1; [EOL] } <line_num>: 29,32
public void testUnchainedCalls() { [EOL]     test("" + "/** @constructor */ function Foo() {}\n" + "Foo.prototype.bar = function() { return this; };\n" + "var f = new Foo();\n" + "f.bar();\n" + "f.bar();\n", "" + "/** @constructor */ function Foo() {}\n" + "Foo.prototype.bar = function() { return this; };\n" + "var f = new Foo();\n" + "f.bar().bar();\n"); [EOL] } <line_num>: 34,48
public void testSecondCallReturnNotThis() { [EOL]     test("" + "/** @constructor */ function Foo() {}\n" + "Foo.prototype.bar = function() { return this; };\n" + "Foo.prototype.baz = function() {};\n" + "var f = new Foo();\n" + "f.bar();\n" + "f.baz();\n", "" + "/** @constructor */ function Foo() {}\n" + "Foo.prototype.bar = function() { return this; };\n" + "Foo.prototype.baz = function() {};\n" + "var f = new Foo();\n" + "f.bar().baz();\n"); [EOL] } <line_num>: 50,65
public void testDifferentInstance() { [EOL]     testSame("" + "/** @constructor */ function Foo() {}\n" + "Foo.prototype.bar = function() { return this; };\n" + "new Foo().bar();\n" + "new Foo().bar();\n"); [EOL] } <line_num>: 67,74
public void testSubclass() { [EOL]     testSame("" + "/** @constructor */ function Foo() {}\n" + "Foo.prototype.bar = function() { return this; };\n" + "/** @constructor\n@extends {Foo} */ function Baz() {}\n" + "Baz.prototype.bar = function() {};\n" + "(/** @type {Foo} */ new Baz()).bar();\n" + "(/** @type {Foo} */ new Baz()).bar();\n"); [EOL] } <line_num>: 76,85
public void testSimpleDefinitionFinder() { [EOL]     String defs = "/** @constructor */ function Foo() {}\n" + "Foo.prototype.a = function() { return this; };" + "/** @constructor */ function Bar() {}\n" + "Bar.prototype.a = function() {};"; [EOL]     testSame(defs + "var o = new Foo; o.a(); o.a();"); [EOL]     testSame(defs + "var o = new Bar; o.a(); o.a();"); [EOL] } <line_num>: 87,99
public void testSimpleDefinitionFinder2() { [EOL]     String defs = "/** @constructor */ function Foo() {}\n" + "Foo.prototype.a = function() { return this; };" + "/** @constructor */ function Bar() {}\n" + "Bar.prototype.a = function() { return this; };"; [EOL]     testSame(defs + "var o = new Foo; o.a().a();"); [EOL]     testSame(defs + "var o = new Bar; o.a().a();"); [EOL] } <line_num>: 101,113
