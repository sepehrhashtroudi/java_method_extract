public void testIsEmpty() { [EOL]     assertTrue(new JsMessage.Builder().build().isEmpty()); [EOL]     assertTrue(new JsMessage.Builder().appendStringPart("").build().isEmpty()); [EOL]     assertTrue(new JsMessage.Builder().appendStringPart("").appendStringPart("").build().isEmpty()); [EOL]     assertFalse(new JsMessage.Builder().appendStringPart("s").appendStringPart("").build().isEmpty()); [EOL]     assertFalse(new JsMessage.Builder().appendPlaceholderReference("3").build().isEmpty()); [EOL] } <line_num>: 26,35
public void testMeaningChangesId() { [EOL]     String id1 = new JsMessage.Builder().appendStringPart("foo").build().getId(); [EOL]     String id2 = new JsMessage.Builder().appendStringPart("foo").setMeaning("bar").build().getId(); [EOL]     assertFalse(id1.equals(id2)); [EOL] } <line_num>: 37,43
public void testHashValues() { [EOL]     final String EMPTY = ""; [EOL]     final String VAL = "Hello, world"; [EOL]     final long ANSWER_STRING_64 = 0x43ec5d9731515874L; [EOL]     final long ANSWER_EMPTY_64 = 0x468d9ea2c42361aaL; [EOL]     assertEquals(ANSWER_STRING_64, JsMessage.Hash.hash64(VAL)); [EOL]     assertEquals(ANSWER_EMPTY_64, JsMessage.Hash.hash64(EMPTY)); [EOL] } <line_num>: 45,53
