@Override [EOL] protected CompilerPass getProcessor(Compiler compiler) { [EOL]     return new ReplaceMessages(compiler, new SimpleMessageBundle(), false, style, strictReplacement); [EOL] } <line_num>: 37,41
@Override [EOL] protected int getNumRepetitions() { [EOL]     return 1; [EOL] } <line_num>: 43,47
@Override [EOL] protected void setUp() { [EOL]     messages = Maps.newHashMap(); [EOL]     strictReplacement = false; [EOL]     style = RELAX; [EOL] } <line_num>: 49,54
public void testReplaceSimpleMessage() { [EOL]     registerMessage(new JsMessage.Builder("MSG_A").appendStringPart("Hi\nthere").build()); [EOL]     test("/** @desc d */\n" + "var MSG_A = goog.getMsg('asdf');", "var MSG_A=\"Hi\\nthere\""); [EOL] } <line_num>: 56,64
public void testNameReplacement() { [EOL]     registerMessage(new JsMessage.Builder("MSG_B").appendStringPart("One ").appendPlaceholderReference("measly").appendStringPart(" ph").build()); [EOL]     test("/** @desc d */\n" + "var MSG_B=goog.getMsg('asdf {$measly}', {measly: x});", "var MSG_B=\"One \"+ (x +\" ph\" )"); [EOL] } <line_num>: 66,76
public void testGetPropReplacement() { [EOL]     registerMessage(new JsMessage.Builder("MSG_C").appendPlaceholderReference("amount").build()); [EOL]     test("/** @desc d */\n" + "var MSG_C = goog.getMsg('${$amount}', {amount: a.b.amount});", "var MSG_C=a.b.amount"); [EOL] } <line_num>: 78,86
public void testFunctionCallReplacement() { [EOL]     registerMessage(new JsMessage.Builder("MSG_D").appendPlaceholderReference("amount").build()); [EOL]     test("/** @desc d */\n" + "var MSG_D = goog.getMsg('${$amount}', {amount: getAmt()});", "var MSG_D=getAmt()"); [EOL] } <line_num>: 88,96
public void testMethodCallReplacement() { [EOL]     registerMessage(new JsMessage.Builder("MSG_E").appendPlaceholderReference("amount").build()); [EOL]     test("/** @desc d */\n" + "var MSG_E = goog.getMsg('${$amount}', {amount: obj.getAmt()});", "var MSG_E=obj.getAmt()"); [EOL] } <line_num>: 98,106
public void testHookReplacement() { [EOL]     registerMessage(new JsMessage.Builder("MSG_F").appendStringPart("#").appendPlaceholderReference("amount").appendStringPart(".").build()); [EOL]     test("/** @desc d */\n" + "var MSG_F = goog.getMsg('${$amount}', {amount: (a ? b : c)});", "var MSG_F=\"#\"+((a?b:c)+\".\")"); [EOL] } <line_num>: 108,118
public void testAddReplacement() { [EOL]     registerMessage(new JsMessage.Builder("MSG_G").appendPlaceholderReference("amount").build()); [EOL]     test("/** @desc d */\n" + "var MSG_G = goog.getMsg('${$amount}', {amount: x + ''});", "var MSG_G=x+\"\""); [EOL] } <line_num>: 120,128
public void testPlaceholderValueReferencedTwice() { [EOL]     registerMessage(new JsMessage.Builder("MSG_H").appendPlaceholderReference("dick").appendStringPart(", ").appendPlaceholderReference("dick").appendStringPart(" and ").appendPlaceholderReference("jane").build()); [EOL]     test("/** @desc d */\n" + "var MSG_H = goog.getMsg('{$dick}{$jane}', {jane: x, dick: y});", "var MSG_H=y+(\", \"+(y+(\" and \"+x)))"); [EOL] } <line_num>: 130,142
public void testPlaceholderNameInLowerCamelCase() { [EOL]     registerMessage(new JsMessage.Builder("MSG_I").appendStringPart("Sum: $").appendPlaceholderReference("amtEarned").build()); [EOL]     test("/** @desc d */\n" + "var MSG_I = goog.getMsg('${$amtEarned}', {amtEarned: x});", "var MSG_I=\"Sum: $\"+x"); [EOL] } <line_num>: 144,153
public void testQualifiedMessageName() { [EOL]     registerMessage(new JsMessage.Builder("MSG_J").appendStringPart("One ").appendPlaceholderReference("measly").appendStringPart(" ph").build()); [EOL]     test("/** @desc d */\n" + "a.b.c.MSG_J = goog.getMsg('asdf {$measly}', {measly: x});", "a.b.c.MSG_J=\"One \"+(x+\" ph\")"); [EOL] } <line_num>: 155,165
public void testSimpleMessageReplacementMissing() { [EOL]     style = Style.LEGACY; [EOL]     test("/** @desc d */\n" + "var MSG_E = 'd*6a0@z>t';", "var MSG_E = 'd*6a0@z>t'"); [EOL] } <line_num>: 167,172
public void testSimpleMessageReplacementMissingWithNewStyle() { [EOL]     test("/** @desc d */\n" + "var MSG_E = goog.getMsg('missing');", "var MSG_E = 'missing'"); [EOL] } <line_num>: 175,179
public void testStrictModeAndMessageReplacementAbsentInBundle() { [EOL]     strictReplacement = true; [EOL]     test("var MSG_E = 'Hello';", "var MSG_E = 'Hello';", ReplaceMessages.BUNDLE_DOES_NOT_HAVE_THE_MESSAGE); [EOL] } <line_num>: 181,185
public void testStrictModeAndMessageReplacementAbsentInNonEmptyBundle() { [EOL]     registerMessage(new JsMessage.Builder("MSG_J").appendStringPart("One ").appendPlaceholderReference("measly").appendStringPart(" ph").build()); [EOL]     strictReplacement = true; [EOL]     test("var MSG_E = 'Hello';", "var MSG_E = 'Hello';", ReplaceMessages.BUNDLE_DOES_NOT_HAVE_THE_MESSAGE); [EOL] } <line_num>: 187,198
public void testFunctionReplacementMissing() { [EOL]     style = Style.LEGACY; [EOL]     test("var MSG_F = function() {return 'asdf'};", "var MSG_F = function() {return\"asdf\"}"); [EOL] } <line_num>: 200,204
public void testFunctionWithParamReplacementMissing() { [EOL]     style = Style.LEGACY; [EOL]     test("var MSG_G = function(measly) {return 'asdf' + measly};", "var MSG_G=function(measly){return\"asdf\"+measly}"); [EOL] } <line_num>: 206,211
public void testPlaceholderNameInLowerUnderscoreCase() { [EOL]     test("var MSG_J = goog.getMsg('${$amt_earned}', {amt_earned: x});", "var MSG_J = goog.getMsg('${$amt_earned}', {amt_earned: x});", MESSAGE_TREE_MALFORMED); [EOL] } <line_num>: 213,218
public void testBadPlaceholderReferenceInReplacement() { [EOL]     registerMessage(new JsMessage.Builder("MSG_K").appendPlaceholderReference("amount").build()); [EOL]     test("var MSG_K = goog.getMsg('Hi {$jane}', {jane: x});", "var MSG_K = goog.getMsg('Hi {$jane}', {jane: x});", MESSAGE_TREE_MALFORMED); [EOL] } <line_num>: 220,229
public void testLegacyStyleNoPlaceholdersVarSyntax() { [EOL]     registerMessage(new JsMessage.Builder("MSG_A").appendStringPart("Hi\nthere").build()); [EOL]     style = Style.LEGACY; [EOL]     test("var MSG_A = 'd*6a0@z>t';", "var MSG_A=\"Hi\\nthere\""); [EOL] } <line_num>: 232,239
public void testLegacyStyleNoPlaceholdersFunctionSyntax() { [EOL]     registerMessage(new JsMessage.Builder("MSG_B").appendStringPart("Hi\nthere").build()); [EOL]     style = Style.LEGACY; [EOL]     test("var MSG_B = function() {return 'asdf'};", "var MSG_B=function(){return\"Hi\\nthere\"}"); [EOL] } <line_num>: 241,248
public void testLegacyStyleOnePlaceholder() { [EOL]     registerMessage(new JsMessage.Builder("MSG_C").appendStringPart("One ").appendPlaceholderReference("measly").appendStringPart(" ph").build()); [EOL]     style = Style.LEGACY; [EOL]     test("var MSG_C = function(measly) {return 'asdf' + measly};", "var MSG_C=function(measly){return\"One \"+(measly+\" ph\")}"); [EOL] } <line_num>: 250,260
public void testLegacyStyleTwoPlaceholders() { [EOL]     registerMessage(new JsMessage.Builder("MSG_D").appendPlaceholderReference("dick").appendStringPart(" and ").appendPlaceholderReference("jane").build()); [EOL]     style = Style.LEGACY; [EOL]     test("var MSG_D = function(jane, dick) {return jane + dick};", "var MSG_D=function(jane,dick){return dick+(\" and \"+jane)}"); [EOL] } <line_num>: 262,272
public void testLegacyStylePlaceholderNameInLowerCamelCase() { [EOL]     registerMessage(new JsMessage.Builder("MSG_E").appendStringPart("Sum: $").appendPlaceholderReference("amtEarned").build()); [EOL]     style = Style.LEGACY; [EOL]     test("var MSG_E = function(amtEarned) {return amtEarned + 'x'};", "var MSG_E=function(amtEarned){return\"Sum: $\"+amtEarned}"); [EOL] } <line_num>: 274,283
public void testLegacyStylePlaceholderNameInLowerUnderscoreCase() { [EOL]     registerMessage(new JsMessage.Builder("MSG_F").appendStringPart("Sum: $").appendPlaceholderReference("amt_earned").build()); [EOL]     style = Style.LEGACY; [EOL]     test("var MSG_F = function(amt_earned) {return amt_earned + 'x'};", "var MSG_F=function(amt_earned){return\"Sum: $\"+amt_earned}"); [EOL] } <line_num>: 285,296
public void testLegacyStyleBadPlaceholderReferenceInReplacemen() { [EOL]     registerMessage(new JsMessage.Builder("MSG_B").appendStringPart("Ola, ").appendPlaceholderReference("chimp").build()); [EOL]     test("var MSG_B = function(chump) {return chump + 'x'};", "var MSG_B = function(chump) {return chump + 'x'};", JsMessageVisitor.MESSAGE_TREE_MALFORMED); [EOL] } <line_num>: 298,307
public void testTranslatedPlaceHolderMissMatch() { [EOL]     registerMessage(new JsMessage.Builder("MSG_A").appendPlaceholderReference("a").appendStringPart("!").build()); [EOL]     test("var MSG_A = goog.getMsg('{$a}');", "var MSG_A = goog.getMsg('{$a}');", MESSAGE_TREE_MALFORMED); [EOL] } <line_num>: 309,318
public void testBadFallbackSyntax1() { [EOL]     test("/** @desc d */\n" + "var MSG_A = goog.getMsg('asdf');" + "var x = goog.getMsgWithFallback(MSG_A);", null, JsMessageVisitor.BAD_FALLBACK_SYNTAX); [EOL] } <line_num>: 320,325
public void testBadFallbackSyntax2() { [EOL]     test("var x = goog.getMsgWithFallback('abc', 'bcd');", null, JsMessageVisitor.BAD_FALLBACK_SYNTAX); [EOL] } <line_num>: 327,330
public void testBadFallbackSyntax3() { [EOL]     test("/** @desc d */\n" + "var MSG_A = goog.getMsg('asdf');" + "var x = goog.getMsgWithFallback(MSG_A, y);", null, JsMessageVisitor.FALLBACK_ARG_ERROR); [EOL] } <line_num>: 332,337
public void testBadFallbackSyntax4() { [EOL]     test("/** @desc d */\n" + "var MSG_A = goog.getMsg('asdf');" + "var x = goog.getMsgWithFallback(y, MSG_A);", null, JsMessageVisitor.FALLBACK_ARG_ERROR); [EOL] } <line_num>: 339,344
public void testUseFallback() { [EOL]     registerMessage(new JsMessage.Builder("MSG_B").appendStringPart("translated").build()); [EOL]     test("/** @desc d */\n" + "var MSG_A = goog.getMsg('msg A');" + "/** @desc d */\n" + "var MSG_B = goog.getMsg('msg B');" + "var x = goog.getMsgWithFallback(MSG_A, MSG_B);", "var MSG_A = 'msg A';" + "var MSG_B = 'translated';" + "var x = MSG_B;"); [EOL] } <line_num>: 346,358
public void testFallbackEmptyBundle() { [EOL]     test("/** @desc d */\n" + "var MSG_A = goog.getMsg('msg A');" + "/** @desc d */\n" + "var MSG_B = goog.getMsg('msg B');" + "var x = goog.getMsgWithFallback(MSG_A, MSG_B);", "var MSG_A = 'msg A';" + "var MSG_B = 'msg B';" + "var x = MSG_A;"); [EOL] } <line_num>: 360,369
public void testNoUseFallback() { [EOL]     registerMessage(new JsMessage.Builder("MSG_A").appendStringPart("translated").build()); [EOL]     test("/** @desc d */\n" + "var MSG_A = goog.getMsg('msg A');" + "/** @desc d */\n" + "var MSG_B = goog.getMsg('msg B');" + "var x = goog.getMsgWithFallback(MSG_A, MSG_B);", "var MSG_A = 'translated';" + "var MSG_B = 'msg B';" + "var x = MSG_A;"); [EOL] } <line_num>: 371,383
public void testNoUseFallback2() { [EOL]     registerMessage(new JsMessage.Builder("MSG_C").appendStringPart("translated").build()); [EOL]     test("/** @desc d */\n" + "var MSG_A = goog.getMsg('msg A');" + "/** @desc d */\n" + "var MSG_B = goog.getMsg('msg B');" + "var x = goog.getMsgWithFallback(MSG_A, MSG_B);", "var MSG_A = 'msg A';" + "var MSG_B = 'msg B';" + "var x = MSG_A;"); [EOL] } <line_num>: 385,397
private void registerMessage(JsMessage message) { [EOL]     messages.put(message.getKey(), message); [EOL] } <line_num>: 399,401
@Override [EOL] public JsMessage getMessage(String id) { [EOL]     return messages.get(id); [EOL] } <line_num>: 405,408
@Override [EOL] public Iterable<JsMessage> getAllMessages() { [EOL]     return messages.values(); [EOL] } <line_num>: 410,413
@Override [EOL] public JsMessage.IdGenerator idGenerator() { [EOL]     return null; [EOL] } <line_num>: 415,418
