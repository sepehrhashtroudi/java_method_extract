public NameAnonymousFunctionsTest() { [EOL]     super(EXTERNS); [EOL] } <line_num>: 27,29
@Override [EOL] public CompilerPass getProcessor(Compiler compiler) { [EOL]     return new NameAnonymousFunctions(compiler); [EOL] } <line_num>: 31,33
public void testSimpleVarAssignment() { [EOL]     test("var a = function() { return 1; }", "var a = function $a$() { return 1; }"); [EOL] } <line_num>: 35,38
public void testAssignmentToProperty() { [EOL]     test("var a = {}; a.b = function() { return 1; }", "var a = {}; a.b = function $a$b$() { return 1; }"); [EOL] } <line_num>: 40,43
public void testAssignmentToPrototype() { [EOL]     test("function a() {} a.prototype.b = function() { return 1; };", "function a() {} " + "a.prototype.b = function $a$$b$() { return 1; };"); [EOL] } <line_num>: 45,49
public void testAssignmentToPrototype2() { [EOL]     test("var a = {}; " + "a.b = function() {}; " + "a.b.prototype.c = function() { return 1; };", "var a = {}; " + "a.b = function $a$b$() {}; " + "a.b.prototype.c = function $a$b$$c$() { return 1; };"); [EOL] } <line_num>: 51,58
public void testAssignmentToPrototype3() { [EOL]     test("function a() {} a.prototype['b'] = function() { return 1; };", "function a() {} " + "a.prototype['b'] = function $a$$b$() { return 1; };"); [EOL] } <line_num>: 60,64
public void testAssignmentToPrototype4() { [EOL]     test("function a() {} a['prototype']['b'] = function() { return 1; };", "function a() {} " + "a['prototype']['b'] = function $a$$b$() { return 1; };"); [EOL] } <line_num>: 66,70
public void testPrototypeInitializer() { [EOL]     test("function a(){} a.prototype = {b: function() { return 1; }};", "function a(){} " + "a.prototype = {b: function $a$$b$() { return 1; }};"); [EOL] } <line_num>: 72,76
public void testMultiplePrototypeInitializer() { [EOL]     test("function a(){} a.prototype = {b: function() { return 1; }, " + "c: function() { return 2; }};", "function a(){} " + "a.prototype = {b: function $a$$b$() { return 1; }," + "c: function $a$$c$() { return 2; }};"); [EOL] } <line_num>: 78,84
public void testRecursiveObjectLiteral() { [EOL]     test("function a(){} a.prototype = {b: {c: function() { return 1; }}}", "function a(){}a.prototype={b:{c:function $a$$b$c$(){return 1}}}"); [EOL] } <line_num>: 86,89
public void testAssignmentToPropertyOfCallReturnValue() { [EOL]     test("document.getElementById('x').onClick = function() {};", "document.getElementById('x').onClick = " + "function $document$getElementById$onClick$() {};"); [EOL] } <line_num>: 91,95
public void testAssignmentToPropertyOfArrayElement() { [EOL]     test("var a = {}; a.b = [{}]; a.b[0].c = function() {};", "var a = {}; a.b = [{}]; a.b[0].c = function $a$b$0$c$() {};"); [EOL]     test("var a = {b: {'c': {}}}; a.b['c'].d = function() {};", "var a = {b: {'c': {}}}; a.b['c'].d = function $a$b$c$d$() {};"); [EOL]     test("var a = {b: {'c': {}}}; a.b[x()].d = function() {};", "var a = {b: {'c': {}}}; a.b[x()].d = function $a$b$x$d$() {};"); [EOL] } <line_num>: 97,104
public void testAssignmentToGetElem() { [EOL]     test("function f() {win['x' + this.id] = function(a){};}", "function f() {win['x' + this.id] = function $win$x$this$id$(a){};}"); [EOL] } <line_num>: 106,109
public void testGetElemWithDashes() { [EOL]     test("var foo = {}; foo['-'] = function() {};", "var foo = {}; foo['-'] = function $foo$__0$() {};"); [EOL] } <line_num>: 111,114
public void testWhatCausedIeToFail() { [EOL]     test("var main;" + "(function() {" + "  main = function() {" + "    return 5;" + "  };" + "})();" + "" + "main();", "var main;(function(){main=function $main$(){return 5}})();main()"); [EOL] } <line_num>: 116,129
