public AliasStringsTest() { [EOL]     super(EXTERNS); [EOL] } <line_num>: 36,38
@Override [EOL] public void setUp() { [EOL]     super.enableLineNumberCheck(false); [EOL] } <line_num>: 40,43
@Override [EOL] public CompilerPass getProcessor(Compiler compiler) { [EOL]     AliasStrings pass = new AliasStrings(compiler, moduleGraph, strings, "(?i)secret", false); [EOL]     if (hashReduction) [EOL]         pass.unitTestHashReductionMask = 0; [EOL]     return pass; [EOL] } <line_num>: 45,52
public void testAssignment() { [EOL]     strings = ImmutableSet.of("none", "width", "overimaginative"); [EOL]     testSame("var foo='foo'"); [EOL]     testSame("a='titanium',b='titanium',c='titanium',d='titanium'"); [EOL]     testSame("myStr='width'"); [EOL]     testSame("Bar.prototype.start='none'"); [EOL]     test("a='overimaginative';b='overimaginative'", "var $$S_overimaginative='overimaginative';" + "a=$$S_overimaginative;b=$$S_overimaginative"); [EOL]     testSame("var width=1234"); [EOL]     testSame("width=1234;width=10000;width=9900;width=17;"); [EOL] } <line_num>: 54,71
public void testSeveral() { [EOL]     strings = ImmutableSet.of("", "px", "none", "width"); [EOL]     test("function f() {" + "var styles=['width',100,'px','display','none'].join('')}", "var $$S_='';" + "var $$S_none='none';" + "var $$S_px='px';" + "var $$S_width='width';" + "function f() {var styles=[$$S_width,100,$$S_px,'display'," + "$$S_none].join($$S_)}"); [EOL] } <line_num>: 73,84
public void testSortedOutput() { [EOL]     strings = ImmutableSet.of("aba", "aaa", "aca", "bca", "bba"); [EOL]     test("function f() {return ['aba', 'aaa', 'aca', 'bca', 'bba']}", "var $$S_aaa='aaa';" + "var $$S_aba='aba';" + "var $$S_aca='aca';" + "var $$S_bba='bba';" + "var $$S_bca='bca';" + "function f() {" + "  return [$$S_aba, $$S_aaa, $$S_aca, $$S_bca, $$S_bba]}"); [EOL] } <line_num>: 86,96
public void testObjectLiterals() { [EOL]     strings = ImmutableSet.of("px", "!@#$%^&*()"); [EOL]     test("var foo={px:435}", "var foo={px:435}"); [EOL]     test("var foo={'px':435}", "var foo={'px':435}"); [EOL]     test("bar=function f(){return {'px':435}}", "bar=function f(){return {'px':435}}"); [EOL]     test("function f() {var foo={bar:'!@#$%^&*()'}}", "var $$S_$21$40$23$24$25$5e$26$2a$28$29='!@#$%^&*()';" + "function f() {var foo={bar:$$S_$21$40$23$24$25$5e$26$2a$28$29}}"); [EOL]     test("function f() {var foo={px:435,foo:'px',bar:'baz'}}", "var $$S_px='px';" + "function f() {var foo={px:435,foo:$$S_px,bar:'baz'}}"); [EOL] } <line_num>: 98,115
public void testGetProp() { [EOL]     strings = ImmutableSet.of("px", "width"); [EOL]     testSame("function f(){element.style.px=1234}"); [EOL]     test("function f(){shape.width.units='px'}", "var $$S_px='px';function f(){shape.width.units=$$S_px}"); [EOL]     test("function f(){shape['width'].units='pt'}", "var $$S_width='width';" + "function f(){shape[$$S_width].units='pt'}"); [EOL] } <line_num>: 117,128
public void testFunctionCalls() { [EOL]     strings = ImmutableSet.of("", ",", "overimaginative"); [EOL]     testSame("alert('')"); [EOL]     testSame("var a=[1,2,3];a.join(',')"); [EOL]     test("f('overimaginative', 'overimaginative')", "var $$S_overimaginative='overimaginative';" + "f($$S_overimaginative,$$S_overimaginative)"); [EOL] } <line_num>: 130,140
public void testRegularExpressions() { [EOL]     strings = ImmutableSet.of("px"); [EOL]     testSame("/px/.match('10px')"); [EOL] } <line_num>: 142,146
public void testBlackList() { [EOL]     test("(function (){var f=\'sec ret\';g=\"TOPseCreT\"})", "var $$S_sec$20ret='sec ret';" + "(function (){var f=$$S_sec$20ret;g=\"TOPseCreT\"})"); [EOL] } <line_num>: 148,152
public void testLongStableAlias() { [EOL]     strings = ALL_STRINGS; [EOL]     test("a='Antidisestablishmentarianism';" + "b='Antidisestablishmentarianism';", "var $$S_Antidisestablishment_506eaf9c=" + "  'Antidisestablishmentarianism';" + "a=$$S_Antidisestablishment_506eaf9c;" + "b=$$S_Antidisestablishment_506eaf9c"); [EOL]     test("a='AntidisestablishmentarianIsm';" + "b='AntidisestablishmentarianIsm';", "var $$S_Antidisestablishment_6823e97c=" + "  'AntidisestablishmentarianIsm';" + "a=$$S_Antidisestablishment_6823e97c;" + "b=$$S_Antidisestablishment_6823e97c"); [EOL] } <line_num>: 154,176
public void testLongStableAliasHashCollision() { [EOL]     strings = ALL_STRINGS; [EOL]     hashReduction = true; [EOL]     test("f('Antidisestablishmentarianism');" + "f('Antidisestablishmentarianism');" + "f('Antidisestablishmentarianismo');" + "f('Antidisestablishmentarianismo');", "var $$S_Antidisestablishment_0=" + "  'Antidisestablishmentarianism';" + "var $$S_Antidisestablishment_0_1=" + "  'Antidisestablishmentarianismo';" + "f($$S_Antidisestablishment_0);" + "f($$S_Antidisestablishment_0);" + "f($$S_Antidisestablishment_0_1);" + "f($$S_Antidisestablishment_0_1);"); [EOL] } <line_num>: 178,199
public void testStringsThatAreGlobalVarValues() { [EOL]     strings = ALL_STRINGS; [EOL]     testSame("var foo='foo'; var bar='';"); [EOL]     testSame("var foo=['foo','bar'];"); [EOL]     testSame("var foo=['foo',['bar']];"); [EOL]     test("var foo=['foo', 'bar'];function bar() {return 'foo';}", "var $$S_foo='foo';" + "var foo=[$$S_foo, 'bar'];function bar() {return $$S_foo;}"); [EOL]     testSame("var foo={'foo': 'bar'};"); [EOL]     testSame("var foo={'foo': {'bar': 'baz'}};"); [EOL]     test("var foo={'foo': 'bar'};function bar() {return 'foo';}", "var $$S_foo='foo';var foo={'foo': 'bar'};" + "function bar() {return $$S_foo;}"); [EOL]     test("var foo={'foo': 'foo'};function bar() {return 'foo';}", "var $$S_foo='foo';" + "var foo={'foo': $$S_foo};function bar() {return $$S_foo;}"); [EOL] } <line_num>: 202,236
public void testStringsInModules() { [EOL]     strings = ALL_STRINGS; [EOL]     JSModule[] modules = createModuleBush("function f(a) { alert('f:' + a); }" + "function g() { alert('ciao'); }", "f('-------hi-------');" + "f('bye');" + "function h(a) { alert('h:' + a); }", "f('-------hi-------');" + "h('ciao' + '------adios------');" + "(function() { alert('zzz'); })();", "f('-------hi-------'); alert('------adios------');" + "h('-----peaches-----'); h('-----peaches-----');"); [EOL]     moduleGraph = new JSModuleGraph(modules); [EOL]     test(modules, new String[] { "var $$S_ciao = 'ciao';" + "var $$S_f$3a = 'f:';" + "function f(a) { alert($$S_f$3a + a); }" + "function g() { alert($$S_ciao); }", "var $$S_$2d$2d$2d$2d$2d$2d$2dhi$2d$2d$2d$2d$2d$2d$2d" + " = '-------hi-------';" + "var $$S_$2d$2d$2d$2d$2d$2d_adios$2d$2d$2d$2d$2d$2d" + " = '------adios------'; " + "var $$S_h$3a = 'h:';" + "f($$S_$2d$2d$2d$2d$2d$2d$2dhi$2d$2d$2d$2d$2d$2d$2d);" + "f('bye');" + "function h(a) { alert($$S_h$3a + a); }", "var $$S_zzz = 'zzz';" + "f($$S_$2d$2d$2d$2d$2d$2d$2dhi$2d$2d$2d$2d$2d$2d$2d);" + "h($$S_ciao + $$S_$2d$2d$2d$2d$2d$2d_adios$2d$2d$2d$2d$2d$2d);" + "(function() { alert($$S_zzz) })();", "var $$S_$2d$2d$2d$2d$2dpeaches$2d$2d$2d$2d$2d" + " = '-----peaches-----';" + "f($$S_$2d$2d$2d$2d$2d$2d$2dhi$2d$2d$2d$2d$2d$2d$2d);" + "alert($$S_$2d$2d$2d$2d$2d$2d_adios$2d$2d$2d$2d$2d$2d);" + "h($$S_$2d$2d$2d$2d$2dpeaches$2d$2d$2d$2d$2d);" + "h($$S_$2d$2d$2d$2d$2dpeaches$2d$2d$2d$2d$2d);" }); [EOL]     moduleGraph = null; [EOL] } <line_num>: 238,294
public void testStringsInModules2() { [EOL]     strings = ALL_STRINGS; [EOL]     JSModule[] modules = createModuleBush("function g() { alert('ciao'); }", "function h(a) { alert('h:' + a); }", "h('ciao' + 'adios');", "g();"); [EOL]     moduleGraph = new JSModuleGraph(modules); [EOL]     test(modules, new String[] { "var $$S_ciao = 'ciao';" + "function g() { alert($$S_ciao); }", "var $$S_h$3a = 'h:';" + "function h(a) { alert($$S_h$3a + a); }", "h($$S_ciao + 'adios');", "g();" }); [EOL]     moduleGraph = null; [EOL] } <line_num>: 296,330
public void testEmptyModules() { [EOL]     JSModule[] modules = createModuleStar("", "function foo() { f('good') }", "function foo() { f('good') }"); [EOL]     moduleGraph = new JSModuleGraph(modules); [EOL]     test(modules, new String[] { "var $$S_good='good'", "function foo() {f($$S_good)}", "function foo() {f($$S_good)}" }); [EOL]     moduleGraph = null; [EOL] } <line_num>: 333,354
