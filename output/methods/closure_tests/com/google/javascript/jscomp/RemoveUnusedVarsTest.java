public RemoveUnusedVarsTest() { [EOL]     super("function alert() {}"); [EOL]     enableNormalize(); [EOL] } <line_num>: 26,29
@Override [EOL] public void setUp() { [EOL]     removeGlobal = true; [EOL]     preserveFunctionExpressionNames = false; [EOL]     modifyCallSites = false; [EOL] } <line_num>: 31,36
@Override [EOL] protected CompilerPass getProcessor(final Compiler compiler) { [EOL]     return new RemoveUnusedVars(compiler, removeGlobal, preserveFunctionExpressionNames, modifyCallSites); [EOL] } <line_num>: 38,43
public void testRemoveUnusedVars() { [EOL]     test("var a;var b=3;var c=function(){};var x=A();var y; var z;" + "function A(){B()} function B(){C(b)} function C(){} " + "function X(){Y()} function Y(z){Z(x)} function Z(){y} " + "P=function(){A()}; " + "try{0}catch(e){a}", "var a;var b=3;A();function A(){B()}" + "function B(){C(b)}" + "function C(){}" + "P=function(){A()}" + ";try{0}catch(e){a}"); [EOL]     test("var i=0;var j=0;if(i>0){var k=1;}", "var i=0;if(i>0);"); [EOL]     test("for (var i in booyah) {" + "  if (i > 0) x += ', ';" + "  var arg = 'foo';" + "  if (arg.length > 40) {" + "    var unused = 'bar';" + "    arg = arg.substr(0, 40) + '...';" + "  }" + "  x += arg;" + "}", "for(var i in booyah){if(i>0)x+=\", \";" + "var arg=\"foo\";if(arg.length>40)arg=arg.substr(0,40)+\"...\";" + "x+=arg}"); [EOL]     test("function A(){}" + "if(0){function B(){}}win.setTimeout(function(){A()})", "function A(){}" + "if(0);win.setTimeout(function(){A()})"); [EOL]     test("function A(){A()}function B(){B()}B()", "function B(){B()}B()"); [EOL]     test("var x,y=2,z=3;A(x);B(z);var a,b,c=4;C()", "var x,z=3;A(x);B(z);C()"); [EOL]     test("for(var i=0,j=0;i<10;){}" + "for(var x=0,y=0;;y++){}" + "for(var a,b;;){a}" + "for(var c,d;;);" + "for(var item in items){}", "for(var i=0;i<10;);" + "for(var y=0;;y++);" + "for(var a;;)a;" + "for(;;);" + "for(var item in items);"); [EOL]     test("var a,b,c,d;var e=[b,c];var x=e[3];var f=[d];print(f[0])", "var d;var f=[d];print(f[0])"); [EOL]     test("var x;function A(){var x;B()}function B(){print(x)}A()", "var x;function A(){B()}function B(){print(x)}A()"); [EOL]     test("function A(){var x;return function(){print(x)}}A()", "function A(){var x;return function(){print(x)}}A()"); [EOL]     test("function A(){}function B(){" + "var c,d,e,f,g,h;" + "function C(){print(c)}" + "var handler=function(){print(d)};" + "var handler2=function(){handler()};" + "e=function(){print(e)};" + "if(1){function G(){print(g)}}" + "arr=[function(){print(h)}];" + "return function(){print(f)}}B()", "function B(){" + "var f,h;" + "if(1);" + "arr=[function(){print(h)}];" + "return function(){print(f)}}B()"); [EOL]     test("var a,b=1; function _A1() {this.foo(a)}", "var a;function _A1(){this.foo(a)}"); [EOL]     test("undefinedVar = 1", "undefinedVar=1"); [EOL]     test("var a,b=foo(),c=i++,d;var e=boo();var f;print(d);", "foo(); i++; var d; boo(); print(d)"); [EOL]     test("var a,b=foo()", "foo()"); [EOL]     test("var b=foo(),a", "foo()"); [EOL]     test("var a,b=foo(a)", "var a; foo(a);"); [EOL] } <line_num>: 45,148
public void testFunctionArgRemoval() { [EOL]     test("var b=function(c,d){return};b(1,2)", "var b=function(){return};b(1,2)"); [EOL]     testSame("var b=function(c,d){return c+d};b(1,2)"); [EOL]     testSame("var b=function(e,f,c,d){return c+d};b(1,2)"); [EOL]     test("var b=function(c,d,e,f){return c+d};b(1,2)", "var b=function(c,d){return c+d};b(1,2)"); [EOL]     test("var b=function(e,c,f,d,g){return c+d};b(1,2)", "var b=function(e,c,f,d){return c+d};b(1,2)"); [EOL] } <line_num>: 150,164
public void testFunctionArgRemovalFromCallSites() { [EOL]     this.modifyCallSites = true; [EOL]     test("var b=function(c,d){return};b(1,2)", "var b=function(){return};b()"); [EOL]     testSame("var b=function(c,d){return c+d};b(1,2)"); [EOL]     test("var b=function(e,f,c,d){return c+d};b(1,2)", "var b=function(c,d){return c+d};b()"); [EOL]     test("var b=function(c,d,e,f){return c+d};b(1,2)", "var b=function(c,d){return c+d};b(1,2)"); [EOL]     test("var b=function(e,c,f,d,g){return c+d};b(1,2)", "var b=function(c,d){return c+d};b(2)"); [EOL] } <line_num>: 166,183
public void testFunctionsDeadButEscaped() { [EOL]     testSame("function b(a) { a = 1; print(arguments[0]) }; b(6)"); [EOL]     testSame("function b(a) { a = 1; arguments=1; }; b(6)"); [EOL]     testSame("function b(a) { var c = 2; a = c; print(arguments[0]) }; b(6)"); [EOL] } <line_num>: 185,189
public void testVarInControlStructure() { [EOL]     test("if (true) var b = 3;", "if(true);"); [EOL]     test("if (true) var b = 3; else var c = 5;", "if(true);else;"); [EOL]     test("while (true) var b = 3;", "while(true);"); [EOL]     test("for (;;) var b = 3;", "for(;;);"); [EOL]     test("do var b = 3; while(true)", "do;while(true)"); [EOL]     test("with (true) var b = 3;", "with(true);"); [EOL]     test("f: var b = 3;", "f:{}"); [EOL] } <line_num>: 191,199
public void testRValueHoisting() { [EOL]     test("var x = foo();", "foo()"); [EOL]     test("var x = {a: foo()};", "({a:foo()})"); [EOL]     test("var x=function y(){}", ""); [EOL] } <line_num>: 201,206
public void testModule() { [EOL]     test(createModules("var unreferenced=1; function x() { foo(); }" + "function uncalled() { var x; return 2; }", "var a,b; function foo() { this.foo(a); } x()"), new String[] { "function x(){foo()}", "var a;function foo(){this.foo(a)}x()" }); [EOL] } <line_num>: 208,217
public void testRecursiveFunction1() { [EOL]     testSame("(function x(){return x()})()"); [EOL] } <line_num>: 219,221
public void testRecursiveFunction2() { [EOL]     test("var x = 3; (function x() { return x(); })();", "(function x$$1(){return x$$1()})()"); [EOL] } <line_num>: 223,226
public void testFunctionWithName1() { [EOL]     test("var x=function f(){};x()", "var x=function(){};x()"); [EOL]     preserveFunctionExpressionNames = true; [EOL]     testSame("var x=function f(){};x()"); [EOL] } <line_num>: 228,234
public void testFunctionWithName2() { [EOL]     test("foo(function bar(){})", "foo(function(){})"); [EOL]     preserveFunctionExpressionNames = true; [EOL]     testSame("foo(function bar(){})"); [EOL] } <line_num>: 236,242
public void testRemoveGlobal1() { [EOL]     removeGlobal = false; [EOL]     testSame("var x=1"); [EOL]     test("var y=function(x){var z;}", "var y=function(x){}"); [EOL] } <line_num>: 244,248
public void testRemoveGlobal2() { [EOL]     removeGlobal = false; [EOL]     testSame("var x=1"); [EOL]     test("function y(x){var z;}", "function y(x){}"); [EOL] } <line_num>: 250,254
public void testRemoveGlobal3() { [EOL]     removeGlobal = false; [EOL]     testSame("var x=1"); [EOL]     test("function x(){function y(x){var z;}y()}", "function x(){function y(x){}y()}"); [EOL] } <line_num>: 256,261
public void testRemoveGlobal4() { [EOL]     removeGlobal = false; [EOL]     testSame("var x=1"); [EOL]     test("function x(){function y(x){var z;}}", "function x(){}"); [EOL] } <line_num>: 263,268
public void testIssue168a() { [EOL]     test("function _a(){" + "  (function(x){ _b(); })(1);" + "}" + "function _b(){" + "  _a();" + "}", "function _a(){(function(){_b()})(1)}" + "function _b(){_a()}"); [EOL] } <line_num>: 270,279
public void testIssue168b() { [EOL]     removeGlobal = false; [EOL]     test("function a(){" + "  (function(x){ b(); })(1);" + "}" + "function b(){" + "  a();" + "}", "function a(){(function(x){b()})(1)}" + "function b(){a()}"); [EOL] } <line_num>: 281,291
public void testUnusedAssign1() { [EOL]     test("var x = 3; x = 5;", ""); [EOL] } <line_num>: 293,295
public void testUnusedAssign2() { [EOL]     test("function f(a) { a = 3; } this.x = f;", "function f(){} this.x=f"); [EOL] } <line_num>: 297,300
public void testUnusedAssign3() { [EOL]     test("try { throw ''; } catch (e) { e = 3; }", "try{throw\"\";}catch(e){e=3}"); [EOL] } <line_num>: 302,307
public void testUnusedAssign4() { [EOL]     test("function f(a, b) { this.foo(b); a = 3; } this.x = f;", "function f(a,b){this.foo(b);}this.x=f"); [EOL] } <line_num>: 309,312
public void testUnusedAssign5() { [EOL]     test("var z = function f() { f = 3; }; z();", "var z=function(){};z()"); [EOL] } <line_num>: 314,317
public void testUnusedAssign5b() { [EOL]     test("var z = function f() { f = alert(); }; z();", "var z=function(){alert()};z()"); [EOL] } <line_num>: 319,322
public void testUnusedAssign6() { [EOL]     test("var z; z = 3;", ""); [EOL] } <line_num>: 324,326
public void testUnusedAssign6b() { [EOL]     test("var z; z = alert();", "alert()"); [EOL] } <line_num>: 328,330
public void testUnusedAssign7() { [EOL]     test("var a = 3; for (var i in {}) { i = a; }", "var a = 3; var i; for (i in {}) {i = a;}"); [EOL] } <line_num>: 332,337
public void testUnusedAssign8() { [EOL]     test("var a = 3; for (var i in {}) { i = a; } alert(a);", "var a = 3; var i; for (i in {}) {i = a} alert(a);"); [EOL] } <line_num>: 339,344
public void testUnusedPropAssign1() { [EOL]     test("var x = {}; x.foo = 3;", ""); [EOL] } <line_num>: 346,348
public void testUnusedPropAssign1b() { [EOL]     test("var x = {}; x.foo = alert();", "alert()"); [EOL] } <line_num>: 350,352
public void testUnusedPropAssign2() { [EOL]     test("var x = {}; x['foo'] = 3;", ""); [EOL] } <line_num>: 354,356
public void testUnusedPropAssign2b() { [EOL]     test("var x = {}; x[alert()] = alert();", "alert(),alert()"); [EOL] } <line_num>: 358,360
public void testUnusedPropAssign3() { [EOL]     test("var x = {}; x['foo'] = {}; x['bar'] = 3", ""); [EOL] } <line_num>: 362,364
public void testUnusedPropAssign3b() { [EOL]     test("var x = {}; x[alert()] = alert(); x[alert() + alert()] = alert()", "alert(),alert();(alert() + alert()),alert()"); [EOL] } <line_num>: 366,369
public void testUnusedPropAssign4() { [EOL]     test("var x = {foo: 3}; x['foo'] = 5;", ""); [EOL] } <line_num>: 371,373
public void testUnusedPropAssign5() { [EOL]     test("var x = {foo: bar()}; x['foo'] = 5;", "var x={foo:bar()};x[\"foo\"]=5"); [EOL] } <line_num>: 375,378
public void testUnusedPropAssign6() { [EOL]     test("var x = function() {}; x.prototype.bar = function() {};", ""); [EOL] } <line_num>: 380,382
public void testUnusedPropAssign7() { [EOL]     test("var x = {}; x[x.foo] = x.bar;", ""); [EOL] } <line_num>: 384,386
public void testUnusedPropAssign7b() { [EOL]     testSame("var x = {}; x[x.foo] = alert(x.bar);"); [EOL] } <line_num>: 388,390
public void testUnusedPropAssign7c() { [EOL]     test("var x = {}; x[alert(x.foo)] = x.bar;", "var x={};x[alert(x.foo)]=x.bar"); [EOL] } <line_num>: 392,395
public void testUsedPropAssign1() { [EOL]     test("function f(x) { x.bar = 3; } f({});", "function f(x){x.bar=3}f({})"); [EOL] } <line_num>: 397,400
public void testUsedPropAssign2() { [EOL]     test("try { throw z; } catch (e) { e.bar = 3; }", "try{throw z;}catch(e){e.bar=3}"); [EOL] } <line_num>: 402,405
public void testUsedPropAssign3() { [EOL]     test("var x = {}; x.foo = 3; x = bar();", "var x={};x.foo=3;x=bar()"); [EOL] } <line_num>: 407,411
public void testUsedPropAssign4() { [EOL]     test("var y = foo(); var x = {}; x.foo = 3; y[x.foo] = 5;", "var y=foo();var x={};x.foo=3;y[x.foo]=5"); [EOL] } <line_num>: 413,416
public void testUsedPropAssign5() { [EOL]     test("var y = foo(); var x = 3; y[x] = 5;", "var y=foo();var x=3;y[x]=5"); [EOL] } <line_num>: 418,421
public void testUsedPropAssign6() { [EOL]     test("var x = newNodeInDom(doc); x.innerHTML = 'new text';", "var x=newNodeInDom(doc);x.innerHTML=\"new text\""); [EOL] } <line_num>: 423,426
public void testUsedPropAssign7() { [EOL]     testSame("var x = {}; for (x in alert()) { x.foo = 3; }"); [EOL] } <line_num>: 428,430
public void testUsedPropAssign8() { [EOL]     testSame("for (var x in alert()) { x.foo = 3; }"); [EOL] } <line_num>: 432,434
public void testUsedPropAssign9() { [EOL]     testSame("var x = {}; x.foo = newNodeInDom(doc); x.foo.innerHTML = 'new test';"); [EOL] } <line_num>: 436,439
public void testDependencies1() { [EOL]     test("var a = 3; var b = function() { alert(a); };", ""); [EOL] } <line_num>: 441,443
public void testDependencies1b() { [EOL]     test("var a = 3; var b = alert(function() { alert(a); });", "var a=3;alert(function(){alert(a)})"); [EOL] } <line_num>: 445,448
public void testDependencies1c() { [EOL]     test("var a = 3; var _b = function() { alert(a); };", "var a=3;var _b=function(){alert(a)}"); [EOL] } <line_num>: 450,453
public void testDependencies2() { [EOL]     test("var a = 3; var b = 3; b = function() { alert(a); };", ""); [EOL] } <line_num>: 455,457
public void testDependencies2b() { [EOL]     test("var a = 3; var b = 3; b = alert(function() { alert(a); });", "var a=3;alert(function(){alert(a)})"); [EOL] } <line_num>: 459,462
public void testDependencies2c() { [EOL]     testSame("var a=3;var _b=3;_b=function(){alert(a)}"); [EOL] } <line_num>: 464,466
public void testGlobalVarReferencesLocalVar() { [EOL]     testSame("var a=3;function f(){var b=4;a=b}alert(a + f())"); [EOL] } <line_num>: 468,470
public void testLocalVarReferencesGlobalVar1() { [EOL]     testSame("var a=3;function f(b, c){b=a; alert(b + c);} f();"); [EOL] } <line_num>: 472,474
public void testLocalVarReferencesGlobalVar2() { [EOL]     test("var a=3;function f(b, c){b=a; alert(c);} f();", "function f(b, c) { alert(c); } f();"); [EOL]     this.modifyCallSites = true; [EOL]     test("var a=3;function f(b, c){b=a; alert(c);} f();", "function f(c) { alert(c); } f();"); [EOL] } <line_num>: 476,482
public void testNestedAssign1() { [EOL]     test("var b = null; var a = (b = 3); alert(a);", "var a = 3; alert(a);"); [EOL] } <line_num>: 484,487
public void testNestedAssign2() { [EOL]     test("var a = 1; var b = 2; var c = (b = a); alert(c);", "var a = 1; var c = a; alert(c);"); [EOL] } <line_num>: 489,492
public void testNestedAssign3() { [EOL]     test("var b = 0; var z; z = z = b = 1; alert(b);", "var b = 0; b = 1; alert(b);"); [EOL] } <line_num>: 494,497
public void testCallSiteInteraction() { [EOL]     this.modifyCallSites = true; [EOL]     testSame("var b=function(){return};b()"); [EOL]     testSame("var b=function(c){return c};b(1)"); [EOL]     test("var b=function(c){};b.call(null, x)", "var b=function(){};b.call(null)"); [EOL]     test("var b=function(c){};b.apply(null, x)", "var b=function(){};b.apply(null, x)"); [EOL]     test("var b=function(c){return};b(1)", "var b=function(){return};b()"); [EOL]     test("var b=function(c){return};b(1,2)", "var b=function(){return};b()"); [EOL]     test("var b=function(c){return};b(1,2);b(3,4)", "var b=function(){return};b();b()"); [EOL]     test("var b=function(c,d){return d};b(1,2);b(3,4);b.length", "var b=function(c,d){return d};b(0,2);b(0,4);b.length"); [EOL]     test("var b=function(c){return};b(1,2);b(3,new x())", "var b=function(){return};b();b(new x())"); [EOL]     test("var b=function(c){return};b(1,2);b(new x(),4)", "var b=function(){return};b();b(new x())"); [EOL]     test("var b=function(c,d){return d};b(1,2);b(new x(),4)", "var b=function(c,d){return d};b(0,2);b(new x(),4)"); [EOL]     test("var b=function(c,d,e){return d};b(1,2,3);b(new x(),4,new x())", "var b=function(c,d){return d};b(0,2);b(new x(),4,new x())"); [EOL]     test("var b=function(c,d){b(1,2);return d};b(3,4);b(5,6)", "var b=function(d){b(2);return d};b(4);b(6)"); [EOL]     testSame("var b=function(c){return arguments};b(1,2);b(3,4)"); [EOL]     test("var b=function(c,d){return};b(1,2)", "var b=function(){return};b()"); [EOL]     testSame("var b=function(c,d){return c+d};b(1,2)"); [EOL]     test("var b=function(e,f,c,d){return c+d};b(1,2)", "var b=function(c,d){return c+d};b()"); [EOL]     test("var b=function(c,d,e,f){return c+d};b(1,2)", "var b=function(c,d){return c+d};b(1,2)"); [EOL]     test("var b=function(e,c,f,d,g){return c+d};b(1,2)", "var b=function(c,d){return c+d};b(2)"); [EOL]     test("var b=function(c,d){};var b=function(e,f){};b(1,2)", "var b=function(){};var b=function(){};b(1,2)"); [EOL] } <line_num>: 499,557
public void testCallSiteInteraction_contructors() { [EOL]     this.modifyCallSites = true; [EOL]     test("var Ctor1=function(a,b){return a};" + "var Ctor2=function(a,b){Ctor1.call(this,a,b)};" + "goog$inherits(Ctor2, Ctor1);" + "new Ctor2(1,2)", "var Ctor1=function(a){return a};" + "var Ctor2=function(a){Ctor1.call(this,a)};" + "goog$inherits(Ctor2, Ctor1);" + "new Ctor2(1)"); [EOL] } <line_num>: 559,571
public void testFunctionArgRemovalCausingInconsistency() { [EOL]     this.modifyCallSites = true; [EOL]     test("var a=function(x,y){};" + "var b=function(z){};" + "a(new b, b)", "var a=function(){};" + "var b=function(){};" + "a(new b)"); [EOL] } <line_num>: 573,584
public void testRemoveUnusedVarsPossibleNpeCase() { [EOL]     this.modifyCallSites = true; [EOL]     test("var a = [];" + "var register = function(callback) {a[0] = callback};" + "register(function(transformer) {});" + "register(function(transformer) {});", "var register=function(){};register();register()"); [EOL] } <line_num>: 586,593
public void testDoNotOptimizeJSCompiler_renameProperty() { [EOL]     this.modifyCallSites = true; [EOL]     test("function JSCompiler_renameProperty(a) {};" + "JSCompiler_renameProperty('a');", "function JSCompiler_renameProperty() {};" + "JSCompiler_renameProperty('a');"); [EOL] } <line_num>: 595,603
public void testDoNotOptimizeJSCompiler_ObjectPropertyString() { [EOL]     this.modifyCallSites = true; [EOL]     test("function JSCompiler_ObjectPropertyString(a, b) {};" + "JSCompiler_ObjectPropertyString(window,'b');", "function JSCompiler_ObjectPropertyString() {};" + "JSCompiler_ObjectPropertyString(window,'b');"); [EOL] } <line_num>: 605,611
public void testDoNotOptimizeSetters() { [EOL]     testSame("({set s(a) {}})"); [EOL] } <line_num>: 613,615
public void testRemoveSingletonClass1() { [EOL]     test("function goog$addSingletonGetter(a){}" + "/**@constructor*/function a(){}" + "goog$addSingletonGetter(a);", ""); [EOL] } <line_num>: 617,622
public void testRemoveInheritedClass1() { [EOL]     test("function goog$inherits(){}" + "/**@constructor*/function a(){}" + "/**@constructor*/function b(){}" + "goog$inherits(b,a); new a", "function a(){} new a"); [EOL] } <line_num>: 624,630
public void testRemoveInheritedClass2() { [EOL]     test("function goog$inherits(){}" + "function goog$mixin(){}" + "/**@constructor*/function a(){}" + "/**@constructor*/function b(){}" + "/**@constructor*/function c(){}" + "goog$inherits(b,a);" + "goog$mixin(c.prototype,b.prototype);", ""); [EOL] } <line_num>: 632,641
public void testRemoveInheritedClass3() { [EOL]     testSame("/**@constructor*/function a(){}" + "/**@constructor*/function b(){}" + "goog$inherits(b,a); new b"); [EOL] } <line_num>: 643,647
public void testRemoveInheritedClass4() { [EOL]     testSame("function goog$inherits(){}" + "/**@constructor*/function a(){}" + "/**@constructor*/function b(){}" + "goog$inherits(b,a);" + "/**@constructor*/function c(){}" + "goog$inherits(c,b); new c"); [EOL] } <line_num>: 649,656
public void testRemoveInheritedClass5() { [EOL]     test("function goog$inherits(){}" + "/**@constructor*/function a(){}" + "/**@constructor*/function b(){}" + "goog$inherits(b,a);" + "/**@constructor*/function c(){}" + "goog$inherits(c,b); new b", "function goog$inherits(){}" + "function a(){}" + "function b(){}" + "goog$inherits(b,a); new b"); [EOL] } <line_num>: 658,669
public void testRemoveInheritedClass6() { [EOL]     test("function goog$mixin(){}" + "/**@constructor*/function a(){}" + "/**@constructor*/function b(){}" + "/**@constructor*/function c(){}" + "/**@constructor*/function d(){}" + "goog$mixin(b.prototype,a.prototype);" + "goog$mixin(c.prototype,a.prototype); new c;" + "goog$mixin(d.prototype,a.prototype)", "function goog$mixin(){}" + "function a(){}" + "function c(){}" + "goog$mixin(c.prototype,a.prototype); new c"); [EOL] } <line_num>: 671,684
public void testRemoveInheritedClass7() { [EOL]     test("function goog$mixin(){}" + "/**@constructor*/function a(){alert(goog$mixin(a, a))}" + "/**@constructor*/function b(){}" + "goog$mixin(b.prototype,a.prototype); new a", "function goog$mixin(){}" + "function a(){alert(goog$mixin(a, a))} new a"); [EOL] } <line_num>: 686,693
public void testRemoveInheritedClass8() { [EOL]     test("/**@constructor*/function a(){}" + "/**@constructor*/function b(){}" + "/**@constructor*/function c(){}" + "b.inherits(a);c.mixin(b.prototype)", ""); [EOL] } <line_num>: 695,701
public void testRemoveInheritedClass9() { [EOL]     testSame("/**@constructor*/function a(){}" + "/**@constructor*/function b(){}" + "/**@constructor*/function c(){}" + "b.inherits(a);c.mixin(b.prototype);new c"); [EOL] } <line_num>: 703,708
public void testRemoveInheritedClass10() { [EOL]     test("function goog$inherits(){}" + "/**@constructor*/function a(){}" + "/**@constructor*/function b(){}" + "goog$inherits(b,a); new a;" + "var c = a; var d = a.g; new b", "function goog$inherits(){}" + "function a(){} function b(){} goog$inherits(b,a); new a; new b"); [EOL] } <line_num>: 710,718
public void testRemoveInheritedClass11() { [EOL]     testSame("function goog$inherits(){}" + "function goog$mixin(a,b){goog$inherits(a,b)}" + "/**@constructor*/function a(){}" + "/**@constructor*/function b(){}" + "goog$mixin(b.prototype,a.prototype);new b"); [EOL] } <line_num>: 720,726
public void testRemoveInheritedClass12() { [EOL]     testSame("function goog$inherits(){}" + "/**@constructor*/function a(){}" + "var b = {};" + "goog$inherits(b.foo, a)"); [EOL] } <line_num>: 728,733
public void testReflectedMethods() { [EOL]     this.modifyCallSites = true; [EOL]     testSame("/** @constructor */" + "function Foo() {}" + "Foo.prototype.handle = function(x, y) { alert(y); };" + "var x = goog.reflect.object(Foo, {handle: 1});" + "for (var i in x) { x[i].call(x); }" + "window['Foo'] = Foo;"); [EOL] } <line_num>: 735,744
public void testIssue618_1() { [EOL]     this.removeGlobal = false; [EOL]     testSame("function f() {\n" + "  var a = [], b;\n" + "  a.push(b = []);\n" + "  b[0] = 1;\n" + "  return a;\n" + "}"); [EOL] } <line_num>: 746,755
public void testIssue618_2() { [EOL]     this.removeGlobal = false; [EOL]     testSame("var b;\n" + "a.push(b = []);\n" + "b[0] = 1;\n"); [EOL] } <line_num>: 757,763
