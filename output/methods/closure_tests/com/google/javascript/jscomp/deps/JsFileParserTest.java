@Override [EOL] public void setUp() { [EOL]     errorManager = new PrintStreamErrorManager(System.err); [EOL]     parser = new JsFileParser(errorManager); [EOL]     parser.setShortcutMode(true); [EOL] } <line_num>: 40,45
public void testParseFile() { [EOL]     String contents = "/*" + "goog.provide('no1');*//*\n" + "goog.provide('no2');\n" + "*/goog.provide('yes1');\n" + "/* blah */goog.provide(\"yes2\")/* blah*/\n" + "goog.require('yes3'); // goog.provide('no3');\n" + "// goog.provide('no4');\n" + "goog.require(\"bar.data.SuperstarAddStarThreadActionRequestDelegate\"); " + "//no new line at EOF"; [EOL]     DependencyInfo expected = new SimpleDependencyInfo(CLOSURE_PATH, SRC_PATH, ImmutableList.of("yes1", "yes2"), ImmutableList.of("yes3", "bar.data.SuperstarAddStarThreadActionRequestDelegate")); [EOL]     DependencyInfo result = parser.parseFile(SRC_PATH, CLOSURE_PATH, contents); [EOL]     assertDeps(expected, result); [EOL] } <line_num>: 53,71
public void testMultiplePerLine() { [EOL]     String contents = "goog.provide('yes1');goog.provide('yes2');/*" + "goog.provide('no1');*/goog.provide('yes3');//goog.provide('no2');"; [EOL]     DependencyInfo expected = new SimpleDependencyInfo(CLOSURE_PATH, SRC_PATH, ImmutableList.of("yes1", "yes2", "yes3"), Collections.<String>emptyList()); [EOL]     DependencyInfo result = parser.parseFile(SRC_PATH, CLOSURE_PATH, contents); [EOL]     assertDeps(expected, result); [EOL] } <line_num>: 73,83
public void testShortcutMode1() { [EOL]     String contents = " // hi ! \n /* this is a comment */ " + "goog.provide('yes1');\n /* and another comment */ \n" + "goog.provide('yes2'); // include this\n" + "function foo() {}\n" + "goog.provide('no1');"; [EOL]     DependencyInfo expected = new SimpleDependencyInfo(CLOSURE_PATH, SRC_PATH, ImmutableList.of("yes1", "yes2"), Collections.<String>emptyList()); [EOL]     DependencyInfo result = parser.parseFile(SRC_PATH, CLOSURE_PATH, contents); [EOL]     assertDeps(expected, result); [EOL] } <line_num>: 85,98
public void testShortcutMode2() { [EOL]     String contents = "/** goog.provide('no1'); \n" + " * goog.provide('no2');\n */\n" + "goog.provide('yes1');\n"; [EOL]     DependencyInfo expected = new SimpleDependencyInfo(CLOSURE_PATH, SRC_PATH, ImmutableList.of("yes1"), Collections.<String>emptyList()); [EOL]     DependencyInfo result = parser.parseFile(SRC_PATH, CLOSURE_PATH, contents); [EOL]     assertDeps(expected, result); [EOL] } <line_num>: 100,110
public void testShortcutMode3() { [EOL]     String contents = "/**\n" + " * goog.provide('no1');\n */\n" + "goog.provide('yes1');\n"; [EOL]     DependencyInfo expected = new SimpleDependencyInfo(CLOSURE_PATH, SRC_PATH, ImmutableList.of("yes1"), Collections.<String>emptyList()); [EOL]     DependencyInfo result = parser.parseFile(SRC_PATH, CLOSURE_PATH, contents); [EOL]     assertDeps(expected, result); [EOL] } <line_num>: 112,122
public void testIncludeGoog1() { [EOL]     String contents = "/**\n" + " * the first constant in base.js\n" + " */\n" + "var COMPILED = false;\n"; [EOL]     DependencyInfo expected = new SimpleDependencyInfo(CLOSURE_PATH, SRC_PATH, ImmutableList.of("goog"), Collections.<String>emptyList()); [EOL]     DependencyInfo result = parser.setIncludeGoogBase(true).parseFile(SRC_PATH, CLOSURE_PATH, contents); [EOL]     assertDeps(expected, result); [EOL] } <line_num>: 124,135
public void testIncludeGoog2() { [EOL]     String contents = "goog.require('bar');"; [EOL]     DependencyInfo expected = new SimpleDependencyInfo(CLOSURE_PATH, SRC_PATH, ImmutableList.<String>of(), ImmutableList.of("goog", "bar")); [EOL]     DependencyInfo result = parser.setIncludeGoogBase(true).parseFile(SRC_PATH, CLOSURE_PATH, contents); [EOL]     assertDeps(expected, result); [EOL] } <line_num>: 137,145
public void testIncludeGoog3() { [EOL]     String contents = "goog.provide('x');\n" + "/**\n" + " * the first constant in base.js\n" + " */\n" + "var COMPILED = false;\n"; [EOL]     DependencyInfo expected = new SimpleDependencyInfo(CLOSURE_PATH, SRC_PATH, ImmutableList.of("x"), ImmutableList.of("goog")); [EOL]     DependencyInfo result = parser.setIncludeGoogBase(true).parseFile(SRC_PATH, CLOSURE_PATH, contents); [EOL]     assertDeps(expected, result); [EOL] } <line_num>: 147,160
public void testIncludeGoog4() { [EOL]     String contents = "goog.addDependency('foo', [], []);\n"; [EOL]     DependencyInfo expected = new SimpleDependencyInfo(CLOSURE_PATH, SRC_PATH, ImmutableList.<String>of(), ImmutableList.of("goog")); [EOL]     DependencyInfo result = parser.setIncludeGoogBase(true).parseFile(SRC_PATH, CLOSURE_PATH, contents); [EOL]     assertDeps(expected, result); [EOL] } <line_num>: 162,170
private void assertDeps(DependencyInfo expected, DependencyInfo actual) { [EOL]     assertEquals(expected, actual); [EOL]     assertEquals(0, errorManager.getErrorCount()); [EOL]     assertEquals(0, errorManager.getWarningCount()); [EOL] } <line_num>: 173,177
