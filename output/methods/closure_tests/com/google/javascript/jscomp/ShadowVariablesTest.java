@Override [EOL] protected CompilerPass getProcessor(Compiler compiler) { [EOL]     return new RenameVars(compiler, "", false, false, generatePseudoNames, true, null, null, null); [EOL] } <line_num>: 27,32
@Override [EOL] protected int getNumRepetitions() { [EOL]     return 1; [EOL] } <line_num>: 34,37
@Override [EOL] protected void setUp() throws Exception { [EOL]     super.setUp(); [EOL]     generatePseudoNames = false; [EOL] } <line_num>: 39,43
public void testShadowSimple1() { [EOL]     test("function foo(x) { return function (y) {} }", "function   b(a) { return function (a) {} }"); [EOL]     generatePseudoNames = true; [EOL]     test("function  foo  ( x  ) { return function ( y  ) {} }", "function $foo$$($x$$) { return function ($x$$) {} }"); [EOL] } <line_num>: 45,54
public void testShadowSimple2() { [EOL]     test("function foo(x,y) { return function (y,z) {} }", "function   c(a,b) { return function (a,b) {} }"); [EOL]     generatePseudoNames = true; [EOL]     test("function  foo  ( x  , y  ) { return function ( y  , z  ) {} }", "function $foo$$($x$$,$y$$) { return function ($x$$,$y$$) {} }"); [EOL] } <line_num>: 56,64
public void testShadowMostUsedVar() { [EOL]     generatePseudoNames = true; [EOL]     test("function  foo  () {var  x  ; var  y  ;  y  ; y  ; y  ; x  ;" + "  return function ( k  ) {} }", "function $foo$$() {var $x$$; var $y$$; $y$$;$y$$;$y$$;$x$$;" + "  return function ($y$$) {} }"); [EOL] } <line_num>: 69,76
public void testNoShadowReferencedVariables() { [EOL]     generatePseudoNames = true; [EOL]     test("function  f1  () { var  x  ; x  ; x  ; x  ;" + "  return function  f2  ( y  ) {" + "    return function  f3  () { x  } }}", "function $f1$$() { var $x$$;$x$$;$x$$;$x$$;" + "  return function $f2$$($y$$) {" + "    return function $f3$$() {$x$$} }}"); [EOL] } <line_num>: 78,86
public void testNoShadowGlobalVariables() { [EOL]     generatePseudoNames = true; [EOL]     test("var  x  ;  x  ; function  foo  () { return function ( y  ) {}}", "var $x$$; $x$$; function $foo$$() { return function ($y$$) {}}"); [EOL] } <line_num>: 88,92
public void testShadowBleedInFunctionName() { [EOL]     generatePseudoNames = true; [EOL]     test("function  foo  () { function  b  ( y  ) { y  }  b  ;  b  ;}", "function $foo$$() { function $b$$($b$$) {$b$$} $b$$; $b$$;}"); [EOL] } <line_num>: 94,98
public void testNoShadowLessPopularName() { [EOL]     generatePseudoNames = true; [EOL]     test("function  f1  ( x  ) {" + "  function  f2  ( y  ) {}  x  ; x  ;}" + "function  f3  ( i  ) {" + "  var  k  ; var  j  ; j  ; j  ; j  ; j  ; j  ; j  ;}", "function $f1$$($x$$) {" + "  function $f2$$($y$$) {} $x$$;$x$$;}" + "function $f3$$($i$$) {" + "  var $k$$; var $j$$;$j$$;$j$$;$j$$;$j$$;$j$$;$j$$;}"); [EOL] } <line_num>: 100,116
public void testShadowFunctionName() { [EOL]     generatePseudoNames = true; [EOL]     test("var  g   = function() {" + "  var  x  ; return function(){function  y  (){}}}", "var $g$$ = function() {" + "  var $x$$; return function(){function $x$$(){}}}"); [EOL] } <line_num>: 118,124
public void testShadowLotsOfScopes1() { [EOL]     generatePseudoNames = true; [EOL]     test("var  g   = function( x  ) { return function() { return function() {" + " return function() { var  y   }}}}", "var $g$$ = function($x$$) { return function() { return function() {" + " return function() { var $x$$ }}}}"); [EOL] } <line_num>: 126,132
public void testShadowLotsOfScopes2() { [EOL]     generatePseudoNames = true; [EOL]     test("var  g   = function( x  ) { return function( y  ) " + " {return function() {return function() {  x   }}}}", "var $g$$ = function($x$$) { return function($y$$) " + " {return function() {return function() { $x$$ }}}}"); [EOL]     test("var  g   = function( x  ) { return function() " + " {return function( y  ) {return function() {  x   }}}}", "var $g$$ = function($x$$) { return function() " + " {return function($y$$) {return function() { $x$$ }}}}"); [EOL]     test("var  g   = function( x  ) { return function() " + " {return function() {return function( y  ) {  x   }}}}", "var $g$$ = function($x$$) { return function() " + " {return function() {return function($y$$) { $x$$ }}}}"); [EOL] } <line_num>: 134,151
public void testShadowLotsOfScopes3() { [EOL]     generatePseudoNames = true; [EOL]     test("var  g   = function( x  ) { return function() " + " {return function() {return function() {  x   }; var  y   }}}", "var $g$$ = function($x$$) { return function() " + " {return function() {return function() { $x$$ }; var $y$$}}}"); [EOL]     test("var  g   = function( x  ) { return function() " + " {return function() {return function() {  x   }}; var  y   }}", "var $g$$ = function($x$$) { return function() " + " {return function() {return function() { $x$$ }}; var $y$$}}"); [EOL]     test("var  g   = function( x  ) { return function() " + " {return function() {return function() {  x   }}}; var  y   }", "var $g$$ = function($x$$) { return function() " + " {return function() {return function() { $x$$ }}}; var $y$$}"); [EOL] } <line_num>: 153,168
public void testShadowLotsOfScopes4() { [EOL]     test("var g = function(x) { return function() { return function() {" + " return function(){return function(){};var m};var n};var o}}", "var b = function(a) { return function() { return function() {" + " return function(){return function(){};var a};var a};var a}}"); [EOL] } <line_num>: 170,176
public void testShadowLotsOfScopes5() { [EOL]     generatePseudoNames = true; [EOL]     test("var  g   = function( x  ) {" + " return function() { return function() {" + " return function() { return function() {" + "      x  }; o  };var  n  };var  o  };var  p  }", "var $g$$ = function($x$$) {" + " return function() { return function() {" + " return function() { return function() {" + "     $x$$};$o$$};var $p$$};var $o$$};var $p$$}"); [EOL]     test("var  g   = function( x  ) {" + " return function() { return function() {" + " return function() { return function() {" + "      x  }; p  };var  n  };var  o  };var  p  }", "var $g$$ = function($x$$) {" + " return function() { return function() {" + " return function() { return function() {" + "     $x$$};$p$$};var $o$$};var $o$$};var $p$$}"); [EOL] } <line_num>: 178,197
public void testShadowWithShadowAlready() { [EOL]     test("var g = function(x) { return function() { return function() {" + " return function(){return function(){x}};var p};var o};var p}", "var c = function(b) { return function() { return function() {" + " return function(){return function(){b}};var a};var a};var a}"); [EOL]     test("var g = function(x) { return function() { return function() {" + " return function(){return function(){x};p};var p};var o};var p}", "var c = function(b) { return function() { return function() {" + " return function(){return function(){b};a};var a};var a};var a}"); [EOL] } <line_num>: 199,209
public void testShadowBug1() { [EOL]     generatePseudoNames = true; [EOL]     test("function  f  ( x  ) { return function( y  ) {" + "    return function( x  ) {  x   +  y  ; }}}", "function $f$$($x$$) { return function($y$$) {" + "    return function($x$$) { $x$$ + $y$$; }}}"); [EOL] } <line_num>: 211,217
public void testOptimal() { [EOL]     test("function f(x) { function g(y) { function h(x) {}}}", "function c(a) { function b(a) { function b(a) {}}}"); [EOL] } <line_num>: 219,223
public void testSharingAcrossInnerScopes() { [EOL]     test("function f() {var f=function g(){g()}; var x=function y(){y()}}", "function c() {var d=function a(){a()}; var e=function b(){b()}}"); [EOL]     test("function f(x) { return x ? function(y){} : function(z) {} }", "function b(a) { return a ? function(a){} : function(a) {} }"); [EOL] } <line_num>: 225,230
public void testExportedLocal1() { [EOL]     test("function f(a) { a();a();a(); return function($super){} }", "function b(a) { a();a();a(); return function($super){} }"); [EOL] } <line_num>: 232,235
public void testExportedLocal2() { [EOL]     test("function f($super) { $super();$super(); return function(a){} }", "function a($super) { $super();$super(); return function(b){} }"); [EOL] } <line_num>: 237,240
public void testBug4172539() { [EOL]     generatePseudoNames = true; [EOL]     test("function f(x) {" + "  x;x;x;" + "  return function (y) { y; x };" + "  return function (y) {" + "    y;" + "    return function (m, n) {" + "       m;m;m;" + "    };" + "  };" + "}", "function $f$$($x$$) {" + "  $x$$;$x$$;$x$$;" + "  return function ($y$$) { $y$$; $x$$ };" + "  return function ($x$$) {" + "    $x$$;" + "    return function ($x$$, $y$$) {" + "       $x$$;$x$$;$x$$;" + "    };" + "  };" + "}"); [EOL] } <line_num>: 242,272
