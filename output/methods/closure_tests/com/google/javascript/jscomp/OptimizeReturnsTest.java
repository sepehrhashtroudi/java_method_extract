public OptimizeReturnsTest() { [EOL]     super(EXTERNAL_SYMBOLS); [EOL] } <line_num>: 35,37
@Override [EOL] protected CompilerPass getProcessor(Compiler compiler) { [EOL]     return new OptimizeReturns(compiler); [EOL] } <line_num>: 27,30
@Override [EOL] protected int getNumRepetitions() { [EOL]     return 1; [EOL] } <line_num>: 39,43
@Override [EOL] protected void setUp() throws Exception { [EOL]     super.setUp(); [EOL]     super.enableLineNumberCheck(true); [EOL]     disableTypeCheck(); [EOL] } <line_num>: 45,50
private static String newlineJoin(String... parts) { [EOL]     return Joiner.on("\n").join(parts); [EOL] } <line_num>: 55,57
public void testNoRewriteUsedResult1() throws Exception { [EOL]     String source = newlineJoin("function a(){return 1}", "var x = a()"); [EOL]     testSame(source); [EOL] } <line_num>: 59,64
public void testNoRewriteUsedResult2() throws Exception { [EOL]     String source = newlineJoin("var a = function(){return 1}", "a(); var b = a()"); [EOL]     testSame(source); [EOL] } <line_num>: 66,71
public void testRewriteUnusedResult1() throws Exception { [EOL]     String source = newlineJoin("function a(){return 1}", "a()"); [EOL]     String expected = newlineJoin("function a(){return}", "a()"); [EOL]     test(source, expected); [EOL] } <line_num>: 73,81
public void testRewriteUnusedResult2() throws Exception { [EOL]     String source = newlineJoin("var a; a = function(){return 1}", "a()"); [EOL]     String expected = newlineJoin("var a; a = function(){return}", "a()"); [EOL]     test(source, expected); [EOL] } <line_num>: 83,91
public void testRewriteUnusedResult3() throws Exception { [EOL]     String source = newlineJoin("var a = function(){return 1}", "a()"); [EOL]     String expected = newlineJoin("var a = function(){return}", "a()"); [EOL]     test(source, expected); [EOL] } <line_num>: 93,101
public void testRewriteUnusedResult4a() throws Exception { [EOL]     String source = newlineJoin("var a = function(){return a()}", "a()"); [EOL]     testSame(source); [EOL] } <line_num>: 103,108
public void testRewriteUnusedResult4b() throws Exception { [EOL]     String source = newlineJoin("var a = function b(){return b()}", "a()"); [EOL]     testSame(source); [EOL] } <line_num>: 110,115
public void testRewriteUnusedResult4c() throws Exception { [EOL]     String source = newlineJoin("function a(){return a()}", "a()"); [EOL]     testSame(source); [EOL] } <line_num>: 117,122
public void testRewriteUnusedResult5() throws Exception { [EOL]     String source = newlineJoin("function a(){}", "a.prototype.foo = function(args) {return args};", "var o = new a;", "o.foo()"); [EOL]     String expected = newlineJoin("function a(){}", "a.prototype.foo = function(args) {return};", "var o = new a;", "o.foo()"); [EOL]     test(source, expected); [EOL] } <line_num>: 124,136
public void testRewriteUnusedResult6() throws Exception { [EOL]     String source = newlineJoin("function a(){return (g = 1)}", "a()"); [EOL]     String expected = newlineJoin("function a(){g = 1;return}", "a()"); [EOL]     test(source, expected); [EOL] } <line_num>: 138,146
public void testRewriteUnusedResult7a() throws Exception { [EOL]     String source = newlineJoin("function a() { return 1 }", "function b() { return a() }", "function c() { return b() }", "c();"); [EOL]     String expected = newlineJoin("function a() { return 1 }", "function b() { return a() }", "function c() { b(); return }", "c();"); [EOL]     test(source, expected); [EOL] } <line_num>: 148,161
public void testRewriteUnusedResult7b() throws Exception { [EOL]     String source = newlineJoin("c();", "function c() { return b() }", "function b() { return a() }", "function a() { return 1 }"); [EOL]     String expected = newlineJoin("c();", "function c() { b(); return }", "function b() { return a() }", "function a() { return 1 }"); [EOL]     test(source, expected); [EOL]     source = expected; [EOL]     expected = newlineJoin("c();", "function c() { b(); return }", "function b() { a(); return }", "function a() { return 1 }"); [EOL]     test(source, expected); [EOL]     source = expected; [EOL]     expected = newlineJoin("c();", "function c() { b(); return }", "function b() { a(); return }", "function a() { return }"); [EOL]     test(source, expected); [EOL] } <line_num>: 163,195
public void testRewriteUnusedResult8() throws Exception { [EOL]     String source = newlineJoin("function a() { return c() }", "function b() { return a() }", "function c() { return b() }", "c();"); [EOL]     testSame(source); [EOL] } <line_num>: 197,204
public void testNoRewriteObjLit1() throws Exception { [EOL]     String source = newlineJoin("var a = {b:function(){return 1;}}", "for(c in a) (a[c])();", "a.b()"); [EOL]     testSame(source); [EOL] } <line_num>: 206,212
public void testNoRewriteObjLit2() throws Exception { [EOL]     String source = newlineJoin("var a = {b:function fn(){return 1;}}", "for(c in a) (a[c])();", "a.b()"); [EOL]     testSame(source); [EOL] } <line_num>: 214,220
public void testNoRewriteArrLit() throws Exception { [EOL]     String source = newlineJoin("var a = [function(){return 1;}]", "(a[0])();"); [EOL]     testSame(source); [EOL] } <line_num>: 222,227
public void testPrototypeMethod1() throws Exception { [EOL]     String source = newlineJoin("function c(){}", "c.prototype.a = function(){return 1}", "var x = new c;", "x.a()"); [EOL]     String result = newlineJoin("function c(){}", "c.prototype.a = function(){return}", "var x = new c;", "x.a()"); [EOL]     test(source, result); [EOL] } <line_num>: 229,241
public void testPrototypeMethod2() throws Exception { [EOL]     String source = newlineJoin("function c(){}", "c.prototype.a = function(){return 1}", "goog.reflect.object({a: 'v'})", "var x = new c;", "x.a()"); [EOL]     testSame(source); [EOL] } <line_num>: 243,251
public void testPrototypeMethod3() throws Exception { [EOL]     String source = newlineJoin("function c(){}", "c.prototype.a = function(){return 1}", "var x = new c;", "for(var key in goog.reflect.object({a: 'v'})){ x[key](); }", "x.a()"); [EOL]     testSame(source); [EOL] } <line_num>: 253,261
public void testPrototypeMethod4() throws Exception { [EOL]     String source = newlineJoin("function c(){}", "c.prototype.a = function(){return 1}", "var x = new c;", "for(var key in goog.reflect.object({a: 'v'})){ x[key](); }"); [EOL]     testSame(source); [EOL] } <line_num>: 263,270
public void testCallOrApply() throws Exception { [EOL]     testSame("function a() {return 1}; a.call(new foo);"); [EOL]     testSame("function a() {return 1}; a.apply(new foo);"); [EOL] } <line_num>: 272,277
public void testRewriteUseSiteRemoval() throws Exception { [EOL]     String source = newlineJoin("function a() { return {\"_id\" : 1} }", "a();"); [EOL]     String expected = newlineJoin("function a() { return }", "a();"); [EOL]     test(source, expected); [EOL] } <line_num>: 279,287
