@Override [EOL] public void process(Node externs, Node root) { [EOL]     new PureFunctionIdentifier(compiler, new SimpleDefinitionFinder(compiler)).process(externs, root); [EOL]     passes.process(externs, root); [EOL] } <line_num>: 36,41
@Override [EOL] protected CompilerPass getProcessor(final Compiler compiler) { [EOL]     final OptimizeCalls passes = new OptimizeCalls(compiler); [EOL]     passes.addPass(new OptimizeReturns(compiler)); [EOL]     passes.addPass(new OptimizeParameters(compiler)); [EOL]     passes.addPass(new RemoveUnusedVars(compiler, true, false, true)); [EOL]     return new CompilerPass() { [EOL]  [EOL]         @Override [EOL]         public void process(Node externs, Node root) { [EOL]             new PureFunctionIdentifier(compiler, new SimpleDefinitionFinder(compiler)).process(externs, root); [EOL]             passes.process(externs, root); [EOL]         } [EOL]     }; [EOL] } <line_num>: 28,43
public void testRemovingReturnCallToFunctionWithUnusedParams() { [EOL]     test("function foo() {var x; return x = bar(1)} foo(); function bar(x) {}", "function foo() {          bar(); return;} foo(); function bar()  {}"); [EOL] } <line_num>: 45,48
public void testNestingFunctionCallWithUnsedParams() { [EOL]     test("function f1(x) { } function f2(x) { }" + "function f3(x) { } function f4(x) { }" + "f3(f1(f2()));", "function f1() {f2()} function f2() { }" + "function f3() {f1()} " + "f3();"); [EOL] } <line_num>: 50,58
public void testUnusedAssignOnFunctionWithUnusedParams() { [EOL]     test("var foo = function(a){}; function bar(){var x;x = foo} bar(); foo(1)", "var foo = function( ){}; function bar(){             } bar(); foo()"); [EOL] } <line_num>: 60,63
