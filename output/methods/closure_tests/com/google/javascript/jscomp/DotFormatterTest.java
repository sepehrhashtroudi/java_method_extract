public void testKeyAssignementSequential() throws Exception { [EOL]     DotFormatter dot = DotFormatter.newInstanceForTesting(); [EOL]     assertEquals(0, dot.key(new Node(Token.BLOCK))); [EOL]     assertEquals(1, dot.key(new Node(Token.BLOCK))); [EOL]     assertEquals(2, dot.key(new Node(Token.BLOCK))); [EOL]     assertEquals(3, dot.key(new Node(Token.BLOCK))); [EOL]     assertEquals(4, dot.key(new Node(Token.BLOCK))); [EOL] } <line_num>: 28,35
public void testKeyAssignementOncePerNode() throws Exception { [EOL]     DotFormatter dot = DotFormatter.newInstanceForTesting(); [EOL]     Node node0 = new Node(Token.BLOCK); [EOL]     Node node1 = new Node(Token.BLOCK); [EOL]     Node node2 = new Node(Token.BLOCK); [EOL]     assertEquals(0, dot.key(node0)); [EOL]     assertEquals(1, dot.key(node1)); [EOL]     assertEquals(2, dot.key(node2)); [EOL]     assertEquals(0, dot.key(node0)); [EOL]     assertEquals(1, dot.key(node1)); [EOL]     assertEquals(2, dot.key(node2)); [EOL] } <line_num>: 40,52
public void testToDotSimple() throws Exception { [EOL]     Node ast = new Node(Token.BITOR); [EOL]     String expected = "digraph AST {\n" + "  node [color=lightblue2, style=filled];\n" + "  node0 [label=\"BITOR\"];\n" + "}\n"; [EOL]     test(expected, ast); [EOL] } <line_num>: 57,65
public void testToDot3Elements() throws Exception { [EOL]     Node ast = new Node(Token.BLOCK); [EOL]     ast.addChildToBack(new Node(Token.NAME)); [EOL]     ast.addChildToBack(new Node(Token.STRING)); [EOL]     String expected = "digraph AST {\n" + "  node [color=lightblue2, style=filled];\n" + "  node0 [label=\"BLOCK\"];\n" + "  node1 [label=\"NAME\"];\n" + "  node0 -> node1 [weight=1];\n" + "  node2 [label=\"STRING\"];\n" + "  node0 -> node2 [weight=1];\n" + "}\n"; [EOL]     test(expected, ast); [EOL] } <line_num>: 70,84
private void test(String expected, Node ast) { [EOL]     try { [EOL]         assertEquals(expected, DotFormatter.toDot(ast)); [EOL]     } catch (java.io.IOException e) { [EOL]         fail("Tests failed with IOExceptions"); [EOL]     } [EOL] } <line_num>: 86,92
