private void setRunCheckTypes(boolean shouldRunCheckTypes) { [EOL]     runCheckTypes = shouldRunCheckTypes; [EOL] } <line_num>: 41,43
@Override [EOL] public void setUp() throws Exception { [EOL]     super.setUp(); [EOL]     setRunCheckTypes(true); [EOL] } <line_num>: 45,50
public void testExportSymbol() throws Exception { [EOL]     compileAndCheck("var a = {}; a.b = {}; a.b.c = function(d, e, f) {};" + "goog.exportSymbol('foobar', a.b.c)", "/**\n" + " * @param {*} d\n" + " * @param {*} e\n" + " * @param {*} f\n" + " * @return {undefined}\n" + " */\n" + "var foobar = function(d, e, f) {\n};\n"); [EOL] } <line_num>: 52,62
public void testExportSymbolDefinedInVar() throws Exception { [EOL]     compileAndCheck("var a = function(d, e, f) {};" + "goog.exportSymbol('foobar', a)", "/**\n" + " * @param {*} d\n" + " * @param {*} e\n" + " * @param {*} f\n" + " * @return {undefined}\n" + " */\n" + "var foobar = function(d, e, f) {\n};\n"); [EOL] } <line_num>: 64,74
public void testExportProperty() throws Exception { [EOL]     compileAndCheck("var a = {}; a.b = {}; a.b.c = function(d, e, f) {};" + "goog.exportProperty(a.b, 'cprop', a.b.c)", "var a;\n" + "a.b;\n" + "/**\n" + " * @param {*} d\n" + " * @param {*} e\n" + " * @param {*} f\n" + " * @return {undefined}\n" + " */\n" + "a.b.cprop = function(d, e, f) {\n};\n"); [EOL] } <line_num>: 76,88
public void testExportMultiple() throws Exception { [EOL]     compileAndCheck("var a = {}; a.b = function(p1) {}; " + "a.b.c = function(d, e, f) {};" + "a.b.prototype.c = function(g, h, i) {};" + "goog.exportSymbol('a.b', a.b);" + "goog.exportProperty(a.b, 'c', a.b.c);" + "goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);", "var a;\n" + "/**\n" + " * @param {*} p1\n" + " * @return {undefined}\n" + " */\n" + "a.b = function(p1) {\n};\n" + "/**\n" + " * @param {*} d\n" + " * @param {*} e\n" + " * @param {*} f\n" + " * @return {undefined}\n" + " */\n" + "a.b.c = function(d, e, f) {\n};\n" + "/**\n" + " * @param {*} g\n" + " * @param {*} h\n" + " * @param {*} i\n" + " * @return {undefined}\n" + " */\n" + "a.b.prototype.c = function(g, h, i) {\n};\n"); [EOL] } <line_num>: 90,118
public void testExportMultiple2() throws Exception { [EOL]     compileAndCheck("var a = {}; a.b = function(p1) {}; " + "a.b.c = function(d, e, f) {};" + "a.b.prototype.c = function(g, h, i) {};" + "goog.exportSymbol('hello', a);" + "goog.exportProperty(a.b, 'c', a.b.c);" + "goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);", "/** @type {{b: function (?): undefined}} */\n" + "var hello = {};\n" + "hello.b;\n" + "/**\n" + " * @param {*} d\n" + " * @param {*} e\n" + " * @param {*} f\n" + " * @return {undefined}\n" + " */\n" + "hello.b.c = function(d, e, f) {\n};\n" + "/**\n" + " * @param {*} g\n" + " * @param {*} h\n" + " * @param {*} i\n" + " * @return {undefined}\n" + " */\n" + "hello.b.prototype.c = function(g, h, i) {\n};\n"); [EOL] } <line_num>: 120,145
public void testExportMultiple3() throws Exception { [EOL]     compileAndCheck("var a = {}; a.b = function(p1) {}; " + "a.b.c = function(d, e, f) {};" + "a.b.prototype.c = function(g, h, i) {};" + "goog.exportSymbol('prefix', a.b);" + "goog.exportProperty(a.b, 'c', a.b.c);", "/**\n" + " * @param {*} p1\n" + " * @return {undefined}\n" + " */\n" + "var prefix = function(p1) {\n};\n" + "/**\n" + " * @param {*} d\n" + " * @param {*} e\n" + " * @param {*} f\n" + " * @return {undefined}\n" + " */\n" + "prefix.c = function(d, e, f) {\n};\n"); [EOL] } <line_num>: 147,166
public void testExportNonStaticSymbol() throws Exception { [EOL]     compileAndCheck("var a = {}; a.b = {}; var d = {}; a.b.c = d;" + "goog.exportSymbol('foobar', a.b.c)", "var foobar;\n"); [EOL] } <line_num>: 168,172
public void testExportNonStaticSymbol2() throws Exception { [EOL]     compileAndCheck("var a = {}; a.b = {}; var d = null; a.b.c = d;" + "goog.exportSymbol('foobar', a.b.c())", "var foobar;\n"); [EOL] } <line_num>: 174,178
public void testExportNonexistentProperty() throws Exception { [EOL]     compileAndCheck("var a = {}; a.b = {}; a.b.c = function(d, e, f) {};" + "goog.exportProperty(a.b, 'none', a.b.none)", "var a;\n" + "a.b;\n" + "a.b.none;\n"); [EOL] } <line_num>: 180,186
public void testExportSymbolWithTypeAnnotation() { [EOL]     compileAndCheck("var internalName;\n" + "/**\n" + " * @param {string} param1\n" + " * @param {number} param2\n" + " * @return {string}\n" + " */\n" + "internalName = function(param1, param2) {" + "return param1 + param2;" + "};" + "goog.exportSymbol('externalName', internalName)", "/**\n" + " * @param {string} param1\n" + " * @param {number} param2\n" + " * @return {string}\n" + " */\n" + "var externalName = function(param1, param2) {\n};\n"); [EOL] } <line_num>: 188,206
public void testExportSymbolWithoutTypeCheck() { [EOL]     setRunCheckTypes(false); [EOL]     compileAndCheck("var internalName;\n" + "/**\n" + " * @param {string} param1\n" + " * @param {number} param2\n" + " * @return {string}\n" + " */\n" + "internalName = function(param1, param2) {" + "return param1 + param2;" + "};" + "goog.exportSymbol('externalName', internalName)", "var externalName = function(param1, param2) {\n};\n"); [EOL] } <line_num>: 208,224
public void testExportSymbolWithConstructor() { [EOL]     compileAndCheck("var internalName;\n" + "/**\n" + " * @constructor\n" + " */\n" + "internalName = function() {" + "};" + "goog.exportSymbol('externalName', internalName)", "/**\n" + " * @return {undefined}\n" + " * @constructor\n" + " */\n" + "var externalName = function() {\n};\n"); [EOL] } <line_num>: 226,239
public void testExportSymbolWithConstructorWithoutTypeCheck() { [EOL]     setRunCheckTypes(false); [EOL]     compileAndCheck("var internalName;\n" + "/**\n" + " * @constructor\n" + " */\n" + "internalName = function() {" + "};" + "goog.exportSymbol('externalName', internalName)", "var externalName = function() {\n};\n"); [EOL] } <line_num>: 241,258
public void testExportFunctionWithOptionalArguments() { [EOL]     compileAndCheck("var internalName;\n" + "/**\n" + " * @param {number=} a\n" + " */\n" + "internalName = function(a) {" + "  return 6;\n" + "};" + "goog.exportSymbol('externalName', internalName)", "/**\n" + " * @param {number=} a\n" + " */\n" + "var externalName = function(a) {\n};\n"); [EOL] } <line_num>: 260,273
public void testExportFunctionWithVariableArguments() { [EOL]     compileAndCheck("var internalName;\n" + "/**\n" + " * @param {...number} a\n" + " * @return {number}\n" + " */\n" + "internalName = function(a) {" + "  return 6;\n" + "};" + "goog.exportSymbol('externalName', internalName)", "/**\n" + " * @param {...number} a\n" + " * @return {number}\n" + " */\n" + "var externalName = function(a) {\n};\n"); [EOL] } <line_num>: 275,290
public void testExportEnum() { [EOL]     compileAndCheck("/** @enum {string}\n @export */ var E = {A:8, B:9};" + "goog.exportSymbol('E', E);", "/** @enum {string} */\n" + "var E = {A:1, B:2};\n"); [EOL] } <line_num>: 295,305
public void testExportDontEmitPrototypePathPrefix() { [EOL]     compileAndCheck("/**\n" + " * @constructor\n" + " */\n" + "var Foo = function() {};" + "/**\n" + " * @return {number}\n" + " */\n" + "Foo.prototype.m = function() {return 6;};\n" + "goog.exportSymbol('Foo', Foo);\n" + "goog.exportProperty(Foo.prototype, 'm', Foo.prototype.m);", "/**\n" + " * @return {undefined}\n" + " * @constructor\n" + " */\n" + "var Foo = function() {\n};\n" + "/**\n" + " * @return {number}\n" + " */\n" + "Foo.prototype.m = function() {\n};\n"); [EOL] } <line_num>: 311,333
public void testUseExportsAsExterns() { [EOL]     String librarySource = "/**\n" + " * @param {number} a\n" + " * @constructor\n" + " */\n" + "var InternalName = function(a) {" + "};" + "goog.exportSymbol('ExternalName', InternalName)"; [EOL]     String clientSource = "var a = new ExternalName(6);\n" + "/**\n" + " * @param {ExternalName} x\n" + " */\n" + "var b = function(x) {};"; [EOL]     Result libraryCompileResult = compileAndExportExterns(librarySource); [EOL]     assertEquals(0, libraryCompileResult.warnings.length); [EOL]     assertEquals(0, libraryCompileResult.errors.length); [EOL]     String generatedExterns = libraryCompileResult.externExport; [EOL]     Result clientCompileResult = compileAndExportExterns(clientSource, generatedExterns); [EOL]     assertEquals(0, clientCompileResult.warnings.length); [EOL]     assertEquals(0, clientCompileResult.errors.length); [EOL] } <line_num>: 343,372
public void testWarnOnExportFunctionWithUnknownReturnType() { [EOL]     String librarySource = "var InternalName = function() {" + "  return 6;" + "};" + "goog.exportSymbol('ExternalName', InternalName)"; [EOL]     Result libraryCompileResult = compileAndExportExterns(librarySource); [EOL]     assertEquals(1, libraryCompileResult.warnings.length); [EOL]     assertEquals(0, libraryCompileResult.errors.length); [EOL] } <line_num>: 374,385
public void testDontWarnOnExportConstructorWithUnknownReturnType() { [EOL]     String librarySource = "/**\n" + " * @constructor\n" + " */\n " + "var InternalName = function() {" + "};" + "goog.exportSymbol('ExternalName', InternalName)"; [EOL]     Result libraryCompileResult = compileAndExportExterns(librarySource); [EOL]     assertEquals(0, libraryCompileResult.warnings.length); [EOL]     assertEquals(0, libraryCompileResult.errors.length); [EOL] } <line_num>: 387,400
public void testTypedef() { [EOL]     compileAndCheck("/** @typedef {{x: number, y: number}} */ var Coord;\n" + "/**\n" + " * @param {Coord} a\n" + " * @export\n" + " */\n" + "var fn = function(a) {};" + "goog.exportSymbol('fn', fn);", "/**\n" + " * @param {{x: number, y: number}} a\n" + " * @return {undefined}\n" + " */\n" + "var fn = function(a) {\n};\n"); [EOL] } <line_num>: 402,416
private void compileAndCheck(String js, String expected) { [EOL]     Result result = compileAndExportExterns(js); [EOL]     assertEquals(expected, result.externExport); [EOL] } <line_num>: 418,422
public void testWarnOnExportFunctionWithUnknownParameterTypes() { [EOL]     String librarySource = "/**\n" + " * @param {number} a\n" + " * @return {number}" + " */\n " + "var InternalName = function(a,b,c) {" + "  return 6;" + "};" + "goog.exportSymbol('ExternalName', InternalName)"; [EOL]     Result libraryCompileResult = compileAndExportExterns(librarySource); [EOL]     assertEquals(2, libraryCompileResult.warnings.length); [EOL]     assertEquals(0, libraryCompileResult.errors.length); [EOL] } <line_num>: 424,440
private Result compileAndExportExterns(String js) { [EOL]     return compileAndExportExterns(js, ""); [EOL] } <line_num>: 442,444
private Result compileAndExportExterns(String js, String externs) { [EOL]     Compiler compiler = new Compiler(); [EOL]     CompilerOptions options = new CompilerOptions(); [EOL]     options.externExportsPath = "externs.js"; [EOL]     options.ideMode = true; [EOL]     options.checkSymbols = true; [EOL]     options.checkTypes = runCheckTypes; [EOL]     List<SourceFile> inputs = Lists.newArrayList(SourceFile.fromCode("testcode", "var goog = {};" + "goog.exportSymbol = function(a, b) {}; " + "goog.exportProperty = function(a, b, c) {}; " + js)); [EOL]     List<SourceFile> externFiles = Lists.newArrayList(SourceFile.fromCode("externs", externs)); [EOL]     Result result = compiler.compile(externFiles, inputs, options); [EOL]     if (!result.success) { [EOL]         String msg = "Errors:"; [EOL]         msg += Joiner.on("\n").join(result.errors); [EOL]         assertTrue(msg, result.success); [EOL]     } [EOL]     return result; [EOL] } <line_num>: 454,487
