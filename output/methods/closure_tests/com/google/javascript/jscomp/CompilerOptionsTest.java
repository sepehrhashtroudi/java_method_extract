public void testDefines() throws Exception { [EOL]     CompilerOptions options = new CompilerOptions(); [EOL]     options.setDefineToBooleanLiteral("trueVar", true); [EOL]     options.setDefineToBooleanLiteral("falseVar", false); [EOL]     options.setDefineToNumberLiteral("threeVar", 3); [EOL]     options.setDefineToStringLiteral("strVar", "str"); [EOL]     Map<String, Node> actual = options.getDefineReplacements(); [EOL]     assertEquivalent(new Node(Token.TRUE), actual.get("trueVar")); [EOL]     assertEquivalent(new Node(Token.FALSE), actual.get("falseVar")); [EOL]     assertEquivalent(Node.newNumber(3), actual.get("threeVar")); [EOL]     assertEquivalent(Node.newString("str"), actual.get("strVar")); [EOL] } <line_num>: 32,44
public void assertEquivalent(Node a, Node b) { [EOL]     assertTrue(a.isEquivalentTo(b)); [EOL] } <line_num>: 46,48
