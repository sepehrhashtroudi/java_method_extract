public FunctionTypeBuilderTest() { [EOL]     parseTypeInfo = true; [EOL]     enableTypeCheck(CheckLevel.WARNING); [EOL] } <line_num>: 34,37
@Override [EOL] public void process(Node externs, Node js) { [EOL] } <line_num>: 43,44
@Override [EOL] public CompilerPass getProcessor(Compiler compiler) { [EOL]     return new CompilerPass() { [EOL]  [EOL]         @Override [EOL]         public void process(Node externs, Node js) { [EOL]         } [EOL]     }; [EOL] } <line_num>: 39,46
@Override [EOL] public int getNumRepetitions() { [EOL]     return 1; [EOL] } <line_num>: 48,51
public void testValidBuiltInTypeRedefinition() throws Exception { [EOL]     testSame(ALL_NATIVE_EXTERN_TYPES, "", null); [EOL] } <line_num>: 53,55
public void testBuiltInTypeDifferentReturnType() throws Exception { [EOL]     testSame("/**\n" + " * @constructor\n" + " * @param {*} opt_str\n" + " * @return {number}\n" + " */\n" + "function String(opt_str) {}\n", "", FunctionTypeBuilder.TYPE_REDEFINITION, "attempted re-definition of type String\n" + "found   : function (new:String, *=): number\n" + "expected: function (new:String, *=): string"); [EOL] } <line_num>: 57,69
public void testBuiltInTypeDifferentNumParams() throws Exception { [EOL]     testSame("/**\n" + " * @constructor\n" + " * @return {string}\n" + " */\n" + "function String() {}\n", "", FunctionTypeBuilder.TYPE_REDEFINITION, "attempted re-definition of type String\n" + "found   : function (new:String): string\n" + "expected: function (new:String, *=): string"); [EOL] } <line_num>: 71,82
public void testBuiltInTypeDifferentNumParams2() throws Exception { [EOL]     testSame("/**\n" + " * @constructor\n" + " * @return {string}\n" + " */\n" + "function String(opt_str, opt_nothing) {}\n", "", FunctionTypeBuilder.TYPE_REDEFINITION, "attempted re-definition of type String\n" + "found   : function (new:String, ?=, ?=): string\n" + "expected: function (new:String, *=): string"); [EOL] } <line_num>: 84,95
public void testBuiltInTypeDifferentParamType() throws Exception { [EOL]     testSame("/**\n" + " * @constructor\n" + " * @return {string}\n" + " */\n" + "function String(opt_str) {}\n", "", FunctionTypeBuilder.TYPE_REDEFINITION, "attempted re-definition of type String\n" + "found   : function (new:String, ?=): string\n" + "expected: function (new:String, *=): string"); [EOL] } <line_num>: 97,108
public void testBadFunctionTypeDefinition() throws Exception { [EOL]     testSame("/** @constructor */function Function(opt_str) {}\n", "", FunctionTypeBuilder.TYPE_REDEFINITION, "attempted re-definition of type Function\n" + "found   : function (new:Function, ?=): ?\n" + "expected: function (new:Function, ...[*]): ?"); [EOL] } <line_num>: 110,117
public void testExternSubTypes() throws Exception { [EOL]     testSame(ALL_NATIVE_EXTERN_TYPES, "", null); [EOL]     List<FunctionType> subtypes = ((ObjectType) getLastCompiler().getTypeRegistry().getType("Error")).getConstructor().getSubTypes(); [EOL]     for (FunctionType type : subtypes) { [EOL]         String typeName = type.getInstanceType().toString(); [EOL]         FunctionType typeInRegistry = ((ObjectType) getLastCompiler().getTypeRegistry().getType(typeName)).getConstructor(); [EOL]         assertTrue(typeInRegistry == type); [EOL]     } [EOL] } <line_num>: 119,130
