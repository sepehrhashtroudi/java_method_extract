@Override [EOL] public void run() { [EOL]     try { [EOL]         while (true) { [EOL]             parse(jf, INPUT); [EOL]             count.addAndGet(1); [EOL]         } [EOL]     } catch (IOException e) { [EOL]         System.err.println("PROBLEM: " + e); [EOL]     } [EOL] } <line_num>: 24,35
private void test() throws Exception { [EOL]     final JsonFactory jf = new JsonFactory(); [EOL]     final byte[] INPUT = "{\"a\":1}".getBytes("UTF-8"); [EOL]     final AtomicInteger count = new AtomicInteger(); [EOL]     for (int i = 0; i < THREADS; ++i) { [EOL]         new Thread(new Runnable() { [EOL]  [EOL]             @Override [EOL]             public void run() { [EOL]                 try { [EOL]                     while (true) { [EOL]                         parse(jf, INPUT); [EOL]                         count.addAndGet(1); [EOL]                     } [EOL]                 } catch (IOException e) { [EOL]                     System.err.println("PROBLEM: " + e); [EOL]                 } [EOL]             } [EOL]         }).start(); [EOL]     } [EOL]     Thread.sleep(200L); [EOL]     double totalTime = 0.0; [EOL]     double totalCount = 0.0; [EOL]     while (true) { [EOL]         long start = System.currentTimeMillis(); [EOL]         int startCount = count.get(); [EOL]         Thread.sleep(1000L); [EOL]         int done = count.get() - startCount; [EOL]         long time = System.currentTimeMillis() - start; [EOL]         totalTime += time; [EOL]         totalCount += done; [EOL]         double rate = (double) done / (double) time; [EOL]         System.out.printf("Rate: %.1f (avg: %.1f)\n", rate, totalCount / totalTime); [EOL]     } [EOL] } <line_num>: 16,60
protected void parse(JsonFactory jf, byte[] input) throws IOException { [EOL]     JsonParser jp = jf.createParser(input, 0, input.length); [EOL]     while (jp.nextToken() != null) { [EOL]         ; [EOL]     } [EOL]     jp.close(); [EOL] } <line_num>: 62,69
public static void main(String[] args) throws Exception { [EOL]     if (args.length != 0) { [EOL]         System.err.println("Usage: java ..."); [EOL]         System.exit(1); [EOL]     } [EOL]     new ConcurrencyReadTest().test(); [EOL] } <line_num>: 71,78
