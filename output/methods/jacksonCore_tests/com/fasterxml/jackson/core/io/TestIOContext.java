public void testAllocations() throws Exception { [EOL]     IOContext ctxt = new IOContext(new BufferRecycler(), "N/A", true); [EOL]     assertNotNull(ctxt.allocReadIOBuffer()); [EOL]     try { [EOL]         ctxt.allocReadIOBuffer(); [EOL]     } catch (IllegalStateException e) { [EOL]         verifyException(e, "second time"); [EOL]     } [EOL]     try { [EOL]         ctxt.releaseReadIOBuffer(new byte[1]); [EOL]     } catch (IllegalArgumentException e) { [EOL]         verifyException(e, "not owned"); [EOL]     } [EOL]     ctxt.releaseReadIOBuffer(null); [EOL]     assertNotNull(ctxt.allocWriteEncodingBuffer()); [EOL]     try { [EOL]         ctxt.allocWriteEncodingBuffer(); [EOL]     } catch (IllegalStateException e) { [EOL]         verifyException(e, "second time"); [EOL]     } [EOL]     try { [EOL]         ctxt.releaseWriteEncodingBuffer(new byte[1]); [EOL]     } catch (IllegalArgumentException e) { [EOL]         verifyException(e, "not owned"); [EOL]     } [EOL]     ctxt.releaseWriteEncodingBuffer(null); [EOL]     assertNotNull(ctxt.allocTokenBuffer()); [EOL]     try { [EOL]         ctxt.allocTokenBuffer(); [EOL]     } catch (IllegalStateException e) { [EOL]         verifyException(e, "second time"); [EOL]     } [EOL]     try { [EOL]         ctxt.releaseTokenBuffer(new char[1]); [EOL]     } catch (IllegalArgumentException e) { [EOL]         verifyException(e, "not owned"); [EOL]     } [EOL]     ctxt.releaseTokenBuffer(null); [EOL]     assertNotNull(ctxt.allocConcatBuffer()); [EOL]     try { [EOL]         ctxt.allocConcatBuffer(); [EOL]     } catch (IllegalStateException e) { [EOL]         verifyException(e, "second time"); [EOL]     } [EOL]     try { [EOL]         ctxt.releaseConcatBuffer(new char[1]); [EOL]     } catch (IllegalArgumentException e) { [EOL]         verifyException(e, "not owned"); [EOL]     } [EOL]     ctxt.releaseConcatBuffer(null); [EOL]     assertNotNull(ctxt.allocNameCopyBuffer(100)); [EOL]     try { [EOL]         ctxt.allocNameCopyBuffer(100); [EOL]     } catch (IllegalStateException e) { [EOL]         verifyException(e, "second time"); [EOL]     } [EOL]     try { [EOL]         ctxt.releaseNameCopyBuffer(new char[1]); [EOL]     } catch (IllegalArgumentException e) { [EOL]         verifyException(e, "not owned"); [EOL]     } [EOL]     ctxt.releaseNameCopyBuffer(null); [EOL] } <line_num>: 9,91
