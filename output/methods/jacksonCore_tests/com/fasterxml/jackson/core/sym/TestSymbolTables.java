public void testSyntheticWithChars() { [EOL]     CharsToNameCanonicalizer symbols = CharsToNameCanonicalizer.createRoot(1); [EOL]     final int COUNT = 6000; [EOL]     for (int i = 0; i < COUNT; ++i) { [EOL]         String id = fieldNameFor(i); [EOL]         char[] ch = id.toCharArray(); [EOL]         symbols.findSymbol(ch, 0, ch.length, symbols.calcHash(id)); [EOL]     } [EOL]     assertEquals(8192, symbols.bucketCount()); [EOL]     assertEquals(COUNT, symbols.size()); [EOL]     assertEquals(1401, symbols.collisionCount()); [EOL]     assertEquals(4, symbols.maxCollisionLength()); [EOL] } <line_num>: 63,84
public void testSyntheticWithBytes() throws IOException { [EOL]     BytesToNameCanonicalizer symbols = BytesToNameCanonicalizer.createRoot(33333).makeChild(true, true); [EOL]     final int COUNT = 6000; [EOL]     for (int i = 0; i < COUNT; ++i) { [EOL]         String id = fieldNameFor(i); [EOL]         int[] quads = BytesToNameCanonicalizer.calcQuads(id.getBytes("UTF-8")); [EOL]         symbols.addName(id, quads, quads.length); [EOL]     } [EOL]     assertEquals(COUNT, symbols.size()); [EOL]     assertEquals(8192, symbols.bucketCount()); [EOL]     assertEquals(1686, symbols.collisionCount()); [EOL]     assertEquals(9, symbols.maxCollisionLength()); [EOL] } <line_num>: 88,108
