public void testSimple() throws Exception { [EOL]     JsonFactory jf = new JsonFactory(); [EOL]     StringWriter sw = new StringWriter(); [EOL]     JsonGenerator jgen = jf.createGenerator(sw); [EOL]     _writeSimple(jgen); [EOL]     jgen.close(); [EOL]     String json = sw.toString(); [EOL]     _verifySimple(jf.createParser(json)); [EOL]     ByteArrayOutputStream out = new ByteArrayOutputStream(); [EOL]     jgen = jf.createGenerator(out, JsonEncoding.UTF8); [EOL]     _writeSimple(jgen); [EOL]     jgen.close(); [EOL]     byte[] jsonB = out.toByteArray(); [EOL]     _verifySimple(jf.createParser(jsonB)); [EOL] } <line_num>: 17,36
private void _writeSimple(JsonGenerator jgen) throws Exception { [EOL]     jgen.writeStartArray(); [EOL]     jgen.writeStartObject(); [EOL]     jgen.writeFieldName(quotedName); [EOL]     jgen.writeString("a"); [EOL]     jgen.writeFieldName(latin1Name); [EOL]     jgen.writeString("b"); [EOL]     jgen.writeEndObject(); [EOL]     jgen.writeStartObject(); [EOL]     jgen.writeFieldName(latin1Name); [EOL]     jgen.writeString("c"); [EOL]     jgen.writeFieldName(quotedName); [EOL]     jgen.writeString("d"); [EOL]     jgen.writeEndObject(); [EOL]     jgen.writeEndArray(); [EOL] } <line_num>: 44,64
private void _verifySimple(JsonParser jp) throws Exception { [EOL]     assertToken(JsonToken.START_ARRAY, jp.nextToken()); [EOL]     assertToken(JsonToken.START_OBJECT, jp.nextToken()); [EOL]     assertToken(JsonToken.FIELD_NAME, jp.nextToken()); [EOL]     assertEquals(NAME_WITH_QUOTES, jp.getText()); [EOL]     assertToken(JsonToken.VALUE_STRING, jp.nextToken()); [EOL]     assertEquals("a", jp.getText()); [EOL]     assertToken(JsonToken.FIELD_NAME, jp.nextToken()); [EOL]     assertEquals(NAME_WITH_LATIN1, jp.getText()); [EOL]     assertToken(JsonToken.VALUE_STRING, jp.nextToken()); [EOL]     assertEquals("b", jp.getText()); [EOL]     assertToken(JsonToken.END_OBJECT, jp.nextToken()); [EOL]     assertToken(JsonToken.START_OBJECT, jp.nextToken()); [EOL]     assertToken(JsonToken.FIELD_NAME, jp.nextToken()); [EOL]     assertEquals(NAME_WITH_LATIN1, jp.getText()); [EOL]     assertToken(JsonToken.VALUE_STRING, jp.nextToken()); [EOL]     assertEquals("c", jp.getText()); [EOL]     assertToken(JsonToken.FIELD_NAME, jp.nextToken()); [EOL]     assertEquals(NAME_WITH_QUOTES, jp.getText()); [EOL]     assertToken(JsonToken.VALUE_STRING, jp.nextToken()); [EOL]     assertEquals("d", jp.getText()); [EOL]     assertToken(JsonToken.END_OBJECT, jp.nextToken()); [EOL]     assertToken(JsonToken.END_ARRAY, jp.nextToken()); [EOL]     assertNull(jp.nextToken()); [EOL] } <line_num>: 66,94
