public AbstractOverlay() { [EOL]     this.changeListeners = new EventListenerList(); [EOL] } <line_num>: 62,64
public void addChangeListener(OverlayChangeListener listener) { [EOL]     if (listener == null) { [EOL]         throw new IllegalArgumentException("Null 'listener' argument."); [EOL]     } [EOL]     this.changeListeners.add(OverlayChangeListener.class, listener); [EOL] } <line_num>: 73,78
public void removeChangeListener(OverlayChangeListener listener) { [EOL]     if (listener == null) { [EOL]         throw new IllegalArgumentException("Null 'listener' argument."); [EOL]     } [EOL]     this.changeListeners.remove(OverlayChangeListener.class, listener); [EOL] } <line_num>: 87,92
public void fireOverlayChanged() { [EOL]     OverlayChangeEvent event = new OverlayChangeEvent(this); [EOL]     notifyListeners(event); [EOL] } <line_num>: 99,102
protected void notifyListeners(OverlayChangeEvent event) { [EOL]     Object[] listeners = this.changeListeners.getListenerList(); [EOL]     for (int i = listeners.length - 2; i >= 0; i -= 2) { [EOL]         if (listeners[i] == OverlayChangeListener.class) { [EOL]             ((OverlayChangeListener) listeners[i + 1]).overlayChanged(event); [EOL]         } [EOL]     } [EOL] } <line_num>: 110,118
