public TextLine() { [EOL]     this.fragments = new java.util.ArrayList(); [EOL] } <line_num>: 75,77
public TextLine(String text) { [EOL]     this(text, TextFragment.DEFAULT_FONT); [EOL] } <line_num>: 84,86
public TextLine(String text, Font font) { [EOL]     this.fragments = new java.util.ArrayList(); [EOL]     TextFragment fragment = new TextFragment(text, font); [EOL]     this.fragments.add(fragment); [EOL] } <line_num>: 94,98
public TextLine(String text, Font font, Paint paint) { [EOL]     if (text == null) { [EOL]         throw new IllegalArgumentException("Null 'text' argument."); [EOL]     } [EOL]     if (font == null) { [EOL]         throw new IllegalArgumentException("Null 'font' argument."); [EOL]     } [EOL]     if (paint == null) { [EOL]         throw new IllegalArgumentException("Null 'paint' argument."); [EOL]     } [EOL]     this.fragments = new java.util.ArrayList(); [EOL]     TextFragment fragment = new TextFragment(text, font, paint); [EOL]     this.fragments.add(fragment); [EOL] } <line_num>: 107,120
public void addFragment(TextFragment fragment) { [EOL]     this.fragments.add(fragment); [EOL] } <line_num>: 127,129
public void removeFragment(TextFragment fragment) { [EOL]     this.fragments.remove(fragment); [EOL] } <line_num>: 136,138
public void draw(Graphics2D g2, float anchorX, float anchorY, TextAnchor anchor, float rotateX, float rotateY, double angle) { [EOL]     float x = anchorX; [EOL]     float yOffset = calculateBaselineOffset(g2, anchor); [EOL]     Iterator iterator = this.fragments.iterator(); [EOL]     while (iterator.hasNext()) { [EOL]         TextFragment fragment = (TextFragment) iterator.next(); [EOL]         Size2D d = fragment.calculateDimensions(g2); [EOL]         fragment.draw(g2, x, anchorY + yOffset, TextAnchor.BASELINE_LEFT, rotateX, rotateY, angle); [EOL]         x = x + (float) d.getWidth(); [EOL]     } [EOL] } <line_num>: 152,167
public Size2D calculateDimensions(Graphics2D g2) { [EOL]     double width = 0.0; [EOL]     double height = 0.0; [EOL]     Iterator iterator = this.fragments.iterator(); [EOL]     while (iterator.hasNext()) { [EOL]         TextFragment fragment = (TextFragment) iterator.next(); [EOL]         Size2D dimension = fragment.calculateDimensions(g2); [EOL]         width = width + dimension.getWidth(); [EOL]         height = Math.max(height, dimension.getHeight()); [EOL]     } [EOL]     return new Size2D(width, height); [EOL] } <line_num>: 176,187
public TextFragment getFirstTextFragment() { [EOL]     TextFragment result = null; [EOL]     if (this.fragments.size() > 0) { [EOL]         result = (TextFragment) this.fragments.get(0); [EOL]     } [EOL]     return result; [EOL] } <line_num>: 194,200
public TextFragment getLastTextFragment() { [EOL]     TextFragment result = null; [EOL]     if (this.fragments.size() > 0) { [EOL]         result = (TextFragment) this.fragments.get(this.fragments.size() - 1); [EOL]     } [EOL]     return result; [EOL] } <line_num>: 207,214
private float calculateBaselineOffset(Graphics2D g2, TextAnchor anchor) { [EOL]     float result = 0.0f; [EOL]     Iterator iterator = this.fragments.iterator(); [EOL]     while (iterator.hasNext()) { [EOL]         TextFragment fragment = (TextFragment) iterator.next(); [EOL]         result = Math.max(result, fragment.calculateBaselineOffset(g2, anchor)); [EOL]     } [EOL]     return result; [EOL] } <line_num>: 225,235
public boolean equals(Object obj) { [EOL]     if (obj == null) { [EOL]         return false; [EOL]     } [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (obj instanceof TextLine) { [EOL]         TextLine line = (TextLine) obj; [EOL]         return this.fragments.equals(line.fragments); [EOL]     } [EOL]     return false; [EOL] } <line_num>: 244,256
public int hashCode() { [EOL]     return (this.fragments != null ? this.fragments.hashCode() : 0); [EOL] } <line_num>: 263,265
