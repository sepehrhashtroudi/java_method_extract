public ShortTextTitle(String text) { [EOL]     setText(text); [EOL] } <line_num>: 70,72
public Size2D arrange(Graphics2D g2, RectangleConstraint constraint) { [EOL]     RectangleConstraint cc = toContentConstraint(constraint); [EOL]     LengthConstraintType w = cc.getWidthConstraintType(); [EOL]     LengthConstraintType h = cc.getHeightConstraintType(); [EOL]     Size2D contentSize = null; [EOL]     if (w == LengthConstraintType.NONE) { [EOL]         if (h == LengthConstraintType.NONE) { [EOL]             contentSize = arrangeNN(g2); [EOL]         } else if (h == LengthConstraintType.RANGE) { [EOL]             throw new RuntimeException("Not yet implemented."); [EOL]         } else if (h == LengthConstraintType.FIXED) { [EOL]             throw new RuntimeException("Not yet implemented."); [EOL]         } [EOL]     } else if (w == LengthConstraintType.RANGE) { [EOL]         if (h == LengthConstraintType.NONE) { [EOL]             contentSize = arrangeRN(g2, cc.getWidthRange()); [EOL]         } else if (h == LengthConstraintType.RANGE) { [EOL]             contentSize = arrangeRR(g2, cc.getWidthRange(), cc.getHeightRange()); [EOL]         } else if (h == LengthConstraintType.FIXED) { [EOL]             throw new RuntimeException("Not yet implemented."); [EOL]         } [EOL]     } else if (w == LengthConstraintType.FIXED) { [EOL]         if (h == LengthConstraintType.NONE) { [EOL]             contentSize = arrangeFN(g2, cc.getWidth()); [EOL]         } else if (h == LengthConstraintType.RANGE) { [EOL]             throw new RuntimeException("Not yet implemented."); [EOL]         } else if (h == LengthConstraintType.FIXED) { [EOL]             throw new RuntimeException("Not yet implemented."); [EOL]         } [EOL]     } [EOL]     if (contentSize.width <= 0.0 || contentSize.height <= 0.0) { [EOL]         return new Size2D(0.0, 0.0); [EOL]     } else { [EOL]         return new Size2D(calculateTotalWidth(contentSize.getWidth()), calculateTotalHeight(contentSize.getHeight())); [EOL]     } [EOL] } <line_num>: 85,131
protected Size2D arrangeNN(Graphics2D g2) { [EOL]     Range max = new Range(0.0, Float.MAX_VALUE); [EOL]     return arrangeRR(g2, max, max); [EOL] } <line_num>: 141,144
protected Size2D arrangeRN(Graphics2D g2, Range widthRange) { [EOL]     Size2D s = arrangeNN(g2); [EOL]     if (widthRange.contains(s.getWidth())) { [EOL]         return s; [EOL]     } [EOL]     double ww = widthRange.constrain(s.getWidth()); [EOL]     return arrangeFN(g2, ww); [EOL] } <line_num>: 155,162
protected Size2D arrangeFN(Graphics2D g2, double w) { [EOL]     g2.setFont(getFont()); [EOL]     FontMetrics fm = g2.getFontMetrics(getFont()); [EOL]     Rectangle2D bounds = TextUtilities.getTextBounds(getText(), g2, fm); [EOL]     if (bounds.getWidth() <= w) { [EOL]         return new Size2D(w, bounds.getHeight()); [EOL]     } else { [EOL]         return new Size2D(0.0, 0.0); [EOL]     } [EOL] } <line_num>: 175,185
protected Size2D arrangeRR(Graphics2D g2, Range widthRange, Range heightRange) { [EOL]     g2.setFont(getFont()); [EOL]     FontMetrics fm = g2.getFontMetrics(getFont()); [EOL]     Rectangle2D bounds = TextUtilities.getTextBounds(getText(), g2, fm); [EOL]     if (bounds.getWidth() <= widthRange.getUpperBound() && bounds.getHeight() <= heightRange.getUpperBound()) { [EOL]         return new Size2D(bounds.getWidth(), bounds.getHeight()); [EOL]     } else { [EOL]         return new Size2D(0.0, 0.0); [EOL]     } [EOL] } <line_num>: 196,209
public Object draw(Graphics2D g2, Rectangle2D area, Object params) { [EOL]     if (area.isEmpty()) { [EOL]         return null; [EOL]     } [EOL]     area = trimMargin(area); [EOL]     drawBorder(g2, area); [EOL]     area = trimBorder(area); [EOL]     area = trimPadding(area); [EOL]     g2.setFont(getFont()); [EOL]     g2.setPaint(getPaint()); [EOL]     TextUtilities.drawAlignedString(getText(), g2, (float) area.getMinX(), (float) area.getMinY(), TextAnchor.TOP_LEFT); [EOL]     return null; [EOL] } <line_num>: 220,234
