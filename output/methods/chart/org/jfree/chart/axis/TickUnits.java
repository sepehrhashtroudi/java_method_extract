public TickUnits() { [EOL]     this.tickUnits = new ArrayList(); [EOL] } <line_num>: 79,81
public void add(TickUnit unit) { [EOL]     if (unit == null) { [EOL]         throw new NullPointerException("Null 'unit' argument."); [EOL]     } [EOL]     this.tickUnits.add(unit); [EOL]     Collections.sort(this.tickUnits); [EOL] } <line_num>: 89,95
public int size() { [EOL]     return this.tickUnits.size(); [EOL] } <line_num>: 104,106
public TickUnit get(int pos) { [EOL]     return (TickUnit) this.tickUnits.get(pos); [EOL] } <line_num>: 117,119
public TickUnit getLargerTickUnit(TickUnit unit) { [EOL]     int index = Collections.binarySearch(this.tickUnits, unit); [EOL]     if (index >= 0) { [EOL]         index = index + 1; [EOL]     } else { [EOL]         index = -index; [EOL]     } [EOL]     return (TickUnit) this.tickUnits.get(Math.min(index, this.tickUnits.size() - 1)); [EOL] } <line_num>: 128,141
public TickUnit getCeilingTickUnit(TickUnit unit) { [EOL]     int index = Collections.binarySearch(this.tickUnits, unit); [EOL]     if (index >= 0) { [EOL]         return (TickUnit) this.tickUnits.get(index); [EOL]     } else { [EOL]         index = -(index + 1); [EOL]         return (TickUnit) this.tickUnits.get(Math.min(index, this.tickUnits.size() - 1)); [EOL]     } [EOL] } <line_num>: 151,163
public TickUnit getCeilingTickUnit(double size) { [EOL]     return getCeilingTickUnit(new NumberTickUnit(size, NumberFormat.getInstance())); [EOL] } <line_num>: 173,176
public Object clone() throws CloneNotSupportedException { [EOL]     TickUnits clone = (TickUnits) super.clone(); [EOL]     clone.tickUnits = new java.util.ArrayList(this.tickUnits); [EOL]     return clone; [EOL] } <line_num>: 186,190
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof TickUnits)) { [EOL]         return false; [EOL]     } [EOL]     TickUnits that = (TickUnits) obj; [EOL]     return that.tickUnits.equals(this.tickUnits); [EOL] } <line_num>: 199,208
