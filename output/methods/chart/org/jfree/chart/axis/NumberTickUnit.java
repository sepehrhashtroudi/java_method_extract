public NumberTickUnit(double size) { [EOL]     this(size, NumberFormat.getNumberInstance()); [EOL] } <line_num>: 70,72
public NumberTickUnit(double size, NumberFormat formatter) { [EOL]     super(size); [EOL]     if (formatter == null) { [EOL]         throw new IllegalArgumentException("Null 'formatter' argument."); [EOL]     } [EOL]     this.formatter = formatter; [EOL] } <line_num>: 81,87
public NumberTickUnit(double size, NumberFormat formatter, int minorTickCount) { [EOL]     super(size, minorTickCount); [EOL]     if (formatter == null) { [EOL]         throw new IllegalArgumentException("Null 'formatter' argument."); [EOL]     } [EOL]     this.formatter = formatter; [EOL] } <line_num>: 99,106
public String valueToString(double value) { [EOL]     return this.formatter.format(value); [EOL] } <line_num>: 115,117
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof NumberTickUnit)) { [EOL]         return false; [EOL]     } [EOL]     if (!super.equals(obj)) { [EOL]         return false; [EOL]     } [EOL]     NumberTickUnit that = (NumberTickUnit) obj; [EOL]     if (!this.formatter.equals(that.formatter)) { [EOL]         return false; [EOL]     } [EOL]     return true; [EOL] } <line_num>: 126,141
public String toString() { [EOL]     return "[size=" + this.valueToString(this.getSize()) + "]"; [EOL] } <line_num>: 148,150
public int hashCode() { [EOL]     int result = super.hashCode(); [EOL]     result = 29 * result + (this.formatter != null ? this.formatter.hashCode() : 0); [EOL]     return result; [EOL] } <line_num>: 157,162
