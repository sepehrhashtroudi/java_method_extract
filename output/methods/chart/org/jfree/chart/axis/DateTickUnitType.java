private DateTickUnitType(String name, int calendarField) { [EOL]     this.name = name; [EOL]     this.calendarField = calendarField; [EOL] } <line_num>: 97,100
public int getCalendarField() { [EOL]     return this.calendarField; [EOL] } <line_num>: 107,109
public String toString() { [EOL]     return this.name; [EOL] } <line_num>: 116,118
public boolean equals(Object obj) { [EOL]     if (this == obj) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof DateTickUnitType)) { [EOL]         return false; [EOL]     } [EOL]     DateTickUnitType t = (DateTickUnitType) obj; [EOL]     if (!this.name.equals(t.toString())) { [EOL]         return false; [EOL]     } [EOL]     return true; [EOL] } <line_num>: 128,140
private Object readResolve() throws ObjectStreamException { [EOL]     if (this.equals(DateTickUnitType.YEAR)) { [EOL]         return DateTickUnitType.YEAR; [EOL]     } else if (this.equals(DateTickUnitType.MONTH)) { [EOL]         return DateTickUnitType.MONTH; [EOL]     } else if (this.equals(DateTickUnitType.DAY)) { [EOL]         return DateTickUnitType.DAY; [EOL]     } else if (this.equals(DateTickUnitType.HOUR)) { [EOL]         return DateTickUnitType.HOUR; [EOL]     } else if (this.equals(DateTickUnitType.MINUTE)) { [EOL]         return DateTickUnitType.MINUTE; [EOL]     } else if (this.equals(DateTickUnitType.SECOND)) { [EOL]         return DateTickUnitType.SECOND; [EOL]     } else if (this.equals(DateTickUnitType.MILLISECOND)) { [EOL]         return DateTickUnitType.MILLISECOND; [EOL]     } [EOL]     return null; [EOL] } <line_num>: 149,172
