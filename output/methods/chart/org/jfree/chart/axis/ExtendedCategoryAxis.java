public ExtendedCategoryAxis(String label) { [EOL]     super(label); [EOL]     this.sublabels = new HashMap(); [EOL]     this.sublabelFont = new Font("Tahoma", Font.PLAIN, 10); [EOL]     this.sublabelPaint = Color.black; [EOL] } <line_num>: 89,94
public Font getSubLabelFont() { [EOL]     return this.sublabelFont; [EOL] } <line_num>: 103,105
public void setSubLabelFont(Font font) { [EOL]     if (font == null) { [EOL]         throw new IllegalArgumentException("Null 'font' argument."); [EOL]     } [EOL]     this.sublabelFont = font; [EOL]     notifyListeners(new AxisChangeEvent(this)); [EOL] } <line_num>: 115,121
public Paint getSubLabelPaint() { [EOL]     return this.sublabelPaint; [EOL] } <line_num>: 130,132
public void setSubLabelPaint(Paint paint) { [EOL]     if (paint == null) { [EOL]         throw new IllegalArgumentException("Null 'paint' argument."); [EOL]     } [EOL]     this.sublabelPaint = paint; [EOL]     notifyListeners(new AxisChangeEvent(this)); [EOL] } <line_num>: 142,148
public void addSubLabel(Comparable category, String label) { [EOL]     this.sublabels.put(category, label); [EOL] } <line_num>: 156,158
protected TextBlock createLabel(Comparable category, float width, RectangleEdge edge, Graphics2D g2) { [EOL]     TextBlock label = super.createLabel(category, width, edge, g2); [EOL]     String s = (String) this.sublabels.get(category); [EOL]     if (s != null) { [EOL]         if (edge == RectangleEdge.TOP || edge == RectangleEdge.BOTTOM) { [EOL]             TextLine line = new TextLine(s, this.sublabelFont, this.sublabelPaint); [EOL]             label.addLine(line); [EOL]         } else if (edge == RectangleEdge.LEFT || edge == RectangleEdge.RIGHT) { [EOL]             TextLine line = label.getLastLine(); [EOL]             if (line != null) { [EOL]                 line.addFragment(new TextFragment("  " + s, this.sublabelFont, this.sublabelPaint)); [EOL]             } [EOL]         } [EOL]     } [EOL]     return label; [EOL] } <line_num>: 171,191
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof ExtendedCategoryAxis)) { [EOL]         return false; [EOL]     } [EOL]     ExtendedCategoryAxis that = (ExtendedCategoryAxis) obj; [EOL]     if (!this.sublabelFont.equals(that.sublabelFont)) { [EOL]         return false; [EOL]     } [EOL]     if (!PaintUtilities.equal(this.sublabelPaint, that.sublabelPaint)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.sublabels.equals(that.sublabels)) { [EOL]         return false; [EOL]     } [EOL]     return super.equals(obj); [EOL] } <line_num>: 200,218
public Object clone() throws CloneNotSupportedException { [EOL]     ExtendedCategoryAxis clone = (ExtendedCategoryAxis) super.clone(); [EOL]     clone.sublabels = new HashMap(this.sublabels); [EOL]     return clone; [EOL] } <line_num>: 227,231
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL]     SerialUtilities.writePaint(this.sublabelPaint, stream); [EOL] } <line_num>: 240,243
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL]     this.sublabelPaint = SerialUtilities.readPaint(stream); [EOL] } <line_num>: 253,257
