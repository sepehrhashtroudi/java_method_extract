public AxisEntity(Shape area, Axis axis) { [EOL]     this(area, axis, null); [EOL] } <line_num>: 73,76
public AxisEntity(Shape area, Axis axis, String toolTipText) { [EOL]     this(area, axis, toolTipText, null); [EOL] } <line_num>: 85,88
public AxisEntity(Shape area, Axis axis, String toolTipText, String urlText) { [EOL]     super(area, toolTipText, urlText); [EOL]     if (axis == null) { [EOL]         throw new IllegalArgumentException("Null 'axis' argument."); [EOL]     } [EOL]     this.axis = axis; [EOL] } <line_num>: 99,107
public Axis getAxis() { [EOL]     return this.axis; [EOL] } <line_num>: 114,116
public String toString() { [EOL]     StringBuffer buf = new StringBuffer("AxisEntity: "); [EOL]     buf.append("tooltip = "); [EOL]     buf.append(getToolTipText()); [EOL]     return buf.toString(); [EOL] } <line_num>: 124,129
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof AxisEntity)) { [EOL]         return false; [EOL]     } [EOL]     AxisEntity that = (AxisEntity) obj; [EOL]     if (!getArea().equals(that.getArea())) { [EOL]         return false; [EOL]     } [EOL]     if (!ObjectUtilities.equal(getToolTipText(), that.getToolTipText())) { [EOL]         return false; [EOL]     } [EOL]     if (!ObjectUtilities.equal(getURLText(), that.getURLText())) { [EOL]         return false; [EOL]     } [EOL]     if (!(this.axis.equals(that.axis))) { [EOL]         return false; [EOL]     } [EOL]     return true; [EOL] } <line_num>: 138,159
public int hashCode() { [EOL]     int result = 39; [EOL]     result = HashUtilities.hashCode(result, getToolTipText()); [EOL]     result = HashUtilities.hashCode(result, getURLText()); [EOL]     return result; [EOL] } <line_num>: 166,171
public Object clone() throws CloneNotSupportedException { [EOL]     return super.clone(); [EOL] } <line_num>: 181,183
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL]     SerialUtilities.writeShape(getArea(), stream); [EOL] } <line_num>: 192,195
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL]     setArea(SerialUtilities.readShape(stream)); [EOL] } <line_num>: 205,209
