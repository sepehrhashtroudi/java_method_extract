public DialCap() { [EOL]     this.radius = 0.05; [EOL]     this.fillPaint = Color.white; [EOL]     this.outlinePaint = Color.black; [EOL]     this.outlineStroke = new BasicStroke(2.0f); [EOL] } <line_num>: 103,108
public double getRadius() { [EOL]     return this.radius; [EOL] } <line_num>: 118,120
public void setRadius(double radius) { [EOL]     if (radius <= 0.0) { [EOL]         throw new IllegalArgumentException("Requires radius > 0.0."); [EOL]     } [EOL]     this.radius = radius; [EOL]     notifyListeners(new DialLayerChangeEvent(this)); [EOL] } <line_num>: 131,137
public Paint getFillPaint() { [EOL]     return this.fillPaint; [EOL] } <line_num>: 146,148
public void setFillPaint(Paint paint) { [EOL]     if (paint == null) { [EOL]         throw new IllegalArgumentException("Null 'paint' argument."); [EOL]     } [EOL]     this.fillPaint = paint; [EOL]     notifyListeners(new DialLayerChangeEvent(this)); [EOL] } <line_num>: 158,164
public Paint getOutlinePaint() { [EOL]     return this.outlinePaint; [EOL] } <line_num>: 173,175
public void setOutlinePaint(Paint paint) { [EOL]     if (paint == null) { [EOL]         throw new IllegalArgumentException("Null 'paint' argument."); [EOL]     } [EOL]     this.outlinePaint = paint; [EOL]     notifyListeners(new DialLayerChangeEvent(this)); [EOL] } <line_num>: 185,191
public Stroke getOutlineStroke() { [EOL]     return this.outlineStroke; [EOL] } <line_num>: 200,202
public void setOutlineStroke(Stroke stroke) { [EOL]     if (stroke == null) { [EOL]         throw new IllegalArgumentException("Null 'stroke' argument."); [EOL]     } [EOL]     this.outlineStroke = stroke; [EOL]     notifyListeners(new DialLayerChangeEvent(this)); [EOL] } <line_num>: 212,218
public boolean isClippedToWindow() { [EOL]     return true; [EOL] } <line_num>: 226,228
public void draw(Graphics2D g2, DialPlot plot, Rectangle2D frame, Rectangle2D view) { [EOL]     g2.setPaint(this.fillPaint); [EOL]     Rectangle2D f = DialPlot.rectangleByRadius(frame, this.radius, this.radius); [EOL]     Ellipse2D e = new Ellipse2D.Double(f.getX(), f.getY(), f.getWidth(), f.getHeight()); [EOL]     g2.fill(e); [EOL]     g2.setPaint(this.outlinePaint); [EOL]     g2.setStroke(this.outlineStroke); [EOL]     g2.draw(e); [EOL] } <line_num>: 240,254
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof DialCap)) { [EOL]         return false; [EOL]     } [EOL]     DialCap that = (DialCap) obj; [EOL]     if (this.radius != that.radius) { [EOL]         return false; [EOL]     } [EOL]     if (!PaintUtilities.equal(this.fillPaint, that.fillPaint)) { [EOL]         return false; [EOL]     } [EOL]     if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.outlineStroke.equals(that.outlineStroke)) { [EOL]         return false; [EOL]     } [EOL]     return super.equals(obj); [EOL] } <line_num>: 263,284
public int hashCode() { [EOL]     int result = 193; [EOL]     result = 37 * result + HashUtilities.hashCodeForPaint(this.fillPaint); [EOL]     result = 37 * result + HashUtilities.hashCodeForPaint(this.outlinePaint); [EOL]     result = 37 * result + this.outlineStroke.hashCode(); [EOL]     return result; [EOL] } <line_num>: 291,298
public Object clone() throws CloneNotSupportedException { [EOL]     return super.clone(); [EOL] } <line_num>: 308,310
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL]     SerialUtilities.writePaint(this.fillPaint, stream); [EOL]     SerialUtilities.writePaint(this.outlinePaint, stream); [EOL]     SerialUtilities.writeStroke(this.outlineStroke, stream); [EOL] } <line_num>: 319,324
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL]     this.fillPaint = SerialUtilities.readPaint(stream); [EOL]     this.outlinePaint = SerialUtilities.readPaint(stream); [EOL]     this.outlineStroke = SerialUtilities.readStroke(stream); [EOL] } <line_num>: 334,340
