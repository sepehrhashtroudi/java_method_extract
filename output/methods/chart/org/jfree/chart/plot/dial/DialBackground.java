public DialBackground() { [EOL]     this(Color.white); [EOL] } <line_num>: 89,91
public DialBackground(Paint paint) { [EOL]     if (paint == null) { [EOL]         throw new IllegalArgumentException("Null 'paint' argument."); [EOL]     } [EOL]     this.paint = paint; [EOL]     this.gradientPaintTransformer = new StandardGradientPaintTransformer(); [EOL] } <line_num>: 101,107
public Paint getPaint() { [EOL]     return this.paint; [EOL] } <line_num>: 116,118
public void setPaint(Paint paint) { [EOL]     if (paint == null) { [EOL]         throw new IllegalArgumentException("Null 'paint' argument."); [EOL]     } [EOL]     this.paint = paint; [EOL]     notifyListeners(new DialLayerChangeEvent(this)); [EOL] } <line_num>: 128,134
public GradientPaintTransformer getGradientPaintTransformer() { [EOL]     return this.gradientPaintTransformer; [EOL] } <line_num>: 144,146
public void setGradientPaintTransformer(GradientPaintTransformer t) { [EOL]     if (t == null) { [EOL]         throw new IllegalArgumentException("Null 't' argument."); [EOL]     } [EOL]     this.gradientPaintTransformer = t; [EOL]     notifyListeners(new DialLayerChangeEvent(this)); [EOL] } <line_num>: 157,163
public boolean isClippedToWindow() { [EOL]     return true; [EOL] } <line_num>: 171,173
public void draw(Graphics2D g2, DialPlot plot, Rectangle2D frame, Rectangle2D view) { [EOL]     Paint p = this.paint; [EOL]     if (p instanceof GradientPaint) { [EOL]         p = this.gradientPaintTransformer.transform((GradientPaint) p, view); [EOL]     } [EOL]     g2.setPaint(p); [EOL]     g2.fill(view); [EOL] } <line_num>: 185,195
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof DialBackground)) { [EOL]         return false; [EOL]     } [EOL]     DialBackground that = (DialBackground) obj; [EOL]     if (!PaintUtilities.equal(this.paint, that.paint)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.gradientPaintTransformer.equals(that.gradientPaintTransformer)) { [EOL]         return false; [EOL]     } [EOL]     return super.equals(obj); [EOL] } <line_num>: 204,220
public int hashCode() { [EOL]     int result = 193; [EOL]     result = 37 * result + HashUtilities.hashCodeForPaint(this.paint); [EOL]     result = 37 * result + this.gradientPaintTransformer.hashCode(); [EOL]     return result; [EOL] } <line_num>: 227,232
public Object clone() throws CloneNotSupportedException { [EOL]     return super.clone(); [EOL] } <line_num>: 242,244
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL]     SerialUtilities.writePaint(this.paint, stream); [EOL] } <line_num>: 253,256
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL]     this.paint = SerialUtilities.readPaint(stream); [EOL] } <line_num>: 266,270
