public StandardDialFrame() { [EOL]     this.backgroundPaint = Color.gray; [EOL]     this.foregroundPaint = Color.black; [EOL]     this.stroke = new BasicStroke(2.0f); [EOL]     this.radius = 0.95; [EOL] } <line_num>: 99,104
public double getRadius() { [EOL]     return this.radius; [EOL] } <line_num>: 113,115
public void setRadius(double radius) { [EOL]     if (radius <= 0) { [EOL]         throw new IllegalArgumentException("The 'radius' must be positive."); [EOL]     } [EOL]     this.radius = radius; [EOL]     notifyListeners(new DialLayerChangeEvent(this)); [EOL] } <line_num>: 125,132
public Paint getBackgroundPaint() { [EOL]     return this.backgroundPaint; [EOL] } <line_num>: 141,143
public void setBackgroundPaint(Paint paint) { [EOL]     if (paint == null) { [EOL]         throw new IllegalArgumentException("Null 'paint' argument."); [EOL]     } [EOL]     this.backgroundPaint = paint; [EOL]     notifyListeners(new DialLayerChangeEvent(this)); [EOL] } <line_num>: 153,159
public Paint getForegroundPaint() { [EOL]     return this.foregroundPaint; [EOL] } <line_num>: 168,170
public void setForegroundPaint(Paint paint) { [EOL]     if (paint == null) { [EOL]         throw new IllegalArgumentException("Null 'paint' argument."); [EOL]     } [EOL]     this.foregroundPaint = paint; [EOL]     notifyListeners(new DialLayerChangeEvent(this)); [EOL] } <line_num>: 180,186
public Stroke getStroke() { [EOL]     return this.stroke; [EOL] } <line_num>: 195,197
public void setStroke(Stroke stroke) { [EOL]     if (stroke == null) { [EOL]         throw new IllegalArgumentException("Null 'stroke' argument."); [EOL]     } [EOL]     this.stroke = stroke; [EOL]     notifyListeners(new DialLayerChangeEvent(this)); [EOL] } <line_num>: 207,213
public Shape getWindow(Rectangle2D frame) { [EOL]     Rectangle2D f = DialPlot.rectangleByRadius(frame, this.radius, this.radius); [EOL]     return new Ellipse2D.Double(f.getX(), f.getY(), f.getWidth(), f.getHeight()); [EOL] } <line_num>: 223,228
public boolean isClippedToWindow() { [EOL]     return false; [EOL] } <line_num>: 236,238
public void draw(Graphics2D g2, DialPlot plot, Rectangle2D frame, Rectangle2D view) { [EOL]     Shape window = getWindow(frame); [EOL]     Rectangle2D f = DialPlot.rectangleByRadius(frame, this.radius + 0.02, this.radius + 0.02); [EOL]     Ellipse2D e = new Ellipse2D.Double(f.getX(), f.getY(), f.getWidth(), f.getHeight()); [EOL]     Area area = new Area(e); [EOL]     Area area2 = new Area(window); [EOL]     area.subtract(area2); [EOL]     g2.setPaint(this.backgroundPaint); [EOL]     g2.fill(area); [EOL]     g2.setStroke(this.stroke); [EOL]     g2.setPaint(this.foregroundPaint); [EOL]     g2.draw(window); [EOL]     g2.draw(e); [EOL] } <line_num>: 249,269
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof StandardDialFrame)) { [EOL]         return false; [EOL]     } [EOL]     StandardDialFrame that = (StandardDialFrame) obj; [EOL]     if (!PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)) { [EOL]         return false; [EOL]     } [EOL]     if (!PaintUtilities.equal(this.foregroundPaint, that.foregroundPaint)) { [EOL]         return false; [EOL]     } [EOL]     if (this.radius != that.radius) { [EOL]         return false; [EOL]     } [EOL]     if (!this.stroke.equals(that.stroke)) { [EOL]         return false; [EOL]     } [EOL]     return super.equals(obj); [EOL] } <line_num>: 278,299
public int hashCode() { [EOL]     int result = 193; [EOL]     long temp = Double.doubleToLongBits(this.radius); [EOL]     result = 37 * result + (int) (temp ^ (temp >>> 32)); [EOL]     result = 37 * result + HashUtilities.hashCodeForPaint(this.backgroundPaint); [EOL]     result = 37 * result + HashUtilities.hashCodeForPaint(this.foregroundPaint); [EOL]     result = 37 * result + this.stroke.hashCode(); [EOL]     return result; [EOL] } <line_num>: 306,316
public Object clone() throws CloneNotSupportedException { [EOL]     return super.clone(); [EOL] } <line_num>: 326,328
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL]     SerialUtilities.writePaint(this.backgroundPaint, stream); [EOL]     SerialUtilities.writePaint(this.foregroundPaint, stream); [EOL]     SerialUtilities.writeStroke(this.stroke, stream); [EOL] } <line_num>: 337,342
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL]     this.backgroundPaint = SerialUtilities.readPaint(stream); [EOL]     this.foregroundPaint = SerialUtilities.readPaint(stream); [EOL]     this.stroke = SerialUtilities.readStroke(stream); [EOL] } <line_num>: 352,358
