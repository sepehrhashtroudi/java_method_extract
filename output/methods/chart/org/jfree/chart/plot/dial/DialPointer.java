protected DialPointer() { [EOL]     this(0); [EOL] } <line_num>: 87,89
protected DialPointer(int datasetIndex) { [EOL]     this.radius = 0.9; [EOL]     this.datasetIndex = datasetIndex; [EOL] } <line_num>: 96,99
public Pin() { [EOL]     this(0); [EOL] } <line_num>: 224,226
public Pin(int datasetIndex) { [EOL]     super(datasetIndex); [EOL]     this.paint = Color.red; [EOL]     this.stroke = new BasicStroke(3.0f, BasicStroke.CAP_ROUND, BasicStroke.JOIN_BEVEL); [EOL] } <line_num>: 233,238
public Pointer() { [EOL]     this(0); [EOL] } <line_num>: 418,420
public Pointer(int datasetIndex) { [EOL]     super(datasetIndex); [EOL]     this.widthRadius = 0.05; [EOL]     this.fillPaint = Color.gray; [EOL]     this.outlinePaint = Color.black; [EOL] } <line_num>: 427,432
public int getDatasetIndex() { [EOL]     return this.datasetIndex; [EOL] } <line_num>: 108,110
public void setDatasetIndex(int index) { [EOL]     this.datasetIndex = index; [EOL]     notifyListeners(new DialLayerChangeEvent(this)); [EOL] } <line_num>: 120,123
public double getRadius() { [EOL]     return this.radius; [EOL] } <line_num>: 133,135
public void setRadius(double radius) { [EOL]     this.radius = radius; [EOL]     notifyListeners(new DialLayerChangeEvent(this)); [EOL] } <line_num>: 145,148
public boolean isClippedToWindow() { [EOL]     return true; [EOL] } <line_num>: 156,158
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof DialPointer)) { [EOL]         return false; [EOL]     } [EOL]     DialPointer that = (DialPointer) obj; [EOL]     if (this.datasetIndex != that.datasetIndex) { [EOL]         return false; [EOL]     } [EOL]     if (this.radius != that.radius) { [EOL]         return false; [EOL]     } [EOL]     return super.equals(obj); [EOL] } <line_num>: 167,182
public int hashCode() { [EOL]     int result = 23; [EOL]     result = HashUtilities.hashCode(result, this.radius); [EOL]     return result; [EOL] } <line_num>: 189,193
public Object clone() throws CloneNotSupportedException { [EOL]     return super.clone(); [EOL] } <line_num>: 203,205
public Paint getPaint() { [EOL]     return this.paint; [EOL] } <line_num>: 247,249
public void setPaint(Paint paint) { [EOL]     if (paint == null) { [EOL]         throw new IllegalArgumentException("Null 'paint' argument."); [EOL]     } [EOL]     this.paint = paint; [EOL]     notifyListeners(new DialLayerChangeEvent(this)); [EOL] } <line_num>: 259,265
public Stroke getStroke() { [EOL]     return this.stroke; [EOL] } <line_num>: 274,276
public void setStroke(Stroke stroke) { [EOL]     if (stroke == null) { [EOL]         throw new IllegalArgumentException("Null 'stroke' argument."); [EOL]     } [EOL]     this.stroke = stroke; [EOL]     notifyListeners(new DialLayerChangeEvent(this)); [EOL] } <line_num>: 286,292
public void draw(Graphics2D g2, DialPlot plot, Rectangle2D frame, Rectangle2D view) { [EOL]     g2.setPaint(this.paint); [EOL]     g2.setStroke(this.stroke); [EOL]     Rectangle2D arcRect = DialPlot.rectangleByRadius(frame, this.radius, this.radius); [EOL]     double value = plot.getValue(this.datasetIndex); [EOL]     DialScale scale = plot.getScaleForDataset(this.datasetIndex); [EOL]     double angle = scale.valueToAngle(value); [EOL]     Arc2D arc = new Arc2D.Double(arcRect, angle, 0, Arc2D.OPEN); [EOL]     Point2D pt = arc.getEndPoint(); [EOL]     Line2D line = new Line2D.Double(frame.getCenterX(), frame.getCenterY(), pt.getX(), pt.getY()); [EOL]     g2.draw(line); [EOL] } <line_num>: 302,320
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof DialPointer.Pin)) { [EOL]         return false; [EOL]     } [EOL]     DialPointer.Pin that = (DialPointer.Pin) obj; [EOL]     if (!PaintUtilities.equal(this.paint, that.paint)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.stroke.equals(that.stroke)) { [EOL]         return false; [EOL]     } [EOL]     return super.equals(obj); [EOL] } <line_num>: 329,344
public int hashCode() { [EOL]     int result = super.hashCode(); [EOL]     result = HashUtilities.hashCode(result, this.paint); [EOL]     result = HashUtilities.hashCode(result, this.stroke); [EOL]     return result; [EOL] } <line_num>: 351,356
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL]     SerialUtilities.writePaint(this.paint, stream); [EOL]     SerialUtilities.writeStroke(this.stroke, stream); [EOL] } <line_num>: 365,369
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL]     this.paint = SerialUtilities.readPaint(stream); [EOL]     this.stroke = SerialUtilities.readStroke(stream); [EOL] } <line_num>: 379,384
public double getWidthRadius() { [EOL]     return this.widthRadius; [EOL] } <line_num>: 441,443
public void setWidthRadius(double radius) { [EOL]     this.widthRadius = radius; [EOL]     notifyListeners(new DialLayerChangeEvent(this)); [EOL] } <line_num>: 453,456
public Paint getFillPaint() { [EOL]     return this.fillPaint; [EOL] } <line_num>: 467,469
public void setFillPaint(Paint paint) { [EOL]     if (paint == null) { [EOL]         throw new IllegalArgumentException("Null 'paint' argument."); [EOL]     } [EOL]     this.fillPaint = paint; [EOL]     notifyListeners(new DialLayerChangeEvent(this)); [EOL] } <line_num>: 481,487
public Paint getOutlinePaint() { [EOL]     return this.outlinePaint; [EOL] } <line_num>: 498,500
public void setOutlinePaint(Paint paint) { [EOL]     if (paint == null) { [EOL]         throw new IllegalArgumentException("Null 'paint' argument."); [EOL]     } [EOL]     this.outlinePaint = paint; [EOL]     notifyListeners(new DialLayerChangeEvent(this)); [EOL] } <line_num>: 512,518
public void draw(Graphics2D g2, DialPlot plot, Rectangle2D frame, Rectangle2D view) { [EOL]     g2.setPaint(Color.blue); [EOL]     g2.setStroke(new BasicStroke(1.0f)); [EOL]     Rectangle2D lengthRect = DialPlot.rectangleByRadius(frame, this.radius, this.radius); [EOL]     Rectangle2D widthRect = DialPlot.rectangleByRadius(frame, this.widthRadius, this.widthRadius); [EOL]     double value = plot.getValue(this.datasetIndex); [EOL]     DialScale scale = plot.getScaleForDataset(this.datasetIndex); [EOL]     double angle = scale.valueToAngle(value); [EOL]     Arc2D arc1 = new Arc2D.Double(lengthRect, angle, 0, Arc2D.OPEN); [EOL]     Point2D pt1 = arc1.getEndPoint(); [EOL]     Arc2D arc2 = new Arc2D.Double(widthRect, angle - 90.0, 180.0, Arc2D.OPEN); [EOL]     Point2D pt2 = arc2.getStartPoint(); [EOL]     Point2D pt3 = arc2.getEndPoint(); [EOL]     Arc2D arc3 = new Arc2D.Double(widthRect, angle - 180.0, 0.0, Arc2D.OPEN); [EOL]     Point2D pt4 = arc3.getStartPoint(); [EOL]     GeneralPath gp = new GeneralPath(); [EOL]     gp.moveTo((float) pt1.getX(), (float) pt1.getY()); [EOL]     gp.lineTo((float) pt2.getX(), (float) pt2.getY()); [EOL]     gp.lineTo((float) pt4.getX(), (float) pt4.getY()); [EOL]     gp.lineTo((float) pt3.getX(), (float) pt3.getY()); [EOL]     gp.closePath(); [EOL]     g2.setPaint(this.fillPaint); [EOL]     g2.fill(gp); [EOL]     g2.setPaint(this.outlinePaint); [EOL]     Line2D line = new Line2D.Double(frame.getCenterX(), frame.getCenterY(), pt1.getX(), pt1.getY()); [EOL]     g2.draw(line); [EOL]     line.setLine(pt2, pt3); [EOL]     g2.draw(line); [EOL]     line.setLine(pt3, pt1); [EOL]     g2.draw(line); [EOL]     line.setLine(pt2, pt1); [EOL]     g2.draw(line); [EOL]     line.setLine(pt2, pt4); [EOL]     g2.draw(line); [EOL]     line.setLine(pt3, pt4); [EOL]     g2.draw(line); [EOL] } <line_num>: 528,579
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof DialPointer.Pointer)) { [EOL]         return false; [EOL]     } [EOL]     DialPointer.Pointer that = (DialPointer.Pointer) obj; [EOL]     if (this.widthRadius != that.widthRadius) { [EOL]         return false; [EOL]     } [EOL]     if (!PaintUtilities.equal(this.fillPaint, that.fillPaint)) { [EOL]         return false; [EOL]     } [EOL]     if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) { [EOL]         return false; [EOL]     } [EOL]     return super.equals(obj); [EOL] } <line_num>: 588,607
public int hashCode() { [EOL]     int result = super.hashCode(); [EOL]     result = HashUtilities.hashCode(result, this.widthRadius); [EOL]     result = HashUtilities.hashCode(result, this.fillPaint); [EOL]     result = HashUtilities.hashCode(result, this.outlinePaint); [EOL]     return result; [EOL] } <line_num>: 614,620
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL]     SerialUtilities.writePaint(this.fillPaint, stream); [EOL]     SerialUtilities.writePaint(this.outlinePaint, stream); [EOL] } <line_num>: 629,633
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL]     this.fillPaint = SerialUtilities.readPaint(stream); [EOL]     this.outlinePaint = SerialUtilities.readPaint(stream); [EOL] } <line_num>: 643,648
