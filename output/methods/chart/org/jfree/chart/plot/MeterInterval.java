public MeterInterval(String label, Range range) { [EOL]     this(label, range, Color.yellow, new BasicStroke(2.0f), null); [EOL] } <line_num>: 89,91
public MeterInterval(String label, Range range, Paint outlinePaint, Stroke outlineStroke, Paint backgroundPaint) { [EOL]     if (label == null) { [EOL]         throw new IllegalArgumentException("Null 'label' argument."); [EOL]     } [EOL]     if (range == null) { [EOL]         throw new IllegalArgumentException("Null 'range' argument."); [EOL]     } [EOL]     this.label = label; [EOL]     this.range = range; [EOL]     this.outlinePaint = outlinePaint; [EOL]     this.outlineStroke = outlineStroke; [EOL]     this.backgroundPaint = backgroundPaint; [EOL] } <line_num>: 103,116
public String getLabel() { [EOL]     return this.label; [EOL] } <line_num>: 123,125
public Range getRange() { [EOL]     return this.range; [EOL] } <line_num>: 132,134
public Paint getBackgroundPaint() { [EOL]     return this.backgroundPaint; [EOL] } <line_num>: 142,144
public Paint getOutlinePaint() { [EOL]     return this.outlinePaint; [EOL] } <line_num>: 151,153
public Stroke getOutlineStroke() { [EOL]     return this.outlineStroke; [EOL] } <line_num>: 160,162
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof MeterInterval)) { [EOL]         return false; [EOL]     } [EOL]     MeterInterval that = (MeterInterval) obj; [EOL]     if (!this.label.equals(that.label)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.range.equals(that.range)) { [EOL]         return false; [EOL]     } [EOL]     if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) { [EOL]         return false; [EOL]     } [EOL]     if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) { [EOL]         return false; [EOL]     } [EOL]     if (!PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)) { [EOL]         return false; [EOL]     } [EOL]     return true; [EOL] } <line_num>: 171,195
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL]     SerialUtilities.writePaint(this.outlinePaint, stream); [EOL]     SerialUtilities.writeStroke(this.outlineStroke, stream); [EOL]     SerialUtilities.writePaint(this.backgroundPaint, stream); [EOL] } <line_num>: 204,209
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL]     this.outlinePaint = SerialUtilities.readPaint(stream); [EOL]     this.outlineStroke = SerialUtilities.readStroke(stream); [EOL]     this.backgroundPaint = SerialUtilities.readPaint(stream); [EOL] } <line_num>: 219,225
