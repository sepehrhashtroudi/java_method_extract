public ArrowNeedle(boolean isArrowAtTop) { [EOL]     this.isArrowAtTop = isArrowAtTop; [EOL] } <line_num>: 79,81
protected void drawNeedle(Graphics2D g2, Rectangle2D plotArea, Point2D rotate, double angle) { [EOL]     Line2D shape = new Line2D.Float(); [EOL]     Shape d = null; [EOL]     float x = (float) (plotArea.getMinX() + (plotArea.getWidth() / 2)); [EOL]     float minY = (float) plotArea.getMinY(); [EOL]     float maxY = (float) plotArea.getMaxY(); [EOL]     shape.setLine(x, minY, x, maxY); [EOL]     GeneralPath shape1 = new GeneralPath(); [EOL]     if (this.isArrowAtTop) { [EOL]         shape1.moveTo(x, minY); [EOL]         minY += 4 * getSize(); [EOL]     } else { [EOL]         shape1.moveTo(x, maxY); [EOL]         minY = maxY - 4 * getSize(); [EOL]     } [EOL]     shape1.lineTo(x + getSize(), minY); [EOL]     shape1.lineTo(x - getSize(), minY); [EOL]     shape1.closePath(); [EOL]     if ((rotate != null) && (angle != 0)) { [EOL]         getTransform().setToRotation(angle, rotate.getX(), rotate.getY()); [EOL]         d = getTransform().createTransformedShape(shape); [EOL]     } else { [EOL]         d = shape; [EOL]     } [EOL]     defaultDisplay(g2, d); [EOL]     if ((rotate != null) && (angle != 0)) { [EOL]         d = getTransform().createTransformedShape(shape1); [EOL]     } else { [EOL]         d = shape1; [EOL]     } [EOL]     defaultDisplay(g2, d); [EOL] } <line_num>: 91,132
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof ArrowNeedle)) { [EOL]         return false; [EOL]     } [EOL]     if (!super.equals(obj)) { [EOL]         return false; [EOL]     } [EOL]     ArrowNeedle that = (ArrowNeedle) obj; [EOL]     if (this.isArrowAtTop != that.isArrowAtTop) { [EOL]         return false; [EOL]     } [EOL]     return true; [EOL] } <line_num>: 141,156
public int hashCode() { [EOL]     int result = super.hashCode(); [EOL]     result = HashUtilities.hashCode(result, this.isArrowAtTop); [EOL]     return result; [EOL] } <line_num>: 163,167
public Object clone() throws CloneNotSupportedException { [EOL]     return super.clone(); [EOL] } <line_num>: 177,179
