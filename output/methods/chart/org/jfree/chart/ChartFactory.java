public static ChartTheme getChartTheme() { [EOL]     return currentTheme; [EOL] } <line_num>: 241,243
public static void setChartTheme(ChartTheme theme) { [EOL]     if (theme == null) { [EOL]         throw new IllegalArgumentException("Null 'theme' argument."); [EOL]     } [EOL]     currentTheme = theme; [EOL]     if (theme instanceof StandardChartTheme) { [EOL]         StandardChartTheme sct = (StandardChartTheme) theme; [EOL]         if (sct.getName().equals("Legacy")) { [EOL]             BarRenderer.setDefaultBarPainter(new StandardBarPainter()); [EOL]             XYBarRenderer.setDefaultBarPainter(new StandardXYBarPainter()); [EOL]         } else { [EOL]             BarRenderer.setDefaultBarPainter(new GradientBarPainter()); [EOL]             XYBarRenderer.setDefaultBarPainter(new GradientXYBarPainter()); [EOL]         } [EOL]     } [EOL] } <line_num>: 256,275
public static JFreeChart createPieChart(String title, PieDataset dataset, boolean legend) { [EOL]     return createPieChart(title, dataset, legend, Locale.getDefault()); [EOL] } <line_num>: 287,290
public static JFreeChart createPieChart(String title, PieDataset dataset, boolean legend, Locale locale) { [EOL]     PiePlot plot = new PiePlot(dataset); [EOL]     plot.setLabelGenerator(new StandardPieSectionLabelGenerator(locale)); [EOL]     plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0)); [EOL]     plot.setToolTipGenerator(new StandardPieToolTipGenerator(locale)); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 307,319
public static JFreeChart createPieChart(String title, PieDataset dataset, PieDataset previousDataset, int percentDiffForMaxScale, boolean greenForIncrease, boolean legend, Locale locale, boolean subTitle, boolean showDifference) { [EOL]     PiePlot plot = new PiePlot(dataset); [EOL]     plot.setLabelGenerator(new StandardPieSectionLabelGenerator(locale)); [EOL]     plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0)); [EOL]     plot.setToolTipGenerator(new StandardPieToolTipGenerator(locale)); [EOL]     List keys = dataset.getKeys(); [EOL]     DefaultPieDataset series = null; [EOL]     if (showDifference) { [EOL]         series = new DefaultPieDataset(); [EOL]     } [EOL]     double colorPerPercent = 255.0 / percentDiffForMaxScale; [EOL]     for (Iterator it = keys.iterator(); it.hasNext(); ) { [EOL]         Comparable key = (Comparable) it.next(); [EOL]         Number newValue = dataset.getValue(key); [EOL]         Number oldValue = previousDataset.getValue(key); [EOL]         if (oldValue == null) { [EOL]             if (greenForIncrease) { [EOL]                 plot.setSectionPaint(key, Color.green); [EOL]             } else { [EOL]                 plot.setSectionPaint(key, Color.red); [EOL]             } [EOL]             if (showDifference) { [EOL]                 series.setValue(key + " (+100%)", newValue); [EOL]             } [EOL]         } else { [EOL]             double percentChange = (newValue.doubleValue() / oldValue.doubleValue() - 1.0) * 100.0; [EOL]             double shade = (Math.abs(percentChange) >= percentDiffForMaxScale ? 255 : Math.abs(percentChange) * colorPerPercent); [EOL]             if (greenForIncrease && newValue.doubleValue() > oldValue.doubleValue() || !greenForIncrease && newValue.doubleValue() < oldValue.doubleValue()) { [EOL]                 plot.setSectionPaint(key, new Color(0, (int) shade, 0)); [EOL]             } else { [EOL]                 plot.setSectionPaint(key, new Color((int) shade, 0, 0)); [EOL]             } [EOL]             if (showDifference) { [EOL]                 series.setValue(key + " (" + (percentChange >= 0 ? "+" : "") + NumberFormat.getPercentInstance().format(percentChange / 100.0) + ")", newValue); [EOL]             } [EOL]         } [EOL]     } [EOL]     if (showDifference) { [EOL]         plot.setDataset(series); [EOL]     } [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     if (subTitle) { [EOL]         TextTitle subtitle = null; [EOL]         subtitle = new TextTitle("Bright " + (greenForIncrease ? "red" : "green") + "=change >=-" + percentDiffForMaxScale + "%, Bright " + (!greenForIncrease ? "red" : "green") + "=change >=+" + percentDiffForMaxScale + "%", new Font("Tahoma", Font.PLAIN, 10)); [EOL]         chart.addSubtitle(subtitle); [EOL]     } [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 360,434
public static JFreeChart createPieChart(String title, PieDataset dataset, PieDataset previousDataset, int percentDiffForMaxScale, boolean greenForIncrease, boolean legend, boolean subTitle, boolean showDifference) { [EOL]     PiePlot plot = new PiePlot(dataset); [EOL]     plot.setLabelGenerator(new StandardPieSectionLabelGenerator()); [EOL]     plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0)); [EOL]     plot.setToolTipGenerator(new StandardPieToolTipGenerator()); [EOL]     List keys = dataset.getKeys(); [EOL]     DefaultPieDataset series = null; [EOL]     if (showDifference) { [EOL]         series = new DefaultPieDataset(); [EOL]     } [EOL]     double colorPerPercent = 255.0 / percentDiffForMaxScale; [EOL]     for (Iterator it = keys.iterator(); it.hasNext(); ) { [EOL]         Comparable key = (Comparable) it.next(); [EOL]         Number newValue = dataset.getValue(key); [EOL]         Number oldValue = previousDataset.getValue(key); [EOL]         if (oldValue == null) { [EOL]             if (greenForIncrease) { [EOL]                 plot.setSectionPaint(key, Color.green); [EOL]             } else { [EOL]                 plot.setSectionPaint(key, Color.red); [EOL]             } [EOL]             if (showDifference) { [EOL]                 series.setValue(key + " (+100%)", newValue); [EOL]             } [EOL]         } else { [EOL]             double percentChange = (newValue.doubleValue() / oldValue.doubleValue() - 1.0) * 100.0; [EOL]             double shade = (Math.abs(percentChange) >= percentDiffForMaxScale ? 255 : Math.abs(percentChange) * colorPerPercent); [EOL]             if (greenForIncrease && newValue.doubleValue() > oldValue.doubleValue() || !greenForIncrease && newValue.doubleValue() < oldValue.doubleValue()) { [EOL]                 plot.setSectionPaint(key, new Color(0, (int) shade, 0)); [EOL]             } else { [EOL]                 plot.setSectionPaint(key, new Color((int) shade, 0, 0)); [EOL]             } [EOL]             if (showDifference) { [EOL]                 series.setValue(key + " (" + (percentChange >= 0 ? "+" : "") + NumberFormat.getPercentInstance().format(percentChange / 100.0) + ")", newValue); [EOL]             } [EOL]         } [EOL]     } [EOL]     if (showDifference) { [EOL]         plot.setDataset(series); [EOL]     } [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     if (subTitle) { [EOL]         TextTitle subtitle = null; [EOL]         subtitle = new TextTitle("Bright " + (greenForIncrease ? "red" : "green") + "=change >=-" + percentDiffForMaxScale + "%, Bright " + (!greenForIncrease ? "red" : "green") + "=change >=+" + percentDiffForMaxScale + "%", new Font("Tahoma", Font.PLAIN, 10)); [EOL]         chart.addSubtitle(subtitle); [EOL]     } [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 472,546
public static JFreeChart createRingChart(String title, PieDataset dataset, boolean legend) { [EOL]     return createRingChart(title, dataset, legend, Locale.getDefault()); [EOL] } <line_num>: 558,563
public static JFreeChart createRingChart(String title, PieDataset dataset, boolean legend, Locale locale) { [EOL]     RingPlot plot = new RingPlot(dataset); [EOL]     plot.setLabelGenerator(new StandardPieSectionLabelGenerator(locale)); [EOL]     plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0)); [EOL]     plot.setToolTipGenerator(new StandardPieToolTipGenerator(locale)); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 580,591
public static JFreeChart createMultiplePieChart(String title, CategoryDataset dataset, TableOrder order, boolean legend) { [EOL]     if (order == null) { [EOL]         throw new IllegalArgumentException("Null 'order' argument."); [EOL]     } [EOL]     MultiplePiePlot plot = new MultiplePiePlot(dataset); [EOL]     plot.setDataExtractOrder(order); [EOL]     plot.setBackgroundPaint(null); [EOL]     plot.setOutlineStroke(null); [EOL]     PieToolTipGenerator tooltipGenerator = new StandardPieToolTipGenerator(); [EOL]     PiePlot pp = (PiePlot) plot.getPieChart().getPlot(); [EOL]     pp.setToolTipGenerator(tooltipGenerator); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 606,625
public static JFreeChart createPieChart3D(String title, PieDataset dataset, boolean legend, Locale locale) { [EOL]     PiePlot3D plot = new PiePlot3D(dataset); [EOL]     plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0)); [EOL]     plot.setToolTipGenerator(new StandardPieToolTipGenerator(locale)); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 641,652
public static JFreeChart createPieChart3D(String title, PieDataset dataset, boolean legend) { [EOL]     PiePlot3D plot = new PiePlot3D(dataset); [EOL]     plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0)); [EOL]     plot.setToolTipGenerator(new StandardPieToolTipGenerator()); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 665,676
public static JFreeChart createMultiplePieChart3D(String title, CategoryDataset dataset, TableOrder order, boolean legend) { [EOL]     if (order == null) { [EOL]         throw new IllegalArgumentException("Null 'order' argument."); [EOL]     } [EOL]     MultiplePiePlot plot = new MultiplePiePlot(dataset); [EOL]     plot.setDataExtractOrder(order); [EOL]     plot.setBackgroundPaint(null); [EOL]     plot.setOutlineStroke(null); [EOL]     JFreeChart pieChart = new JFreeChart(new PiePlot3D(null)); [EOL]     TextTitle seriesTitle = new TextTitle("Series Title", new Font("Tahoma", Font.BOLD, 12)); [EOL]     seriesTitle.setPosition(RectangleEdge.BOTTOM); [EOL]     pieChart.setTitle(seriesTitle); [EOL]     pieChart.removeLegend(); [EOL]     pieChart.setBackgroundPaint(null); [EOL]     plot.setPieChart(pieChart); [EOL]     PieToolTipGenerator tooltipGenerator = new StandardPieToolTipGenerator(); [EOL]     PiePlot pp = (PiePlot) plot.getPieChart().getPlot(); [EOL]     pp.setToolTipGenerator(tooltipGenerator); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 691,720
public static JFreeChart createBarChart(String title, String categoryAxisLabel, String valueAxisLabel, CategoryDataset dataset, boolean legend) { [EOL]     CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel); [EOL]     ValueAxis valueAxis = new NumberAxis(valueAxisLabel); [EOL]     BarRenderer renderer = new BarRenderer(); [EOL]     ItemLabelPosition position1 = new ItemLabelPosition(ItemLabelAnchor.OUTSIDE12, TextAnchor.BOTTOM_CENTER); [EOL]     renderer.setBasePositiveItemLabelPosition(position1); [EOL]     ItemLabelPosition position2 = new ItemLabelPosition(ItemLabelAnchor.OUTSIDE6, TextAnchor.TOP_CENTER); [EOL]     renderer.setBaseNegativeItemLabelPosition(position2); [EOL]     renderer.setBaseToolTipGenerator(new StandardCategoryToolTipGenerator()); [EOL]     CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 738,760
public static JFreeChart createStackedBarChart(String title, String domainAxisLabel, String rangeAxisLabel, CategoryDataset dataset, boolean legend) { [EOL]     CategoryAxis categoryAxis = new CategoryAxis(domainAxisLabel); [EOL]     ValueAxis valueAxis = new NumberAxis(rangeAxisLabel); [EOL]     StackedBarRenderer renderer = new StackedBarRenderer(); [EOL]     renderer.setBaseToolTipGenerator(new StandardCategoryToolTipGenerator()); [EOL]     CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 779,795
public static JFreeChart createBarChart3D(String title, String categoryAxisLabel, String valueAxisLabel, CategoryDataset dataset, boolean legend) { [EOL]     CategoryAxis categoryAxis = new CategoryAxis3D(categoryAxisLabel); [EOL]     ValueAxis valueAxis = new NumberAxis3D(valueAxisLabel); [EOL]     BarRenderer3D renderer = new BarRenderer3D(); [EOL]     renderer.setBaseToolTipGenerator(new StandardCategoryToolTipGenerator()); [EOL]     CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, renderer); [EOL]     plot.setForegroundAlpha(0.75f); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 813,830
public static JFreeChart createStackedBarChart3D(String title, String categoryAxisLabel, String valueAxisLabel, CategoryDataset dataset, boolean legend) { [EOL]     CategoryAxis categoryAxis = new CategoryAxis3D(categoryAxisLabel); [EOL]     ValueAxis valueAxis = new NumberAxis3D(valueAxisLabel); [EOL]     CategoryItemRenderer renderer = new StackedBarRenderer3D(); [EOL]     renderer.setBaseToolTipGenerator(new StandardCategoryToolTipGenerator()); [EOL]     CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 849,865
public static JFreeChart createAreaChart(String title, String categoryAxisLabel, String valueAxisLabel, CategoryDataset dataset, boolean legend) { [EOL]     CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel); [EOL]     categoryAxis.setCategoryMargin(0.0); [EOL]     ValueAxis valueAxis = new NumberAxis(valueAxisLabel); [EOL]     AreaRenderer renderer = new AreaRenderer(); [EOL]     renderer.setBaseToolTipGenerator(new StandardCategoryToolTipGenerator()); [EOL]     CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 883,900
public static JFreeChart createStackedAreaChart(String title, String categoryAxisLabel, String valueAxisLabel, CategoryDataset dataset, boolean legend) { [EOL]     CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel); [EOL]     categoryAxis.setCategoryMargin(0.0); [EOL]     ValueAxis valueAxis = new NumberAxis(valueAxisLabel); [EOL]     StackedAreaRenderer renderer = new StackedAreaRenderer(); [EOL]     renderer.setBaseToolTipGenerator(new StandardCategoryToolTipGenerator()); [EOL]     CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 919,936
public static JFreeChart createLineChart(String title, String categoryAxisLabel, String valueAxisLabel, CategoryDataset dataset, boolean legend) { [EOL]     CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel); [EOL]     ValueAxis valueAxis = new NumberAxis(valueAxisLabel); [EOL]     LineAndShapeRenderer renderer = new LineAndShapeRenderer(true, false); [EOL]     renderer.setBaseToolTipGenerator(new StandardCategoryToolTipGenerator()); [EOL]     CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 954,970
public static JFreeChart createLineChart3D(String title, String categoryAxisLabel, String valueAxisLabel, CategoryDataset dataset, boolean legend) { [EOL]     CategoryAxis categoryAxis = new CategoryAxis3D(categoryAxisLabel); [EOL]     ValueAxis valueAxis = new NumberAxis3D(valueAxisLabel); [EOL]     LineRenderer3D renderer = new LineRenderer3D(); [EOL]     renderer.setBaseToolTipGenerator(new StandardCategoryToolTipGenerator()); [EOL]     CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 988,1005
public static JFreeChart createGanttChart(String title, String categoryAxisLabel, String dateAxisLabel, IntervalCategoryDataset dataset, boolean legend) { [EOL]     CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel); [EOL]     DateAxis dateAxis = new DateAxis(dateAxisLabel); [EOL]     CategoryItemRenderer renderer = new GanttRenderer(); [EOL]     renderer.setBaseToolTipGenerator(new IntervalCategoryToolTipGenerator("{3} - {4}", DateFormat.getDateInstance())); [EOL]     CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, dateAxis, renderer); [EOL]     plot.setOrientation(PlotOrientation.HORIZONTAL); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1024,1042
public static JFreeChart createWaterfallChart(String title, String categoryAxisLabel, String valueAxisLabel, CategoryDataset dataset, boolean legend) { [EOL]     CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel); [EOL]     categoryAxis.setCategoryMargin(0.0); [EOL]     ValueAxis valueAxis = new NumberAxis(valueAxisLabel); [EOL]     WaterfallBarRenderer renderer = new WaterfallBarRenderer(); [EOL]     ItemLabelPosition position = new ItemLabelPosition(ItemLabelAnchor.CENTER, TextAnchor.CENTER, TextAnchor.CENTER, 0.0); [EOL]     renderer.setBasePositiveItemLabelPosition(position); [EOL]     renderer.setBaseNegativeItemLabelPosition(position); [EOL]     StandardCategoryToolTipGenerator generator = new StandardCategoryToolTipGenerator(); [EOL]     renderer.setBaseToolTipGenerator(generator); [EOL]     CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, renderer); [EOL]     plot.clearRangeMarkers(); [EOL]     Marker baseline = new ValueMarker(0.0); [EOL]     baseline.setPaint(Color.black); [EOL]     plot.addRangeMarker(baseline, Layer.FOREGROUND); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1060,1087
public static JFreeChart createPolarChart(String title, XYDataset dataset, boolean legend) { [EOL]     PolarPlot plot = new PolarPlot(); [EOL]     plot.setDataset(dataset); [EOL]     NumberAxis rangeAxis = new NumberAxis(); [EOL]     rangeAxis.setAxisLineVisible(false); [EOL]     rangeAxis.setTickMarksVisible(false); [EOL]     rangeAxis.setTickLabelInsets(new RectangleInsets(0.0, 0.0, 0.0, 0.0)); [EOL]     plot.setAxis(rangeAxis); [EOL]     plot.setRenderer(new DefaultPolarItemRenderer()); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1101,1117
public static JFreeChart createScatterPlot(String title, String xAxisLabel, String yAxisLabel, XYDataset dataset, boolean legend) { [EOL]     NumberAxis xAxis = new NumberAxis(xAxisLabel); [EOL]     xAxis.setAutoRangeIncludesZero(false); [EOL]     NumberAxis yAxis = new NumberAxis(yAxisLabel); [EOL]     yAxis.setAutoRangeIncludesZero(false); [EOL]     XYPlot plot = new XYPlot(dataset, xAxis, yAxis, null); [EOL]     XYItemRenderer renderer = new XYLineAndShapeRenderer(false, true); [EOL]     renderer.setBaseToolTipGenerator(new StandardXYToolTipGenerator()); [EOL]     plot.setRenderer(renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1134,1150
public static JFreeChart createXYBarChart(String title, String xAxisLabel, boolean dateAxis, String yAxisLabel, IntervalXYDataset dataset, boolean legend) { [EOL]     ValueAxis domainAxis = null; [EOL]     if (dateAxis) { [EOL]         domainAxis = new DateAxis(xAxisLabel); [EOL]     } else { [EOL]         NumberAxis axis = new NumberAxis(xAxisLabel); [EOL]         axis.setAutoRangeIncludesZero(false); [EOL]         domainAxis = axis; [EOL]     } [EOL]     ValueAxis valueAxis = new NumberAxis(yAxisLabel); [EOL]     XYBarRenderer renderer = new XYBarRenderer(); [EOL]     XYToolTipGenerator tt; [EOL]     if (dateAxis) { [EOL]         tt = StandardXYToolTipGenerator.getTimeSeriesInstance(); [EOL]     } else { [EOL]         tt = new StandardXYToolTipGenerator(); [EOL]     } [EOL]     renderer.setBaseToolTipGenerator(tt); [EOL]     XYPlot plot = new XYPlot(dataset, domainAxis, valueAxis, renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1169,1200
public static JFreeChart createXYAreaChart(String title, String xAxisLabel, String yAxisLabel, XYDataset dataset, boolean legend) { [EOL]     NumberAxis xAxis = new NumberAxis(xAxisLabel); [EOL]     xAxis.setAutoRangeIncludesZero(false); [EOL]     NumberAxis yAxis = new NumberAxis(yAxisLabel); [EOL]     XYPlot plot = new XYPlot(dataset, xAxis, yAxis, null); [EOL]     plot.setForegroundAlpha(0.5f); [EOL]     XYAreaRenderer renderer = new XYAreaRenderer(XYAreaRenderer.AREA); [EOL]     renderer.setBaseToolTipGenerator(new StandardXYToolTipGenerator()); [EOL]     plot.setRenderer(renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1218,1234
public static JFreeChart createStackedXYAreaChart(String title, String xAxisLabel, String yAxisLabel, TableXYDataset dataset, boolean legend) { [EOL]     NumberAxis xAxis = new NumberAxis(xAxisLabel); [EOL]     xAxis.setAutoRangeIncludesZero(false); [EOL]     xAxis.setLowerMargin(0.0); [EOL]     xAxis.setUpperMargin(0.0); [EOL]     NumberAxis yAxis = new NumberAxis(yAxisLabel); [EOL]     StackedXYAreaRenderer2 renderer = new StackedXYAreaRenderer2(); [EOL]     renderer.setBaseToolTipGenerator(new StandardXYToolTipGenerator()); [EOL]     renderer.setOutline(true); [EOL]     XYPlot plot = new XYPlot(dataset, xAxis, yAxis, renderer); [EOL]     plot.setRangeAxis(yAxis); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1251,1270
public static JFreeChart createXYLineChart(String title, String xAxisLabel, String yAxisLabel, XYDataset dataset, boolean legend) { [EOL]     NumberAxis xAxis = new NumberAxis(xAxisLabel); [EOL]     xAxis.setAutoRangeIncludesZero(false); [EOL]     NumberAxis yAxis = new NumberAxis(yAxisLabel); [EOL]     XYItemRenderer renderer = new XYLineAndShapeRenderer(true, false); [EOL]     XYPlot plot = new XYPlot(dataset, xAxis, yAxis, renderer); [EOL]     renderer.setBaseToolTipGenerator(new StandardXYToolTipGenerator()); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1284,1298
public static JFreeChart createXYStepChart(String title, String xAxisLabel, String yAxisLabel, XYDataset dataset, boolean legend) { [EOL]     DateAxis xAxis = new DateAxis(xAxisLabel); [EOL]     NumberAxis yAxis = new NumberAxis(yAxisLabel); [EOL]     yAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits()); [EOL]     XYItemRenderer renderer = new XYStepRenderer(); [EOL]     renderer.setBaseToolTipGenerator(new StandardXYToolTipGenerator()); [EOL]     XYPlot plot = new XYPlot(dataset, xAxis, yAxis, null); [EOL]     plot.setRenderer(renderer); [EOL]     plot.setDomainCrosshairVisible(false); [EOL]     plot.setRangeCrosshairVisible(false); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1311,1328
public static JFreeChart createXYStepAreaChart(String title, String xAxisLabel, String yAxisLabel, XYDataset dataset, boolean legend) { [EOL]     NumberAxis xAxis = new NumberAxis(xAxisLabel); [EOL]     xAxis.setAutoRangeIncludesZero(false); [EOL]     NumberAxis yAxis = new NumberAxis(yAxisLabel); [EOL]     XYItemRenderer renderer = new XYStepAreaRenderer(XYStepAreaRenderer.AREA_AND_SHAPES); [EOL]     renderer.setBaseToolTipGenerator(new StandardXYToolTipGenerator()); [EOL]     XYPlot plot = new XYPlot(dataset, xAxis, yAxis, null); [EOL]     plot.setRenderer(renderer); [EOL]     plot.setDomainCrosshairVisible(false); [EOL]     plot.setRangeCrosshairVisible(false); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1341,1359
public static JFreeChart createTimeSeriesChart(String title, String timeAxisLabel, String valueAxisLabel, XYDataset dataset, boolean legend) { [EOL]     ValueAxis timeAxis = new DateAxis(timeAxisLabel); [EOL]     timeAxis.setLowerMargin(0.02); [EOL]     timeAxis.setUpperMargin(0.02); [EOL]     NumberAxis valueAxis = new NumberAxis(valueAxisLabel); [EOL]     valueAxis.setAutoRangeIncludesZero(false); [EOL]     XYPlot plot = new XYPlot(dataset, timeAxis, valueAxis, null); [EOL]     XYToolTipGenerator toolTipGenerator = null; [EOL]     toolTipGenerator = StandardXYToolTipGenerator.getTimeSeriesInstance(); [EOL]     XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer(true, false); [EOL]     renderer.setBaseToolTipGenerator(toolTipGenerator); [EOL]     plot.setRenderer(renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1378,1399
public static JFreeChart createCandlestickChart(String title, String timeAxisLabel, String valueAxisLabel, OHLCDataset dataset, boolean legend) { [EOL]     ValueAxis timeAxis = new DateAxis(timeAxisLabel); [EOL]     NumberAxis valueAxis = new NumberAxis(valueAxisLabel); [EOL]     XYPlot plot = new XYPlot(dataset, timeAxis, valueAxis, null); [EOL]     plot.setRenderer(new CandlestickRenderer()); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1414,1427
public static JFreeChart createHighLowChart(String title, String timeAxisLabel, String valueAxisLabel, OHLCDataset dataset, boolean legend) { [EOL]     ValueAxis timeAxis = new DateAxis(timeAxisLabel); [EOL]     NumberAxis valueAxis = new NumberAxis(valueAxisLabel); [EOL]     HighLowRenderer renderer = new HighLowRenderer(); [EOL]     renderer.setBaseToolTipGenerator(new HighLowItemLabelGenerator()); [EOL]     XYPlot plot = new XYPlot(dataset, timeAxis, valueAxis, renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1442,1456
public static JFreeChart createHighLowChart(String title, String timeAxisLabel, String valueAxisLabel, OHLCDataset dataset, Timeline timeline, boolean legend) { [EOL]     DateAxis timeAxis = new DateAxis(timeAxisLabel); [EOL]     timeAxis.setTimeline(timeline); [EOL]     NumberAxis valueAxis = new NumberAxis(valueAxisLabel); [EOL]     HighLowRenderer renderer = new HighLowRenderer(); [EOL]     renderer.setBaseToolTipGenerator(new HighLowItemLabelGenerator()); [EOL]     XYPlot plot = new XYPlot(dataset, timeAxis, valueAxis, renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1476,1491
public static JFreeChart createBubbleChart(String title, String xAxisLabel, String yAxisLabel, XYZDataset dataset, boolean legend) { [EOL]     NumberAxis xAxis = new NumberAxis(xAxisLabel); [EOL]     xAxis.setAutoRangeIncludesZero(false); [EOL]     NumberAxis yAxis = new NumberAxis(yAxisLabel); [EOL]     yAxis.setAutoRangeIncludesZero(false); [EOL]     XYPlot plot = new XYPlot(dataset, xAxis, yAxis, null); [EOL]     XYItemRenderer renderer = new XYBubbleRenderer(XYBubbleRenderer.SCALE_ON_RANGE_AXIS); [EOL]     renderer.setBaseToolTipGenerator(new StandardXYZToolTipGenerator()); [EOL]     plot.setRenderer(renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1507,1524
public static JFreeChart createHistogram(String title, String xAxisLabel, String yAxisLabel, IntervalXYDataset dataset, boolean legend) { [EOL]     NumberAxis xAxis = new NumberAxis(xAxisLabel); [EOL]     xAxis.setAutoRangeIncludesZero(false); [EOL]     ValueAxis yAxis = new NumberAxis(yAxisLabel); [EOL]     XYItemRenderer renderer = new XYBarRenderer(); [EOL]     renderer.setBaseToolTipGenerator(new StandardXYToolTipGenerator()); [EOL]     XYPlot plot = new XYPlot(dataset, xAxis, yAxis, renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1539,1553
public static JFreeChart createBoxAndWhiskerChart(String title, String categoryAxisLabel, String valueAxisLabel, BoxAndWhiskerCategoryDataset dataset, boolean legend) { [EOL]     CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel); [EOL]     NumberAxis valueAxis = new NumberAxis(valueAxisLabel); [EOL]     valueAxis.setAutoRangeIncludesZero(false); [EOL]     BoxAndWhiskerRenderer renderer = new BoxAndWhiskerRenderer(); [EOL]     renderer.setBaseToolTipGenerator(new BoxAndWhiskerToolTipGenerator()); [EOL]     CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1571,1588
public static JFreeChart createBoxAndWhiskerChart(String title, String timeAxisLabel, String valueAxisLabel, BoxAndWhiskerXYDataset dataset, boolean legend) { [EOL]     ValueAxis timeAxis = new DateAxis(timeAxisLabel); [EOL]     NumberAxis valueAxis = new NumberAxis(valueAxisLabel); [EOL]     valueAxis.setAutoRangeIncludesZero(false); [EOL]     XYBoxAndWhiskerRenderer renderer = new XYBoxAndWhiskerRenderer(10.0); [EOL]     XYPlot plot = new XYPlot(dataset, timeAxis, valueAxis, renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1603,1617
public static JFreeChart createWindPlot(String title, String xAxisLabel, String yAxisLabel, WindDataset dataset, boolean legend) { [EOL]     ValueAxis xAxis = new DateAxis(xAxisLabel); [EOL]     ValueAxis yAxis = new NumberAxis(yAxisLabel); [EOL]     yAxis.setRange(-12.0, 12.0); [EOL]     WindItemRenderer renderer = new WindItemRenderer(); [EOL]     renderer.setBaseToolTipGenerator(new StandardXYToolTipGenerator()); [EOL]     XYPlot plot = new XYPlot(dataset, xAxis, yAxis, renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1630,1647
public static JFreeChart createWaferMapChart(String title, WaferMapDataset dataset, boolean legend) { [EOL]     WaferMapPlot plot = new WaferMapPlot(dataset); [EOL]     WaferMapRenderer renderer = new WaferMapRenderer(); [EOL]     plot.setRenderer(renderer); [EOL]     JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, legend); [EOL]     currentTheme.apply(chart); [EOL]     return chart; [EOL] } <line_num>: 1658,1669
