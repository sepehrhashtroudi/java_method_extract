public XYDataImageAnnotation(Image image, double x, double y, double w, double h) { [EOL]     this(image, x, y, w, h, false); [EOL] } <line_num>: 113,116
public XYDataImageAnnotation(Image image, double x, double y, double w, double h, boolean includeInDataBounds) { [EOL]     super(); [EOL]     if (image == null) { [EOL]         throw new IllegalArgumentException("Null 'image' argument."); [EOL]     } [EOL]     this.image = image; [EOL]     this.x = x; [EOL]     this.y = y; [EOL]     this.w = w; [EOL]     this.h = h; [EOL]     this.includeInDataBounds = includeInDataBounds; [EOL] } <line_num>: 131,144
public Image getImage() { [EOL]     return this.image; [EOL] } <line_num>: 151,153
public double getX() { [EOL]     return this.x; [EOL] } <line_num>: 160,162
public double getY() { [EOL]     return this.y; [EOL] } <line_num>: 169,171
public double getWidth() { [EOL]     return this.w; [EOL] } <line_num>: 179,181
public double getHeight() { [EOL]     return this.h; [EOL] } <line_num>: 189,191
public boolean getIncludeInDataBounds() { [EOL]     return this.includeInDataBounds; [EOL] } <line_num>: 201,203
public Range getXRange() { [EOL]     return new Range(this.x, this.x + this.w); [EOL] } <line_num>: 212,214
public Range getYRange() { [EOL]     return new Range(this.y, this.y + this.h); [EOL] } <line_num>: 223,225
public void draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea, ValueAxis domainAxis, ValueAxis rangeAxis, int rendererIndex, PlotRenderingInfo info) { [EOL]     PlotOrientation orientation = plot.getOrientation(); [EOL]     AxisLocation xAxisLocation = plot.getDomainAxisLocation(); [EOL]     AxisLocation yAxisLocation = plot.getRangeAxisLocation(); [EOL]     RectangleEdge xEdge = Plot.resolveDomainAxisLocation(xAxisLocation, orientation); [EOL]     RectangleEdge yEdge = Plot.resolveRangeAxisLocation(yAxisLocation, orientation); [EOL]     float j2DX0 = (float) domainAxis.valueToJava2D(this.x, dataArea, xEdge); [EOL]     float j2DY0 = (float) rangeAxis.valueToJava2D(this.y, dataArea, yEdge); [EOL]     float j2DX1 = (float) domainAxis.valueToJava2D(this.x + this.w, dataArea, xEdge); [EOL]     float j2DY1 = (float) rangeAxis.valueToJava2D(this.y + this.h, dataArea, yEdge); [EOL]     float xx0 = 0.0f; [EOL]     float yy0 = 0.0f; [EOL]     float xx1 = 0.0f; [EOL]     float yy1 = 0.0f; [EOL]     if (orientation == PlotOrientation.HORIZONTAL) { [EOL]         xx0 = j2DY0; [EOL]         xx1 = j2DY1; [EOL]         yy0 = j2DX0; [EOL]         yy1 = j2DX1; [EOL]     } else if (orientation == PlotOrientation.VERTICAL) { [EOL]         xx0 = j2DX0; [EOL]         xx1 = j2DX1; [EOL]         yy0 = j2DY0; [EOL]         yy1 = j2DY1; [EOL]     } [EOL]     g2.drawImage(this.image, (int) xx0, (int) Math.min(yy0, yy1), (int) (xx1 - xx0), (int) Math.abs(yy1 - yy0), null); [EOL]     String toolTip = getToolTipText(); [EOL]     String url = getURL(); [EOL]     if (toolTip != null || url != null) { [EOL]         addEntity(info, new Rectangle2D.Float(xx0, yy0, (xx1 - xx0), (yy1 - yy0)), rendererIndex, toolTip, url); [EOL]     } [EOL] } <line_num>: 241,284
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!super.equals(obj)) { [EOL]         return false; [EOL]     } [EOL]     if (!(obj instanceof XYDataImageAnnotation)) { [EOL]         return false; [EOL]     } [EOL]     XYDataImageAnnotation that = (XYDataImageAnnotation) obj; [EOL]     if (this.x != that.x) { [EOL]         return false; [EOL]     } [EOL]     if (this.y != that.y) { [EOL]         return false; [EOL]     } [EOL]     if (this.w != that.w) { [EOL]         return false; [EOL]     } [EOL]     if (this.h != that.h) { [EOL]         return false; [EOL]     } [EOL]     if (this.includeInDataBounds != that.includeInDataBounds) { [EOL]         return false; [EOL]     } [EOL]     if (!ObjectUtilities.equal(this.image, that.image)) { [EOL]         return false; [EOL]     } [EOL]     return true; [EOL] } <line_num>: 293,325
public int hashCode() { [EOL]     return this.image.hashCode(); [EOL] } <line_num>: 332,334
public Object clone() throws CloneNotSupportedException { [EOL]     return super.clone(); [EOL] } <line_num>: 343,345
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL] } <line_num>: 354,358
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL] } <line_num>: 368,373
