public SunJPEGEncoderAdapter() { [EOL] } <line_num>: 74,75
public float getQuality() { [EOL]     return this.quality; [EOL] } <line_num>: 86,88
public void setQuality(float quality) { [EOL]     if (quality < 0.0f || quality > 1.0f) { [EOL]         throw new IllegalArgumentException("The 'quality' must be in the range 0.0f to 1.0f"); [EOL]     } [EOL]     this.quality = quality; [EOL] } <line_num>: 98,104
public boolean isEncodingAlpha() { [EOL]     return false; [EOL] } <line_num>: 112,114
public void setEncodingAlpha(boolean encodingAlpha) { [EOL] } <line_num>: 122,124
public byte[] encode(BufferedImage bufferedImage) throws IOException { [EOL]     ByteArrayOutputStream outputStream = new ByteArrayOutputStream(); [EOL]     encode(bufferedImage, outputStream); [EOL]     return outputStream.toByteArray(); [EOL] } <line_num>: 138,142
public void encode(BufferedImage bufferedImage, OutputStream outputStream) throws IOException { [EOL]     if (bufferedImage == null) { [EOL]         throw new IllegalArgumentException("Null 'image' argument."); [EOL]     } [EOL]     if (outputStream == null) { [EOL]         throw new IllegalArgumentException("Null 'outputStream' argument."); [EOL]     } [EOL]     Iterator iterator = ImageIO.getImageWritersByFormatName("jpeg"); [EOL]     ImageWriter writer = (ImageWriter) iterator.next(); [EOL]     ImageWriteParam p = writer.getDefaultWriteParam(); [EOL]     p.setCompressionMode(ImageWriteParam.MODE_EXPLICIT); [EOL]     p.setCompressionQuality(this.quality); [EOL]     ImageOutputStream ios = ImageIO.createImageOutputStream(outputStream); [EOL]     writer.setOutput(ios); [EOL]     writer.write(null, new IIOImage(bufferedImage, null, null), p); [EOL]     ios.flush(); [EOL]     writer.dispose(); [EOL]     ios.close(); [EOL] } <line_num>: 156,175
