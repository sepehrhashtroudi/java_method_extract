public StandardCategorySeriesLabelGenerator() { [EOL]     this(DEFAULT_LABEL_FORMAT); [EOL] } <line_num>: 74,76
public StandardCategorySeriesLabelGenerator(String format) { [EOL]     if (format == null) { [EOL]         throw new IllegalArgumentException("Null 'format' argument."); [EOL]     } [EOL]     this.formatPattern = format; [EOL] } <line_num>: 83,88
public String generateLabel(CategoryDataset dataset, int series) { [EOL]     if (dataset == null) { [EOL]         throw new IllegalArgumentException("Null 'dataset' argument."); [EOL]     } [EOL]     String label = MessageFormat.format(this.formatPattern, createItemArray(dataset, series)); [EOL]     return label; [EOL] } <line_num>: 98,105
protected Object[] createItemArray(CategoryDataset dataset, int series) { [EOL]     Object[] result = new Object[1]; [EOL]     result[0] = dataset.getRowKey(series).toString(); [EOL]     return result; [EOL] } <line_num>: 116,120
public Object clone() throws CloneNotSupportedException { [EOL]     return super.clone(); [EOL] } <line_num>: 129,131
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof StandardCategorySeriesLabelGenerator)) { [EOL]         return false; [EOL]     } [EOL]     StandardCategorySeriesLabelGenerator that = (StandardCategorySeriesLabelGenerator) obj; [EOL]     if (!this.formatPattern.equals(that.formatPattern)) { [EOL]         return false; [EOL]     } [EOL]     return true; [EOL] } <line_num>: 140,153
public int hashCode() { [EOL]     int result = 127; [EOL]     result = HashUtilities.hashCode(result, this.formatPattern); [EOL]     return result; [EOL] } <line_num>: 160,164
