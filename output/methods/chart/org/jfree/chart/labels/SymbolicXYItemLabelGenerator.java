public String generateToolTip(XYDataset data, int series, int item) { [EOL]     String xStr, yStr; [EOL]     if (data instanceof YisSymbolic) { [EOL]         yStr = ((YisSymbolic) data).getYSymbolicValue(series, item); [EOL]     } else { [EOL]         double y = data.getYValue(series, item); [EOL]         yStr = Double.toString(round(y, 2)); [EOL]     } [EOL]     if (data instanceof XisSymbolic) { [EOL]         xStr = ((XisSymbolic) data).getXSymbolicValue(series, item); [EOL]     } else if (data instanceof TimeSeriesCollection) { [EOL]         RegularTimePeriod p = ((TimeSeriesCollection) data).getSeries(series).getTimePeriod(item); [EOL]         xStr = p.toString(); [EOL]     } else { [EOL]         double x = data.getXValue(series, item); [EOL]         xStr = Double.toString(round(x, 2)); [EOL]     } [EOL]     return "X: " + xStr + ", Y: " + yStr; [EOL] } <line_num>: 81,105
public String generateLabel(XYDataset dataset, int series, int category) { [EOL]     return null; [EOL] } <line_num>: 117,119
private static double round(double value, int nb) { [EOL]     if (nb <= 0) { [EOL]         return Math.floor(value + 0.5d); [EOL]     } [EOL]     double p = Math.pow(10, nb); [EOL]     double tempval = Math.floor(value * p + 0.5d); [EOL]     return tempval / p; [EOL] } <line_num>: 129,136
public Object clone() throws CloneNotSupportedException { [EOL]     return super.clone(); [EOL] } <line_num>: 145,147
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (obj instanceof SymbolicXYItemLabelGenerator) { [EOL]         return true; [EOL]     } [EOL]     return false; [EOL] } <line_num>: 156,164
public int hashCode() { [EOL]     int result = 127; [EOL]     return result; [EOL] } <line_num>: 171,174
