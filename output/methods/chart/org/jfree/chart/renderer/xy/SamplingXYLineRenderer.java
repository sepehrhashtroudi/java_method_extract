public SamplingXYLineRenderer() { [EOL]     this.legendLine = new Line2D.Double(-7.0, 0.0, 7.0, 0.0); [EOL]     setBaseLegendShape(this.legendLine); [EOL]     setTreatLegendShapeAsLine(true); [EOL] } <line_num>: 85,89
public State(PlotRenderingInfo info) { [EOL]     super(info); [EOL] } <line_num>: 151,153
public int getPassCount() { [EOL]     return 1; [EOL] } <line_num>: 99,101
public void startSeriesPass(XYDataset dataset, int series, int firstItem, int lastItem, int pass, int passCount) { [EOL]     this.seriesPath.reset(); [EOL]     this.intervalPath.reset(); [EOL]     this.lastPointGood = false; [EOL]     super.startSeriesPass(dataset, series, firstItem, lastItem, pass, passCount); [EOL] } <line_num>: 166,173
public XYItemRendererState initialise(Graphics2D g2, Rectangle2D dataArea, XYPlot plot, XYDataset data, PlotRenderingInfo info) { [EOL]     double dpi = 72; [EOL]     State state = new State(info); [EOL]     state.seriesPath = new GeneralPath(); [EOL]     state.intervalPath = new GeneralPath(); [EOL]     state.dX = 72.0 / dpi; [EOL]     return state; [EOL] } <line_num>: 193,207
public void drawItem(Graphics2D g2, XYItemRendererState state, Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset, int series, int item, boolean selected, int pass) { [EOL]     if (!getItemVisible(series, item)) { [EOL]         return; [EOL]     } [EOL]     RectangleEdge xAxisLocation = plot.getDomainAxisEdge(); [EOL]     RectangleEdge yAxisLocation = plot.getRangeAxisEdge(); [EOL]     double x1 = dataset.getXValue(series, item); [EOL]     double y1 = dataset.getYValue(series, item); [EOL]     double transX1 = domainAxis.valueToJava2D(x1, dataArea, xAxisLocation); [EOL]     double transY1 = rangeAxis.valueToJava2D(y1, dataArea, yAxisLocation); [EOL]     State s = (State) state; [EOL]     if (!Double.isNaN(transX1) && !Double.isNaN(transY1)) { [EOL]         float x = (float) transX1; [EOL]         float y = (float) transY1; [EOL]         PlotOrientation orientation = plot.getOrientation(); [EOL]         if (orientation == PlotOrientation.HORIZONTAL) { [EOL]             x = (float) transY1; [EOL]             y = (float) transX1; [EOL]         } [EOL]         if (s.lastPointGood) { [EOL]             if ((Math.abs(x - s.lastX) > s.dX)) { [EOL]                 s.seriesPath.lineTo(x, y); [EOL]                 if (s.lowY < s.highY) { [EOL]                     s.intervalPath.moveTo((float) s.lastX, (float) s.lowY); [EOL]                     s.intervalPath.lineTo((float) s.lastX, (float) s.highY); [EOL]                 } [EOL]                 s.lastX = x; [EOL]                 s.openY = y; [EOL]                 s.highY = y; [EOL]                 s.lowY = y; [EOL]                 s.closeY = y; [EOL]             } else { [EOL]                 s.highY = Math.max(s.highY, y); [EOL]                 s.lowY = Math.min(s.lowY, y); [EOL]                 s.closeY = y; [EOL]             } [EOL]         } else { [EOL]             s.seriesPath.moveTo(x, y); [EOL]             s.lastX = x; [EOL]             s.openY = y; [EOL]             s.highY = y; [EOL]             s.lowY = y; [EOL]             s.closeY = y; [EOL]         } [EOL]         s.lastPointGood = true; [EOL]     } else { [EOL]         s.lastPointGood = false; [EOL]     } [EOL]     if (item == s.getLastItemIndex()) { [EOL]         PathIterator pi = s.seriesPath.getPathIterator(null); [EOL]         int count = 0; [EOL]         while (!pi.isDone()) { [EOL]             count++; [EOL]             pi.next(); [EOL]         } [EOL]         g2.setStroke(getItemStroke(series, item, selected)); [EOL]         g2.setPaint(getItemPaint(series, item, selected)); [EOL]         g2.draw(s.seriesPath); [EOL]         g2.draw(s.intervalPath); [EOL]     } [EOL] } <line_num>: 224,298
public Object clone() throws CloneNotSupportedException { [EOL]     SamplingXYLineRenderer clone = (SamplingXYLineRenderer) super.clone(); [EOL]     if (this.legendLine != null) { [EOL]         clone.legendLine = ShapeUtilities.clone(this.legendLine); [EOL]     } [EOL]     return clone; [EOL] } <line_num>: 307,313
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof SamplingXYLineRenderer)) { [EOL]         return false; [EOL]     } [EOL]     if (!super.equals(obj)) { [EOL]         return false; [EOL]     } [EOL]     SamplingXYLineRenderer that = (SamplingXYLineRenderer) obj; [EOL]     if (!ShapeUtilities.equal(this.legendLine, that.legendLine)) { [EOL]         return false; [EOL]     } [EOL]     return true; [EOL] } <line_num>: 322,337
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL]     this.legendLine = SerialUtilities.readShape(stream); [EOL] } <line_num>: 347,351
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL]     SerialUtilities.writeShape(this.legendLine, stream); [EOL] } <line_num>: 360,363
