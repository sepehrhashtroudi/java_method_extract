public State(PlotRenderingInfo info) { [EOL]     super(info); [EOL]     this.lowerCoordinates = new java.util.ArrayList(); [EOL]     this.upperCoordinates = new java.util.ArrayList(); [EOL] } <line_num>: 102,106
public DeviationRenderer() { [EOL]     this(true, true); [EOL] } <line_num>: 117,119
public DeviationRenderer(boolean lines, boolean shapes) { [EOL]     super(lines, shapes); [EOL]     super.setDrawSeriesLineAsPath(true); [EOL]     this.alpha = 0.5f; [EOL] } <line_num>: 127,131
public float getAlpha() { [EOL]     return this.alpha; [EOL] } <line_num>: 140,142
public void setAlpha(float alpha) { [EOL]     if (alpha < 0.0f || alpha > 1.0f) { [EOL]         throw new IllegalArgumentException("Requires 'alpha' in the range 0.0 to 1.0."); [EOL]     } [EOL]     this.alpha = alpha; [EOL]     fireChangeEvent(); [EOL] } <line_num>: 152,159
public void setDrawSeriesLineAsPath(boolean flag) { [EOL] } <line_num>: 167,169
public Range findRangeBounds(XYDataset dataset) { [EOL]     return findRangeBounds(dataset, true); [EOL] } <line_num>: 180,182
public XYItemRendererState initialise(Graphics2D g2, Rectangle2D dataArea, XYPlot plot, XYDataset dataset, PlotRenderingInfo info) { [EOL]     State state = new State(info); [EOL]     state.seriesPath = new GeneralPath(); [EOL]     state.setProcessVisibleItemsOnly(false); [EOL]     return state; [EOL] } <line_num>: 196,202
public int getPassCount() { [EOL]     return 3; [EOL] } <line_num>: 210,212
protected boolean isItemPass(int pass) { [EOL]     return (pass == 2); [EOL] } <line_num>: 224,226
protected boolean isLinePass(int pass) { [EOL]     return (pass == 1); [EOL] } <line_num>: 238,240
public void drawItem(Graphics2D g2, XYItemRendererState state, Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset, int series, int item, boolean selected, int pass) { [EOL]     if (!getItemVisible(series, item)) { [EOL]         return; [EOL]     } [EOL]     if (pass == 0) { [EOL]         IntervalXYDataset intervalDataset = (IntervalXYDataset) dataset; [EOL]         State drState = (State) state; [EOL]         double x = intervalDataset.getXValue(series, item); [EOL]         double yLow = intervalDataset.getStartYValue(series, item); [EOL]         double yHigh = intervalDataset.getEndYValue(series, item); [EOL]         RectangleEdge xAxisLocation = plot.getDomainAxisEdge(); [EOL]         RectangleEdge yAxisLocation = plot.getRangeAxisEdge(); [EOL]         double xx = domainAxis.valueToJava2D(x, dataArea, xAxisLocation); [EOL]         double yyLow = rangeAxis.valueToJava2D(yLow, dataArea, yAxisLocation); [EOL]         double yyHigh = rangeAxis.valueToJava2D(yHigh, dataArea, yAxisLocation); [EOL]         PlotOrientation orientation = plot.getOrientation(); [EOL]         if (orientation == PlotOrientation.HORIZONTAL) { [EOL]             drState.lowerCoordinates.add(new double[] { yyLow, xx }); [EOL]             drState.upperCoordinates.add(new double[] { yyHigh, xx }); [EOL]         } else if (orientation == PlotOrientation.VERTICAL) { [EOL]             drState.lowerCoordinates.add(new double[] { xx, yyLow }); [EOL]             drState.upperCoordinates.add(new double[] { xx, yyHigh }); [EOL]         } [EOL]         if (item == (dataset.getItemCount(series) - 1)) { [EOL]             Composite originalComposite = g2.getComposite(); [EOL]             g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, this.alpha)); [EOL]             g2.setPaint(getItemFillPaint(series, item, selected)); [EOL]             GeneralPath area = new GeneralPath(); [EOL]             double[] coords = (double[]) drState.lowerCoordinates.get(0); [EOL]             area.moveTo((float) coords[0], (float) coords[1]); [EOL]             for (int i = 1; i < drState.lowerCoordinates.size(); i++) { [EOL]                 coords = (double[]) drState.lowerCoordinates.get(i); [EOL]                 area.lineTo((float) coords[0], (float) coords[1]); [EOL]             } [EOL]             int count = drState.upperCoordinates.size(); [EOL]             coords = (double[]) drState.upperCoordinates.get(count - 1); [EOL]             area.lineTo((float) coords[0], (float) coords[1]); [EOL]             for (int i = count - 2; i >= 0; i--) { [EOL]                 coords = (double[]) drState.upperCoordinates.get(i); [EOL]                 area.lineTo((float) coords[0], (float) coords[1]); [EOL]             } [EOL]             area.closePath(); [EOL]             g2.fill(area); [EOL]             g2.setComposite(originalComposite); [EOL]             drState.lowerCoordinates.clear(); [EOL]             drState.upperCoordinates.clear(); [EOL]         } [EOL]     } [EOL]     if (isLinePass(pass)) { [EOL]         if (item == 0) { [EOL]             State s = (State) state; [EOL]             s.seriesPath.reset(); [EOL]             s.setLastPointGood(false); [EOL]         } [EOL]         if (getItemLineVisible(series, item)) { [EOL]             drawPrimaryLineAsPath(state, g2, plot, dataset, pass, series, item, selected, domainAxis, rangeAxis, dataArea); [EOL]         } [EOL]     } else if (isItemPass(pass)) { [EOL]         EntityCollection entities = null; [EOL]         if (state.getInfo() != null) { [EOL]             entities = state.getInfo().getOwner().getEntityCollection(); [EOL]         } [EOL]         drawShape2(g2, dataArea, plot, dataset, pass, series, item, selected, domainAxis, rangeAxis, null, entities); [EOL]     } [EOL] } <line_num>: 257,353
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof DeviationRenderer)) { [EOL]         return false; [EOL]     } [EOL]     DeviationRenderer that = (DeviationRenderer) obj; [EOL]     if (this.alpha != that.alpha) { [EOL]         return false; [EOL]     } [EOL]     return super.equals(obj); [EOL] } <line_num>: 362,374
