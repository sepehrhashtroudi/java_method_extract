public XYDotRenderer() { [EOL]     super(); [EOL]     this.dotWidth = 1; [EOL]     this.dotHeight = 1; [EOL]     this.legendShape = new Rectangle2D.Double(-3.0, -3.0, 6.0, 6.0); [EOL] } <line_num>: 108,113
public int getDotWidth() { [EOL]     return this.dotWidth; [EOL] } <line_num>: 123,125
public void setDotWidth(int w) { [EOL]     if (w < 1) { [EOL]         throw new IllegalArgumentException("Requires w > 0."); [EOL]     } [EOL]     this.dotWidth = w; [EOL]     fireChangeEvent(); [EOL] } <line_num>: 138,144
public int getDotHeight() { [EOL]     return this.dotHeight; [EOL] } <line_num>: 154,156
public void setDotHeight(int h) { [EOL]     if (h < 1) { [EOL]         throw new IllegalArgumentException("Requires h > 0."); [EOL]     } [EOL]     this.dotHeight = h; [EOL]     fireChangeEvent(); [EOL] } <line_num>: 169,175
public Shape getLegendShape() { [EOL]     return this.legendShape; [EOL] } <line_num>: 186,188
public void setLegendShape(Shape shape) { [EOL]     if (shape == null) { [EOL]         throw new IllegalArgumentException("Null 'shape' argument."); [EOL]     } [EOL]     this.legendShape = shape; [EOL]     fireChangeEvent(); [EOL] } <line_num>: 200,206
public void drawItem(Graphics2D g2, XYItemRendererState state, Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset, int series, int item, boolean selected, int pass) { [EOL]     if (!getItemVisible(series, item)) { [EOL]         return; [EOL]     } [EOL]     double x = dataset.getXValue(series, item); [EOL]     double y = dataset.getYValue(series, item); [EOL]     double adjx = (this.dotWidth - 1) / 2.0; [EOL]     double adjy = (this.dotHeight - 1) / 2.0; [EOL]     if (!Double.isNaN(y)) { [EOL]         RectangleEdge xAxisLocation = plot.getDomainAxisEdge(); [EOL]         RectangleEdge yAxisLocation = plot.getRangeAxisEdge(); [EOL]         double transX = domainAxis.valueToJava2D(x, dataArea, xAxisLocation) - adjx; [EOL]         double transY = rangeAxis.valueToJava2D(y, dataArea, yAxisLocation) - adjy; [EOL]         g2.setPaint(getItemPaint(series, item, selected)); [EOL]         PlotOrientation orientation = plot.getOrientation(); [EOL]         if (orientation == PlotOrientation.HORIZONTAL) { [EOL]             g2.fillRect((int) transY, (int) transX, this.dotHeight, this.dotWidth); [EOL]         } else if (orientation == PlotOrientation.VERTICAL) { [EOL]             g2.fillRect((int) transX, (int) transY, this.dotWidth, this.dotHeight); [EOL]         } [EOL]         int domainAxisIndex = plot.getDomainAxisIndex(domainAxis); [EOL]         int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis); [EOL]         XYCrosshairState crosshairState = state.getCrosshairState(); [EOL]         updateCrosshairValues(crosshairState, x, y, domainAxisIndex, rangeAxisIndex, transX, transY, orientation); [EOL]     } [EOL] } <line_num>: 223,264
public LegendItem getLegendItem(int datasetIndex, int series) { [EOL]     XYPlot plot = getPlot(); [EOL]     if (plot == null) { [EOL]         return null; [EOL]     } [EOL]     XYDataset dataset = plot.getDataset(datasetIndex); [EOL]     if (dataset == null) { [EOL]         return null; [EOL]     } [EOL]     LegendItem result = null; [EOL]     if (getItemVisible(series, 0)) { [EOL]         String label = getLegendItemLabelGenerator().generateLabel(dataset, series); [EOL]         String description = label; [EOL]         String toolTipText = null; [EOL]         if (getLegendItemToolTipGenerator() != null) { [EOL]             toolTipText = getLegendItemToolTipGenerator().generateLabel(dataset, series); [EOL]         } [EOL]         String urlText = null; [EOL]         if (getLegendItemURLGenerator() != null) { [EOL]             urlText = getLegendItemURLGenerator().generateLabel(dataset, series); [EOL]         } [EOL]         Paint fillPaint = lookupSeriesPaint(series); [EOL]         result = new LegendItem(label, description, toolTipText, urlText, getLegendShape(), fillPaint); [EOL]         result.setLabelFont(lookupLegendTextFont(series)); [EOL]         Paint labelPaint = lookupLegendTextPaint(series); [EOL]         if (labelPaint != null) { [EOL]             result.setLabelPaint(labelPaint); [EOL]         } [EOL]         result.setSeriesKey(dataset.getSeriesKey(series)); [EOL]         result.setSeriesIndex(series); [EOL]         result.setDataset(dataset); [EOL]         result.setDatasetIndex(datasetIndex); [EOL]     } [EOL]     return result; [EOL] } <line_num>: 274,320
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof XYDotRenderer)) { [EOL]         return false; [EOL]     } [EOL]     XYDotRenderer that = (XYDotRenderer) obj; [EOL]     if (this.dotWidth != that.dotWidth) { [EOL]         return false; [EOL]     } [EOL]     if (this.dotHeight != that.dotHeight) { [EOL]         return false; [EOL]     } [EOL]     if (!ShapeUtilities.equal(this.legendShape, that.legendShape)) { [EOL]         return false; [EOL]     } [EOL]     return super.equals(obj); [EOL] } <line_num>: 336,354
public Object clone() throws CloneNotSupportedException { [EOL]     return super.clone(); [EOL] } <line_num>: 363,365
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL]     this.legendShape = SerialUtilities.readShape(stream); [EOL] } <line_num>: 375,379
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL]     SerialUtilities.writeShape(this.legendShape, stream); [EOL] } <line_num>: 388,391
