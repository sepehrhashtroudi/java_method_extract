public YIntervalRenderer() { [EOL]     super(); [EOL]     this.additionalItemLabelGenerator = null; [EOL] } <line_num>: 111,114
public XYItemLabelGenerator getAdditionalItemLabelGenerator() { [EOL]     return this.additionalItemLabelGenerator; [EOL] } <line_num>: 126,128
public void setAdditionalItemLabelGenerator(XYItemLabelGenerator generator) { [EOL]     this.additionalItemLabelGenerator = generator; [EOL]     fireChangeEvent(); [EOL] } <line_num>: 142,146
public Range findRangeBounds(XYDataset dataset) { [EOL]     return findRangeBounds(dataset, true); [EOL] } <line_num>: 157,159
public void drawItem(Graphics2D g2, XYItemRendererState state, Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset, int series, int item, boolean selected, int pass) { [EOL]     EntityCollection entities = null; [EOL]     if (state.getInfo() != null) { [EOL]         entities = state.getInfo().getOwner().getEntityCollection(); [EOL]     } [EOL]     IntervalXYDataset intervalDataset = (IntervalXYDataset) dataset; [EOL]     double x = intervalDataset.getXValue(series, item); [EOL]     double yLow = intervalDataset.getStartYValue(series, item); [EOL]     double yHigh = intervalDataset.getEndYValue(series, item); [EOL]     RectangleEdge xAxisLocation = plot.getDomainAxisEdge(); [EOL]     RectangleEdge yAxisLocation = plot.getRangeAxisEdge(); [EOL]     double xx = domainAxis.valueToJava2D(x, dataArea, xAxisLocation); [EOL]     double yyLow = rangeAxis.valueToJava2D(yLow, dataArea, yAxisLocation); [EOL]     double yyHigh = rangeAxis.valueToJava2D(yHigh, dataArea, yAxisLocation); [EOL]     Paint p = getItemPaint(series, item, selected); [EOL]     Stroke s = getItemStroke(series, item, selected); [EOL]     Line2D line = null; [EOL]     Shape shape = getItemShape(series, item, selected); [EOL]     Shape top = null; [EOL]     Shape bottom = null; [EOL]     PlotOrientation orientation = plot.getOrientation(); [EOL]     if (orientation == PlotOrientation.HORIZONTAL) { [EOL]         line = new Line2D.Double(yyLow, xx, yyHigh, xx); [EOL]         top = ShapeUtilities.createTranslatedShape(shape, yyHigh, xx); [EOL]         bottom = ShapeUtilities.createTranslatedShape(shape, yyLow, xx); [EOL]     } else if (orientation == PlotOrientation.VERTICAL) { [EOL]         line = new Line2D.Double(xx, yyLow, xx, yyHigh); [EOL]         top = ShapeUtilities.createTranslatedShape(shape, xx, yyHigh); [EOL]         bottom = ShapeUtilities.createTranslatedShape(shape, xx, yyLow); [EOL]     } [EOL]     g2.setPaint(p); [EOL]     g2.setStroke(s); [EOL]     g2.draw(line); [EOL]     g2.fill(top); [EOL]     g2.fill(bottom); [EOL]     if (isItemLabelVisible(series, item, selected)) { [EOL]         drawItemLabel(g2, orientation, dataset, series, item, selected, xx, yyHigh, false); [EOL]         drawAdditionalItemLabel(g2, orientation, dataset, series, item, xx, yyLow); [EOL]     } [EOL]     if (entities != null) { [EOL]         addEntity(entities, line.getBounds(), dataset, series, item, selected, 0.0, 0.0); [EOL]     } [EOL] } <line_num>: 179,245
private void drawAdditionalItemLabel(Graphics2D g2, PlotOrientation orientation, XYDataset dataset, int series, int item, double x, double y) { [EOL]     if (this.additionalItemLabelGenerator == null) { [EOL]         return; [EOL]     } [EOL]     Font labelFont = getItemLabelFont(series, item, false); [EOL]     Paint paint = getItemLabelPaint(series, item, false); [EOL]     g2.setFont(labelFont); [EOL]     g2.setPaint(paint); [EOL]     String label = this.additionalItemLabelGenerator.generateLabel(dataset, series, item); [EOL]     ItemLabelPosition position = getNegativeItemLabelPosition(series, item, false); [EOL]     Point2D anchorPoint = calculateLabelAnchorPoint(position.getItemLabelAnchor(), x, y, orientation); [EOL]     TextUtilities.drawRotatedString(label, g2, (float) anchorPoint.getX(), (float) anchorPoint.getY(), position.getTextAnchor(), position.getAngle(), position.getRotationAnchor()); [EOL] } <line_num>: 260,283
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof YIntervalRenderer)) { [EOL]         return false; [EOL]     } [EOL]     YIntervalRenderer that = (YIntervalRenderer) obj; [EOL]     if (!ObjectUtilities.equal(this.additionalItemLabelGenerator, that.additionalItemLabelGenerator)) { [EOL]         return false; [EOL]     } [EOL]     return super.equals(obj); [EOL] } <line_num>: 292,305
public Object clone() throws CloneNotSupportedException { [EOL]     return super.clone(); [EOL] } <line_num>: 314,316
