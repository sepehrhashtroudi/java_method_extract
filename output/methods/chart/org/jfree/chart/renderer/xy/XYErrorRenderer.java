public XYErrorRenderer() { [EOL]     super(false, true); [EOL]     this.drawXError = true; [EOL]     this.drawYError = true; [EOL]     this.errorPaint = null; [EOL]     this.errorStroke = null; [EOL]     this.capLength = 4.0; [EOL] } <line_num>: 114,121
public boolean getDrawXError() { [EOL]     return this.drawXError; [EOL] } <line_num>: 131,133
public void setDrawXError(boolean draw) { [EOL]     if (this.drawXError != draw) { [EOL]         this.drawXError = draw; [EOL]         fireChangeEvent(); [EOL]     } [EOL] } <line_num>: 144,149
public boolean getDrawYError() { [EOL]     return this.drawYError; [EOL] } <line_num>: 159,161
public void setDrawYError(boolean draw) { [EOL]     if (this.drawYError != draw) { [EOL]         this.drawYError = draw; [EOL]         fireChangeEvent(); [EOL]     } [EOL] } <line_num>: 172,177
public double getCapLength() { [EOL]     return this.capLength; [EOL] } <line_num>: 187,189
public void setCapLength(double length) { [EOL]     this.capLength = length; [EOL]     fireChangeEvent(); [EOL] } <line_num>: 199,202
public Paint getErrorPaint() { [EOL]     return this.errorPaint; [EOL] } <line_num>: 212,214
public void setErrorPaint(Paint paint) { [EOL]     this.errorPaint = paint; [EOL]     fireChangeEvent(); [EOL] } <line_num>: 224,227
public Stroke getErrorStroke() { [EOL]     return this.errorStroke; [EOL] } <line_num>: 240,242
public void setErrorStroke(Stroke stroke) { [EOL]     this.errorStroke = stroke; [EOL]     fireChangeEvent(); [EOL] } <line_num>: 254,257
public Range findDomainBounds(XYDataset dataset) { [EOL]     if (dataset != null) { [EOL]         return DatasetUtilities.findDomainBounds(dataset, true); [EOL]     } else { [EOL]         return null; [EOL]     } [EOL] } <line_num>: 268,275
public Range findRangeBounds(XYDataset dataset) { [EOL]     if (dataset != null) { [EOL]         return DatasetUtilities.findRangeBounds(dataset, true); [EOL]     } else { [EOL]         return null; [EOL]     } [EOL] } <line_num>: 286,293
public void drawItem(Graphics2D g2, XYItemRendererState state, Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset, int series, int item, boolean selected, int pass) { [EOL]     if (pass == 0 && dataset instanceof IntervalXYDataset && getItemVisible(series, item)) { [EOL]         IntervalXYDataset ixyd = (IntervalXYDataset) dataset; [EOL]         PlotOrientation orientation = plot.getOrientation(); [EOL]         if (this.drawXError) { [EOL]             double x0 = ixyd.getStartXValue(series, item); [EOL]             double x1 = ixyd.getEndXValue(series, item); [EOL]             double y = ixyd.getYValue(series, item); [EOL]             RectangleEdge edge = plot.getDomainAxisEdge(); [EOL]             double xx0 = domainAxis.valueToJava2D(x0, dataArea, edge); [EOL]             double xx1 = domainAxis.valueToJava2D(x1, dataArea, edge); [EOL]             double yy = rangeAxis.valueToJava2D(y, dataArea, plot.getRangeAxisEdge()); [EOL]             Line2D line; [EOL]             Line2D cap1 = null; [EOL]             Line2D cap2 = null; [EOL]             double adj = this.capLength / 2.0; [EOL]             if (orientation == PlotOrientation.VERTICAL) { [EOL]                 line = new Line2D.Double(xx0, yy, xx1, yy); [EOL]                 cap1 = new Line2D.Double(xx0, yy - adj, xx0, yy + adj); [EOL]                 cap2 = new Line2D.Double(xx1, yy - adj, xx1, yy + adj); [EOL]             } else { [EOL]                 line = new Line2D.Double(yy, xx0, yy, xx1); [EOL]                 cap1 = new Line2D.Double(yy - adj, xx0, yy + adj, xx0); [EOL]                 cap2 = new Line2D.Double(yy - adj, xx1, yy + adj, xx1); [EOL]             } [EOL]             if (this.errorPaint != null) { [EOL]                 g2.setPaint(this.errorPaint); [EOL]             } else { [EOL]                 g2.setPaint(getItemPaint(series, item, selected)); [EOL]             } [EOL]             if (this.errorStroke != null) { [EOL]                 g2.setStroke(this.errorStroke); [EOL]             } else { [EOL]                 g2.setStroke(getItemStroke(series, item, selected)); [EOL]             } [EOL]             g2.draw(line); [EOL]             g2.draw(cap1); [EOL]             g2.draw(cap2); [EOL]         } [EOL]         if (this.drawYError) { [EOL]             double y0 = ixyd.getStartYValue(series, item); [EOL]             double y1 = ixyd.getEndYValue(series, item); [EOL]             double x = ixyd.getXValue(series, item); [EOL]             RectangleEdge edge = plot.getRangeAxisEdge(); [EOL]             double yy0 = rangeAxis.valueToJava2D(y0, dataArea, edge); [EOL]             double yy1 = rangeAxis.valueToJava2D(y1, dataArea, edge); [EOL]             double xx = domainAxis.valueToJava2D(x, dataArea, plot.getDomainAxisEdge()); [EOL]             Line2D line; [EOL]             Line2D cap1 = null; [EOL]             Line2D cap2 = null; [EOL]             double adj = this.capLength / 2.0; [EOL]             if (orientation == PlotOrientation.VERTICAL) { [EOL]                 line = new Line2D.Double(xx, yy0, xx, yy1); [EOL]                 cap1 = new Line2D.Double(xx - adj, yy0, xx + adj, yy0); [EOL]                 cap2 = new Line2D.Double(xx - adj, yy1, xx + adj, yy1); [EOL]             } else { [EOL]                 line = new Line2D.Double(yy0, xx, yy1, xx); [EOL]                 cap1 = new Line2D.Double(yy0, xx - adj, yy0, xx + adj); [EOL]                 cap2 = new Line2D.Double(yy1, xx - adj, yy1, xx + adj); [EOL]             } [EOL]             if (this.errorPaint != null) { [EOL]                 g2.setPaint(this.errorPaint); [EOL]             } else { [EOL]                 g2.setPaint(getItemPaint(series, item, selected)); [EOL]             } [EOL]             if (this.errorStroke != null) { [EOL]                 g2.setStroke(this.errorStroke); [EOL]             } else { [EOL]                 g2.setStroke(getItemStroke(series, item, selected)); [EOL]             } [EOL]             g2.draw(line); [EOL]             g2.draw(cap1); [EOL]             g2.draw(cap2); [EOL]         } [EOL]     } [EOL]     super.drawItem(g2, state, dataArea, plot, domainAxis, rangeAxis, dataset, series, item, selected, pass); [EOL] } <line_num>: 309,401
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof XYErrorRenderer)) { [EOL]         return false; [EOL]     } [EOL]     XYErrorRenderer that = (XYErrorRenderer) obj; [EOL]     if (this.drawXError != that.drawXError) { [EOL]         return false; [EOL]     } [EOL]     if (this.drawYError != that.drawYError) { [EOL]         return false; [EOL]     } [EOL]     if (this.capLength != that.capLength) { [EOL]         return false; [EOL]     } [EOL]     if (!PaintUtilities.equal(this.errorPaint, that.errorPaint)) { [EOL]         return false; [EOL]     } [EOL]     if (!ObjectUtilities.equal(this.errorStroke, that.errorStroke)) { [EOL]         return false; [EOL]     } [EOL]     return super.equals(obj); [EOL] } <line_num>: 410,434
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL]     this.errorPaint = SerialUtilities.readPaint(stream); [EOL]     this.errorStroke = SerialUtilities.readStroke(stream); [EOL] } <line_num>: 444,449
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL]     SerialUtilities.writePaint(this.errorPaint, stream); [EOL]     SerialUtilities.writeStroke(this.errorStroke, stream); [EOL] } <line_num>: 458,462
