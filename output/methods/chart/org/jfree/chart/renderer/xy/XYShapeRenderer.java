public XYShapeRenderer() { [EOL]     this.paintScale = new LookupPaintScale(); [EOL]     this.useFillPaint = false; [EOL]     this.drawOutlines = false; [EOL]     this.useOutlinePaint = true; [EOL]     this.guideLinesVisible = false; [EOL]     this.guideLinePaint = Color.darkGray; [EOL]     this.guideLineStroke = new BasicStroke(); [EOL]     setBaseShape(new Ellipse2D.Double(-5.0, -5.0, 10.0, 10.0)); [EOL]     setAutoPopulateSeriesShape(false); [EOL] } <line_num>: 132,142
public PaintScale getPaintScale() { [EOL]     return this.paintScale; [EOL] } <line_num>: 151,153
public void setPaintScale(PaintScale scale) { [EOL]     if (scale == null) { [EOL]         throw new IllegalArgumentException("Null 'scale' argument."); [EOL]     } [EOL]     this.paintScale = scale; [EOL]     notifyListeners(new RendererChangeEvent(this)); [EOL] } <line_num>: 163,169
public boolean getDrawOutlines() { [EOL]     return this.drawOutlines; [EOL] } <line_num>: 179,181
public void setDrawOutlines(boolean flag) { [EOL]     this.drawOutlines = flag; [EOL]     fireChangeEvent(); [EOL] } <line_num>: 195,198
public boolean getUseFillPaint() { [EOL]     return this.useFillPaint; [EOL] } <line_num>: 213,215
public void setUseFillPaint(boolean flag) { [EOL]     this.useFillPaint = flag; [EOL]     fireChangeEvent(); [EOL] } <line_num>: 226,229
public boolean getUseOutlinePaint() { [EOL]     return this.useOutlinePaint; [EOL] } <line_num>: 239,241
public void setUseOutlinePaint(boolean use) { [EOL]     this.useOutlinePaint = use; [EOL]     fireChangeEvent(); [EOL] } <line_num>: 252,255
public boolean isGuideLinesVisible() { [EOL]     return this.guideLinesVisible; [EOL] } <line_num>: 266,268
public void setGuideLinesVisible(boolean visible) { [EOL]     this.guideLinesVisible = visible; [EOL]     fireChangeEvent(); [EOL] } <line_num>: 279,282
public Paint getGuideLinePaint() { [EOL]     return this.guideLinePaint; [EOL] } <line_num>: 291,293
public void setGuideLinePaint(Paint paint) { [EOL]     if (paint == null) { [EOL]         throw new IllegalArgumentException("Null 'paint' argument."); [EOL]     } [EOL]     this.guideLinePaint = paint; [EOL]     fireChangeEvent(); [EOL] } <line_num>: 303,309
public Stroke getGuideLineStroke() { [EOL]     return this.guideLineStroke; [EOL] } <line_num>: 318,320
public void setGuideLineStroke(Stroke stroke) { [EOL]     if (stroke == null) { [EOL]         throw new IllegalArgumentException("Null 'stroke' argument."); [EOL]     } [EOL]     this.guideLineStroke = stroke; [EOL]     fireChangeEvent(); [EOL] } <line_num>: 330,336
public Range findDomainBounds(XYDataset dataset) { [EOL]     if (dataset != null) { [EOL]         Range r = DatasetUtilities.findDomainBounds(dataset, false); [EOL]         double offset = 0; [EOL]         return new Range(r.getLowerBound() + offset, r.getUpperBound() + offset); [EOL]     } else { [EOL]         return null; [EOL]     } [EOL] } <line_num>: 347,357
public Range findRangeBounds(XYDataset dataset) { [EOL]     if (dataset != null) { [EOL]         Range r = DatasetUtilities.findRangeBounds(dataset, false); [EOL]         double offset = 0; [EOL]         return new Range(r.getLowerBound() + offset, r.getUpperBound() + offset); [EOL]     } else { [EOL]         return null; [EOL]     } [EOL] } <line_num>: 368,378
public int getPassCount() { [EOL]     return 2; [EOL] } <line_num>: 385,387
public void drawItem(Graphics2D g2, XYItemRendererState state, Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset, int series, int item, boolean selected, int pass) { [EOL]     Shape hotspot = null; [EOL]     EntityCollection entities = null; [EOL]     if (state.getInfo() != null) { [EOL]         entities = state.getInfo().getOwner().getEntityCollection(); [EOL]     } [EOL]     double x = dataset.getXValue(series, item); [EOL]     double y = dataset.getYValue(series, item); [EOL]     if (Double.isNaN(x) || Double.isNaN(y)) { [EOL]         return; [EOL]     } [EOL]     double transX = domainAxis.valueToJava2D(x, dataArea, plot.getDomainAxisEdge()); [EOL]     double transY = rangeAxis.valueToJava2D(y, dataArea, plot.getRangeAxisEdge()); [EOL]     PlotOrientation orientation = plot.getOrientation(); [EOL]     if ((pass == 0) && this.guideLinesVisible) { [EOL]         g2.setStroke(this.guideLineStroke); [EOL]         g2.setPaint(this.guideLinePaint); [EOL]         if (orientation == PlotOrientation.HORIZONTAL) { [EOL]             g2.draw(new Line2D.Double(transY, dataArea.getMinY(), transY, dataArea.getMaxY())); [EOL]             g2.draw(new Line2D.Double(dataArea.getMinX(), transX, dataArea.getMaxX(), transX)); [EOL]         } else { [EOL]             g2.draw(new Line2D.Double(transX, dataArea.getMinY(), transX, dataArea.getMaxY())); [EOL]             g2.draw(new Line2D.Double(dataArea.getMinX(), transY, dataArea.getMaxX(), transY)); [EOL]         } [EOL]     } else if (pass == 1) { [EOL]         Shape shape = getItemShape(series, item, selected); [EOL]         if (orientation == PlotOrientation.HORIZONTAL) { [EOL]             shape = ShapeUtilities.createTranslatedShape(shape, transY, transX); [EOL]         } else if (orientation == PlotOrientation.VERTICAL) { [EOL]             shape = ShapeUtilities.createTranslatedShape(shape, transX, transY); [EOL]         } [EOL]         hotspot = shape; [EOL]         if (shape.intersects(dataArea)) { [EOL]             g2.setPaint(getPaint(dataset, series, item, selected)); [EOL]             g2.fill(shape); [EOL]             if (this.drawOutlines) { [EOL]                 if (getUseOutlinePaint()) { [EOL]                     g2.setPaint(getItemOutlinePaint(series, item, selected)); [EOL]                 } else { [EOL]                     g2.setPaint(getItemPaint(series, item, selected)); [EOL]                 } [EOL]                 g2.setStroke(getItemOutlineStroke(series, item, selected)); [EOL]                 g2.draw(shape); [EOL]             } [EOL]         } [EOL]         if (entities != null) { [EOL]             addEntity(entities, hotspot, dataset, series, item, selected, transX, transY); [EOL]         } [EOL]     } [EOL] } <line_num>: 406,483
protected Paint getPaint(XYDataset dataset, int series, int item, boolean selected) { [EOL]     Paint p = null; [EOL]     if (dataset instanceof XYZDataset) { [EOL]         double z = ((XYZDataset) dataset).getZValue(series, item); [EOL]         p = this.paintScale.getPaint(z); [EOL]     } else { [EOL]         if (this.useFillPaint) { [EOL]             p = getItemFillPaint(series, item, selected); [EOL]         } else { [EOL]             p = getItemPaint(series, item, selected); [EOL]         } [EOL]     } [EOL]     return p; [EOL] } <line_num>: 497,513
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof XYShapeRenderer)) { [EOL]         return false; [EOL]     } [EOL]     XYShapeRenderer that = (XYShapeRenderer) obj; [EOL]     if (!this.paintScale.equals(that.paintScale)) { [EOL]         return false; [EOL]     } [EOL]     if (this.drawOutlines != that.drawOutlines) { [EOL]         return false; [EOL]     } [EOL]     if (this.useOutlinePaint != that.useOutlinePaint) { [EOL]         return false; [EOL]     } [EOL]     if (this.useFillPaint != that.useFillPaint) { [EOL]         return false; [EOL]     } [EOL]     if (this.guideLinesVisible != that.guideLinesVisible) { [EOL]         return false; [EOL]     } [EOL]     if (!this.guideLinePaint.equals(that.guideLinePaint)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.guideLineStroke.equals(that.guideLineStroke)) { [EOL]         return false; [EOL]     } [EOL]     return super.equals(obj); [EOL] } <line_num>: 529,559
public Object clone() throws CloneNotSupportedException { [EOL]     XYShapeRenderer clone = (XYShapeRenderer) super.clone(); [EOL]     if (this.paintScale instanceof PublicCloneable) { [EOL]         PublicCloneable pc = (PublicCloneable) this.paintScale; [EOL]         clone.paintScale = (PaintScale) pc.clone(); [EOL]     } [EOL]     return clone; [EOL] } <line_num>: 569,576
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL]     this.guideLinePaint = SerialUtilities.readPaint(stream); [EOL]     this.guideLineStroke = SerialUtilities.readStroke(stream); [EOL] } <line_num>: 586,591
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL]     SerialUtilities.writePaint(this.guideLinePaint, stream); [EOL]     SerialUtilities.writeStroke(this.guideLineStroke, stream); [EOL] } <line_num>: 600,604
