public XYStepRenderer() { [EOL]     this(null, null); [EOL] } <line_num>: 123,125
public XYStepRenderer(XYToolTipGenerator toolTipGenerator, XYURLGenerator urlGenerator) { [EOL]     super(); [EOL]     setBaseToolTipGenerator(toolTipGenerator); [EOL]     setBaseURLGenerator(urlGenerator); [EOL]     setBaseShapesVisible(false); [EOL] } <line_num>: 135,141
public double getStepPoint() { [EOL]     return this.stepPoint; [EOL] } <line_num>: 156,158
public void setStepPoint(double stepPoint) { [EOL]     if (stepPoint < 0.0d || stepPoint > 1.0d) { [EOL]         throw new IllegalArgumentException("Requires stepPoint in [0.0;1.0]"); [EOL]     } [EOL]     this.stepPoint = stepPoint; [EOL]     fireChangeEvent(); [EOL] } <line_num>: 170,177
public void drawItem(Graphics2D g2, XYItemRendererState state, Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset, int series, int item, boolean selected, int pass) { [EOL]     if (!getItemVisible(series, item)) { [EOL]         return; [EOL]     } [EOL]     PlotOrientation orientation = plot.getOrientation(); [EOL]     Paint seriesPaint = getItemPaint(series, item, selected); [EOL]     Stroke seriesStroke = getItemStroke(series, item, selected); [EOL]     g2.setPaint(seriesPaint); [EOL]     g2.setStroke(seriesStroke); [EOL]     double x1 = dataset.getXValue(series, item); [EOL]     double y1 = dataset.getYValue(series, item); [EOL]     RectangleEdge xAxisLocation = plot.getDomainAxisEdge(); [EOL]     RectangleEdge yAxisLocation = plot.getRangeAxisEdge(); [EOL]     double transX1 = domainAxis.valueToJava2D(x1, dataArea, xAxisLocation); [EOL]     double transY1 = (Double.isNaN(y1) ? Double.NaN : rangeAxis.valueToJava2D(y1, dataArea, yAxisLocation)); [EOL]     if (pass == 0 && item > 0) { [EOL]         double x0 = dataset.getXValue(series, item - 1); [EOL]         double y0 = dataset.getYValue(series, item - 1); [EOL]         double transX0 = domainAxis.valueToJava2D(x0, dataArea, xAxisLocation); [EOL]         double transY0 = (Double.isNaN(y0) ? Double.NaN : rangeAxis.valueToJava2D(y0, dataArea, yAxisLocation)); [EOL]         if (orientation == PlotOrientation.HORIZONTAL) { [EOL]             if (transY0 == transY1) { [EOL]                 drawLine(g2, state.workingLine, transY0, transX0, transY1, transX1); [EOL]             } else { [EOL]                 double transXs = transX0 + (getStepPoint() * (transX1 - transX0)); [EOL]                 drawLine(g2, state.workingLine, transY0, transX0, transY0, transXs); [EOL]                 drawLine(g2, state.workingLine, transY0, transXs, transY1, transXs); [EOL]                 drawLine(g2, state.workingLine, transY1, transXs, transY1, transX1); [EOL]             } [EOL]         } else if (orientation == PlotOrientation.VERTICAL) { [EOL]             if (transY0 == transY1) { [EOL]                 drawLine(g2, state.workingLine, transX0, transY0, transX1, transY1); [EOL]             } else { [EOL]                 double transXs = transX0 + (getStepPoint() * (transX1 - transX0)); [EOL]                 drawLine(g2, state.workingLine, transX0, transY0, transXs, transY0); [EOL]                 drawLine(g2, state.workingLine, transXs, transY0, transXs, transY1); [EOL]                 drawLine(g2, state.workingLine, transXs, transY1, transX1, transY1); [EOL]             } [EOL]         } [EOL]         int domainAxisIndex = plot.getDomainAxisIndex(domainAxis); [EOL]         int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis); [EOL]         XYCrosshairState crosshairState = state.getCrosshairState(); [EOL]         updateCrosshairValues(crosshairState, x1, y1, domainAxisIndex, rangeAxisIndex, transX1, transY1, orientation); [EOL]         EntityCollection entities = state.getEntityCollection(); [EOL]         if (entities != null) { [EOL]             addEntity(entities, null, dataset, series, item, selected, transX1, transY1); [EOL]         } [EOL]     } [EOL]     if (pass == 1) { [EOL]         if (isItemLabelVisible(series, item, selected)) { [EOL]             double xx = transX1; [EOL]             double yy = transY1; [EOL]             if (orientation == PlotOrientation.HORIZONTAL) { [EOL]                 xx = transY1; [EOL]                 yy = transX1; [EOL]             } [EOL]             drawItemLabel(g2, orientation, dataset, series, item, selected, xx, yy, (y1 < 0.0)); [EOL]         } [EOL]     } [EOL] } <line_num>: 194,298
private void drawLine(Graphics2D g2, Line2D line, double x0, double y0, double x1, double y1) { [EOL]     if (Double.isNaN(x0) || Double.isNaN(x1) || Double.isNaN(y0) || Double.isNaN(y1)) { [EOL]         return; [EOL]     } [EOL]     line.setLine(x0, y0, x1, y1); [EOL]     g2.draw(line); [EOL] } <line_num>: 311,319
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof XYLineAndShapeRenderer)) { [EOL]         return false; [EOL]     } [EOL]     XYStepRenderer that = (XYStepRenderer) obj; [EOL]     if (this.stepPoint != that.stepPoint) { [EOL]         return false; [EOL]     } [EOL]     return super.equals(obj); [EOL] } <line_num>: 328,340
public int hashCode() { [EOL]     return HashUtilities.hashCode(super.hashCode(), this.stepPoint); [EOL] } <line_num>: 347,349
public Object clone() throws CloneNotSupportedException { [EOL]     return super.clone(); [EOL] } <line_num>: 358,360
