public ProjectInfo() { [EOL] } <line_num>: 67,69
public ProjectInfo(String name, String version, String info, Image logo, String copyright, String licenceName, String licenceText) { [EOL]     super(name, version, info, copyright, licenceName); [EOL]     this.logo = logo; [EOL]     this.licenceText = licenceText; [EOL] } <line_num>: 82,94
public Image getLogo() { [EOL]     return this.logo; [EOL] } <line_num>: 101,103
public void setLogo(final Image logo) { [EOL]     this.logo = logo; [EOL] } <line_num>: 110,112
public String getLicenceText() { [EOL]     return this.licenceText; [EOL] } <line_num>: 119,121
public void setLicenceText(final String licenceText) { [EOL]     this.licenceText = licenceText; [EOL] } <line_num>: 128,130
public List getContributors() { [EOL]     return this.contributors; [EOL] } <line_num>: 137,139
public void setContributors(final List contributors) { [EOL]     this.contributors = contributors; [EOL] } <line_num>: 146,148
public String toString() { [EOL]     final StringBuffer result = new StringBuffer(); [EOL]     result.append(getName()); [EOL]     result.append(" version "); [EOL]     result.append(getVersion()); [EOL]     result.append(".\n"); [EOL]     result.append(getCopyright()); [EOL]     result.append(".\n"); [EOL]     result.append("\n"); [EOL]     result.append("For terms of use, see the licence below.\n"); [EOL]     result.append("\n"); [EOL]     result.append("FURTHER INFORMATION:"); [EOL]     result.append(getInfo()); [EOL]     result.append("\n"); [EOL]     result.append("CONTRIBUTORS:"); [EOL]     if (this.contributors != null) { [EOL]         final Iterator iterator = this.contributors.iterator(); [EOL]         while (iterator.hasNext()) { [EOL]             final Contributor contributor = (Contributor) iterator.next(); [EOL]             result.append(contributor.getName()); [EOL]             result.append(" ("); [EOL]             result.append(contributor.getEmail()); [EOL]             result.append(")."); [EOL]         } [EOL]     } else { [EOL]         result.append("None"); [EOL]     } [EOL]     result.append("\n"); [EOL]     result.append("OTHER LIBRARIES USED BY "); [EOL]     result.append(getName()); [EOL]     result.append(":"); [EOL]     final Library[] libraries = getLibraries(); [EOL]     if (libraries.length != 0) { [EOL]         for (int i = 0; i < libraries.length; i++) { [EOL]             final Library lib = libraries[i]; [EOL]             result.append(lib.getName()); [EOL]             result.append(" "); [EOL]             result.append(lib.getVersion()); [EOL]             result.append(" ("); [EOL]             result.append(lib.getInfo()); [EOL]             result.append(")."); [EOL]         } [EOL]     } else { [EOL]         result.append("None"); [EOL]     } [EOL]     result.append("\n"); [EOL]     result.append(getName()); [EOL]     result.append(" LICENCE TERMS:"); [EOL]     result.append("\n"); [EOL]     result.append(getLicenceText()); [EOL]     return result.toString(); [EOL] } <line_num>: 155,212
