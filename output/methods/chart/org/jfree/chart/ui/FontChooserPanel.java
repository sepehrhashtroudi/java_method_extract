public FontChooserPanel(Font font) { [EOL]     GraphicsEnvironment g = GraphicsEnvironment.getLocalGraphicsEnvironment(); [EOL]     String[] fonts = g.getAvailableFontFamilyNames(); [EOL]     setLayout(new BorderLayout()); [EOL]     JPanel right = new JPanel(new BorderLayout()); [EOL]     JPanel fontPanel = new JPanel(new BorderLayout()); [EOL]     fontPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), localizationResources.getString("Font"))); [EOL]     this.fontlist = new JList(fonts); [EOL]     JScrollPane fontpane = new JScrollPane(this.fontlist); [EOL]     fontpane.setBorder(BorderFactory.createEtchedBorder()); [EOL]     fontPanel.add(fontpane); [EOL]     add(fontPanel); [EOL]     JPanel sizePanel = new JPanel(new BorderLayout()); [EOL]     sizePanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), localizationResources.getString("Size"))); [EOL]     this.sizelist = new JList(SIZES); [EOL]     JScrollPane sizepane = new JScrollPane(this.sizelist); [EOL]     sizepane.setBorder(BorderFactory.createEtchedBorder()); [EOL]     sizePanel.add(sizepane); [EOL]     JPanel attributes = new JPanel(new GridLayout(1, 2)); [EOL]     this.bold = new JCheckBox(localizationResources.getString("Bold")); [EOL]     this.italic = new JCheckBox(localizationResources.getString("Italic")); [EOL]     attributes.add(this.bold); [EOL]     attributes.add(this.italic); [EOL]     attributes.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), localizationResources.getString("Attributes"))); [EOL]     right.add(sizePanel, BorderLayout.CENTER); [EOL]     right.add(attributes, BorderLayout.SOUTH); [EOL]     add(right, BorderLayout.EAST); [EOL]     setSelectedFont(font); [EOL] } <line_num>: 96,138
public Font getSelectedFont() { [EOL]     return new Font(getSelectedName(), getSelectedStyle(), getSelectedSize()); [EOL] } <line_num>: 145,148
public String getSelectedName() { [EOL]     return (String) this.fontlist.getSelectedValue(); [EOL] } <line_num>: 155,157
public int getSelectedStyle() { [EOL]     if (this.bold.isSelected() && this.italic.isSelected()) { [EOL]         return Font.BOLD + Font.ITALIC; [EOL]     } [EOL]     if (this.bold.isSelected()) { [EOL]         return Font.BOLD; [EOL]     } [EOL]     if (this.italic.isSelected()) { [EOL]         return Font.ITALIC; [EOL]     } else { [EOL]         return Font.PLAIN; [EOL]     } [EOL] } <line_num>: 164,177
public int getSelectedSize() { [EOL]     String selected = (String) this.sizelist.getSelectedValue(); [EOL]     if (selected != null) { [EOL]         return Integer.parseInt(selected); [EOL]     } else { [EOL]         return 10; [EOL]     } [EOL] } <line_num>: 184,192
public void setSelectedFont(Font font) { [EOL]     if (font == null) { [EOL]         throw new NullPointerException(); [EOL]     } [EOL]     this.bold.setSelected(font.isBold()); [EOL]     this.italic.setSelected(font.isItalic()); [EOL]     String fontName = font.getName(); [EOL]     ListModel model = this.fontlist.getModel(); [EOL]     this.fontlist.clearSelection(); [EOL]     for (int i = 0; i < model.getSize(); i++) { [EOL]         if (fontName.equals(model.getElementAt(i))) { [EOL]             this.fontlist.setSelectedIndex(i); [EOL]             break; [EOL]         } [EOL]     } [EOL]     String fontSize = String.valueOf(font.getSize()); [EOL]     model = this.sizelist.getModel(); [EOL]     this.sizelist.clearSelection(); [EOL]     for (int i = 0; i < model.getSize(); i++) { [EOL]         if (fontSize.equals(model.getElementAt(i))) { [EOL]             this.sizelist.setSelectedIndex(i); [EOL]             break; [EOL]         } [EOL]     } [EOL] } <line_num>: 200,226
