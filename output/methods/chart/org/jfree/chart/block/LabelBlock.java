public LabelBlock(String label) { [EOL]     this(label, new Font("Tahoma", Font.PLAIN, 10), DEFAULT_PAINT); [EOL] } <line_num>: 128,130
public LabelBlock(String text, Font font) { [EOL]     this(text, font, DEFAULT_PAINT); [EOL] } <line_num>: 138,140
public LabelBlock(String text, Font font, Paint paint) { [EOL]     this.text = text; [EOL]     this.paint = paint; [EOL]     this.label = TextUtilities.createTextBlock(text, font, this.paint); [EOL]     this.font = font; [EOL]     this.toolTipText = null; [EOL]     this.urlText = null; [EOL]     this.contentAlignmentPoint = TextBlockAnchor.CENTER; [EOL]     this.textAnchor = RectangleAnchor.CENTER; [EOL] } <line_num>: 149,158
public Font getFont() { [EOL]     return this.font; [EOL] } <line_num>: 167,169
public void setFont(Font font) { [EOL]     if (font == null) { [EOL]         throw new IllegalArgumentException("Null 'font' argument."); [EOL]     } [EOL]     this.font = font; [EOL]     this.label = TextUtilities.createTextBlock(this.text, font, this.paint); [EOL] } <line_num>: 178,184
public Paint getPaint() { [EOL]     return this.paint; [EOL] } <line_num>: 193,195
public void setPaint(Paint paint) { [EOL]     if (paint == null) { [EOL]         throw new IllegalArgumentException("Null 'paint' argument."); [EOL]     } [EOL]     this.paint = paint; [EOL]     this.label = TextUtilities.createTextBlock(this.text, this.font, this.paint); [EOL] } <line_num>: 204,211
public String getToolTipText() { [EOL]     return this.toolTipText; [EOL] } <line_num>: 220,222
public void setToolTipText(String text) { [EOL]     this.toolTipText = text; [EOL] } <line_num>: 231,233
public String getURLText() { [EOL]     return this.urlText; [EOL] } <line_num>: 242,244
public void setURLText(String text) { [EOL]     this.urlText = text; [EOL] } <line_num>: 253,255
public TextBlockAnchor getContentAlignmentPoint() { [EOL]     return this.contentAlignmentPoint; [EOL] } <line_num>: 264,266
public void setContentAlignmentPoint(TextBlockAnchor anchor) { [EOL]     if (anchor == null) { [EOL]         throw new IllegalArgumentException("Null 'anchor' argument."); [EOL]     } [EOL]     this.contentAlignmentPoint = anchor; [EOL] } <line_num>: 276,281
public RectangleAnchor getTextAnchor() { [EOL]     return this.textAnchor; [EOL] } <line_num>: 290,292
public void setTextAnchor(RectangleAnchor anchor) { [EOL]     this.textAnchor = anchor; [EOL] } <line_num>: 301,303
public Size2D arrange(Graphics2D g2, RectangleConstraint constraint) { [EOL]     g2.setFont(this.font); [EOL]     Size2D s = this.label.calculateDimensions(g2); [EOL]     return new Size2D(calculateTotalWidth(s.getWidth()), calculateTotalHeight(s.getHeight())); [EOL] } <line_num>: 314,319
public void draw(Graphics2D g2, Rectangle2D area) { [EOL]     draw(g2, area, null); [EOL] } <line_num>: 327,329
public Object draw(Graphics2D g2, Rectangle2D area, Object params) { [EOL]     area = trimMargin(area); [EOL]     drawBorder(g2, area); [EOL]     area = trimBorder(area); [EOL]     area = trimPadding(area); [EOL]     EntityBlockParams ebp = null; [EOL]     StandardEntityCollection sec = null; [EOL]     Shape entityArea = null; [EOL]     if (params instanceof EntityBlockParams) { [EOL]         ebp = (EntityBlockParams) params; [EOL]         if (ebp.getGenerateEntities()) { [EOL]             sec = new StandardEntityCollection(); [EOL]             entityArea = (Shape) area.clone(); [EOL]         } [EOL]     } [EOL]     g2.setPaint(this.paint); [EOL]     g2.setFont(this.font); [EOL]     Point2D pt = RectangleAnchor.coordinates(area, this.textAnchor); [EOL]     this.label.draw(g2, (float) pt.getX(), (float) pt.getY(), this.contentAlignmentPoint); [EOL]     BlockResult result = null; [EOL]     if (ebp != null && sec != null) { [EOL]         if (this.toolTipText != null || this.urlText != null) { [EOL]             ChartEntity entity = new ChartEntity(entityArea, this.toolTipText, this.urlText); [EOL]             sec.add(entity); [EOL]             result = new BlockResult(); [EOL]             result.setEntityCollection(sec); [EOL]         } [EOL]     } [EOL]     return result; [EOL] } <line_num>: 340,373
public boolean equals(Object obj) { [EOL]     if (!(obj instanceof LabelBlock)) { [EOL]         return false; [EOL]     } [EOL]     LabelBlock that = (LabelBlock) obj; [EOL]     if (!this.text.equals(that.text)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.font.equals(that.font)) { [EOL]         return false; [EOL]     } [EOL]     if (!PaintUtilities.equal(this.paint, that.paint)) { [EOL]         return false; [EOL]     } [EOL]     if (!ObjectUtilities.equal(this.toolTipText, that.toolTipText)) { [EOL]         return false; [EOL]     } [EOL]     if (!ObjectUtilities.equal(this.urlText, that.urlText)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.contentAlignmentPoint.equals(that.contentAlignmentPoint)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.textAnchor.equals(that.textAnchor)) { [EOL]         return false; [EOL]     } [EOL]     return super.equals(obj); [EOL] } <line_num>: 383,410
public Object clone() throws CloneNotSupportedException { [EOL]     return super.clone(); [EOL] } <line_num>: 419,421
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL]     SerialUtilities.writePaint(this.paint, stream); [EOL] } <line_num>: 430,433
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL]     this.paint = SerialUtilities.readPaint(stream); [EOL] } <line_num>: 443,447
