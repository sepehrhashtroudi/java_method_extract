public LineBorder() { [EOL]     this(Color.black, new BasicStroke(1.0f), new RectangleInsets(1.0, 1.0, 1.0, 1.0)); [EOL] } <line_num>: 84,87
public LineBorder(Paint paint, Stroke stroke, RectangleInsets insets) { [EOL]     if (paint == null) { [EOL]         throw new IllegalArgumentException("Null 'paint' argument."); [EOL]     } [EOL]     if (stroke == null) { [EOL]         throw new IllegalArgumentException("Null 'stroke' argument."); [EOL]     } [EOL]     if (insets == null) { [EOL]         throw new IllegalArgumentException("Null 'insets' argument."); [EOL]     } [EOL]     this.paint = paint; [EOL]     this.stroke = stroke; [EOL]     this.insets = insets; [EOL] } <line_num>: 96,109
public Paint getPaint() { [EOL]     return this.paint; [EOL] } <line_num>: 116,118
public RectangleInsets getInsets() { [EOL]     return this.insets; [EOL] } <line_num>: 125,127
public Stroke getStroke() { [EOL]     return this.stroke; [EOL] } <line_num>: 134,136
public void draw(Graphics2D g2, Rectangle2D area) { [EOL]     double w = area.getWidth(); [EOL]     double h = area.getHeight(); [EOL]     if (w <= 0.0 || h <= 0.0) { [EOL]         return; [EOL]     } [EOL]     double t = this.insets.calculateTopInset(h); [EOL]     double b = this.insets.calculateBottomInset(h); [EOL]     double l = this.insets.calculateLeftInset(w); [EOL]     double r = this.insets.calculateRightInset(w); [EOL]     double x = area.getX(); [EOL]     double y = area.getY(); [EOL]     double x0 = x + l / 2.0; [EOL]     double x1 = x + w - r / 2.0; [EOL]     double y0 = y + h - b / 2.0; [EOL]     double y1 = y + t / 2.0; [EOL]     g2.setPaint(getPaint()); [EOL]     g2.setStroke(getStroke()); [EOL]     Line2D line = new Line2D.Double(); [EOL]     if (t > 0.0) { [EOL]         line.setLine(x0, y1, x1, y1); [EOL]         g2.draw(line); [EOL]     } [EOL]     if (b > 0.0) { [EOL]         line.setLine(x0, y0, x1, y0); [EOL]         g2.draw(line); [EOL]     } [EOL]     if (l > 0.0) { [EOL]         line.setLine(x0, y0, x0, y1); [EOL]         g2.draw(line); [EOL]     } [EOL]     if (r > 0.0) { [EOL]         line.setLine(x1, y0, x1, y1); [EOL]         g2.draw(line); [EOL]     } [EOL] } <line_num>: 144,180
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof LineBorder)) { [EOL]         return false; [EOL]     } [EOL]     LineBorder that = (LineBorder) obj; [EOL]     if (!PaintUtilities.equal(this.paint, that.paint)) { [EOL]         return false; [EOL]     } [EOL]     if (!ObjectUtilities.equal(this.stroke, that.stroke)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.insets.equals(that.insets)) { [EOL]         return false; [EOL]     } [EOL]     return true; [EOL] } <line_num>: 189,207
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL]     SerialUtilities.writePaint(this.paint, stream); [EOL]     SerialUtilities.writeStroke(this.stroke, stream); [EOL] } <line_num>: 216,220
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL]     this.paint = SerialUtilities.readPaint(stream); [EOL]     this.stroke = SerialUtilities.readStroke(stream); [EOL] } <line_num>: 230,235
