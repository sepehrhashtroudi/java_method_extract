public BlockContainer() { [EOL]     this(new BorderArrangement()); [EOL] } <line_num>: 83,85
public BlockContainer(Arrangement arrangement) { [EOL]     if (arrangement == null) { [EOL]         throw new IllegalArgumentException("Null 'arrangement' argument."); [EOL]     } [EOL]     this.arrangement = arrangement; [EOL]     this.blocks = new ArrayList(); [EOL] } <line_num>: 93,99
public Arrangement getArrangement() { [EOL]     return this.arrangement; [EOL] } <line_num>: 106,108
public void setArrangement(Arrangement arrangement) { [EOL]     if (arrangement == null) { [EOL]         throw new IllegalArgumentException("Null 'arrangement' argument."); [EOL]     } [EOL]     this.arrangement = arrangement; [EOL] } <line_num>: 115,120
public boolean isEmpty() { [EOL]     return this.blocks.isEmpty(); [EOL] } <line_num>: 128,130
public List getBlocks() { [EOL]     return Collections.unmodifiableList(this.blocks); [EOL] } <line_num>: 138,140
public void add(Block block) { [EOL]     add(block, null); [EOL] } <line_num>: 147,149
public void add(Block block, Object key) { [EOL]     this.blocks.add(block); [EOL]     this.arrangement.add(block, key); [EOL] } <line_num>: 157,160
public void clear() { [EOL]     this.blocks.clear(); [EOL]     this.arrangement.clear(); [EOL] } <line_num>: 165,168
public Size2D arrange(Graphics2D g2, RectangleConstraint constraint) { [EOL]     return this.arrangement.arrange(this, g2, constraint); [EOL] } <line_num>: 179,181
public void draw(Graphics2D g2, Rectangle2D area) { [EOL]     draw(g2, area, null); [EOL] } <line_num>: 189,191
public Object draw(Graphics2D g2, Rectangle2D area, Object params) { [EOL]     EntityBlockParams ebp = null; [EOL]     StandardEntityCollection sec = null; [EOL]     if (params instanceof EntityBlockParams) { [EOL]         ebp = (EntityBlockParams) params; [EOL]         if (ebp.getGenerateEntities()) { [EOL]             sec = new StandardEntityCollection(); [EOL]         } [EOL]     } [EOL]     Rectangle2D contentArea = (Rectangle2D) area.clone(); [EOL]     contentArea = trimMargin(contentArea); [EOL]     drawBorder(g2, contentArea); [EOL]     contentArea = trimBorder(contentArea); [EOL]     contentArea = trimPadding(contentArea); [EOL]     Iterator iterator = this.blocks.iterator(); [EOL]     while (iterator.hasNext()) { [EOL]         Block block = (Block) iterator.next(); [EOL]         Rectangle2D bounds = block.getBounds(); [EOL]         Rectangle2D drawArea = new Rectangle2D.Double(bounds.getX() + area.getX(), bounds.getY() + area.getY(), bounds.getWidth(), bounds.getHeight()); [EOL]         Object r = block.draw(g2, drawArea, params); [EOL]         if (sec != null) { [EOL]             if (r instanceof EntityBlockResult) { [EOL]                 EntityBlockResult ebr = (EntityBlockResult) r; [EOL]                 EntityCollection ec = ebr.getEntityCollection(); [EOL]                 sec.addAll(ec); [EOL]             } [EOL]         } [EOL]     } [EOL]     BlockResult result = null; [EOL]     if (sec != null) { [EOL]         result = new BlockResult(); [EOL]         result.setEntityCollection(sec); [EOL]     } [EOL]     return result; [EOL] } <line_num>: 203,240
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof BlockContainer)) { [EOL]         return false; [EOL]     } [EOL]     if (!super.equals(obj)) { [EOL]         return false; [EOL]     } [EOL]     BlockContainer that = (BlockContainer) obj; [EOL]     if (!this.arrangement.equals(that.arrangement)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.blocks.equals(that.blocks)) { [EOL]         return false; [EOL]     } [EOL]     return true; [EOL] } <line_num>: 249,267
public Object clone() throws CloneNotSupportedException { [EOL]     BlockContainer clone = (BlockContainer) super.clone(); [EOL]     return clone; [EOL] } <line_num>: 276,280
