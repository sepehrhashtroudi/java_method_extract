public ColorBlock(Paint paint, double width, double height) { [EOL]     if (paint == null) { [EOL]         throw new IllegalArgumentException("Null 'paint' argument."); [EOL]     } [EOL]     this.paint = paint; [EOL]     setWidth(width); [EOL]     setHeight(height); [EOL] } <line_num>: 78,85
public Paint getPaint() { [EOL]     return this.paint; [EOL] } <line_num>: 94,96
public Size2D arrange(Graphics2D g2, RectangleConstraint constraint) { [EOL]     return new Size2D(calculateTotalWidth(getWidth()), calculateTotalHeight(getHeight())); [EOL] } <line_num>: 107,110
public void draw(Graphics2D g2, Rectangle2D area) { [EOL]     area = trimMargin(area); [EOL]     drawBorder(g2, area); [EOL]     area = trimBorder(area); [EOL]     area = trimPadding(area); [EOL]     g2.setPaint(this.paint); [EOL]     g2.fill(area); [EOL] } <line_num>: 118,125
public Object draw(Graphics2D g2, Rectangle2D area, Object params) { [EOL]     draw(g2, area); [EOL]     return null; [EOL] } <line_num>: 136,139
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof ColorBlock)) { [EOL]         return false; [EOL]     } [EOL]     ColorBlock that = (ColorBlock) obj; [EOL]     if (!PaintUtilities.equal(this.paint, that.paint)) { [EOL]         return false; [EOL]     } [EOL]     return super.equals(obj); [EOL] } <line_num>: 148,160
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL]     SerialUtilities.writePaint(this.paint, stream); [EOL] } <line_num>: 169,172
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL]     this.paint = SerialUtilities.readPaint(stream); [EOL] } <line_num>: 182,186
