protected AbstractObjectList() { [EOL]     this(DEFAULT_INITIAL_CAPACITY); [EOL] } <line_num>: 76,78
protected AbstractObjectList(int initialCapacity) { [EOL]     this(initialCapacity, initialCapacity); [EOL] } <line_num>: 85,87
protected AbstractObjectList(int initialCapacity, int increment) { [EOL]     this.objects = new Object[initialCapacity]; [EOL]     this.increment = increment; [EOL] } <line_num>: 95,98
protected Object get(int index) { [EOL]     Object result = null; [EOL]     if (index >= 0 && index < this.size) { [EOL]         result = this.objects[index]; [EOL]     } [EOL]     return result; [EOL] } <line_num>: 108,114
protected void set(int index, Object object) { [EOL]     if (index < 0) { [EOL]         throw new IllegalArgumentException("Requires index >= 0."); [EOL]     } [EOL]     if (index >= this.objects.length) { [EOL]         Object[] enlarged = new Object[index + this.increment]; [EOL]         System.arraycopy(this.objects, 0, enlarged, 0, this.objects.length); [EOL]         this.objects = enlarged; [EOL]     } [EOL]     this.objects[index] = object; [EOL]     this.size = Math.max(this.size, index + 1); [EOL] } <line_num>: 122,133
public void clear() { [EOL]     Arrays.fill(this.objects, null); [EOL]     this.size = 0; [EOL] } <line_num>: 138,141
public int size() { [EOL]     return this.size; [EOL] } <line_num>: 148,150
protected int indexOf(Object object) { [EOL]     for (int index = 0; index < this.size; index++) { [EOL]         if (this.objects[index] == object) { [EOL]             return (index); [EOL]         } [EOL]     } [EOL]     return -1; [EOL] } <line_num>: 160,167
public boolean equals(Object obj) { [EOL]     if (obj == null) { [EOL]         return false; [EOL]     } [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof AbstractObjectList)) { [EOL]         return false; [EOL]     } [EOL]     AbstractObjectList other = (AbstractObjectList) obj; [EOL]     int listSize = size(); [EOL]     for (int i = 0; i < listSize; i++) { [EOL]         if (!ObjectUtilities.equal(get(i), other.get(i))) { [EOL]             return false; [EOL]         } [EOL]     } [EOL]     return true; [EOL] } <line_num>: 176,198
public int hashCode() { [EOL]     int result = 127; [EOL]     int size = size(); [EOL]     result = HashUtilities.hashCode(result, size()); [EOL]     if (size > 0) { [EOL]         result = HashUtilities.hashCode(result, this.objects[0]); [EOL]         if (size > 1) { [EOL]             result = HashUtilities.hashCode(result, this.objects[size - 1]); [EOL]             if (size > 2) { [EOL]                 result = HashUtilities.hashCode(result, this.objects[size / 2]); [EOL]             } [EOL]         } [EOL]     } [EOL]     return result; [EOL] } <line_num>: 205,222
public Object clone() throws CloneNotSupportedException { [EOL]     AbstractObjectList clone = (AbstractObjectList) super.clone(); [EOL]     if (this.objects != null) { [EOL]         clone.objects = new Object[this.objects.length]; [EOL]         System.arraycopy(this.objects, 0, clone.objects, 0, this.objects.length); [EOL]     } [EOL]     return clone; [EOL] } <line_num>: 233,243
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL]     int count = size(); [EOL]     stream.writeInt(count); [EOL]     for (int i = 0; i < count; i++) { [EOL]         final Object object = get(i); [EOL]         if (object != null && object instanceof Serializable) { [EOL]             stream.writeInt(i); [EOL]             stream.writeObject(object); [EOL]         } else { [EOL]             stream.writeInt(-1); [EOL]         } [EOL]     } [EOL] } <line_num>: 252,269
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL]     this.objects = new Object[this.size]; [EOL]     int count = stream.readInt(); [EOL]     for (int i = 0; i < count; i++) { [EOL]         int index = stream.readInt(); [EOL]         if (index != -1) { [EOL]             set(index, stream.readObject()); [EOL]         } [EOL]     } [EOL] } <line_num>: 279,292
