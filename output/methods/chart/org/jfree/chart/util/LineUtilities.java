public static boolean clipLine(Line2D line, Rectangle2D rect) { [EOL]     double x1 = line.getX1(); [EOL]     double y1 = line.getY1(); [EOL]     double x2 = line.getX2(); [EOL]     double y2 = line.getY2(); [EOL]     double minX = rect.getMinX(); [EOL]     double maxX = rect.getMaxX(); [EOL]     double minY = rect.getMinY(); [EOL]     double maxY = rect.getMaxY(); [EOL]     int f1 = rect.outcode(x1, y1); [EOL]     int f2 = rect.outcode(x2, y2); [EOL]     while ((f1 | f2) != 0) { [EOL]         if ((f1 & f2) != 0) { [EOL]             return false; [EOL]         } [EOL]         double dx = (x2 - x1); [EOL]         double dy = (y2 - y1); [EOL]         if (f1 != 0) { [EOL]             if ((f1 & Rectangle2D.OUT_LEFT) == Rectangle2D.OUT_LEFT && dx != 0.0) { [EOL]                 y1 = y1 + (minX - x1) * dy / dx; [EOL]                 x1 = minX; [EOL]             } else if ((f1 & Rectangle2D.OUT_RIGHT) == Rectangle2D.OUT_RIGHT && dx != 0.0) { [EOL]                 y1 = y1 + (maxX - x1) * dy / dx; [EOL]                 x1 = maxX; [EOL]             } else if ((f1 & Rectangle2D.OUT_BOTTOM) == Rectangle2D.OUT_BOTTOM && dy != 0.0) { [EOL]                 x1 = x1 + (maxY - y1) * dx / dy; [EOL]                 y1 = maxY; [EOL]             } else if ((f1 & Rectangle2D.OUT_TOP) == Rectangle2D.OUT_TOP && dy != 0.0) { [EOL]                 x1 = x1 + (minY - y1) * dx / dy; [EOL]                 y1 = minY; [EOL]             } [EOL]             f1 = rect.outcode(x1, y1); [EOL]         } else if (f2 != 0) { [EOL]             if ((f2 & Rectangle2D.OUT_LEFT) == Rectangle2D.OUT_LEFT && dx != 0.0) { [EOL]                 y2 = y2 + (minX - x2) * dy / dx; [EOL]                 x2 = minX; [EOL]             } else if ((f2 & Rectangle2D.OUT_RIGHT) == Rectangle2D.OUT_RIGHT && dx != 0.0) { [EOL]                 y2 = y2 + (maxX - x2) * dy / dx; [EOL]                 x2 = maxX; [EOL]             } else if ((f2 & Rectangle2D.OUT_BOTTOM) == Rectangle2D.OUT_BOTTOM && dy != 0.0) { [EOL]                 x2 = x2 + (maxY - y2) * dx / dy; [EOL]                 y2 = maxY; [EOL]             } else if ((f2 & Rectangle2D.OUT_TOP) == Rectangle2D.OUT_TOP && dy != 0.0) { [EOL]                 x2 = x2 + (minY - y2) * dx / dy; [EOL]                 y2 = minY; [EOL]             } [EOL]             f2 = rect.outcode(x2, y2); [EOL]         } [EOL]     } [EOL]     line.setLine(x1, y1, x2, y2); [EOL]     return true; [EOL] } <line_num>: 62,141
