public ShapeList() { [EOL]     super(); [EOL] } <line_num>: 58,60
public Shape getShape(int index) { [EOL]     return (Shape) get(index); [EOL] } <line_num>: 69,71
public void setShape(int index, Shape shape) { [EOL]     set(index, shape); [EOL] } <line_num>: 80,82
public Object clone() throws CloneNotSupportedException { [EOL]     return super.clone(); [EOL] } <line_num>: 92,94
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof ShapeList)) { [EOL]         return false; [EOL]     } [EOL]     ShapeList that = (ShapeList) obj; [EOL]     int listSize = size(); [EOL]     for (int i = 0; i < listSize; i++) { [EOL]         if (!ShapeUtilities.equal((Shape) get(i), (Shape) that.get(i))) { [EOL]             return false; [EOL]         } [EOL]     } [EOL]     return true; [EOL] } <line_num>: 103,120
public int hashCode() { [EOL]     return super.hashCode(); [EOL] } <line_num>: 127,129
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL]     int count = size(); [EOL]     stream.writeInt(count); [EOL]     for (int i = 0; i < count; i++) { [EOL]         Shape shape = getShape(i); [EOL]         if (shape != null) { [EOL]             stream.writeInt(i); [EOL]             SerialUtilities.writeShape(shape, stream); [EOL]         } else { [EOL]             stream.writeInt(-1); [EOL]         } [EOL]     } [EOL] } <line_num>: 138,154
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL]     int count = stream.readInt(); [EOL]     for (int i = 0; i < count; i++) { [EOL]         int index = stream.readInt(); [EOL]         if (index != -1) { [EOL]             setShape(index, SerialUtilities.readShape(stream)); [EOL]         } [EOL]     } [EOL] } <line_num>: 164,176
