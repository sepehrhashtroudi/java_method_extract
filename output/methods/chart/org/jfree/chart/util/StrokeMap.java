public StrokeMap() { [EOL]     this.store = new TreeMap(); [EOL] } <line_num>: 76,78
public Stroke getStroke(Comparable key) { [EOL]     if (key == null) { [EOL]         throw new IllegalArgumentException("Null 'key' argument."); [EOL]     } [EOL]     return (Stroke) this.store.get(key); [EOL] } <line_num>: 91,96
public boolean containsKey(Comparable key) { [EOL]     return this.store.containsKey(key); [EOL] } <line_num>: 107,109
public void put(Comparable key, Stroke stroke) { [EOL]     if (key == null) { [EOL]         throw new IllegalArgumentException("Null 'key' argument."); [EOL]     } [EOL]     this.store.put(key, stroke); [EOL] } <line_num>: 118,123
public void clear() { [EOL]     this.store.clear(); [EOL] } <line_num>: 128,130
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof StrokeMap)) { [EOL]         return false; [EOL]     } [EOL]     StrokeMap that = (StrokeMap) obj; [EOL]     if (this.store.size() != that.store.size()) { [EOL]         return false; [EOL]     } [EOL]     Set keys = this.store.keySet(); [EOL]     Iterator iterator = keys.iterator(); [EOL]     while (iterator.hasNext()) { [EOL]         Comparable key = (Comparable) iterator.next(); [EOL]         Stroke s1 = getStroke(key); [EOL]         Stroke s2 = that.getStroke(key); [EOL]         if (!ObjectUtilities.equal(s1, s2)) { [EOL]             return false; [EOL]         } [EOL]     } [EOL]     return true; [EOL] } <line_num>: 139,161
public Object clone() throws CloneNotSupportedException { [EOL]     return super.clone(); [EOL] } <line_num>: 170,174
private void writeObject(ObjectOutputStream stream) throws IOException { [EOL]     stream.defaultWriteObject(); [EOL]     stream.writeInt(this.store.size()); [EOL]     Set keys = this.store.keySet(); [EOL]     Iterator iterator = keys.iterator(); [EOL]     while (iterator.hasNext()) { [EOL]         Comparable key = (Comparable) iterator.next(); [EOL]         stream.writeObject(key); [EOL]         Stroke stroke = getStroke(key); [EOL]         SerialUtilities.writeStroke(stroke, stream); [EOL]     } [EOL] } <line_num>: 183,194
private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [EOL]     stream.defaultReadObject(); [EOL]     this.store = new TreeMap(); [EOL]     int keyCount = stream.readInt(); [EOL]     for (int i = 0; i < keyCount; i++) { [EOL]         Comparable key = (Comparable) stream.readObject(); [EOL]         Stroke stroke = SerialUtilities.readStroke(stream); [EOL]         this.store.put(key, stroke); [EOL]     } [EOL] } <line_num>: 204,214
