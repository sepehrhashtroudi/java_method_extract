public RelativeDateFormat() { [EOL]     this(0L); [EOL] } <line_num>: 147,149
public RelativeDateFormat(Date time) { [EOL]     this(time.getTime()); [EOL] } <line_num>: 156,158
public RelativeDateFormat(long baseMillis) { [EOL]     super(); [EOL]     this.baseMillis = baseMillis; [EOL]     this.showZeroDays = false; [EOL]     this.showZeroHours = true; [EOL]     this.positivePrefix = ""; [EOL]     this.dayFormatter = NumberFormat.getNumberInstance(); [EOL]     this.daySuffix = "d"; [EOL]     this.hourFormatter = NumberFormat.getNumberInstance(); [EOL]     this.hourSuffix = "h"; [EOL]     this.minuteFormatter = NumberFormat.getNumberInstance(); [EOL]     this.minuteSuffix = "m"; [EOL]     this.secondFormatter = NumberFormat.getNumberInstance(); [EOL]     this.secondFormatter.setMaximumFractionDigits(3); [EOL]     this.secondFormatter.setMinimumFractionDigits(3); [EOL]     this.secondSuffix = "s"; [EOL]     this.calendar = new GregorianCalendar(); [EOL]     this.numberFormat = new DecimalFormat("0"); [EOL] } <line_num>: 165,186
public long getBaseMillis() { [EOL]     return this.baseMillis; [EOL] } <line_num>: 196,198
public void setBaseMillis(long baseMillis) { [EOL]     this.baseMillis = baseMillis; [EOL] } <line_num>: 209,211
public boolean getShowZeroDays() { [EOL]     return this.showZeroDays; [EOL] } <line_num>: 221,223
public void setShowZeroDays(boolean show) { [EOL]     this.showZeroDays = show; [EOL] } <line_num>: 233,235
public boolean getShowZeroHours() { [EOL]     return this.showZeroHours; [EOL] } <line_num>: 247,249
public void setShowZeroHours(boolean show) { [EOL]     this.showZeroHours = show; [EOL] } <line_num>: 261,263
public String getPositivePrefix() { [EOL]     return this.positivePrefix; [EOL] } <line_num>: 275,277
public void setPositivePrefix(String prefix) { [EOL]     if (prefix == null) { [EOL]         throw new IllegalArgumentException("Null 'prefix' argument."); [EOL]     } [EOL]     this.positivePrefix = prefix; [EOL] } <line_num>: 289,294
public void setDayFormatter(NumberFormat formatter) { [EOL]     if (formatter == null) { [EOL]         throw new IllegalArgumentException("Null 'formatter' argument."); [EOL]     } [EOL]     this.dayFormatter = formatter; [EOL] } <line_num>: 303,308
public String getDaySuffix() { [EOL]     return this.daySuffix; [EOL] } <line_num>: 317,319
public void setDaySuffix(String suffix) { [EOL]     if (suffix == null) { [EOL]         throw new IllegalArgumentException("Null 'suffix' argument."); [EOL]     } [EOL]     this.daySuffix = suffix; [EOL] } <line_num>: 328,333
public void setHourFormatter(NumberFormat formatter) { [EOL]     if (formatter == null) { [EOL]         throw new IllegalArgumentException("Null 'formatter' argument."); [EOL]     } [EOL]     this.hourFormatter = formatter; [EOL] } <line_num>: 342,347
public String getHourSuffix() { [EOL]     return this.hourSuffix; [EOL] } <line_num>: 356,358
public void setHourSuffix(String suffix) { [EOL]     if (suffix == null) { [EOL]         throw new IllegalArgumentException("Null 'suffix' argument."); [EOL]     } [EOL]     this.hourSuffix = suffix; [EOL] } <line_num>: 367,372
public void setMinuteFormatter(NumberFormat formatter) { [EOL]     if (formatter == null) { [EOL]         throw new IllegalArgumentException("Null 'formatter' argument."); [EOL]     } [EOL]     this.minuteFormatter = formatter; [EOL] } <line_num>: 381,386
public String getMinuteSuffix() { [EOL]     return this.minuteSuffix; [EOL] } <line_num>: 395,397
public void setMinuteSuffix(String suffix) { [EOL]     if (suffix == null) { [EOL]         throw new IllegalArgumentException("Null 'suffix' argument."); [EOL]     } [EOL]     this.minuteSuffix = suffix; [EOL] } <line_num>: 406,411
public String getSecondSuffix() { [EOL]     return this.secondSuffix; [EOL] } <line_num>: 420,422
public void setSecondSuffix(String suffix) { [EOL]     if (suffix == null) { [EOL]         throw new IllegalArgumentException("Null 'suffix' argument."); [EOL]     } [EOL]     this.secondSuffix = suffix; [EOL] } <line_num>: 431,436
public void setSecondFormatter(NumberFormat formatter) { [EOL]     if (formatter == null) { [EOL]         throw new IllegalArgumentException("Null 'formatter' argument."); [EOL]     } [EOL]     this.secondFormatter = formatter; [EOL] } <line_num>: 443,448
public StringBuffer format(Date date, StringBuffer toAppendTo, FieldPosition fieldPosition) { [EOL]     long currentMillis = date.getTime(); [EOL]     long elapsed = currentMillis - this.baseMillis; [EOL]     String signPrefix; [EOL]     if (elapsed < 0) { [EOL]         elapsed *= -1L; [EOL]         signPrefix = "-"; [EOL]     } else { [EOL]         signPrefix = this.positivePrefix; [EOL]     } [EOL]     long days = elapsed / MILLISECONDS_IN_ONE_DAY; [EOL]     elapsed = elapsed - (days * MILLISECONDS_IN_ONE_DAY); [EOL]     long hours = elapsed / MILLISECONDS_IN_ONE_HOUR; [EOL]     elapsed = elapsed - (hours * MILLISECONDS_IN_ONE_HOUR); [EOL]     long minutes = elapsed / 60000L; [EOL]     elapsed = elapsed - (minutes * 60000L); [EOL]     double seconds = elapsed / 1000.0; [EOL]     toAppendTo.append(signPrefix); [EOL]     if (days != 0 || this.showZeroDays) { [EOL]         toAppendTo.append(this.dayFormatter.format(days) + getDaySuffix()); [EOL]     } [EOL]     if (hours != 0 || this.showZeroHours) { [EOL]         toAppendTo.append(this.hourFormatter.format(hours) + getHourSuffix()); [EOL]     } [EOL]     toAppendTo.append(this.minuteFormatter.format(minutes) + getMinuteSuffix()); [EOL]     toAppendTo.append(this.secondFormatter.format(seconds) + getSecondSuffix()); [EOL]     return toAppendTo; [EOL] } <line_num>: 460,494
public Date parse(String source, ParsePosition pos) { [EOL]     return null; [EOL] } <line_num>: 504,506
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof RelativeDateFormat)) { [EOL]         return false; [EOL]     } [EOL]     if (!super.equals(obj)) { [EOL]         return false; [EOL]     } [EOL]     RelativeDateFormat that = (RelativeDateFormat) obj; [EOL]     if (this.baseMillis != that.baseMillis) { [EOL]         return false; [EOL]     } [EOL]     if (this.showZeroDays != that.showZeroDays) { [EOL]         return false; [EOL]     } [EOL]     if (this.showZeroHours != that.showZeroHours) { [EOL]         return false; [EOL]     } [EOL]     if (!this.positivePrefix.equals(that.positivePrefix)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.daySuffix.equals(that.daySuffix)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.hourSuffix.equals(that.hourSuffix)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.minuteSuffix.equals(that.minuteSuffix)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.secondSuffix.equals(that.secondSuffix)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.dayFormatter.equals(that.dayFormatter)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.hourFormatter.equals(that.hourFormatter)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.minuteFormatter.equals(that.minuteFormatter)) { [EOL]         return false; [EOL]     } [EOL]     if (!this.secondFormatter.equals(that.secondFormatter)) { [EOL]         return false; [EOL]     } [EOL]     return true; [EOL] } <line_num>: 515,563
public int hashCode() { [EOL]     int result = 193; [EOL]     result = 37 * result + (int) (this.baseMillis ^ (this.baseMillis >>> 32)); [EOL]     result = 37 * result + this.positivePrefix.hashCode(); [EOL]     result = 37 * result + this.daySuffix.hashCode(); [EOL]     result = 37 * result + this.hourSuffix.hashCode(); [EOL]     result = 37 * result + this.minuteSuffix.hashCode(); [EOL]     result = 37 * result + this.secondSuffix.hashCode(); [EOL]     result = 37 * result + this.secondFormatter.hashCode(); [EOL]     return result; [EOL] } <line_num>: 570,581
public Object clone() { [EOL]     RelativeDateFormat clone = (RelativeDateFormat) super.clone(); [EOL]     clone.dayFormatter = (NumberFormat) this.dayFormatter.clone(); [EOL]     clone.secondFormatter = (NumberFormat) this.secondFormatter.clone(); [EOL]     return clone; [EOL] } <line_num>: 588,593
public static void main(String[] args) { [EOL]     GregorianCalendar c0 = new GregorianCalendar(2006, 10, 1, 0, 0, 0); [EOL]     GregorianCalendar c1 = new GregorianCalendar(2006, 10, 1, 11, 37, 43); [EOL]     c1.set(Calendar.MILLISECOND, 123); [EOL]     System.out.println("Default: "); [EOL]     RelativeDateFormat rdf = new RelativeDateFormat(c0.getTimeInMillis()); [EOL]     System.out.println(rdf.format(c1.getTime())); [EOL]     System.out.println(); [EOL]     System.out.println("Hide milliseconds: "); [EOL]     rdf.setSecondFormatter(new DecimalFormat("0")); [EOL]     System.out.println(rdf.format(c1.getTime())); [EOL]     System.out.println(); [EOL]     System.out.println("Show zero day output: "); [EOL]     rdf.setShowZeroDays(true); [EOL]     System.out.println(rdf.format(c1.getTime())); [EOL]     System.out.println(); [EOL]     System.out.println("Alternative suffixes: "); [EOL]     rdf.setShowZeroDays(false); [EOL]     rdf.setDaySuffix(":"); [EOL]     rdf.setHourSuffix(":"); [EOL]     rdf.setMinuteSuffix(":"); [EOL]     rdf.setSecondSuffix(""); [EOL]     System.out.println(rdf.format(c1.getTime())); [EOL]     System.out.println(); [EOL] } <line_num>: 600,628
