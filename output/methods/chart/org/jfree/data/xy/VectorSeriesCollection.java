public VectorSeriesCollection() { [EOL]     this.data = new java.util.ArrayList(); [EOL] } <line_num>: 70,72
public void addSeries(VectorSeries series) { [EOL]     if (series == null) { [EOL]         throw new IllegalArgumentException("Null 'series' argument."); [EOL]     } [EOL]     this.data.add(series); [EOL]     series.addChangeListener(this); [EOL]     fireDatasetChanged(new DatasetChangeInfo()); [EOL] } <line_num>: 80,88
public boolean removeSeries(VectorSeries series) { [EOL]     if (series == null) { [EOL]         throw new IllegalArgumentException("Null 'series' argument."); [EOL]     } [EOL]     boolean removed = this.data.remove(series); [EOL]     if (removed) { [EOL]         series.removeChangeListener(this); [EOL]         fireDatasetChanged(new DatasetChangeInfo()); [EOL]     } [EOL]     return removed; [EOL] } <line_num>: 99,110
public void removeAllSeries() { [EOL]     for (int i = 0; i < this.data.size(); i++) { [EOL]         VectorSeries series = (VectorSeries) this.data.get(i); [EOL]         series.removeChangeListener(this); [EOL]     } [EOL]     this.data.clear(); [EOL]     fireDatasetChanged(new DatasetChangeInfo()); [EOL] } <line_num>: 116,130
public int getSeriesCount() { [EOL]     return this.data.size(); [EOL] } <line_num>: 137,139
public VectorSeries getSeries(int series) { [EOL]     if ((series < 0) || (series >= getSeriesCount())) { [EOL]         throw new IllegalArgumentException("Series index out of bounds"); [EOL]     } [EOL]     return (VectorSeries) this.data.get(series); [EOL] } <line_num>: 151,156
public Comparable getSeriesKey(int series) { [EOL]     return getSeries(series).getKey(); [EOL] } <line_num>: 169,172
public int indexOf(VectorSeries series) { [EOL]     if (series == null) { [EOL]         throw new IllegalArgumentException("Null 'series' argument."); [EOL]     } [EOL]     return this.data.indexOf(series); [EOL] } <line_num>: 182,187
public int getItemCount(int series) { [EOL]     return getSeries(series).getItemCount(); [EOL] } <line_num>: 199,202
public double getXValue(int series, int item) { [EOL]     VectorSeries s = (VectorSeries) this.data.get(series); [EOL]     VectorDataItem di = (VectorDataItem) s.getDataItem(item); [EOL]     return di.getXValue(); [EOL] } <line_num>: 212,216
public Number getX(int series, int item) { [EOL]     return new Double(getXValue(series, item)); [EOL] } <line_num>: 228,230
public double getYValue(int series, int item) { [EOL]     VectorSeries s = (VectorSeries) this.data.get(series); [EOL]     VectorDataItem di = (VectorDataItem) s.getDataItem(item); [EOL]     return di.getYValue(); [EOL] } <line_num>: 240,244
public Number getY(int series, int item) { [EOL]     return new Double(getYValue(series, item)); [EOL] } <line_num>: 256,258
public Vector getVector(int series, int item) { [EOL]     VectorSeries s = (VectorSeries) this.data.get(series); [EOL]     VectorDataItem di = (VectorDataItem) s.getDataItem(item); [EOL]     return di.getVector(); [EOL] } <line_num>: 268,272
public double getVectorXValue(int series, int item) { [EOL]     VectorSeries s = (VectorSeries) this.data.get(series); [EOL]     VectorDataItem di = (VectorDataItem) s.getDataItem(item); [EOL]     return di.getVectorX(); [EOL] } <line_num>: 282,286
public double getVectorYValue(int series, int item) { [EOL]     VectorSeries s = (VectorSeries) this.data.get(series); [EOL]     VectorDataItem di = (VectorDataItem) s.getDataItem(item); [EOL]     return di.getVectorY(); [EOL] } <line_num>: 296,300
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof VectorSeriesCollection)) { [EOL]         return false; [EOL]     } [EOL]     VectorSeriesCollection that = (VectorSeriesCollection) obj; [EOL]     return ObjectUtilities.equal(this.data, that.data); [EOL] } <line_num>: 309,318
public Object clone() throws CloneNotSupportedException { [EOL]     VectorSeriesCollection clone = (VectorSeriesCollection) super.clone(); [EOL]     clone.data = (List) ObjectUtilities.deepClone(this.data); [EOL]     return clone; [EOL] } <line_num>: 327,332
