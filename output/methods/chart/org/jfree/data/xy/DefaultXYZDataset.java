public DefaultXYZDataset() { [EOL]     this.seriesKeys = new java.util.ArrayList(); [EOL]     this.seriesList = new java.util.ArrayList(); [EOL] } <line_num>: 82,85
public int getSeriesCount() { [EOL]     return this.seriesList.size(); [EOL] } <line_num>: 92,94
public Comparable getSeriesKey(int series) { [EOL]     if ((series < 0) || (series >= getSeriesCount())) { [EOL]         throw new IllegalArgumentException("Series index out of bounds"); [EOL]     } [EOL]     return (Comparable) this.seriesKeys.get(series); [EOL] } <line_num>: 107,112
public int indexOf(Comparable seriesKey) { [EOL]     return this.seriesKeys.indexOf(seriesKey); [EOL] } <line_num>: 122,124
public DomainOrder getDomainOrder() { [EOL]     return DomainOrder.NONE; [EOL] } <line_num>: 133,135
public int getItemCount(int series) { [EOL]     if ((series < 0) || (series >= getSeriesCount())) { [EOL]         throw new IllegalArgumentException("Series index out of bounds"); [EOL]     } [EOL]     double[][] seriesArray = (double[][]) this.seriesList.get(series); [EOL]     return seriesArray[0].length; [EOL] } <line_num>: 148,154
public double getXValue(int series, int item) { [EOL]     double[][] seriesData = (double[][]) this.seriesList.get(series); [EOL]     return seriesData[0][item]; [EOL] } <line_num>: 173,176
public Number getX(int series, int item) { [EOL]     return new Double(getXValue(series, item)); [EOL] } <line_num>: 195,197
public double getYValue(int series, int item) { [EOL]     double[][] seriesData = (double[][]) this.seriesList.get(series); [EOL]     return seriesData[1][item]; [EOL] } <line_num>: 216,219
public Number getY(int series, int item) { [EOL]     return new Double(getYValue(series, item)); [EOL] } <line_num>: 238,240
public double getZValue(int series, int item) { [EOL]     double[][] seriesData = (double[][]) this.seriesList.get(series); [EOL]     return seriesData[2][item]; [EOL] } <line_num>: 259,262
public Number getZ(int series, int item) { [EOL]     return new Double(getZValue(series, item)); [EOL] } <line_num>: 281,283
public void addSeries(Comparable seriesKey, double[][] data) { [EOL]     if (seriesKey == null) { [EOL]         throw new IllegalArgumentException("The 'seriesKey' cannot be null."); [EOL]     } [EOL]     if (data == null) { [EOL]         throw new IllegalArgumentException("The 'data' is null."); [EOL]     } [EOL]     if (data.length != 3) { [EOL]         throw new IllegalArgumentException("The 'data' array must have length == 3."); [EOL]     } [EOL]     if (data[0].length != data[1].length || data[0].length != data[2].length) { [EOL]         throw new IllegalArgumentException("The 'data' array must contain " + "three arrays all having the same length."); [EOL]     } [EOL]     int seriesIndex = indexOf(seriesKey); [EOL]     if (seriesIndex == -1) { [EOL]         this.seriesKeys.add(seriesKey); [EOL]         this.seriesList.add(data); [EOL]     } else { [EOL]         this.seriesList.remove(seriesIndex); [EOL]         this.seriesList.add(seriesIndex, data); [EOL]     } [EOL]     fireDatasetChanged(new DatasetChangeInfo()); [EOL] } <line_num>: 296,324
public void removeSeries(Comparable seriesKey) { [EOL]     int seriesIndex = indexOf(seriesKey); [EOL]     if (seriesIndex >= 0) { [EOL]         this.seriesKeys.remove(seriesIndex); [EOL]         this.seriesList.remove(seriesIndex); [EOL]         fireDatasetChanged(new DatasetChangeInfo()); [EOL]     } [EOL] } <line_num>: 333,341
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof DefaultXYZDataset)) { [EOL]         return false; [EOL]     } [EOL]     DefaultXYZDataset that = (DefaultXYZDataset) obj; [EOL]     if (!this.seriesKeys.equals(that.seriesKeys)) { [EOL]         return false; [EOL]     } [EOL]     for (int i = 0; i < this.seriesList.size(); i++) { [EOL]         double[][] d1 = (double[][]) this.seriesList.get(i); [EOL]         double[][] d2 = (double[][]) that.seriesList.get(i); [EOL]         double[] d1x = d1[0]; [EOL]         double[] d2x = d2[0]; [EOL]         if (!Arrays.equals(d1x, d2x)) { [EOL]             return false; [EOL]         } [EOL]         double[] d1y = d1[1]; [EOL]         double[] d2y = d2[1]; [EOL]         if (!Arrays.equals(d1y, d2y)) { [EOL]             return false; [EOL]         } [EOL]         double[] d1z = d1[2]; [EOL]         double[] d2z = d2[2]; [EOL]         if (!Arrays.equals(d1z, d2z)) { [EOL]             return false; [EOL]         } [EOL]     } [EOL]     return true; [EOL] } <line_num>: 358,389
public int hashCode() { [EOL]     int result; [EOL]     result = this.seriesKeys.hashCode(); [EOL]     result = 29 * result + this.seriesList.hashCode(); [EOL]     return result; [EOL] } <line_num>: 396,401
public Object clone() throws CloneNotSupportedException { [EOL]     DefaultXYZDataset clone = (DefaultXYZDataset) super.clone(); [EOL]     clone.seriesKeys = new java.util.ArrayList(this.seriesKeys); [EOL]     clone.seriesList = new ArrayList(this.seriesList.size()); [EOL]     for (int i = 0; i < this.seriesList.size(); i++) { [EOL]         double[][] data = (double[][]) this.seriesList.get(i); [EOL]         double[] x = data[0]; [EOL]         double[] y = data[1]; [EOL]         double[] z = data[2]; [EOL]         double[] xx = new double[x.length]; [EOL]         double[] yy = new double[y.length]; [EOL]         double[] zz = new double[z.length]; [EOL]         System.arraycopy(x, 0, xx, 0, x.length); [EOL]         System.arraycopy(y, 0, yy, 0, y.length); [EOL]         System.arraycopy(z, 0, zz, 0, z.length); [EOL]         clone.seriesList.add(i, new double[][] { xx, yy, zz }); [EOL]     } [EOL]     return clone; [EOL] } <line_num>: 412,430
