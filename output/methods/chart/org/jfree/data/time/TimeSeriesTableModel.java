public TimeSeriesTableModel() { [EOL]     this(new TimeSeries("Untitled")); [EOL] } <line_num>: 73,75
public TimeSeriesTableModel(TimeSeries series) { [EOL]     this(series, false); [EOL] } <line_num>: 82,84
public TimeSeriesTableModel(TimeSeries series, boolean editable) { [EOL]     this.series = series; [EOL]     this.series.addChangeListener(this); [EOL]     this.editable = editable; [EOL] } <line_num>: 92,96
public int getColumnCount() { [EOL]     return 2; [EOL] } <line_num>: 104,106
public Class getColumnClass(int column) { [EOL]     if (column == 0) { [EOL]         return String.class; [EOL]     } else { [EOL]         if (column == 1) { [EOL]             return Double.class; [EOL]         } else { [EOL]             return null; [EOL]         } [EOL]     } [EOL] } <line_num>: 115,127
public String getColumnName(int column) { [EOL]     if (column == 0) { [EOL]         return "Period:"; [EOL]     } else { [EOL]         if (column == 1) { [EOL]             return "Value:"; [EOL]         } else { [EOL]             return null; [EOL]         } [EOL]     } [EOL] } <line_num>: 136,150
public int getRowCount() { [EOL]     return this.series.getItemCount(); [EOL] } <line_num>: 157,159
public Object getValueAt(int row, int column) { [EOL]     if (row < this.series.getItemCount()) { [EOL]         if (column == 0) { [EOL]             return this.series.getTimePeriod(row); [EOL]         } else { [EOL]             if (column == 1) { [EOL]                 return this.series.getValue(row); [EOL]             } else { [EOL]                 return null; [EOL]             } [EOL]         } [EOL]     } else { [EOL]         if (column == 0) { [EOL]             return this.newTimePeriod; [EOL]         } else { [EOL]             if (column == 1) { [EOL]                 return this.newValue; [EOL]             } else { [EOL]                 return null; [EOL]             } [EOL]         } [EOL]     } [EOL] } <line_num>: 169,198
public boolean isCellEditable(int row, int column) { [EOL]     if (this.editable) { [EOL]         if ((column == 0) || (column == 1)) { [EOL]             return true; [EOL]         } else { [EOL]             return false; [EOL]         } [EOL]     } else { [EOL]         return false; [EOL]     } [EOL] } <line_num>: 208,220
public void setValueAt(Object value, int row, int column) { [EOL]     if (row < this.series.getItemCount()) { [EOL]         if (column == 1) { [EOL]             try { [EOL]                 Double v = Double.valueOf(value.toString()); [EOL]                 this.series.update(row, v); [EOL]             } catch (NumberFormatException nfe) { [EOL]                 System.err.println("Number format exception"); [EOL]             } [EOL]         } [EOL]     } else { [EOL]         if (column == 0) { [EOL]             this.newTimePeriod = null; [EOL]         } else if (column == 1) { [EOL]             this.newValue = Double.valueOf(value.toString()); [EOL]         } [EOL]     } [EOL] } <line_num>: 229,254
public void seriesChanged(SeriesChangeEvent event) { [EOL]     fireTableDataChanged(); [EOL] } <line_num>: 262,264
