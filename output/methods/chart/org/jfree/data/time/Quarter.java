public Quarter() { [EOL]     this(new Date()); [EOL] } <line_num>: 113,115
public Quarter(int quarter, int year) { [EOL]     if ((quarter < FIRST_QUARTER) || (quarter > LAST_QUARTER)) { [EOL]         throw new IllegalArgumentException("Quarter outside valid range."); [EOL]     } [EOL]     this.year = (short) year; [EOL]     this.quarter = (byte) quarter; [EOL]     peg(Calendar.getInstance()); [EOL] } <line_num>: 123,130
public Quarter(int quarter, Year year) { [EOL]     if ((quarter < FIRST_QUARTER) || (quarter > LAST_QUARTER)) { [EOL]         throw new IllegalArgumentException("Quarter outside valid range."); [EOL]     } [EOL]     this.year = (short) year.getYear(); [EOL]     this.quarter = (byte) quarter; [EOL]     peg(Calendar.getInstance()); [EOL] } <line_num>: 138,145
public Quarter(Date time) { [EOL]     this(time, TimeZone.getDefault()); [EOL] } <line_num>: 155,157
public Quarter(Date time, TimeZone zone) { [EOL]     this(time, zone, Locale.getDefault()); [EOL] } <line_num>: 168,170
public Quarter(Date time, TimeZone zone, Locale locale) { [EOL]     Calendar calendar = Calendar.getInstance(zone, locale); [EOL]     calendar.setTime(time); [EOL]     int month = calendar.get(Calendar.MONTH) + 1; [EOL]     this.quarter = (byte) SerialDate.monthCodeToQuarter(month); [EOL]     this.year = (short) calendar.get(Calendar.YEAR); [EOL]     peg(calendar); [EOL] } <line_num>: 182,189
public int getQuarter() { [EOL]     return this.quarter; [EOL] } <line_num>: 196,198
public Year getYear() { [EOL]     return new Year(this.year); [EOL] } <line_num>: 205,207
public int getYearValue() { [EOL]     return this.year; [EOL] } <line_num>: 216,218
public long getFirstMillisecond() { [EOL]     return this.firstMillisecond; [EOL] } <line_num>: 230,232
public long getLastMillisecond() { [EOL]     return this.lastMillisecond; [EOL] } <line_num>: 244,246
public void peg(Calendar calendar) { [EOL]     this.firstMillisecond = getFirstMillisecond(calendar); [EOL]     this.lastMillisecond = getLastMillisecond(calendar); [EOL] } <line_num>: 256,259
public RegularTimePeriod previous() { [EOL]     Quarter result; [EOL]     if (this.quarter > FIRST_QUARTER) { [EOL]         result = new Quarter(this.quarter - 1, this.year); [EOL]     } else { [EOL]         if (this.year > 1900) { [EOL]             result = new Quarter(LAST_QUARTER, this.year - 1); [EOL]         } else { [EOL]             result = null; [EOL]         } [EOL]     } [EOL]     return result; [EOL] } <line_num>: 267,281
public RegularTimePeriod next() { [EOL]     Quarter result; [EOL]     if (this.quarter < LAST_QUARTER) { [EOL]         result = new Quarter(this.quarter + 1, this.year); [EOL]     } else { [EOL]         if (this.year < 9999) { [EOL]             result = new Quarter(FIRST_QUARTER, this.year + 1); [EOL]         } else { [EOL]             result = null; [EOL]         } [EOL]     } [EOL]     return result; [EOL] } <line_num>: 288,302
public long getSerialIndex() { [EOL]     return this.year * 4L + this.quarter; [EOL] } <line_num>: 309,311
public boolean equals(Object obj) { [EOL]     if (obj != null) { [EOL]         if (obj instanceof Quarter) { [EOL]             Quarter target = (Quarter) obj; [EOL]             return (this.quarter == target.getQuarter() && (this.year == target.getYearValue())); [EOL]         } else { [EOL]             return false; [EOL]         } [EOL]     } else { [EOL]         return false; [EOL]     } [EOL] } <line_num>: 324,340
public int hashCode() { [EOL]     int result = 17; [EOL]     result = 37 * result + this.quarter; [EOL]     result = 37 * result + this.year; [EOL]     return result; [EOL] } <line_num>: 351,356
public int compareTo(Object o1) { [EOL]     int result; [EOL]     if (o1 instanceof Quarter) { [EOL]         Quarter q = (Quarter) o1; [EOL]         result = this.year - q.getYearValue(); [EOL]         if (result == 0) { [EOL]             result = this.quarter - q.getQuarter(); [EOL]         } [EOL]     } else if (o1 instanceof RegularTimePeriod) { [EOL]         result = 0; [EOL]     } else { [EOL]         result = 1; [EOL]     } [EOL]     return result; [EOL] } <line_num>: 368,398
public String toString() { [EOL]     return "Q" + this.quarter + "/" + this.year; [EOL] } <line_num>: 405,407
public long getFirstMillisecond(Calendar calendar) { [EOL]     int month = Quarter.FIRST_MONTH_IN_QUARTER[this.quarter]; [EOL]     calendar.set(this.year, month - 1, 1, 0, 0, 0); [EOL]     calendar.set(Calendar.MILLISECOND, 0); [EOL]     return calendar.getTime().getTime(); [EOL] } <line_num>: 420,427
public long getLastMillisecond(Calendar calendar) { [EOL]     int month = Quarter.LAST_MONTH_IN_QUARTER[this.quarter]; [EOL]     int eom = SerialDate.lastDayOfMonth(month, this.year); [EOL]     calendar.set(this.year, month - 1, eom, 23, 59, 59); [EOL]     calendar.set(Calendar.MILLISECOND, 999); [EOL]     return calendar.getTime().getTime(); [EOL] } <line_num>: 440,448
public static Quarter parseQuarter(String s) { [EOL]     int i = s.indexOf("Q"); [EOL]     if (i == -1) { [EOL]         throw new TimePeriodFormatException("Missing Q."); [EOL]     } [EOL]     if (i == s.length() - 1) { [EOL]         throw new TimePeriodFormatException("Q found at end of string."); [EOL]     } [EOL]     String qstr = s.substring(i + 1, i + 2); [EOL]     int quarter = Integer.parseInt(qstr); [EOL]     String remaining = s.substring(0, i) + s.substring(i + 2, s.length()); [EOL]     remaining = remaining.replace('/', ' '); [EOL]     remaining = remaining.replace(',', ' '); [EOL]     remaining = remaining.replace('-', ' '); [EOL]     Year year = Year.parseYear(remaining.trim()); [EOL]     Quarter result = new Quarter(quarter, year); [EOL]     return result; [EOL] } <line_num>: 459,486
