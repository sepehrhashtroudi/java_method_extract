public TaskSeries(String name) { [EOL]     super(name); [EOL]     this.tasks = new java.util.ArrayList(); [EOL] } <line_num>: 70,73
public void add(Task task) { [EOL]     if (task == null) { [EOL]         throw new IllegalArgumentException("Null 'task' argument."); [EOL]     } [EOL]     this.tasks.add(task); [EOL]     fireSeriesChanged(); [EOL] } <line_num>: 82,88
public void remove(Task task) { [EOL]     this.tasks.remove(task); [EOL]     fireSeriesChanged(); [EOL] } <line_num>: 97,100
public void removeAll() { [EOL]     this.tasks.clear(); [EOL]     fireSeriesChanged(); [EOL] } <line_num>: 107,110
public int getItemCount() { [EOL]     return this.tasks.size(); [EOL] } <line_num>: 117,119
public Task get(int index) { [EOL]     return (Task) this.tasks.get(index); [EOL] } <line_num>: 128,130
public Task get(String description) { [EOL]     Task result = null; [EOL]     int count = this.tasks.size(); [EOL]     for (int i = 0; i < count; i++) { [EOL]         Task t = (Task) this.tasks.get(i); [EOL]         if (t.getDescription().equals(description)) { [EOL]             result = t; [EOL]             break; [EOL]         } [EOL]     } [EOL]     return result; [EOL] } <line_num>: 139,150
public List getTasks() { [EOL]     return Collections.unmodifiableList(this.tasks); [EOL] } <line_num>: 157,159
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof TaskSeries)) { [EOL]         return false; [EOL]     } [EOL]     if (!super.equals(obj)) { [EOL]         return false; [EOL]     } [EOL]     TaskSeries that = (TaskSeries) obj; [EOL]     if (!this.tasks.equals(that.tasks)) { [EOL]         return false; [EOL]     } [EOL]     return true; [EOL] } <line_num>: 168,183
public Object clone() throws CloneNotSupportedException { [EOL]     TaskSeries clone = (TaskSeries) super.clone(); [EOL]     clone.tasks = (List) ObjectUtilities.deepClone(this.tasks); [EOL]     return clone; [EOL] } <line_num>: 193,197
