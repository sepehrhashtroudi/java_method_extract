public CategoryToPieDataset(CategoryDataset source, TableOrder extract, int index) { [EOL]     if (extract == null) { [EOL]         throw new IllegalArgumentException("Null 'extract' argument."); [EOL]     } [EOL]     this.source = source; [EOL]     if (this.source != null) { [EOL]         this.source.addChangeListener(this); [EOL]     } [EOL]     this.extract = extract; [EOL]     this.index = index; [EOL] } <line_num>: 94,106
public CategoryDataset getUnderlyingDataset() { [EOL]     return this.source; [EOL] } <line_num>: 115,117
public TableOrder getExtractType() { [EOL]     return this.extract; [EOL] } <line_num>: 127,129
public int getExtractIndex() { [EOL]     return this.index; [EOL] } <line_num>: 138,140
public int getItemCount() { [EOL]     int result = 0; [EOL]     if (this.source != null) { [EOL]         if (this.extract == TableOrder.BY_ROW) { [EOL]             result = this.source.getColumnCount(); [EOL]         } else if (this.extract == TableOrder.BY_COLUMN) { [EOL]             result = this.source.getRowCount(); [EOL]         } [EOL]     } [EOL]     return result; [EOL] } <line_num>: 148,159
public Number getValue(int item) { [EOL]     Number result = null; [EOL]     if (item < 0 || item >= getItemCount()) { [EOL]         throw new IndexOutOfBoundsException("The 'item' index is out of bounds."); [EOL]     } [EOL]     if (this.extract == TableOrder.BY_ROW) { [EOL]         result = this.source.getValue(this.index, item); [EOL]     } else if (this.extract == TableOrder.BY_COLUMN) { [EOL]         result = this.source.getValue(item, this.index); [EOL]     } [EOL]     return result; [EOL] } <line_num>: 171,185
public Comparable getKey(int index) { [EOL]     Comparable result = null; [EOL]     if (index < 0 || index >= getItemCount()) { [EOL]         throw new IndexOutOfBoundsException("Invalid 'index': " + index); [EOL]     } [EOL]     if (this.extract == TableOrder.BY_ROW) { [EOL]         result = this.source.getColumnKey(index); [EOL]     } else if (this.extract == TableOrder.BY_COLUMN) { [EOL]         result = this.source.getRowKey(index); [EOL]     } [EOL]     return result; [EOL] } <line_num>: 198,211
public int getIndex(Comparable key) { [EOL]     int result = -1; [EOL]     if (this.source != null) { [EOL]         if (this.extract == TableOrder.BY_ROW) { [EOL]             result = this.source.getColumnIndex(key); [EOL]         } else if (this.extract == TableOrder.BY_COLUMN) { [EOL]             result = this.source.getRowIndex(key); [EOL]         } [EOL]     } [EOL]     return result; [EOL] } <line_num>: 221,232
public List getKeys() { [EOL]     List result = Collections.EMPTY_LIST; [EOL]     if (this.source != null) { [EOL]         if (this.extract == TableOrder.BY_ROW) { [EOL]             result = this.source.getColumnKeys(); [EOL]         } else if (this.extract == TableOrder.BY_COLUMN) { [EOL]             result = this.source.getRowKeys(); [EOL]         } [EOL]     } [EOL]     return result; [EOL] } <line_num>: 242,253
public Number getValue(Comparable key) { [EOL]     Number result = null; [EOL]     int keyIndex = getIndex(key); [EOL]     if (keyIndex != -1) { [EOL]         if (this.extract == TableOrder.BY_ROW) { [EOL]             result = this.source.getValue(this.index, keyIndex); [EOL]         } else if (this.extract == TableOrder.BY_COLUMN) { [EOL]             result = this.source.getValue(keyIndex, this.index); [EOL]         } [EOL]     } [EOL]     return result; [EOL] } <line_num>: 264,276
public void datasetChanged(DatasetChangeEvent event) { [EOL]     fireDatasetChanged(new DatasetChangeInfo()); [EOL] } <line_num>: 285,288
public boolean equals(Object obj) { [EOL]     if (obj == this) { [EOL]         return true; [EOL]     } [EOL]     if (!(obj instanceof PieDataset)) { [EOL]         return false; [EOL]     } [EOL]     PieDataset that = (PieDataset) obj; [EOL]     int count = getItemCount(); [EOL]     if (that.getItemCount() != count) { [EOL]         return false; [EOL]     } [EOL]     for (int i = 0; i < count; i++) { [EOL]         Comparable k1 = getKey(i); [EOL]         Comparable k2 = that.getKey(i); [EOL]         if (!k1.equals(k2)) { [EOL]             return false; [EOL]         } [EOL]         Number v1 = getValue(i); [EOL]         Number v2 = that.getValue(i); [EOL]         if (v1 == null) { [EOL]             if (v2 != null) { [EOL]                 return false; [EOL]             } [EOL]         } else { [EOL]             if (!v1.equals(v2)) { [EOL]                 return false; [EOL]             } [EOL]         } [EOL]     } [EOL]     return true; [EOL] } <line_num>: 299,332
