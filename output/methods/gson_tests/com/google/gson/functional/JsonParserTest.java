@Override [EOL] protected void setUp() throws Exception { [EOL]     super.setUp(); [EOL]     gson = new Gson(); [EOL] } <line_num>: 41,45
public void testDeserializingCustomTree() { [EOL]     JsonObject obj = new JsonObject(); [EOL]     obj.addProperty("stringValue", "foo"); [EOL]     obj.addProperty("intValue", 11); [EOL]     BagOfPrimitives target = gson.fromJson(obj, BagOfPrimitives.class); [EOL]     assertEquals(11, target.intValue); [EOL]     assertEquals("foo", target.stringValue); [EOL] } <line_num>: 47,54
public void testBadTypeForDeserializingCustomTree() { [EOL]     JsonObject obj = new JsonObject(); [EOL]     obj.addProperty("stringValue", "foo"); [EOL]     obj.addProperty("intValue", 11); [EOL]     JsonArray array = new JsonArray(); [EOL]     array.add(obj); [EOL]     try { [EOL]         gson.fromJson(array, BagOfPrimitives.class); [EOL]         fail("BagOfPrimitives is not an array"); [EOL]     } catch (JsonParseException expected) { [EOL]     } [EOL] } <line_num>: 56,66
public void testBadFieldTypeForCustomDeserializerCustomTree() { [EOL]     JsonArray array = new JsonArray(); [EOL]     array.add(new JsonPrimitive("blah")); [EOL]     JsonObject obj = new JsonObject(); [EOL]     obj.addProperty("stringValue", "foo"); [EOL]     obj.addProperty("intValue", 11); [EOL]     obj.add("longValue", array); [EOL]     try { [EOL]         gson.fromJson(obj, BagOfPrimitives.class); [EOL]         fail("BagOfPrimitives is not an array"); [EOL]     } catch (JsonParseException expected) { [EOL]     } [EOL] } <line_num>: 68,80
public void testBadFieldTypeForDeserializingCustomTree() { [EOL]     JsonArray array = new JsonArray(); [EOL]     array.add(new JsonPrimitive("blah")); [EOL]     JsonObject primitive1 = new JsonObject(); [EOL]     primitive1.addProperty("string", "foo"); [EOL]     primitive1.addProperty("intValue", 11); [EOL]     JsonObject obj = new JsonObject(); [EOL]     obj.add("primitive1", primitive1); [EOL]     obj.add("primitive2", array); [EOL]     try { [EOL]         gson.fromJson(obj, Nested.class); [EOL]         fail("Nested has field BagOfPrimitives which is not an array"); [EOL]     } catch (JsonParseException expected) { [EOL]     } [EOL] } <line_num>: 82,97
public void testChangingCustomTreeAndDeserializing() { [EOL]     StringReader json = new StringReader("{'stringValue':'no message','intValue':10,'longValue':20}"); [EOL]     JsonObject obj = (JsonObject) new JsonParser().parse(json); [EOL]     obj.remove("stringValue"); [EOL]     obj.addProperty("stringValue", "fooBar"); [EOL]     BagOfPrimitives target = gson.fromJson(obj, BagOfPrimitives.class); [EOL]     assertEquals(10, target.intValue); [EOL]     assertEquals(20, target.longValue); [EOL]     assertEquals("fooBar", target.stringValue); [EOL] } <line_num>: 99,109
