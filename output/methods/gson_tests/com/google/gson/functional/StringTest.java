@Override [EOL] protected void setUp() throws Exception { [EOL]     super.setUp(); [EOL]     gson = new Gson(); [EOL] } <line_num>: 16,20
public void testStringValueSerialization() throws Exception { [EOL]     String value = "someRandomStringValue"; [EOL]     assertEquals('"' + value + '"', gson.toJson(value)); [EOL] } <line_num>: 22,25
public void testStringValueDeserialization() throws Exception { [EOL]     String value = "someRandomStringValue"; [EOL]     String actual = gson.fromJson("\"" + value + "\"", String.class); [EOL]     assertEquals(value, actual); [EOL] } <line_num>: 27,31
public void testSingleQuoteInStringSerialization() throws Exception { [EOL]     String valueWithQuotes = "beforeQuote'afterQuote"; [EOL]     String jsonRepresentation = gson.toJson(valueWithQuotes); [EOL]     assertEquals(valueWithQuotes, gson.fromJson(jsonRepresentation, String.class)); [EOL] } <line_num>: 33,37
public void testEscapedCtrlNInStringSerialization() throws Exception { [EOL]     String value = "a\nb"; [EOL]     String json = gson.toJson(value); [EOL]     assertEquals("\"a\\nb\"", json); [EOL] } <line_num>: 39,43
public void testEscapedCtrlNInStringDeserialization() throws Exception { [EOL]     String json = "'a\\nb'"; [EOL]     String actual = gson.fromJson(json, String.class); [EOL]     assertEquals("a\nb", actual); [EOL] } <line_num>: 45,49
public void testEscapedCtrlRInStringSerialization() throws Exception { [EOL]     String value = "a\rb"; [EOL]     String json = gson.toJson(value); [EOL]     assertEquals("\"a\\rb\"", json); [EOL] } <line_num>: 51,55
public void testEscapedCtrlRInStringDeserialization() throws Exception { [EOL]     String json = "'a\\rb'"; [EOL]     String actual = gson.fromJson(json, String.class); [EOL]     assertEquals("a\rb", actual); [EOL] } <line_num>: 57,61
public void testEscapedBackslashInStringSerialization() throws Exception { [EOL]     String value = "a\\b"; [EOL]     String json = gson.toJson(value); [EOL]     assertEquals("\"a\\\\b\"", json); [EOL] } <line_num>: 63,67
public void testEscapedBackslashInStringDeserialization() throws Exception { [EOL]     String actual = gson.fromJson("'a\\\\b'", String.class); [EOL]     assertEquals("a\\b", actual); [EOL] } <line_num>: 69,72
public void testSingleQuoteInStringDeserialization() throws Exception { [EOL]     String value = "beforeQuote'afterQuote"; [EOL]     String actual = gson.fromJson("\"" + value + "\"", String.class); [EOL]     assertEquals(value, actual); [EOL] } <line_num>: 74,78
public void testEscapingQuotesInStringSerialization() throws Exception { [EOL]     String valueWithQuotes = "beforeQuote\"afterQuote"; [EOL]     String jsonRepresentation = gson.toJson(valueWithQuotes); [EOL]     String target = gson.fromJson(jsonRepresentation, String.class); [EOL]     assertEquals(valueWithQuotes, target); [EOL] } <line_num>: 80,85
public void testEscapingQuotesInStringDeserialization() throws Exception { [EOL]     String value = "beforeQuote\\\"afterQuote"; [EOL]     String actual = gson.fromJson("\"" + value + "\"", String.class); [EOL]     String expected = "beforeQuote\"afterQuote"; [EOL]     assertEquals(expected, actual); [EOL] } <line_num>: 87,92
public void testStringValueAsSingleElementArraySerialization() throws Exception { [EOL]     String[] target = { "abc" }; [EOL]     assertEquals("[\"abc\"]", gson.toJson(target)); [EOL]     assertEquals("[\"abc\"]", gson.toJson(target, String[].class)); [EOL] } <line_num>: 94,98
public void testStringValueAsSingleElementArrayDeserialization() throws Exception { [EOL]     String value = "someRandomStringValue"; [EOL]     String actual = gson.fromJson("[\"" + value + "\"]", String.class); [EOL]     assertEquals(value, actual); [EOL] } <line_num>: 100,104
public void testStringWithEscapedSlashDeserialization() { [EOL]     String value = "/"; [EOL]     String json = "'\\/'"; [EOL]     String actual = gson.fromJson(json, String.class); [EOL]     assertEquals(value, actual); [EOL] } <line_num>: 106,111
public void testAssignmentCharSerialization() { [EOL]     String value = "abc="; [EOL]     String json = gson.toJson(value); [EOL]     assertEquals("\"abc\\u003d\"", json); [EOL] } <line_num>: 116,120
public void testAssignmentCharDeserialization() { [EOL]     String json = "\"abc=\""; [EOL]     String value = gson.fromJson(json, String.class); [EOL]     assertEquals("abc=", value); [EOL]     json = "'abc\u003d'"; [EOL]     value = gson.fromJson(json, String.class); [EOL]     assertEquals("abc=", value); [EOL] } <line_num>: 125,133
public void testJavascriptKeywordsInStringSerialization() { [EOL]     String value = "null true false function"; [EOL]     String json = gson.toJson(value); [EOL]     assertEquals("\"" + value + "\"", json); [EOL] } <line_num>: 135,139
public void testJavascriptKeywordsInStringDeserialization() { [EOL]     String json = "'null true false function'"; [EOL]     String value = gson.fromJson(json, String.class); [EOL]     assertEquals(json.substring(1, json.length() - 1), value); [EOL] } <line_num>: 141,145
