@Override [EOL] protected void setUp() throws Exception { [EOL]     super.setUp(); [EOL]     gsonBuilder = new GsonBuilder().serializeNulls(); [EOL] } <line_num>: 45,49
public void testTopLevelNullObjectSerialization() { [EOL]     Gson gson = gsonBuilder.create(); [EOL]     String actual = gson.toJson(null); [EOL]     assertEquals("null", actual); [EOL]     actual = gson.toJson(null, String.class); [EOL]     assertEquals("null", actual); [EOL] } <line_num>: 51,58
public void testTopLevelNullObjectDeserialization() throws Exception { [EOL]     Gson gson = gsonBuilder.create(); [EOL]     String actual = gson.fromJson("null", String.class); [EOL]     assertNull(actual); [EOL] } <line_num>: 60,64
public void testExplicitSerializationOfNulls() { [EOL]     Gson gson = gsonBuilder.create(); [EOL]     ClassWithObjects target = new ClassWithObjects(null); [EOL]     String actual = gson.toJson(target); [EOL]     String expected = "{\"bag\":null}"; [EOL]     assertEquals(expected, actual); [EOL] } <line_num>: 66,72
public void testExplicitDeserializationOfNulls() throws Exception { [EOL]     Gson gson = gsonBuilder.create(); [EOL]     ClassWithObjects target = gson.fromJson("{\"bag\":null}", ClassWithObjects.class); [EOL]     assertNull(target.bag); [EOL] } <line_num>: 74,78
public void testExplicitSerializationOfNullArrayMembers() { [EOL]     Gson gson = gsonBuilder.create(); [EOL]     ClassWithMembers target = new ClassWithMembers(); [EOL]     String json = gson.toJson(target); [EOL]     assertTrue(json.contains("\"array\":null")); [EOL] } <line_num>: 80,85
public void testNullWrappedPrimitiveMemberSerialization() { [EOL]     Gson gson = gsonBuilder.serializeNulls().create(); [EOL]     ClassWithNullWrappedPrimitive target = new ClassWithNullWrappedPrimitive(); [EOL]     String json = gson.toJson(target); [EOL]     assertTrue(json.contains("\"value\":null")); [EOL] } <line_num>: 90,95
public void testNullWrappedPrimitiveMemberDeserialization() { [EOL]     Gson gson = gsonBuilder.create(); [EOL]     String json = "{'value':null}"; [EOL]     ClassWithNullWrappedPrimitive target = gson.fromJson(json, ClassWithNullWrappedPrimitive.class); [EOL]     assertNull(target.value); [EOL] } <line_num>: 100,105
public void testExplicitSerializationOfNullCollectionMembers() { [EOL]     Gson gson = gsonBuilder.create(); [EOL]     ClassWithMembers target = new ClassWithMembers(); [EOL]     String json = gson.toJson(target); [EOL]     assertTrue(json.contains("\"col\":null")); [EOL] } <line_num>: 107,112
public void testExplicitSerializationOfNullStringMembers() { [EOL]     Gson gson = gsonBuilder.create(); [EOL]     ClassWithMembers target = new ClassWithMembers(); [EOL]     String json = gson.toJson(target); [EOL]     assertTrue(json.contains("\"str\":null")); [EOL] } <line_num>: 114,119
public void testCustomSerializationOfNulls() { [EOL]     gsonBuilder.registerTypeAdapter(ClassWithObjects.class, new ClassWithObjectsSerializer()); [EOL]     Gson gson = gsonBuilder.create(); [EOL]     ClassWithObjects target = new ClassWithObjects(new BagOfPrimitives()); [EOL]     String actual = gson.toJson(target); [EOL]     String expected = "{\"bag\":null}"; [EOL]     assertEquals(expected, actual); [EOL] } <line_num>: 121,128
public void testPrintPrintingObjectWithNulls() throws Exception { [EOL]     gsonBuilder = new GsonBuilder(); [EOL]     Gson gson = gsonBuilder.create(); [EOL]     String result = gson.toJson(new ClassWithMembers()); [EOL]     assertEquals("{}", result); [EOL]     gson = gsonBuilder.serializeNulls().create(); [EOL]     result = gson.toJson(new ClassWithMembers()); [EOL]     assertTrue(result.contains("\"str\":null")); [EOL] } <line_num>: 130,139
public void testPrintPrintingArraysWithNulls() throws Exception { [EOL]     gsonBuilder = new GsonBuilder(); [EOL]     Gson gson = gsonBuilder.create(); [EOL]     String result = gson.toJson(new String[] { "1", null, "3" }); [EOL]     assertEquals("[\"1\",null,\"3\"]", result); [EOL]     gson = gsonBuilder.serializeNulls().create(); [EOL]     result = gson.toJson(new String[] { "1", null, "3" }); [EOL]     assertEquals("[\"1\",null,\"3\"]", result); [EOL] } <line_num>: 141,150
public JsonElement serialize(ClassWithObjects src, Type typeOfSrc, JsonSerializationContext context) { [EOL]     JsonObject obj = new JsonObject(); [EOL]     obj.add("bag", new JsonNull()); [EOL]     return obj; [EOL] } <line_num>: 164,169
public void testExplicitNullSetsFieldToNullDuringDeserialization() { [EOL]     Gson gson = new Gson(); [EOL]     String json = "{value:null}"; [EOL]     ObjectWithField obj = gson.fromJson(json, ObjectWithField.class); [EOL]     assertNull(obj.value); [EOL] } <line_num>: 172,177
public JsonElement serialize(ObjectWithField src, Type typeOfSrc, JsonSerializationContext context) { [EOL]     return context.serialize(null); [EOL] } <line_num>: 182,185
public void testCustomTypeAdapterPassesNullSerialization() { [EOL]     Gson gson = new GsonBuilder().registerTypeAdapter(ObjectWithField.class, new JsonSerializer<ObjectWithField>() { [EOL]  [EOL]         public JsonElement serialize(ObjectWithField src, Type typeOfSrc, JsonSerializationContext context) { [EOL]             return context.serialize(null); [EOL]         } [EOL]     }).create(); [EOL]     ObjectWithField target = new ObjectWithField(); [EOL]     target.value = "value1"; [EOL]     String json = gson.toJson(target); [EOL]     assertFalse(json.contains("value1")); [EOL] } <line_num>: 179,191
public ObjectWithField deserialize(JsonElement json, Type type, JsonDeserializationContext context) { [EOL]     return context.deserialize(null, type); [EOL] } <line_num>: 196,199
public void testCustomTypeAdapterPassesNullDesrialization() { [EOL]     Gson gson = new GsonBuilder().registerTypeAdapter(ObjectWithField.class, new JsonDeserializer<ObjectWithField>() { [EOL]  [EOL]         public ObjectWithField deserialize(JsonElement json, Type type, JsonDeserializationContext context) { [EOL]             return context.deserialize(null, type); [EOL]         } [EOL]     }).create(); [EOL]     String json = "{value:'value1'}"; [EOL]     ObjectWithField target = gson.fromJson(json, ObjectWithField.class); [EOL]     assertNull(target); [EOL] } <line_num>: 193,204
