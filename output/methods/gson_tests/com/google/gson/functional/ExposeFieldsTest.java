private ClassWithExposedFields() { [EOL]     this(null, null); [EOL] } <line_num>: 122,124
public ClassWithExposedFields(Integer a, Integer b) { [EOL]     this(a, b, 1L, 2.0, 'a'); [EOL] } <line_num>: 126,128
public ClassWithExposedFields(Integer a, Integer b, long c, double d, char e) { [EOL]     this.a = a; [EOL]     this.b = b; [EOL]     this.c = c; [EOL]     this.d = d; [EOL]     this.e = e; [EOL] } <line_num>: 129,135
@SuppressWarnings("unused") [EOL] private ClassWithInterfaceField() { [EOL]     this(null); [EOL] } <line_num>: 172,175
public ClassWithInterfaceField(SomeInterface interfaceField) { [EOL]     this.interfaceField = interfaceField; [EOL] } <line_num>: 177,179
@Override [EOL] protected void setUp() throws Exception { [EOL]     super.setUp(); [EOL]     gson = new GsonBuilder().excludeFieldsWithoutExposeAnnotation().registerTypeAdapter(SomeInterface.class, new SomeInterfaceInstanceCreator()).create(); [EOL] } <line_num>: 37,44
public void testNullExposeFieldSerialization() throws Exception { [EOL]     ClassWithExposedFields object = new ClassWithExposedFields(null, 1); [EOL]     String json = gson.toJson(object); [EOL]     assertEquals(object.getExpectedJson(), json); [EOL] } <line_num>: 46,51
public void testArrayWithOneNullExposeFieldObjectSerialization() throws Exception { [EOL]     ClassWithExposedFields object1 = new ClassWithExposedFields(1, 1); [EOL]     ClassWithExposedFields object2 = new ClassWithExposedFields(null, 1); [EOL]     ClassWithExposedFields object3 = new ClassWithExposedFields(2, 2); [EOL]     ClassWithExposedFields[] objects = { object1, object2, object3 }; [EOL]     String json = gson.toJson(objects); [EOL]     String expected = new StringBuilder().append('[').append(object1.getExpectedJson()).append(',').append(object2.getExpectedJson()).append(',').append(object3.getExpectedJson()).append(']').toString(); [EOL]     assertEquals(expected, json); [EOL] } <line_num>: 53,67
public void testExposeAnnotationSerialization() throws Exception { [EOL]     ClassWithExposedFields target = new ClassWithExposedFields(1, 2); [EOL]     assertEquals(target.getExpectedJson(), gson.toJson(target)); [EOL] } <line_num>: 69,72
public void testExposeAnnotationDeserialization() throws Exception { [EOL]     String json = "{a:3,b:4,d:20.0}"; [EOL]     ClassWithExposedFields target = gson.fromJson(json, ClassWithExposedFields.class); [EOL]     assertEquals(3, (int) target.a); [EOL]     assertNull(target.b); [EOL]     assertFalse(target.d == 20); [EOL] } <line_num>: 74,81
public void testNoExposedFieldSerialization() throws Exception { [EOL]     ClassWithNoExposedFields obj = new ClassWithNoExposedFields(); [EOL]     String json = gson.toJson(obj); [EOL]     assertEquals("{}", json); [EOL] } <line_num>: 83,88
public void testNoExposedFieldDeserialization() throws Exception { [EOL]     String json = "{a:4,b:5}"; [EOL]     ClassWithNoExposedFields obj = gson.fromJson(json, ClassWithNoExposedFields.class); [EOL]     assertEquals(0, obj.a); [EOL]     assertEquals(1, obj.b); [EOL] } <line_num>: 90,96
public void testExposedInterfaceFieldSerialization() throws Exception { [EOL]     String expected = "{\"interfaceField\":{}}"; [EOL]     ClassWithInterfaceField target = new ClassWithInterfaceField(new SomeObject()); [EOL]     String actual = gson.toJson(target); [EOL]     assertEquals(expected, actual); [EOL] } <line_num>: 98,104
public void testExposedInterfaceFieldDeserialization() throws Exception { [EOL]     String json = "{\"interfaceField\":{}}"; [EOL]     ClassWithInterfaceField obj = gson.fromJson(json, ClassWithInterfaceField.class); [EOL]     assertNotNull(obj.interfaceField); [EOL] } <line_num>: 106,111
public String getExpectedJson() { [EOL]     StringBuilder sb = new StringBuilder("{"); [EOL]     if (a != null) { [EOL]         sb.append("\"a\":").append(a).append(","); [EOL]     } [EOL]     sb.append("\"d\":").append(d); [EOL]     sb.append("}"); [EOL]     return sb.toString(); [EOL] } <line_num>: 137,145
public SomeInterface createInstance(Type type) { [EOL]     return new SomeObject(); [EOL] } <line_num>: 162,164
