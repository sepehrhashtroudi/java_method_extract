@Override [EOL] protected void setUp() throws Exception { [EOL]     super.setUp(); [EOL]     gson = new Gson(); [EOL] } <line_num>: 35,39
public void testEscapingQuotesInStringArray() throws Exception { [EOL]     String[] valueWithQuotes = { "beforeQuote\"afterQuote" }; [EOL]     String jsonRepresentation = gson.toJson(valueWithQuotes); [EOL]     String[] target = gson.fromJson(jsonRepresentation, String[].class); [EOL]     assertEquals(1, target.length); [EOL]     assertEquals(valueWithQuotes[0], target[0]); [EOL] } <line_num>: 41,47
public void testEscapeAllHtmlCharacters() { [EOL]     List<String> strings = new ArrayList<String>(); [EOL]     strings.add("<"); [EOL]     strings.add(">"); [EOL]     strings.add("="); [EOL]     strings.add("&"); [EOL]     strings.add("'"); [EOL]     strings.add("\""); [EOL]     assertEquals("[\"\\u003c\",\"\\u003e\",\"\\u003d\",\"\\u0026\",\"\\u0027\",\"\\\"\"]", gson.toJson(strings)); [EOL] } <line_num>: 49,59
public void testEscapingObjectFields() throws Exception { [EOL]     BagOfPrimitives objWithPrimitives = new BagOfPrimitives(1L, 1, true, "test with\" <script>"); [EOL]     String jsonRepresentation = gson.toJson(objWithPrimitives); [EOL]     assertFalse(jsonRepresentation.contains("<")); [EOL]     assertFalse(jsonRepresentation.contains(">")); [EOL]     assertTrue(jsonRepresentation.contains("\\\"")); [EOL]     BagOfPrimitives expectedObject = gson.fromJson(jsonRepresentation, BagOfPrimitives.class); [EOL]     assertEquals(objWithPrimitives.getExpectedJson(), expectedObject.getExpectedJson()); [EOL] } <line_num>: 61,70
public void testGsonAcceptsEscapedAndNonEscapedJsonDeserialization() throws Exception { [EOL]     Gson escapeHtmlGson = new GsonBuilder().create(); [EOL]     Gson noEscapeHtmlGson = new GsonBuilder().disableHtmlEscaping().create(); [EOL]     BagOfPrimitives target = new BagOfPrimitives(1L, 1, true, "test' / w'ith\" / \\ <script>"); [EOL]     String escapedJsonForm = escapeHtmlGson.toJson(target); [EOL]     String nonEscapedJsonForm = noEscapeHtmlGson.toJson(target); [EOL]     assertFalse(escapedJsonForm.equals(nonEscapedJsonForm)); [EOL]     assertEquals(target, noEscapeHtmlGson.fromJson(escapedJsonForm, BagOfPrimitives.class)); [EOL]     assertEquals(target, escapeHtmlGson.fromJson(nonEscapedJsonForm, BagOfPrimitives.class)); [EOL] } <line_num>: 72,83
