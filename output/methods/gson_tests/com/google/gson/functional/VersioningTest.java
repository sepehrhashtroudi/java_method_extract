@Override [EOL] protected void setUp() throws Exception { [EOL]     super.setUp(); [EOL]     builder = new GsonBuilder(); [EOL] } <line_num>: 40,44
public void testVersionedUntilSerialization() { [EOL]     Version1 target = new Version1(); [EOL]     Gson gson = builder.setVersion(1.29).create(); [EOL]     String json = gson.toJson(target); [EOL]     assertTrue(json.contains("\"a\":" + A)); [EOL]     gson = builder.setVersion(1.3).create(); [EOL]     json = gson.toJson(target); [EOL]     assertFalse(json.contains("\"a\":" + A)); [EOL] } <line_num>: 46,55
public void testVersionedUntilDeserialization() { [EOL]     Gson gson = builder.setVersion(1.3).create(); [EOL]     String json = "{\"a\":3,\"b\":4,\"c\":5}"; [EOL]     Version1 version1 = gson.fromJson(json, Version1.class); [EOL]     assertEquals(A, version1.a); [EOL] } <line_num>: 57,62
public void testVersionedClassesSerialization() { [EOL]     Gson gson = builder.setVersion(1.0).create(); [EOL]     String json1 = gson.toJson(new Version1()); [EOL]     String json2 = gson.toJson(new Version1_1()); [EOL]     assertEquals(json1, json2); [EOL] } <line_num>: 64,69
public void testVersionedClassesDeserialization() { [EOL]     Gson gson = builder.setVersion(1.0).create(); [EOL]     String json = "{\"a\":3,\"b\":4,\"c\":5}"; [EOL]     Version1 version1 = gson.fromJson(json, Version1.class); [EOL]     assertEquals(3, version1.a); [EOL]     assertEquals(4, version1.b); [EOL]     Version1_1 version1_1 = gson.fromJson(json, Version1_1.class); [EOL]     assertEquals(3, version1_1.a); [EOL]     assertEquals(4, version1_1.b); [EOL]     assertEquals(C, version1_1.c); [EOL] } <line_num>: 71,81
public void testIgnoreLaterVersionClassSerialization() { [EOL]     Gson gson = builder.setVersion(1.0).create(); [EOL]     assertEquals("", gson.toJson(new Version1_2())); [EOL] } <line_num>: 83,86
public void testIgnoreLaterVersionClassDeserialization() { [EOL]     Gson gson = builder.setVersion(1.0).create(); [EOL]     String json = "{\"a\":3,\"b\":4,\"c\":5,\"d\":6}"; [EOL]     Version1_2 version1_2 = gson.fromJson(json, Version1_2.class); [EOL]     assertEquals(A, version1_2.a); [EOL]     assertEquals(B, version1_2.b); [EOL]     assertEquals(C, version1_2.c); [EOL]     assertEquals(D, version1_2.d); [EOL] } <line_num>: 88,98
public void testVersionedGsonWithUnversionedClassesSerialization() { [EOL]     Gson gson = builder.setVersion(1.0).create(); [EOL]     BagOfPrimitives target = new BagOfPrimitives(10, 20, false, "stringValue"); [EOL]     assertEquals(target.getExpectedJson(), gson.toJson(target)); [EOL] } <line_num>: 100,104
public void testVersionedGsonWithUnversionedClassesDeserialization() { [EOL]     Gson gson = builder.setVersion(1.0).create(); [EOL]     String json = "{\"longValue\":10,\"intValue\":20,\"booleanValue\":false}"; [EOL]     BagOfPrimitives expected = new BagOfPrimitives(); [EOL]     expected.longValue = 10; [EOL]     expected.intValue = 20; [EOL]     expected.booleanValue = false; [EOL]     BagOfPrimitives actual = gson.fromJson(json, BagOfPrimitives.class); [EOL]     assertEquals(expected, actual); [EOL] } <line_num>: 106,116
public void testVersionedGsonMixingSinceAndUntilSerialization() { [EOL]     Gson gson = builder.setVersion(1.0).create(); [EOL]     SinceUntilMixing target = new SinceUntilMixing(); [EOL]     String json = gson.toJson(target); [EOL]     assertFalse(json.contains("\"b\":" + B)); [EOL]     gson = builder.setVersion(1.2).create(); [EOL]     json = gson.toJson(target); [EOL]     assertTrue(json.contains("\"b\":" + B)); [EOL]     gson = builder.setVersion(1.3).create(); [EOL]     json = gson.toJson(target); [EOL]     assertFalse(json.contains("\"b\":" + B)); [EOL] } <line_num>: 118,131
public void testVersionedGsonMixingSinceAndUntilDeserialization() { [EOL]     String json = "{\"a\":5,\"b\":6}"; [EOL]     Gson gson = builder.setVersion(1.0).create(); [EOL]     SinceUntilMixing result = gson.fromJson(json, SinceUntilMixing.class); [EOL]     assertEquals(5, result.a); [EOL]     assertEquals(B, result.b); [EOL]     gson = builder.setVersion(1.2).create(); [EOL]     result = gson.fromJson(json, SinceUntilMixing.class); [EOL]     assertEquals(5, result.a); [EOL]     assertEquals(6, result.b); [EOL]     gson = builder.setVersion(1.3).create(); [EOL]     result = gson.fromJson(json, SinceUntilMixing.class); [EOL]     assertEquals(5, result.a); [EOL]     assertEquals(B, result.b); [EOL] } <line_num>: 133,149
