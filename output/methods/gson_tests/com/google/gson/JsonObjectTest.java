public void testAddingAndRemovingObjectProperties() throws Exception { [EOL]     JsonObject jsonObj = new JsonObject(); [EOL]     String propertyName = "property"; [EOL]     assertFalse(jsonObj.has(propertyName)); [EOL]     assertNull(jsonObj.get(propertyName)); [EOL]     JsonPrimitive value = new JsonPrimitive("blah"); [EOL]     jsonObj.add(propertyName, value); [EOL]     assertEquals(value, jsonObj.get(propertyName)); [EOL]     JsonElement removedElement = jsonObj.remove(propertyName); [EOL]     assertEquals(value, removedElement); [EOL]     assertFalse(jsonObj.has(propertyName)); [EOL] } <line_num>: 28,41
public void testAddingNullPropertyValue() throws Exception { [EOL]     String propertyName = "property"; [EOL]     JsonObject jsonObj = new JsonObject(); [EOL]     jsonObj.add(propertyName, null); [EOL]     assertTrue(jsonObj.has(propertyName)); [EOL]     JsonElement jsonElement = jsonObj.get(propertyName); [EOL]     assertNotNull(jsonElement); [EOL]     assertTrue(jsonElement.isJsonNull()); [EOL] } <line_num>: 43,53
public void testAddingNullOrEmptyPropertyName() throws Exception { [EOL]     JsonObject jsonObj = new JsonObject(); [EOL]     try { [EOL]         jsonObj.add(null, JsonNull.createJsonNull()); [EOL]         fail("Should not allow null property names."); [EOL]     } catch (IllegalArgumentException expected) { [EOL]     } [EOL]     jsonObj.add("", JsonNull.createJsonNull()); [EOL]     jsonObj.add("   \t", JsonNull.createJsonNull()); [EOL] } <line_num>: 55,64
public void testAddingBooleanProperties() throws Exception { [EOL]     String propertyName = "property"; [EOL]     JsonObject jsonObj = new JsonObject(); [EOL]     jsonObj.addProperty(propertyName, true); [EOL]     assertTrue(jsonObj.has(propertyName)); [EOL]     JsonElement jsonElement = jsonObj.get(propertyName); [EOL]     assertNotNull(jsonElement); [EOL]     assertTrue(jsonElement.getAsBoolean()); [EOL] } <line_num>: 66,76
public void testAddingStringProperties() throws Exception { [EOL]     String propertyName = "property"; [EOL]     String value = "blah"; [EOL]     JsonObject jsonObj = new JsonObject(); [EOL]     jsonObj.addProperty(propertyName, value); [EOL]     assertTrue(jsonObj.has(propertyName)); [EOL]     JsonElement jsonElement = jsonObj.get(propertyName); [EOL]     assertNotNull(jsonElement); [EOL]     assertEquals(value, jsonElement.getAsString()); [EOL] } <line_num>: 78,90
public void testAddingCharacterProperties() throws Exception { [EOL]     String propertyName = "property"; [EOL]     char value = 'a'; [EOL]     JsonObject jsonObj = new JsonObject(); [EOL]     jsonObj.addProperty(propertyName, value); [EOL]     assertTrue(jsonObj.has(propertyName)); [EOL]     JsonElement jsonElement = jsonObj.get(propertyName); [EOL]     assertNotNull(jsonElement); [EOL]     assertEquals(String.valueOf(value), jsonElement.getAsString()); [EOL]     assertEquals(value, jsonElement.getAsCharacter()); [EOL] } <line_num>: 92,105
public void testPropertyWithQuotes() { [EOL]     JsonObject jsonObj = new JsonObject(); [EOL]     jsonObj.add("a\"b", new JsonPrimitive("c\"d")); [EOL]     String json = new Gson().toJson(jsonObj); [EOL]     assertEquals("{\"a\\\"b\":\"c\\\"d\"}", json); [EOL] } <line_num>: 110,115
public void testWritePropertyWithEmptyStringName() { [EOL]     JsonObject jsonObj = new JsonObject(); [EOL]     jsonObj.add("", new JsonPrimitive(true)); [EOL]     assertEquals("{\"\":true}", new Gson().toJson(jsonObj)); [EOL] } <line_num>: 120,125
public void testReadPropertyWithEmptyStringName() { [EOL]     JsonObject jsonObj = new JsonParser().parse("{\"\":true}").getAsJsonObject(); [EOL]     assertEquals(true, jsonObj.get("").getAsBoolean()); [EOL] } <line_num>: 127,131
