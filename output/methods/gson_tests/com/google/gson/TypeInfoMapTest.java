public void testInvalidConstruction() throws Exception { [EOL]     try { [EOL]         new TypeInfoMap(String.class); [EOL]         fail("Must be a ParameterizedType"); [EOL]     } catch (IllegalArgumentException expected) { [EOL]     } [EOL] } <line_num>: 36,41
public void testNonMapConstruction() throws Exception { [EOL]     try { [EOL]         Type parameterizedMapType = new TypeToken<List<String>>() { [EOL]         }.getType(); [EOL]         new TypeInfoMap(parameterizedMapType); [EOL]         fail("The raw type must be a Map"); [EOL]     } catch (IllegalArgumentException expected) { [EOL]     } [EOL] } <line_num>: 43,49
public void testBasicGetters() throws Exception { [EOL]     Type parameterizedMapType = new TypeToken<Map<String, Integer>>() { [EOL]     }.getType(); [EOL]     TypeInfoMap mapTypeInfo = new TypeInfoMap(parameterizedMapType); [EOL]     assertEquals(String.class, mapTypeInfo.getKeyType()); [EOL]     assertEquals(Integer.class, mapTypeInfo.getValueType()); [EOL] } <line_num>: 51,57
public void testMapImplementations() throws Exception { [EOL]     Type parameterizedMapType = new TypeToken<HashMap<String, Integer>>() { [EOL]     }.getType(); [EOL]     TypeInfoMap mapTypeInfo = new TypeInfoMap(parameterizedMapType); [EOL]     assertEquals(String.class, mapTypeInfo.getKeyType()); [EOL]     assertEquals(Integer.class, mapTypeInfo.getValueType()); [EOL] } <line_num>: 59,65
