public void testBadInstantiation() throws Exception { [EOL]     try { [EOL]         List<ExclusionStrategy> constructorParam = null; [EOL]         new DisjunctionExclusionStrategy(constructorParam); [EOL]         fail("Should throw an exception"); [EOL]     } catch (IllegalArgumentException expected) { [EOL]     } [EOL] } <line_num>: 36,42
public void testSkipFieldsWithMixedTrueAndFalse() throws Exception { [EOL]     List<ExclusionStrategy> strategies = new LinkedList<ExclusionStrategy>(); [EOL]     strategies.add(FALSE_STRATEGY); [EOL]     strategies.add(TRUE_STRATEGY); [EOL]     DisjunctionExclusionStrategy strategy = new DisjunctionExclusionStrategy(strategies); [EOL]     assertTrue(strategy.shouldSkipClass(CLAZZ)); [EOL]     assertTrue(strategy.shouldSkipField(FIELD)); [EOL] } <line_num>: 44,52
public void testSkipFieldsWithFalseOnly() throws Exception { [EOL]     List<ExclusionStrategy> strategies = new LinkedList<ExclusionStrategy>(); [EOL]     strategies.add(FALSE_STRATEGY); [EOL]     DisjunctionExclusionStrategy strategy = new DisjunctionExclusionStrategy(strategies); [EOL]     assertFalse(strategy.shouldSkipClass(CLAZZ)); [EOL]     assertFalse(strategy.shouldSkipField(FIELD)); [EOL] } <line_num>: 54,61
