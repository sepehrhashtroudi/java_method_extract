@Override [EOL] protected void setUp() throws Exception { [EOL]     super.setUp(); [EOL]     policy = new SerializedNameAnnotationInterceptingNamingPolicy(new JavaFieldNamingPolicy()); [EOL] } <line_num>: 33,37
public void testFieldWithAnnotation() throws Exception { [EOL]     String fieldName = "fieldWithAnnotation"; [EOL]     FieldAttributes f = new FieldAttributes(SomeObject.class, SomeObject.class.getField(fieldName)); [EOL]     assertFalse(ANNOTATED_FIELD_NAME.equals(fieldName)); [EOL]     assertEquals(ANNOTATED_FIELD_NAME, policy.translateName(f)); [EOL] } <line_num>: 39,46
public void testFieldWithoutAnnotation() throws Exception { [EOL]     String fieldName = "fieldWithoutAnnotation"; [EOL]     FieldAttributes f = new FieldAttributes(SomeObject.class, SomeObject.class.getField(fieldName)); [EOL]     assertEquals(fieldName, policy.translateName(f)); [EOL] } <line_num>: 48,54
