@Override [EOL] protected void setUp() throws Exception { [EOL]     super.setUp(); [EOL]     parameterizedType = new TypeToken<List<String>>() { [EOL]     }.getType(); [EOL]     ourType = new ParameterizedTypeImpl(List.class, new Type[] { String.class }, null); [EOL] } <line_num>: 37,42
public void testOurTypeFunctionality() throws Exception { [EOL]     assertNull(ourType.getOwnerType()); [EOL]     assertEquals(String.class, ourType.getActualTypeArguments()[0]); [EOL]     assertEquals(List.class, ourType.getRawType()); [EOL]     assertEquals(parameterizedType, ourType); [EOL]     assertEquals(parameterizedType.hashCode(), ourType.hashCode()); [EOL] } <line_num>: 44,50
public void testNotEquals() throws Exception { [EOL]     Type differentParameterizedType = new TypeToken<List<Integer>>() { [EOL]     }.getType(); [EOL]     assertFalse(differentParameterizedType.equals(ourType)); [EOL]     assertFalse(ourType.equals(differentParameterizedType)); [EOL] } <line_num>: 52,56
