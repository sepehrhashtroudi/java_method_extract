public static void assertEquals(int[] expected, int[] target) { [EOL]     if (expected == null) { [EOL]         Assert.assertNull(target); [EOL]     } [EOL]     Assert.assertEquals(expected.length, target.length); [EOL]     for (int i = 0; i < expected.length; ++i) { [EOL]         Assert.assertEquals(expected[i], target[i]); [EOL]     } [EOL] } <line_num>: 31,39
public static void assertEquals(Integer[] expected, Integer[] target) { [EOL]     if (expected == null) { [EOL]         Assert.assertNull(target); [EOL]     } [EOL]     Assert.assertEquals(expected.length, target.length); [EOL]     for (int i = 0; i < expected.length; ++i) { [EOL]         Assert.assertEquals(expected[i], target[i]); [EOL]     } [EOL] } <line_num>: 41,49
public static <T> void assertContains(Collection<T> collection, T value) { [EOL]     for (T entry : collection) { [EOL]         if (entry.equals(value)) { [EOL]             return; [EOL]         } [EOL]     } [EOL]     Assert.fail(value + " not present in " + collection); [EOL] } <line_num>: 56,63
