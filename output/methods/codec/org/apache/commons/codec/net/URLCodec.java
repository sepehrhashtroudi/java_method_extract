public URLCodec() { [EOL]     super(); [EOL] } <line_num>: 90,92
public URLCodec(String charset) { [EOL]     super(); [EOL]     this.charset = charset; [EOL] } <line_num>: 99,102
public static final byte[] encodeUrl(BitSet urlsafe, byte[] bytes) { [EOL]     if (bytes == null) { [EOL]         return null; [EOL]     } [EOL]     if (urlsafe == null) { [EOL]         urlsafe = WWW_FORM_URL; [EOL]     } [EOL]     ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]     for (int i = 0; i < bytes.length; i++) { [EOL]         int b = bytes[i]; [EOL]         if (b < 0) { [EOL]             b = 256 + b; [EOL]         } [EOL]         if (urlsafe.get(b)) { [EOL]             if (b == ' ') { [EOL]                 b = '+'; [EOL]             } [EOL]             buffer.write(b); [EOL]         } else { [EOL]             buffer.write('%'); [EOL]             char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16)); [EOL]             char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16)); [EOL]             buffer.write(hex1); [EOL]             buffer.write(hex2); [EOL]         } [EOL]     } [EOL]     return buffer.toByteArray(); [EOL] } <line_num>: 112,143
public static final byte[] decodeUrl(byte[] bytes) throws DecoderException { [EOL]     if (bytes == null) { [EOL]         return null; [EOL]     } [EOL]     ByteArrayOutputStream buffer = new ByteArrayOutputStream(); [EOL]     for (int i = 0; i < bytes.length; i++) { [EOL]         int b = bytes[i]; [EOL]         if (b == '+') { [EOL]             buffer.write(' '); [EOL]         } else if (b == '%') { [EOL]             try { [EOL]                 int u = Character.digit((char) bytes[++i], 16); [EOL]                 int l = Character.digit((char) bytes[++i], 16); [EOL]                 if (u == -1 || l == -1) { [EOL]                     throw new DecoderException("Invalid URL encoding"); [EOL]                 } [EOL]                 buffer.write((char) ((u << 4) + l)); [EOL]             } catch (ArrayIndexOutOfBoundsException e) { [EOL]                 throw new DecoderException("Invalid URL encoding"); [EOL]             } [EOL]         } else { [EOL]             buffer.write(b); [EOL]         } [EOL]     } [EOL]     return buffer.toByteArray(); [EOL] } <line_num>: 155,182
public byte[] encode(byte[] bytes) { [EOL]     return encodeUrl(WWW_FORM_URL, bytes); [EOL] } <line_num>: 192,194
public byte[] decode(byte[] bytes) throws DecoderException { [EOL]     return decodeUrl(bytes); [EOL] } <line_num>: 206,208
public String encode(String pString, String charset) throws UnsupportedEncodingException { [EOL]     if (pString == null) { [EOL]         return null; [EOL]     } [EOL]     return new String(encode(pString.getBytes(charset)), CharacterEncodingNames.US_ASCII); [EOL] } <line_num>: 221,228
public String encode(String pString) throws EncoderException { [EOL]     if (pString == null) { [EOL]         return null; [EOL]     } [EOL]     try { [EOL]         return encode(pString, getDefaultCharset()); [EOL]     } catch (UnsupportedEncodingException e) { [EOL]         throw new EncoderException(e.getMessage()); [EOL]     } [EOL] } <line_num>: 241,250
public String decode(String pString, String charset) throws DecoderException, UnsupportedEncodingException { [EOL]     if (pString == null) { [EOL]         return null; [EOL]     } [EOL]     return new String(decode(pString.getBytes(CharacterEncodingNames.US_ASCII)), charset); [EOL] } <line_num>: 265,272
public String decode(String pString) throws DecoderException { [EOL]     if (pString == null) { [EOL]         return null; [EOL]     } [EOL]     try { [EOL]         return decode(pString, getDefaultCharset()); [EOL]     } catch (UnsupportedEncodingException e) { [EOL]         throw new DecoderException(e.getMessage()); [EOL]     } [EOL] } <line_num>: 286,295
public Object encode(Object pObject) throws EncoderException { [EOL]     if (pObject == null) { [EOL]         return null; [EOL]     } else if (pObject instanceof byte[]) { [EOL]         return encode((byte[]) pObject); [EOL]     } else if (pObject instanceof String) { [EOL]         return encode((String) pObject); [EOL]     } else { [EOL]         throw new EncoderException("Objects of type " + pObject.getClass().getName() + " cannot be URL encoded"); [EOL]     } [EOL] } <line_num>: 307,319
public Object decode(Object pObject) throws DecoderException { [EOL]     if (pObject == null) { [EOL]         return null; [EOL]     } else if (pObject instanceof byte[]) { [EOL]         return decode((byte[]) pObject); [EOL]     } else if (pObject instanceof String) { [EOL]         return decode((String) pObject); [EOL]     } else { [EOL]         throw new DecoderException("Objects of type " + pObject.getClass().getName() + " cannot be URL decoded"); [EOL]     } [EOL] } <line_num>: 332,343
public String getEncoding() { [EOL]     return this.charset; [EOL] } <line_num>: 352,354
public String getDefaultCharset() { [EOL]     return this.charset; [EOL] } <line_num>: 361,363
