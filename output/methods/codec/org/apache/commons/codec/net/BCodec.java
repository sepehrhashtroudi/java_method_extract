public BCodec() { [EOL]     super(); [EOL] } <line_num>: 56,58
public BCodec(final String charset) { [EOL]     super(); [EOL]     this.charset = charset; [EOL] } <line_num>: 69,72
protected String getEncoding() { [EOL]     return "B"; [EOL] } <line_num>: 74,76
protected byte[] doEncoding(byte[] bytes) { [EOL]     if (bytes == null) { [EOL]         return null; [EOL]     } [EOL]     return Base64.encodeBase64(bytes); [EOL] } <line_num>: 78,83
protected byte[] doDecoding(byte[] bytes) { [EOL]     if (bytes == null) { [EOL]         return null; [EOL]     } [EOL]     return Base64.decodeBase64(bytes); [EOL] } <line_num>: 85,90
public String encode(final String value, final String charset) throws EncoderException { [EOL]     if (value == null) { [EOL]         return null; [EOL]     } [EOL]     try { [EOL]         return encodeText(value, charset); [EOL]     } catch (UnsupportedEncodingException e) { [EOL]         throw new EncoderException(e.getMessage()); [EOL]     } [EOL] } <line_num>: 104,113
public String encode(String value) throws EncoderException { [EOL]     if (value == null) { [EOL]         return null; [EOL]     } [EOL]     return encode(value, getDefaultCharset()); [EOL] } <line_num>: 125,130
public String decode(String value) throws DecoderException { [EOL]     if (value == null) { [EOL]         return null; [EOL]     } [EOL]     try { [EOL]         return decodeText(value); [EOL]     } catch (UnsupportedEncodingException e) { [EOL]         throw new DecoderException(e.getMessage()); [EOL]     } [EOL] } <line_num>: 144,153
public Object encode(Object value) throws EncoderException { [EOL]     if (value == null) { [EOL]         return null; [EOL]     } else if (value instanceof String) { [EOL]         return encode((String) value); [EOL]     } else { [EOL]         throw new EncoderException("Objects of type " + value.getClass().getName() + " cannot be encoded using BCodec"); [EOL]     } [EOL] } <line_num>: 165,175
public Object decode(Object value) throws DecoderException { [EOL]     if (value == null) { [EOL]         return null; [EOL]     } else if (value instanceof String) { [EOL]         return decode((String) value); [EOL]     } else { [EOL]         throw new DecoderException("Objects of type " + value.getClass().getName() + " cannot be decoded using BCodec"); [EOL]     } [EOL] } <line_num>: 190,200
public String getDefaultCharset() { [EOL]     return this.charset; [EOL] } <line_num>: 207,209
