static String clean(String str) { [EOL]     if (str == null || str.length() == 0) { [EOL]         return str; [EOL]     } [EOL]     int len = str.length(); [EOL]     char[] chars = new char[len]; [EOL]     int count = 0; [EOL]     for (int i = 0; i < len; i++) { [EOL]         if (Character.isLetter(str.charAt(i))) { [EOL]             chars[count++] = str.charAt(i); [EOL]         } [EOL]     } [EOL]     if (count == len) { [EOL]         return str.toUpperCase(java.util.Locale.ENGLISH); [EOL]     } [EOL]     return new String(chars, 0, count).toUpperCase(java.util.Locale.ENGLISH); [EOL] } <line_num>: 40,56
static int difference(StringEncoder encoder, String s1, String s2) throws EncoderException { [EOL]     return differenceEncoded(encoder.encode(s1), encoder.encode(s2)); [EOL] } <line_num>: 84,86
static int differenceEncoded(String es1, String es2) { [EOL]     if (es1 == null || es2 == null) { [EOL]         return 0; [EOL]     } [EOL]     int lengthToMatch = Math.min(es1.length(), es2.length()); [EOL]     int diff = 0; [EOL]     for (int i = 0; i < lengthToMatch; i++) { [EOL]         if (es1.charAt(i) == es2.charAt(i)) { [EOL]             diff++; [EOL]         } [EOL]     } [EOL]     return diff; [EOL] } <line_num>: 108,121
