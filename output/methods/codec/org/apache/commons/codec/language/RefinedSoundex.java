public RefinedSoundex() { [EOL]     this(US_ENGLISH_MAPPING); [EOL] } <line_num>: 57,59
public RefinedSoundex(char[] mapping) { [EOL]     this.soundexMapping = mapping; [EOL] } <line_num>: 70,72
public int difference(String s1, String s2) throws EncoderException { [EOL]     return SoundexUtils.difference(this, s1, s2); [EOL] } <line_num>: 96,98
public Object encode(Object pObject) throws EncoderException { [EOL]     if (!(pObject instanceof java.lang.String)) { [EOL]         throw new EncoderException("Parameter supplied to RefinedSoundex encode is not of type java.lang.String"); [EOL]     } [EOL]     return soundex((String) pObject); [EOL] } <line_num>: 113,118
public String encode(String pString) { [EOL]     return soundex(pString); [EOL] } <line_num>: 127,129
char getMappingCode(char c) { [EOL]     if (!Character.isLetter(c)) { [EOL]         return 0; [EOL]     } [EOL]     return this.soundexMapping[Character.toUpperCase(c) - 'A']; [EOL] } <line_num>: 140,145
public String soundex(String str) { [EOL]     if (str == null) { [EOL]         return null; [EOL]     } [EOL]     str = SoundexUtils.clean(str); [EOL]     if (str.length() == 0) { [EOL]         return str; [EOL]     } [EOL]     StringBuffer sBuf = new StringBuffer(); [EOL]     sBuf.append(str.charAt(0)); [EOL]     char last, current; [EOL]     last = '*'; [EOL]     for (int i = 0; i < str.length(); i++) { [EOL]         current = getMappingCode(str.charAt(i)); [EOL]         if (current == last) { [EOL]             continue; [EOL]         } else if (current != 0) { [EOL]             sBuf.append(current); [EOL]         } [EOL]         last = current; [EOL]     } [EOL]     return sBuf.toString(); [EOL] } <line_num>: 154,183
