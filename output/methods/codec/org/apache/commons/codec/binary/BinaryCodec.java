public byte[] encode(byte[] raw) { [EOL]     return toAsciiBytes(raw); [EOL] } <line_num>: 80,82
public Object encode(Object raw) throws EncoderException { [EOL]     if (!(raw instanceof byte[])) { [EOL]         throw new EncoderException("argument not a byte array"); [EOL]     } [EOL]     return toAsciiChars((byte[]) raw); [EOL] } <line_num>: 94,99
public Object decode(Object ascii) throws DecoderException { [EOL]     if (ascii == null) { [EOL]         return EMPTY_BYTE_ARRAY; [EOL]     } [EOL]     if (ascii instanceof byte[]) { [EOL]         return fromAscii((byte[]) ascii); [EOL]     } [EOL]     if (ascii instanceof char[]) { [EOL]         return fromAscii((char[]) ascii); [EOL]     } [EOL]     if (ascii instanceof String) { [EOL]         return fromAscii(((String) ascii).toCharArray()); [EOL]     } [EOL]     throw new DecoderException("argument not a byte array"); [EOL] } <line_num>: 111,125
public byte[] decode(byte[] ascii) { [EOL]     return fromAscii(ascii); [EOL] } <line_num>: 135,137
public byte[] toByteArray(String ascii) { [EOL]     if (ascii == null) { [EOL]         return EMPTY_BYTE_ARRAY; [EOL]     } [EOL]     return fromAscii(ascii.toCharArray()); [EOL] } <line_num>: 147,152
public static byte[] fromAscii(char[] ascii) { [EOL]     if (ascii == null || ascii.length == 0) { [EOL]         return EMPTY_BYTE_ARRAY; [EOL]     } [EOL]     byte[] l_raw = new byte[ascii.length >> 3]; [EOL]     for (int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8) { [EOL]         for (int bits = 0; bits < BITS.length; ++bits) { [EOL]             if (ascii[jj - bits] == '1') { [EOL]                 l_raw[ii] |= BITS[bits]; [EOL]             } [EOL]         } [EOL]     } [EOL]     return l_raw; [EOL] } <line_num>: 166,184
public static byte[] fromAscii(byte[] ascii) { [EOL]     if (ascii == null || ascii.length == 0) { [EOL]         return EMPTY_BYTE_ARRAY; [EOL]     } [EOL]     byte[] l_raw = new byte[ascii.length >> 3]; [EOL]     for (int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8) { [EOL]         for (int bits = 0; bits < BITS.length; ++bits) { [EOL]             if (ascii[jj - bits] == '1') { [EOL]                 l_raw[ii] |= BITS[bits]; [EOL]             } [EOL]         } [EOL]     } [EOL]     return l_raw; [EOL] } <line_num>: 193,211
public static byte[] toAsciiBytes(byte[] raw) { [EOL]     if (raw == null || raw.length == 0) { [EOL]         return EMPTY_BYTE_ARRAY; [EOL]     } [EOL]     byte[] l_ascii = new byte[raw.length << 3]; [EOL]     for (int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8) { [EOL]         for (int bits = 0; bits < BITS.length; ++bits) { [EOL]             if ((raw[ii] & BITS[bits]) == 0) { [EOL]                 l_ascii[jj - bits] = '0'; [EOL]             } else { [EOL]                 l_ascii[jj - bits] = '1'; [EOL]             } [EOL]         } [EOL]     } [EOL]     return l_ascii; [EOL] } <line_num>: 222,242
public static char[] toAsciiChars(byte[] raw) { [EOL]     if (raw == null || raw.length == 0) { [EOL]         return EMPTY_CHAR_ARRAY; [EOL]     } [EOL]     char[] l_ascii = new char[raw.length << 3]; [EOL]     for (int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8) { [EOL]         for (int bits = 0; bits < BITS.length; ++bits) { [EOL]             if ((raw[ii] & BITS[bits]) == 0) { [EOL]                 l_ascii[jj - bits] = '0'; [EOL]             } else { [EOL]                 l_ascii[jj - bits] = '1'; [EOL]             } [EOL]         } [EOL]     } [EOL]     return l_ascii; [EOL] } <line_num>: 252,272
public static String toAsciiString(byte[] raw) { [EOL]     return new String(toAsciiChars(raw)); [EOL] } <line_num>: 282,284
