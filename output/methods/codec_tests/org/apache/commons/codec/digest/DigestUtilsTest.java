protected void setUp() throws Exception { [EOL]     new Random().nextBytes(testData); [EOL] } <line_num>: 39,41
public void testInternalNoSuchAlgorithmException() { [EOL]     try { [EOL]         DigestUtils.getDigest("Bogus Bogus"); [EOL]         fail("A RuntimeException should have been thrown."); [EOL]     } catch (RuntimeException e) { [EOL]     } [EOL] } <line_num>: 43,50
public void testMd5Hex() throws IOException { [EOL]     assertEquals("d41d8cd98f00b204e9800998ecf8427e", DigestUtils.md5Hex("")); [EOL]     assertEquals("0cc175b9c0f1b6a831c399e269772661", DigestUtils.md5Hex("a")); [EOL]     assertEquals("900150983cd24fb0d6963f7d28e17f72", DigestUtils.md5Hex("abc")); [EOL]     assertEquals("f96b697d7cb7938d525a2f31aaf161d0", DigestUtils.md5Hex("message digest")); [EOL]     assertEquals("c3fcd3d76192e4007dfb496cca67e13b", DigestUtils.md5Hex("abcdefghijklmnopqrstuvwxyz")); [EOL]     assertEquals("d174ab98d277d9f5a5611c2c9f419d9f", DigestUtils.md5Hex("ABCDEFGHIJKLMNOPQRSTUVWXYZ" + "abcdefghijklmnopqrstuvwxyz" + "0123456789")); [EOL]     assertEquals("57edf4a22be3c955ac49da2e2107b67a", DigestUtils.md5Hex("1234567890123456789012345678901234567890" + "1234567890123456789012345678901234567890")); [EOL]     assertEquals(DigestUtils.md5Hex(testData), DigestUtils.md5Hex(new ByteArrayInputStream(testData))); [EOL] } <line_num>: 52,74
public void testMD5HexLength() { [EOL]     String hashMe = "this is some string that is longer than 32 characters"; [EOL]     String hash = DigestUtils.md5Hex(hashMe.getBytes()); [EOL]     assertEquals(32, hash.length()); [EOL]     hashMe = "length < 32"; [EOL]     hash = DigestUtils.md5Hex(hashMe.getBytes()); [EOL]     assertEquals(32, hash.length()); [EOL] } <line_num>: 79,87
public void testMD5Length() { [EOL]     String hashMe = "this is some string that is longer than 16 characters"; [EOL]     byte[] hash = DigestUtils.md5(hashMe.getBytes()); [EOL]     assertEquals(16, hash.length); [EOL]     hashMe = "length < 16"; [EOL]     hash = DigestUtils.md5(hashMe.getBytes()); [EOL]     assertEquals(16, hash.length); [EOL] } <line_num>: 92,100
public void testSha256() throws IOException { [EOL]     assertEquals("ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad", DigestUtils.sha256Hex("abc")); [EOL]     assertEquals("ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad", DigestUtils.sha256Hex("abc".getBytes())); [EOL]     assertEquals("248d6a61d20638b8e5c026930c3e6039a33ce45964ff2167f6ecedd419db06c1", DigestUtils.sha256Hex("abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq")); [EOL]     assertEquals(DigestUtils.sha256Hex(testData), DigestUtils.sha256Hex(new ByteArrayInputStream(testData))); [EOL] } <line_num>: 102,113
public void testSha384() throws IOException { [EOL]     assertEquals("cb00753f45a35e8bb5a03d699ac65007272c32ab0eded1631a8b605a43ff5bed" + "8086072ba1e7cc2358baeca134c825a7", DigestUtils.sha384Hex("abc")); [EOL]     assertEquals("cb00753f45a35e8bb5a03d699ac65007272c32ab0eded1631a8b605a43ff5bed" + "8086072ba1e7cc2358baeca134c825a7", DigestUtils.sha384Hex("abc".getBytes())); [EOL]     assertEquals("09330c33f71147e83d192fc782cd1b4753111b173b3b05d22fa08086e3b0f712" + "fcc7c71a557e2db966c3e9fa91746039", DigestUtils.sha384Hex("abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmn" + "hijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu")); [EOL]     assertEquals(DigestUtils.sha384Hex(testData), DigestUtils.sha384Hex(new ByteArrayInputStream(testData))); [EOL] } <line_num>: 115,129
public void testSha512() throws IOException { [EOL]     assertEquals("ddaf35a193617abacc417349ae20413112e6fa4e89a97ea20a9eeee64b55d39a" + "2192992a274fc1a836ba3c23a3feebbd454d4423643ce80e2a9ac94fa54ca49f", DigestUtils.sha512Hex("abc")); [EOL]     assertEquals("ddaf35a193617abacc417349ae20413112e6fa4e89a97ea20a9eeee64b55d39a" + "2192992a274fc1a836ba3c23a3feebbd454d4423643ce80e2a9ac94fa54ca49f", DigestUtils.sha512Hex("abc".getBytes())); [EOL]     assertEquals("8e959b75dae313da8cf4f72814fc143f8f7779c6eb9f7fa17299aeadb6889018" + "501d289e4900f7e4331b99dec4b5433ac7d329eeb6dd26545e96e55b874be909", DigestUtils.sha512Hex("abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmn" + "hijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu")); [EOL]     assertEquals(DigestUtils.sha512Hex(testData), DigestUtils.sha512Hex(new ByteArrayInputStream(testData))); [EOL] } <line_num>: 131,145
public void testShaHex() throws IOException { [EOL]     assertEquals("a9993e364706816aba3e25717850c26c9cd0d89d", DigestUtils.shaHex("abc")); [EOL]     assertEquals("a9993e364706816aba3e25717850c26c9cd0d89d", DigestUtils.shaHex("abc".getBytes())); [EOL]     assertEquals("84983e441c3bd26ebaae4aa1f95129e5e54670f1", DigestUtils.shaHex("abcdbcdecdefdefgefghfghighij" + "hijkijkljklmklmnlmnomnopnopq")); [EOL]     assertEquals(DigestUtils.shaHex(testData), DigestUtils.shaHex(new ByteArrayInputStream(testData))); [EOL] } <line_num>: 147,159
