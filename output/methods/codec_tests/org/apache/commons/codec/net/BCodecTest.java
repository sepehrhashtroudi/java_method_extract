public BCodecTest(String name) { [EOL]     super(name); [EOL] } <line_num>: 39,41
private String constructString(int[] unicodeChars) { [EOL]     StringBuffer buffer = new StringBuffer(); [EOL]     if (unicodeChars != null) { [EOL]         for (int i = 0; i < unicodeChars.length; i++) { [EOL]             buffer.append((char) unicodeChars[i]); [EOL]         } [EOL]     } [EOL]     return buffer.toString(); [EOL] } <line_num>: 43,51
public void testNullInput() throws Exception { [EOL]     BCodec bcodec = new BCodec(); [EOL]     assertNull(bcodec.doDecoding(null)); [EOL]     assertNull(bcodec.doEncoding(null)); [EOL] } <line_num>: 53,57
public void testUTF8RoundTrip() throws Exception { [EOL]     String ru_msg = constructString(RUSSIAN_STUFF_UNICODE); [EOL]     String ch_msg = constructString(SWISS_GERMAN_STUFF_UNICODE); [EOL]     BCodec bcodec = new BCodec("UTF-8"); [EOL]     assertEquals("=?UTF-8?B?0JLRgdC10Lxf0L/RgNC40LLQtdGC?=", bcodec.encode(ru_msg)); [EOL]     assertEquals("=?UTF-8?B?R3LDvGV6aV96w6Rtw6Q=?=", bcodec.encode(ch_msg)); [EOL]     assertEquals(ru_msg, bcodec.decode(bcodec.encode(ru_msg))); [EOL]     assertEquals(ch_msg, bcodec.decode(bcodec.encode(ch_msg))); [EOL] } <line_num>: 59,71
public void testBasicEncodeDecode() throws Exception { [EOL]     BCodec bcodec = new BCodec(); [EOL]     String plain = "Hello there"; [EOL]     String encoded = bcodec.encode(plain); [EOL]     assertEquals("Basic B encoding test", "=?UTF-8?B?SGVsbG8gdGhlcmU=?=", encoded); [EOL]     assertEquals("Basic B decoding test", plain, bcodec.decode(encoded)); [EOL] } <line_num>: 73,79
public void testEncodeDecodeNull() throws Exception { [EOL]     BCodec bcodec = new BCodec(); [EOL]     assertNull("Null string B encoding test", bcodec.encode((String) null)); [EOL]     assertNull("Null string B decoding test", bcodec.decode((String) null)); [EOL] } <line_num>: 81,85
public void testEncodeStringWithNull() throws Exception { [EOL]     BCodec bcodec = new BCodec(); [EOL]     String test = null; [EOL]     String result = bcodec.encode(test, "charset"); [EOL]     assertEquals("Result should be null", null, result); [EOL] } <line_num>: 87,92
public void testDecodeStringWithNull() throws Exception { [EOL]     BCodec bcodec = new BCodec(); [EOL]     String test = null; [EOL]     String result = bcodec.decode(test); [EOL]     assertEquals("Result should be null", null, result); [EOL] } <line_num>: 94,99
public void testEncodeObjects() throws Exception { [EOL]     BCodec bcodec = new BCodec(); [EOL]     String plain = "what not"; [EOL]     String encoded = (String) bcodec.encode((Object) plain); [EOL]     assertEquals("Basic B encoding test", "=?UTF-8?B?d2hhdCBub3Q=?=", encoded); [EOL]     Object result = bcodec.encode((Object) null); [EOL]     assertEquals("Encoding a null Object should return null", null, result); [EOL]     try { [EOL]         Object dObj = new Double(3.0); [EOL]         bcodec.encode(dObj); [EOL]         fail("Trying to url encode a Double object should cause an exception."); [EOL]     } catch (EncoderException ee) { [EOL]     } [EOL] } <line_num>: 101,118
public void testInvalidEncoding() { [EOL]     BCodec bcodec = new BCodec("NONSENSE"); [EOL]     try { [EOL]         bcodec.encode("Hello there!"); [EOL]         fail("We set the encoding to a bogus NONSENSE value, this shouldn't have worked."); [EOL]     } catch (EncoderException ee) { [EOL]     } [EOL]     try { [EOL]         bcodec.decode("=?NONSENSE?B?Hello there!?="); [EOL]         fail("We set the encoding to a bogus NONSENSE value, this shouldn't have worked."); [EOL]     } catch (DecoderException ee) { [EOL]     } [EOL] } <line_num>: 120,134
public void testDecodeObjects() throws Exception { [EOL]     BCodec bcodec = new BCodec(); [EOL]     String decoded = "=?UTF-8?B?d2hhdCBub3Q=?="; [EOL]     String plain = (String) bcodec.decode((Object) decoded); [EOL]     assertEquals("Basic B decoding test", "what not", plain); [EOL]     Object result = bcodec.decode((Object) null); [EOL]     assertEquals("Decoding a null Object should return null", null, result); [EOL]     try { [EOL]         Object dObj = new Double(3.0); [EOL]         bcodec.decode(dObj); [EOL]         fail("Trying to url encode a Double object should cause an exception."); [EOL]     } catch (DecoderException ee) { [EOL]     } [EOL] } <line_num>: 136,152
