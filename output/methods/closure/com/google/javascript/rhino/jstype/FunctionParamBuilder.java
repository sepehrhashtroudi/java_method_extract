public FunctionParamBuilder(JSTypeRegistry registry) { [EOL]     this.registry = registry; [EOL] } <line_num>: 54,56
public boolean addRequiredParams(JSType... types) { [EOL]     if (hasOptionalOrVarArgs()) { [EOL]         return false; [EOL]     } [EOL]     for (JSType type : types) { [EOL]         newParameter(type); [EOL]     } [EOL]     return true; [EOL] } <line_num>: 62,71
public boolean addOptionalParams(JSType... types) { [EOL]     if (hasVarArgs()) { [EOL]         return false; [EOL]     } [EOL]     for (JSType type : types) { [EOL]         newParameter(registry.createOptionalType(type)).setOptionalArg(true); [EOL]     } [EOL]     return true; [EOL] } <line_num>: 79,88
public boolean addVarArgs(JSType type) { [EOL]     if (hasVarArgs()) { [EOL]         return false; [EOL]     } [EOL]     if (!type.isEmptyType()) { [EOL]         type = registry.createOptionalType(type); [EOL]     } [EOL]     newParameter(type).setVarArgs(true); [EOL]     return true; [EOL] } <line_num>: 94,109
public Node newParameterFromNode(Node n) { [EOL]     Node newParam = newParameter(n.getJSType()); [EOL]     newParam.setVarArgs(n.isVarArgs()); [EOL]     newParam.setOptionalArg(n.isOptionalArg()); [EOL]     return newParam; [EOL] } <line_num>: 114,119
public Node newOptionalParameterFromNode(Node n) { [EOL]     Node newParam = newParameterFromNode(n); [EOL]     if (!newParam.isVarArgs() && !newParam.isOptionalArg()) { [EOL]         newParam.setOptionalArg(true); [EOL]     } [EOL]     return newParam; [EOL] } <line_num>: 125,131
private Node newParameter(JSType type) { [EOL]     Node paramNode = Node.newString(Token.NAME, ""); [EOL]     paramNode.setJSType(type); [EOL]     root.addChildToBack(paramNode); [EOL]     return paramNode; [EOL] } <line_num>: 134,139
public Node build() { [EOL]     return root; [EOL] } <line_num>: 141,143
private boolean hasOptionalOrVarArgs() { [EOL]     Node lastChild = root.getLastChild(); [EOL]     return lastChild != null && (lastChild.isOptionalArg() || lastChild.isVarArgs()); [EOL] } <line_num>: 145,149
public boolean hasVarArgs() { [EOL]     Node lastChild = root.getLastChild(); [EOL]     return lastChild != null && lastChild.isVarArgs(); [EOL] } <line_num>: 151,154
