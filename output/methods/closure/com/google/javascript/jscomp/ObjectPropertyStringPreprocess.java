ObjectPropertyStringPreprocess(AbstractCompiler compiler) { [EOL]     this.compiler = compiler; [EOL] } <line_num>: 64,66
@Override [EOL] public void process(Node externs, Node root) { [EOL]     addExternDeclaration(externs, IR.var(IR.name(EXTERN_OBJECT_PROPERTY_STRING))); [EOL]     NodeTraversal.traverse(compiler, root, new Callback()); [EOL] } <line_num>: 68,74
private void addExternDeclaration(Node externs, Node declarationStmt) { [EOL]     Node script = externs.getLastChild(); [EOL]     if (script == null || !script.isScript()) { [EOL]         script = IR.script(); [EOL]         externs.addChildToBack(script); [EOL]     } [EOL]     script.addChildToBack(declarationStmt); [EOL] } <line_num>: 76,83
@Override [EOL] public void visit(NodeTraversal t, Node n, Node parent) { [EOL]     if (OBJECT_PROPERTY_STRING.equals(n.getQualifiedName())) { [EOL]         Node newName = IR.name(EXTERN_OBJECT_PROPERTY_STRING); [EOL]         newName.copyInformationFrom(n); [EOL]         parent.replaceChild(n, newName); [EOL]         compiler.reportCodeChange(); [EOL]         return; [EOL]     } [EOL]     if (!n.isNew()) { [EOL]         return; [EOL]     } [EOL]     Node objectName = n.getFirstChild(); [EOL]     if (!EXTERN_OBJECT_PROPERTY_STRING.equals(objectName.getQualifiedName())) { [EOL]         return; [EOL]     } [EOL]     if (n.getChildCount() != 3) { [EOL]         compiler.report(t.makeError(n, INVALID_NUM_ARGUMENTS_ERROR, "" + n.getChildCount())); [EOL]         return; [EOL]     } [EOL]     Node firstArgument = objectName.getNext(); [EOL]     if (!firstArgument.isQualifiedName()) { [EOL]         compiler.report(t.makeError(firstArgument, QUALIFIED_NAME_EXPECTED_ERROR, Token.name(firstArgument.getType()))); [EOL]         return; [EOL]     } [EOL]     Node secondArgument = firstArgument.getNext(); [EOL]     if (!secondArgument.isString()) { [EOL]         compiler.report(t.makeError(secondArgument, STRING_LITERAL_EXPECTED_ERROR, Token.name(secondArgument.getType()))); [EOL]         return; [EOL]     } [EOL]     Node newFirstArgument = NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(), compiler.getCodingConvention().getGlobalObject()).srcrefTree(firstArgument); [EOL]     Node newSecondArgument = NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(), firstArgument.getQualifiedName() + "." + firstArgument.getNext().getString()).srcrefTree(secondArgument); [EOL]     n.replaceChild(firstArgument, newFirstArgument); [EOL]     n.replaceChild(secondArgument, newSecondArgument); [EOL]     compiler.reportCodeChange(); [EOL] } <line_num>: 86,147
