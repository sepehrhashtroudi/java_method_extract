public GraphPruner(DiGraph<N, E> graph) { [EOL]     this.graph = graph; [EOL] } <line_num>: 39,41
public LinkedDirectedGraph<N, E> prune(Predicate<N> keep) { [EOL]     LinkedDirectedGraph<N, E> workGraph = cloneGraph(graph); [EOL]     for (DiGraphNode<N, E> node : workGraph.getDirectedGraphNodes()) { [EOL]         for (DiGraphEdge<N, E> inEdge : node.getInEdges()) { [EOL]             for (DiGraphEdge<N, E> outEdge : node.getOutEdges()) { [EOL]                 N source = inEdge.getSource().getValue(); [EOL]                 N dest = outEdge.getDestination().getValue(); [EOL]                 if (!workGraph.isConnectedInDirection(source, dest)) { [EOL]                     workGraph.connect(source, outEdge.getValue(), dest); [EOL]                 } [EOL]             } [EOL]         } [EOL]     } [EOL]     LinkedDirectedGraph<N, E> resultGraph = LinkedDirectedGraph.create(); [EOL]     for (DiGraphNode<N, E> node : workGraph.getDirectedGraphNodes()) { [EOL]         if (keep.apply(node.getValue())) { [EOL]             resultGraph.createNode(node.getValue()); [EOL]             for (DiGraphEdge<N, E> outEdge : node.getOutEdges()) { [EOL]                 N source = node.getValue(); [EOL]                 N dest = outEdge.getDestination().getValue(); [EOL]                 if (keep.apply(dest)) { [EOL]                     resultGraph.createNode(dest); [EOL]                     if (source != dest && !resultGraph.isConnectedInDirection(source, dest)) { [EOL]                         resultGraph.connect(source, outEdge.getValue(), dest); [EOL]                     } [EOL]                 } [EOL]             } [EOL]         } [EOL]     } [EOL]     return resultGraph; [EOL] } <line_num>: 43,83
private static <N, E> LinkedDirectedGraph<N, E> cloneGraph(DiGraph<N, E> graph) { [EOL]     LinkedDirectedGraph<N, E> newGraph = LinkedDirectedGraph.create(); [EOL]     for (DiGraphNode<N, E> node : graph.getDirectedGraphNodes()) { [EOL]         newGraph.createNode(node.getValue()); [EOL]         for (DiGraphEdge<N, E> outEdge : node.getOutEdges()) { [EOL]             N dest = outEdge.getDestination().getValue(); [EOL]             newGraph.createNode(dest); [EOL]             newGraph.connect(node.getValue(), outEdge.getValue(), dest); [EOL]         } [EOL]     } [EOL]     return newGraph; [EOL] } <line_num>: 85,99
