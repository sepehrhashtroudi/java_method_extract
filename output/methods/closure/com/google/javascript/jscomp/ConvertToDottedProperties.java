ConvertToDottedProperties(AbstractCompiler compiler) { [EOL]     this.compiler = compiler; [EOL] } <line_num>: 35,37
@Override [EOL] public void process(Node externs, Node root) { [EOL]     NodeTraversal.traverse(compiler, root, this); [EOL] } <line_num>: 39,42
@Override [EOL] public void visit(NodeTraversal t, Node n, Node parent) { [EOL]     switch(n.getType()) { [EOL]         case Token.GETTER_DEF: [EOL]         case Token.SETTER_DEF: [EOL]         case Token.STRING_KEY: [EOL]             if (NodeUtil.isValidPropertyName(n.getString())) { [EOL]                 n.putBooleanProp(Node.QUOTED_PROP, false); [EOL]                 compiler.reportCodeChange(); [EOL]             } [EOL]             break; [EOL]         case Token.GETELEM: [EOL]             Node left = n.getFirstChild(); [EOL]             Node right = left.getNext(); [EOL]             if (right.isString() && NodeUtil.isValidPropertyName(right.getString())) { [EOL]                 n.removeChild(left); [EOL]                 n.removeChild(right); [EOL]                 parent.replaceChild(n, IR.getprop(left, right)); [EOL]                 compiler.reportCodeChange(); [EOL]             } [EOL]             break; [EOL]     } [EOL] } <line_num>: 44,68
