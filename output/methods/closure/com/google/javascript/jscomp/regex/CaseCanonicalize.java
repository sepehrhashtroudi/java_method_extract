private CaseCanonicalize() { [EOL] } <line_num>: 47,49
DeltaSet(int delta, CharRanges codeUnits) { [EOL]     this.delta = delta; [EOL]     this.codeUnits = codeUnits; [EOL] } <line_num>: 625,628
public static String caseCanonicalize(String s) { [EOL]     for (int i = 0, n = s.length(); i < n; ++i) { [EOL]         char ch = s.charAt(i); [EOL]         char cu = caseCanonicalize(ch); [EOL]         if (cu != ch) { [EOL]             StringBuilder sb = new StringBuilder(s); [EOL]             sb.setCharAt(i, cu); [EOL]             while (++i < n) { [EOL]                 sb.setCharAt(i, caseCanonicalize(s.charAt(i))); [EOL]             } [EOL]             return sb.toString(); [EOL]         } [EOL]     } [EOL]     return s; [EOL] } <line_num>: 190,204
public static char caseCanonicalize(char ch) { [EOL]     if (ch < 0x80) { [EOL]         return ('A' <= ch && ch <= 'Z') ? (char) (ch | 32) : ch; [EOL]     } [EOL]     if (CASE_SENSITIVE.contains(ch)) { [EOL]         for (DeltaSet ds : CANON_DELTA_SETS) { [EOL]             if (ds.codeUnits.contains(ch)) { [EOL]                 return (char) (ch - ds.delta); [EOL]             } [EOL]         } [EOL]     } [EOL]     return ch; [EOL] } <line_num>: 211,224
public static CharRanges expandToAllMatched(CharRanges ranges) { [EOL]     CharRanges caseSensitive = ranges.intersection(CASE_SENSITIVE); [EOL]     if (caseSensitive.isEmpty()) { [EOL]         return ranges; [EOL]     } [EOL]     CharRanges expanded = CharRanges.EMPTY; [EOL]     for (DeltaSet ds : DELTA_SETS) { [EOL]         expanded = expanded.union(caseSensitive.intersection(ds.codeUnits).shift(-ds.delta)); [EOL]     } [EOL]     return ranges.union(expanded); [EOL] } <line_num>: 232,241
public static CharRanges reduceToMinimum(CharRanges ranges) { [EOL]     CharRanges caseSensitive = ranges.intersection(CASE_SENSITIVE); [EOL]     if (caseSensitive.isEmpty()) { [EOL]         return ranges; [EOL]     } [EOL]     CharRanges expanded = CharRanges.EMPTY; [EOL]     for (DeltaSet ds : CANON_DELTA_SETS) { [EOL]         expanded = expanded.union(caseSensitive.intersection(ds.codeUnits).shift(-ds.delta)); [EOL]     } [EOL]     expanded = expanded.difference(UCASE_ASCII_LETTERS).union(expanded.intersection(UCASE_ASCII_LETTERS).shift(32)); [EOL]     return ranges.difference(caseSensitive).union(expanded); [EOL] } <line_num>: 254,269
