RemoveTryCatch(AbstractCompiler compiler) { [EOL]     this.compiler = compiler; [EOL]     this.tryNodesContainingReturnStatements = new HashSet<Node>(); [EOL] } <line_num>: 37,40
@Override [EOL] public void process(Node externs, Node root) { [EOL]     NodeTraversal.traverse(compiler, root, new RemoveTryCatchCode()); [EOL] } <line_num>: 45,48
@Override [EOL] public void visit(NodeTraversal t, Node n, Node parent) { [EOL]     switch(n.getType()) { [EOL]         case Token.TRY: [EOL]             JSDocInfo info = n.getJSDocInfo(); [EOL]             if (info != null && info.shouldPreserveTry()) { [EOL]                 return; [EOL]             } [EOL]             Node tryBlock = n.getFirstChild(); [EOL]             Node catchBlock = tryBlock.getNext(); [EOL]             Node finallyBlock = catchBlock != null ? catchBlock.getNext() : null; [EOL]             if (finallyBlock != null && tryNodesContainingReturnStatements.contains(n)) { [EOL]                 return; [EOL]             } [EOL]             if (catchBlock.hasOneChild()) { [EOL]                 NodeUtil.redeclareVarsInsideBranch(catchBlock); [EOL]             } [EOL]             n.detachChildren(); [EOL]             Node block; [EOL]             if (!NodeUtil.isStatementBlock(parent)) { [EOL]                 block = IR.block(); [EOL]                 parent.replaceChild(n, block); [EOL]                 block.addChildToFront(tryBlock); [EOL]             } else { [EOL]                 parent.replaceChild(n, tryBlock); [EOL]                 block = parent; [EOL]             } [EOL]             if (finallyBlock != null) { [EOL]                 block.addChildAfter(finallyBlock, tryBlock); [EOL]             } [EOL]             compiler.reportCodeChange(); [EOL]             break; [EOL]         case Token.RETURN: [EOL]             boolean isInTryBlock = false; [EOL]             for (Node anc = parent; anc != null && !anc.isFunction(); anc = anc.getParent()) { [EOL]                 if (anc.isTry()) { [EOL]                     tryNodesContainingReturnStatements.add(anc); [EOL]                     break; [EOL]                 } [EOL]             } [EOL]             break; [EOL]     } [EOL] } <line_num>: 51,112
