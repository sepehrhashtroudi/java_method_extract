private CompilationLevel() { [EOL] } <line_num>: 51,51
public void setOptionsForCompilationLevel(CompilerOptions options) { [EOL]     switch(this) { [EOL]         case WHITESPACE_ONLY: [EOL]             applyBasicCompilationOptions(options); [EOL]             break; [EOL]         case SIMPLE_OPTIMIZATIONS: [EOL]             applySafeCompilationOptions(options); [EOL]             break; [EOL]         case ADVANCED_OPTIMIZATIONS: [EOL]             applyFullCompilationOptions(options); [EOL]             break; [EOL]         default: [EOL]             throw new RuntimeException("Unknown compilation level."); [EOL]     } [EOL] } <line_num>: 53,67
public void setDebugOptionsForCompilationLevel(CompilerOptions options) { [EOL]     options.anonymousFunctionNaming = AnonymousFunctionNamingPolicy.UNMAPPED; [EOL]     options.generatePseudoNames = true; [EOL]     options.removeClosureAsserts = false; [EOL]     options.shadowVariables = false; [EOL] } <line_num>: 69,75
private static void applyBasicCompilationOptions(CompilerOptions options) { [EOL]     options.skipAllCompilerPasses(); [EOL]     options.setWarningLevel(DiagnosticGroups.NON_STANDARD_JSDOC, CheckLevel.OFF); [EOL] } <line_num>: 81,87
private static void applySafeCompilationOptions(CompilerOptions options) { [EOL]     options.replaceIdGenerators = false; [EOL]     options.dependencyOptions.setDependencySorting(true); [EOL]     options.closurePass = true; [EOL]     options.setRenamingPolicy(VariableRenamingPolicy.LOCAL, PropertyRenamingPolicy.OFF); [EOL]     options.shadowVariables = true; [EOL]     options.setInlineVariables(Reach.LOCAL_ONLY); [EOL]     options.flowSensitiveInlineVariables = true; [EOL]     options.setInlineFunctions(Reach.LOCAL_ONLY); [EOL]     options.checkGlobalThisLevel = CheckLevel.OFF; [EOL]     options.foldConstants = true; [EOL]     options.coalesceVariableNames = true; [EOL]     options.deadAssignmentElimination = true; [EOL]     options.collapseVariableDeclarations = true; [EOL]     options.convertToDottedProperties = true; [EOL]     options.labelRenaming = true; [EOL]     options.removeDeadCode = true; [EOL]     options.optimizeArgumentsArray = true; [EOL]     options.setRemoveUnusedVariables(Reach.LOCAL_ONLY); [EOL]     options.collapseObjectLiterals = true; [EOL]     options.protectHiddenSideEffects = true; [EOL]     options.setWarningLevel(DiagnosticGroups.NON_STANDARD_JSDOC, CheckLevel.OFF); [EOL] } <line_num>: 95,125
private static void applyFullCompilationOptions(CompilerOptions options) { [EOL]     options.dependencyOptions.setDependencySorting(true); [EOL]     options.closurePass = true; [EOL]     options.foldConstants = true; [EOL]     options.coalesceVariableNames = true; [EOL]     options.deadAssignmentElimination = true; [EOL]     options.extractPrototypeMemberDeclarations = true; [EOL]     options.collapseVariableDeclarations = true; [EOL]     options.convertToDottedProperties = true; [EOL]     options.rewriteFunctionExpressions = true; [EOL]     options.labelRenaming = true; [EOL]     options.removeDeadCode = true; [EOL]     options.optimizeArgumentsArray = true; [EOL]     options.collapseObjectLiterals = true; [EOL]     options.protectHiddenSideEffects = true; [EOL]     options.removeClosureAsserts = true; [EOL]     options.aliasKeywords = true; [EOL]     options.reserveRawExports = true; [EOL]     options.setRenamingPolicy(VariableRenamingPolicy.ALL, PropertyRenamingPolicy.ALL_UNQUOTED); [EOL]     options.shadowVariables = true; [EOL]     options.removeUnusedPrototypeProperties = true; [EOL]     options.removeUnusedPrototypePropertiesInExterns = true; [EOL]     options.collapseAnonymousFunctions = true; [EOL]     options.collapseProperties = true; [EOL]     options.checkGlobalThisLevel = CheckLevel.WARNING; [EOL]     options.rewriteFunctionExpressions = true; [EOL]     options.smartNameRemoval = true; [EOL]     options.inlineConstantVars = true; [EOL]     options.setInlineFunctions(Reach.ALL); [EOL]     options.inlineGetters = true; [EOL]     options.setInlineVariables(Reach.ALL); [EOL]     options.flowSensitiveInlineVariables = true; [EOL]     options.computeFunctionSideEffects = true; [EOL]     options.setRemoveUnusedVariables(Reach.ALL); [EOL]     options.crossModuleCodeMotion = true; [EOL]     options.crossModuleMethodMotion = true; [EOL]     options.devirtualizePrototypeMethods = true; [EOL]     options.optimizeParameters = true; [EOL]     options.optimizeReturns = true; [EOL]     options.optimizeCalls = true; [EOL]     options.setWarningLevel(DiagnosticGroups.NON_STANDARD_JSDOC, CheckLevel.WARNING); [EOL] } <line_num>: 132,189
public void setTypeBasedOptimizationOptions(CompilerOptions options) { [EOL]     switch(this) { [EOL]         case ADVANCED_OPTIMIZATIONS: [EOL]             options.inferTypes = true; [EOL]             options.disambiguateProperties = true; [EOL]             options.ambiguateProperties = true; [EOL]             options.inlineProperties = true; [EOL]             options.removeUnusedClassProperties = true; [EOL]             break; [EOL]         case SIMPLE_OPTIMIZATIONS: [EOL]             break; [EOL]         case WHITESPACE_ONLY: [EOL]             break; [EOL]     } [EOL] } <line_num>: 195,213
