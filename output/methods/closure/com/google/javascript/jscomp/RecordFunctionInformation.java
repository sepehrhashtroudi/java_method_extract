RecordFunctionInformation(Compiler compiler, FunctionNames functionNames) { [EOL]     this.compiler = compiler; [EOL]     this.moduleGraph = compiler.getModuleGraph(); [EOL]     this.functionNames = functionNames; [EOL]     this.mapBuilder = FunctionInformationMap.newBuilder(); [EOL] } <line_num>: 46,52
FunctionInformationMap getMap() { [EOL]     return mapBuilder.build(); [EOL] } <line_num>: 57,59
@Override [EOL] public int compare(JSModule o1, JSModule o2) { [EOL]     return o1.getName().compareTo(o2.getName()); [EOL] } <line_num>: 70,73
@Override [EOL] public void process(Node externs, Node root) { [EOL]     NodeTraversal.traverse(compiler, root, this); [EOL]     if (moduleGraph == null) { [EOL]         addModuleInformation(null); [EOL]     } else { [EOL]         TreeSet<JSModule> modules = Sets.newTreeSet(new Comparator<JSModule>() { [EOL]  [EOL]             @Override [EOL]             public int compare(JSModule o1, JSModule o2) { [EOL]                 return o1.getName().compareTo(o2.getName()); [EOL]             } [EOL]         }); [EOL]         Iterables.addAll(modules, moduleGraph.getAllModules()); [EOL]         for (JSModule m : modules) { [EOL]             addModuleInformation(m); [EOL]         } [EOL]     } [EOL] } <line_num>: 61,80
@Override [EOL] public void visit(NodeTraversal t, Node n, Node parent) { [EOL]     if (!n.isFunction()) { [EOL]         return; [EOL]     } [EOL]     int id = functionNames.getFunctionId(n); [EOL]     if (id < 0) { [EOL]         return; [EOL]     } [EOL]     String compiledSource = compiler.toSource(n); [EOL]     JSModule module = t.getModule(); [EOL]     mapBuilder.addEntry(FunctionInformationMap.Entry.newBuilder().setId(id).setSourceName(NodeUtil.getSourceName(n)).setLineNumber(n.getLineno()).setModuleName(moduleGraph == null ? "" : module.getName()).setSize(compiledSource.length()).setName(functionNames.getFunctionName(n)).setCompiledSource(compiledSource).build()); [EOL] } <line_num>: 82,104
private void addModuleInformation(JSModule module) { [EOL]     String name; [EOL]     String source; [EOL]     if (module != null) { [EOL]         name = module.getName(); [EOL]         source = compiler.toSource(module); [EOL]     } else { [EOL]         name = ""; [EOL]         source = compiler.toSource(); [EOL]     } [EOL]     mapBuilder.addModule(FunctionInformationMap.Module.newBuilder().setName(name).setCompiledSource(source).build()); [EOL] } <line_num>: 117,131
