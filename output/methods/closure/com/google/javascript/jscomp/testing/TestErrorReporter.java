public TestErrorReporter(String[] errors, String[] warnings) { [EOL]     this.errors = errors; [EOL]     this.warnings = warnings; [EOL] } <line_num>: 43,46
@Override [EOL] public void error(String message, String sourceName, int line, String lineSource, int lineOffset) { [EOL]     if (errors != null && errorsIndex < errors.length) { [EOL]         assertEquals(errors[errorsIndex++], message); [EOL]     } else { [EOL]         fail("extra error: " + message); [EOL]     } [EOL] } <line_num>: 48,56
@Override [EOL] public void warning(String message, String sourceName, int line, String lineSource, int lineOffset) { [EOL]     if (warnings != null && warningsIndex < warnings.length) { [EOL]         assertEquals(warnings[warningsIndex++], message); [EOL]     } else { [EOL]         fail("extra warning: " + message); [EOL]     } [EOL] } <line_num>: 58,66
@Override [EOL] public EvaluatorException runtimeError(String message, String sourceName, int line, String lineSource, int lineOffset) { [EOL]     return new EvaluatorException("JSCompiler test code: " + message); [EOL] } <line_num>: 68,72
public boolean hasEncounteredAllWarnings() { [EOL]     return (warnings == null) ? warningsIndex == 0 : warnings.length == warningsIndex; [EOL] } <line_num>: 77,81
public boolean hasEncounteredAllErrors() { [EOL]     return (errors == null) ? errorsIndex == 0 : errors.length == errorsIndex; [EOL] } <line_num>: 86,90
