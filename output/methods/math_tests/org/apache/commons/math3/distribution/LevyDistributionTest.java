@Test [EOL] public void testParameters() { [EOL]     LevyDistribution d = makeDistribution(); [EOL]     Assert.assertEquals(1.2, d.getLocation(), Precision.EPSILON); [EOL]     Assert.assertEquals(0.4, d.getScale(), Precision.EPSILON); [EOL] } <line_num>: 26,31
@Test [EOL] public void testSupport() { [EOL]     LevyDistribution d = makeDistribution(); [EOL]     Assert.assertEquals(d.getLocation(), d.getSupportLowerBound(), Precision.EPSILON); [EOL]     Assert.assertTrue(Double.isInfinite(d.getSupportUpperBound())); [EOL]     Assert.assertTrue(d.isSupportConnected()); [EOL] } <line_num>: 33,39
@Override [EOL] public LevyDistribution makeDistribution() { [EOL]     return new LevyDistribution(new Well19937a(0xc5a5506bbb17e57al), 1.2, 0.4); [EOL] } <line_num>: 41,44
@Override [EOL] public double[] makeCumulativeTestPoints() { [EOL]     return new double[] { 1.2001, 1.21, 1.225, 1.25, 1.3, 1.9, 3.4, 5.6 }; [EOL] } <line_num>: 46,51
@Override [EOL] public double[] makeCumulativeTestValues() { [EOL]     return new double[] { 0, 2.53962850749e-10, 6.33424836662e-05, 0.00467773498105, 0.0455002638964, 0.449691797969, 0.669815357599, 0.763024600553 }; [EOL] } <line_num>: 53,60
@Override [EOL] public double[] makeDensityTestValues() { [EOL]     return new double[] { 0, 5.20056373765e-07, 0.0214128361224, 0.413339707082, 1.07981933026, 0.323749319161, 0.0706032550094, 0.026122839884 }; [EOL] } <line_num>: 62,69
