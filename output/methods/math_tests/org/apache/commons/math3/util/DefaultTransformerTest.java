@Test [EOL] public void testTransformDouble() throws Exception { [EOL]     double expected = 1.0; [EOL]     Double input = Double.valueOf(expected); [EOL]     DefaultTransformer t = new DefaultTransformer(); [EOL]     Assert.assertEquals(expected, t.transform(input), 1.0e-4); [EOL] } <line_num>: 36,42
@Test [EOL] public void testTransformNull() throws Exception { [EOL]     DefaultTransformer t = new DefaultTransformer(); [EOL]     try { [EOL]         t.transform(null); [EOL]         Assert.fail("Expecting NullArgumentException"); [EOL]     } catch (NullArgumentException e) { [EOL]     } [EOL] } <line_num>: 47,56
@Test [EOL] public void testTransformInteger() throws Exception { [EOL]     double expected = 1.0; [EOL]     Integer input = Integer.valueOf(1); [EOL]     DefaultTransformer t = new DefaultTransformer(); [EOL]     Assert.assertEquals(expected, t.transform(input), 1.0e-4); [EOL] } <line_num>: 61,67
@Test [EOL] public void testTransformBigDecimal() throws Exception { [EOL]     double expected = 1.0; [EOL]     BigDecimal input = new BigDecimal("1.0"); [EOL]     DefaultTransformer t = new DefaultTransformer(); [EOL]     Assert.assertEquals(expected, t.transform(input), 1.0e-4); [EOL] } <line_num>: 72,78
@Test [EOL] public void testTransformString() throws Exception { [EOL]     double expected = 1.0; [EOL]     String input = "1.0"; [EOL]     DefaultTransformer t = new DefaultTransformer(); [EOL]     Assert.assertEquals(expected, t.transform(input), 1.0e-4); [EOL] } <line_num>: 83,89
@Test(expected = MathIllegalArgumentException.class) [EOL] public void testTransformObject() { [EOL]     Boolean input = Boolean.TRUE; [EOL]     DefaultTransformer t = new DefaultTransformer(); [EOL]     t.transform(input); [EOL] } <line_num>: 94,99
@Test [EOL] public void testSerial() { [EOL]     Assert.assertEquals(new DefaultTransformer(), TestUtils.serializeAndRecover(new DefaultTransformer())); [EOL] } <line_num>: 101,104
