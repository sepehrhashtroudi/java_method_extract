@Test [EOL] public void dimension2() { [EOL]     MultiKMeansPlusPlusClusterer<DoublePoint> transformer = new MultiKMeansPlusPlusClusterer<DoublePoint>(new KMeansPlusPlusClusterer<DoublePoint>(3, 10), 5); [EOL]     DoublePoint[] points = new DoublePoint[] { new DoublePoint(new int[] { -15, 3 }), new DoublePoint(new int[] { -15, 4 }), new DoublePoint(new int[] { -15, 5 }), new DoublePoint(new int[] { -14, 3 }), new DoublePoint(new int[] { -14, 5 }), new DoublePoint(new int[] { -13, 3 }), new DoublePoint(new int[] { -13, 4 }), new DoublePoint(new int[] { -13, 5 }), new DoublePoint(new int[] { -1, 0 }), new DoublePoint(new int[] { -1, -1 }), new DoublePoint(new int[] { 0, -1 }), new DoublePoint(new int[] { 1, -1 }), new DoublePoint(new int[] { 1, -2 }), new DoublePoint(new int[] { 13, 3 }), new DoublePoint(new int[] { 13, 4 }), new DoublePoint(new int[] { 14, 4 }), new DoublePoint(new int[] { 14, 7 }), new DoublePoint(new int[] { 16, 5 }), new DoublePoint(new int[] { 16, 6 }), new DoublePoint(new int[] { 17, 4 }), new DoublePoint(new int[] { 17, 7 }) }; [EOL]     List<CentroidCluster<DoublePoint>> clusters = transformer.cluster(Arrays.asList(points)); [EOL]     Assert.assertEquals(3, clusters.size()); [EOL]     boolean cluster1Found = false; [EOL]     boolean cluster2Found = false; [EOL]     boolean cluster3Found = false; [EOL]     double epsilon = 1e-6; [EOL]     for (CentroidCluster<DoublePoint> cluster : clusters) { [EOL]         Clusterable center = cluster.getCenter(); [EOL]         double[] point = center.getPoint(); [EOL]         if (point[0] < 0) { [EOL]             cluster1Found = true; [EOL]             Assert.assertEquals(8, cluster.getPoints().size()); [EOL]             Assert.assertEquals(-14, point[0], epsilon); [EOL]             Assert.assertEquals(4, point[1], epsilon); [EOL]         } else if (point[1] < 0) { [EOL]             cluster2Found = true; [EOL]             Assert.assertEquals(5, cluster.getPoints().size()); [EOL]             Assert.assertEquals(0, point[0], epsilon); [EOL]             Assert.assertEquals(-1, point[1], epsilon); [EOL]         } else { [EOL]             cluster3Found = true; [EOL]             Assert.assertEquals(8, cluster.getPoints().size()); [EOL]             Assert.assertEquals(15, point[0], epsilon); [EOL]             Assert.assertEquals(5, point[1], epsilon); [EOL]         } [EOL]     } [EOL]     Assert.assertTrue(cluster1Found); [EOL]     Assert.assertTrue(cluster2Found); [EOL]     Assert.assertTrue(cluster3Found); [EOL] } <line_num>: 29,96
