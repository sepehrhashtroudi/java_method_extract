public RandomCirclePointGenerator(double x, double y, double radius, double xSigma, double ySigma, long seed) { [EOL]     final RandomGenerator rng = new Well44497b(seed); [EOL]     this.radius = radius; [EOL]     cX = new NormalDistribution(rng, x, xSigma, NormalDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY); [EOL]     cY = new NormalDistribution(rng, y, ySigma, NormalDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY); [EOL]     tP = new UniformRealDistribution(rng, 0, MathUtils.TWO_PI, UniformRealDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY); [EOL] } <line_num>: 50,64
public Vector2D[] generate(int n) { [EOL]     final Vector2D[] cloud = new Vector2D[n]; [EOL]     for (int i = 0; i < n; i++) { [EOL]         cloud[i] = create(); [EOL]     } [EOL]     return cloud; [EOL] } <line_num>: 72,78
private Vector2D create() { [EOL]     final double t = tP.sample(); [EOL]     final double pX = cX.sample() + radius * FastMath.cos(t); [EOL]     final double pY = cY.sample() + radius * FastMath.sin(t); [EOL]     return new Vector2D(pX, pY); [EOL] } <line_num>: 85,91
