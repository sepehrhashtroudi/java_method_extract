public Component getMainPanel() { [EOL]     return getContentPane(); [EOL] } <line_num>: 49,51
public void actionPerformed(ActionEvent ae) { [EOL]     JFileChooser fileChooser = new JFileChooser(System.getProperty("user.dir")); [EOL]     if (fileChooser.showSaveDialog(frame) == JFileChooser.APPROVE_OPTION) { [EOL]         File file = fileChooser.getSelectedFile(); [EOL]         BufferedImage img = getScreenShot(frame.getMainPanel()); [EOL]         try { [EOL]             ImageIO.write(img, "png", file); [EOL]         } catch (Exception e) { [EOL]             e.printStackTrace(); [EOL]         } [EOL]     } [EOL] } <line_num>: 60,72
public void actionPerformed(ActionEvent e) { [EOL]     System.exit(0); [EOL] } <line_num>: 77,79
public void run() { [EOL]     JMenuItem screenshot = new JMenuItem("Screenshot (png)"); [EOL]     screenshot.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_0, InputEvent.CTRL_DOWN_MASK)); [EOL]     screenshot.addActionListener(new ActionListener() { [EOL]  [EOL]         public void actionPerformed(ActionEvent ae) { [EOL]             JFileChooser fileChooser = new JFileChooser(System.getProperty("user.dir")); [EOL]             if (fileChooser.showSaveDialog(frame) == JFileChooser.APPROVE_OPTION) { [EOL]                 File file = fileChooser.getSelectedFile(); [EOL]                 BufferedImage img = getScreenShot(frame.getMainPanel()); [EOL]                 try { [EOL]                     ImageIO.write(img, "png", file); [EOL]                 } catch (Exception e) { [EOL]                     e.printStackTrace(); [EOL]                 } [EOL]             } [EOL]         } [EOL]     }); [EOL]     JMenuItem exit = new JMenuItem("Exit"); [EOL]     exit.addActionListener(new ActionListener() { [EOL]  [EOL]         public void actionPerformed(ActionEvent e) { [EOL]             System.exit(0); [EOL]         } [EOL]     }); [EOL]     JMenu menu = new JMenu("File"); [EOL]     menu.add(screenshot); [EOL]     menu.add(exit); [EOL]     JMenuBar mb = new JMenuBar(); [EOL]     mb.add(menu); [EOL]     frame.setJMenuBar(mb); [EOL]     frame.setLocationRelativeTo(null); [EOL]     frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); [EOL]     frame.setVisible(true); [EOL] } <line_num>: 56,92
public static void showExampleFrame(final ExampleFrame frame) { [EOL]     Runnable r = new Runnable() { [EOL]  [EOL]         public void run() { [EOL]             JMenuItem screenshot = new JMenuItem("Screenshot (png)"); [EOL]             screenshot.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_0, InputEvent.CTRL_DOWN_MASK)); [EOL]             screenshot.addActionListener(new ActionListener() { [EOL]  [EOL]                 public void actionPerformed(ActionEvent ae) { [EOL]                     JFileChooser fileChooser = new JFileChooser(System.getProperty("user.dir")); [EOL]                     if (fileChooser.showSaveDialog(frame) == JFileChooser.APPROVE_OPTION) { [EOL]                         File file = fileChooser.getSelectedFile(); [EOL]                         BufferedImage img = getScreenShot(frame.getMainPanel()); [EOL]                         try { [EOL]                             ImageIO.write(img, "png", file); [EOL]                         } catch (Exception e) { [EOL]                             e.printStackTrace(); [EOL]                         } [EOL]                     } [EOL]                 } [EOL]             }); [EOL]             JMenuItem exit = new JMenuItem("Exit"); [EOL]             exit.addActionListener(new ActionListener() { [EOL]  [EOL]                 public void actionPerformed(ActionEvent e) { [EOL]                     System.exit(0); [EOL]                 } [EOL]             }); [EOL]             JMenu menu = new JMenu("File"); [EOL]             menu.add(screenshot); [EOL]             menu.add(exit); [EOL]             JMenuBar mb = new JMenuBar(); [EOL]             mb.add(menu); [EOL]             frame.setJMenuBar(mb); [EOL]             frame.setLocationRelativeTo(null); [EOL]             frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); [EOL]             frame.setVisible(true); [EOL]         } [EOL]     }; [EOL]     SwingUtilities.invokeLater(r); [EOL] } <line_num>: 54,95
private static BufferedImage getScreenShot(Component component) { [EOL]     BufferedImage image = new BufferedImage(component.getWidth(), component.getHeight(), BufferedImage.TYPE_INT_RGB); [EOL]     component.paint(image.getGraphics()); [EOL]     return image; [EOL] } <line_num>: 97,102
