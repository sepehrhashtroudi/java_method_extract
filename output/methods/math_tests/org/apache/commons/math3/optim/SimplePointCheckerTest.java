@Test(expected = NotStrictlyPositiveException.class) [EOL] public void testIterationCheckPrecondition() { [EOL]     new SimplePointChecker<PointValuePair>(1e-1, 1e-2, 0); [EOL] } <line_num>: 24,27
@Test [EOL] public void testIterationCheck() { [EOL]     final int max = 10; [EOL]     final SimplePointChecker<PointValuePair> checker = new SimplePointChecker<PointValuePair>(1e-1, 1e-2, max); [EOL]     Assert.assertTrue(checker.converged(max, null, null)); [EOL]     Assert.assertTrue(checker.converged(max + 1, null, null)); [EOL] } <line_num>: 29,36
@Test [EOL] public void testIterationCheckDisabled() { [EOL]     final SimplePointChecker<PointValuePair> checker = new SimplePointChecker<PointValuePair>(1e-8, 1e-8); [EOL]     final PointValuePair a = new PointValuePair(new double[] { 1d }, 1d); [EOL]     final PointValuePair b = new PointValuePair(new double[] { 10d }, 10d); [EOL]     Assert.assertFalse(checker.converged(-1, a, b)); [EOL]     Assert.assertFalse(checker.converged(0, a, b)); [EOL]     Assert.assertFalse(checker.converged(1000000, a, b)); [EOL]     Assert.assertTrue(checker.converged(-1, a, a)); [EOL]     Assert.assertTrue(checker.converged(-1, b, b)); [EOL] } <line_num>: 38,52
