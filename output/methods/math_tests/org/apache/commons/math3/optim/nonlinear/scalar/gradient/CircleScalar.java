public CircleScalar() { [EOL]     points = new ArrayList<Vector2D>(); [EOL] } <line_num>: 34,36
public void addPoint(double px, double py) { [EOL]     points.add(new Vector2D(px, py)); [EOL] } <line_num>: 38,40
public double getRadius(Vector2D center) { [EOL]     double r = 0; [EOL]     for (Vector2D point : points) { [EOL]         r += point.distance(center); [EOL]     } [EOL]     return r / points.size(); [EOL] } <line_num>: 42,48
public double value(double[] params) { [EOL]     Vector2D center = new Vector2D(params[0], params[1]); [EOL]     double radius = getRadius(center); [EOL]     double sum = 0; [EOL]     for (Vector2D point : points) { [EOL]         double di = point.distance(center) - radius; [EOL]         sum += di * di; [EOL]     } [EOL]     return sum; [EOL] } <line_num>: 52,61
public ObjectiveFunction getObjectiveFunction() { [EOL]     return new ObjectiveFunction(new MultivariateFunction() { [EOL]  [EOL]         public double value(double[] params) { [EOL]             Vector2D center = new Vector2D(params[0], params[1]); [EOL]             double radius = getRadius(center); [EOL]             double sum = 0; [EOL]             for (Vector2D point : points) { [EOL]                 double di = point.distance(center) - radius; [EOL]                 sum += di * di; [EOL]             } [EOL]             return sum; [EOL]         } [EOL]     }); [EOL] } <line_num>: 50,63
public double[] value(double[] params) { [EOL]     Vector2D center = new Vector2D(params[0], params[1]); [EOL]     double radius = getRadius(center); [EOL]     double dJdX = 0; [EOL]     double dJdY = 0; [EOL]     for (Vector2D pk : points) { [EOL]         double dk = pk.distance(center); [EOL]         dJdX += (center.getX() - pk.getX()) * (dk - radius) / dk; [EOL]         dJdY += (center.getY() - pk.getY()) * (dk - radius) / dk; [EOL]     } [EOL]     dJdX *= 2; [EOL]     dJdY *= 2; [EOL]     return new double[] { dJdX, dJdY }; [EOL] } <line_num>: 67,82
public ObjectiveFunctionGradient getObjectiveFunctionGradient() { [EOL]     return new ObjectiveFunctionGradient(new MultivariateVectorFunction() { [EOL]  [EOL]         public double[] value(double[] params) { [EOL]             Vector2D center = new Vector2D(params[0], params[1]); [EOL]             double radius = getRadius(center); [EOL]             double dJdX = 0; [EOL]             double dJdY = 0; [EOL]             for (Vector2D pk : points) { [EOL]                 double dk = pk.distance(center); [EOL]                 dJdX += (center.getX() - pk.getX()) * (dk - radius) / dk; [EOL]                 dJdY += (center.getY() - pk.getY()) * (dk - radius) / dk; [EOL]             } [EOL]             dJdX *= 2; [EOL]             dJdY *= 2; [EOL]             return new double[] { dJdX, dJdY }; [EOL]         } [EOL]     }); [EOL] } <line_num>: 65,84
