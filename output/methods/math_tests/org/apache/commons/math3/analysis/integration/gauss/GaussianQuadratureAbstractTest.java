public GaussianQuadratureAbstractTest(GaussIntegrator integrator, int maxDegree, double eps, double numUlps) { [EOL]     this.integrator = integrator; [EOL]     this.maxDegree = maxDegree; [EOL]     this.eps = eps; [EOL]     this.numUlps = numUlps; [EOL] } <line_num>: 64,72
public abstract double getExpectedValue(final int n); <line_num>: 82,82
@Test [EOL] public void testAllMonomials() { [EOL]     for (int n = 0; n <= maxDegree; n++) { [EOL]         final double expected = getExpectedValue(n); [EOL]         final Power monomial = new Power(n); [EOL]         final double actual = integrator.integrate(monomial); [EOL]         if (expected == 0) { [EOL]             Assert.assertEquals("while integrating monomial x**" + n + " with a " + integrator.getNumberOfPoints() + "-point quadrature rule", expected, actual, eps); [EOL]         } else { [EOL]             double err = Math.abs(actual - expected) / Math.ulp(expected); [EOL]             Assert.assertEquals("while integrating monomial x**" + n + " with a " + +integrator.getNumberOfPoints() + "-point quadrature rule, " + " error was " + err + " ulps", expected, actual, Math.ulp(expected) * numUlps); [EOL]         } [EOL]     } [EOL] } <line_num>: 92,115
