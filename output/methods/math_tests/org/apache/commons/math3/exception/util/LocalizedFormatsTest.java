@Test [EOL] public void testMessageNumber() { [EOL]     Assert.assertEquals(313, LocalizedFormats.values().length); [EOL] } <line_num>: 31,34
@Test [EOL] public void testAllKeysPresentInPropertiesFiles() { [EOL]     final String path = LocalizedFormats.class.getName().replaceAll("\\.", "/"); [EOL]     for (final String language : new String[] { "fr" }) { [EOL]         ResourceBundle bundle = ResourceBundle.getBundle("assets/" + path, new Locale(language)); [EOL]         for (LocalizedFormats message : LocalizedFormats.values()) { [EOL]             final String messageKey = message.toString(); [EOL]             boolean keyPresent = false; [EOL]             for (final Enumeration<String> keys = bundle.getKeys(); keys.hasMoreElements(); ) { [EOL]                 keyPresent |= messageKey.equals(keys.nextElement()); [EOL]             } [EOL]             Assert.assertTrue("missing key \"" + message.name() + "\" for language " + language, keyPresent); [EOL]         } [EOL]         Assert.assertEquals(language, bundle.getLocale().getLanguage()); [EOL]     } [EOL] } <line_num>: 36,54
@Test [EOL] public void testAllPropertiesCorrespondToKeys() { [EOL]     final String path = LocalizedFormats.class.getName().replaceAll("\\.", "/"); [EOL]     for (final String language : new String[] { "fr" }) { [EOL]         ResourceBundle bundle = ResourceBundle.getBundle("assets/" + path, new Locale(language)); [EOL]         for (final Enumeration<String> keys = bundle.getKeys(); keys.hasMoreElements(); ) { [EOL]             final String propertyKey = keys.nextElement(); [EOL]             try { [EOL]                 Assert.assertNotNull(LocalizedFormats.valueOf(propertyKey)); [EOL]             } catch (IllegalArgumentException iae) { [EOL]                 Assert.fail("unknown key \"" + propertyKey + "\" in language " + language); [EOL]             } [EOL]         } [EOL]         Assert.assertEquals(language, bundle.getLocale().getLanguage()); [EOL]     } [EOL] } <line_num>: 56,73
@Test [EOL] public void testNoMissingFrenchTranslation() { [EOL]     for (LocalizedFormats message : LocalizedFormats.values()) { [EOL]         String translated = message.getLocalizedString(Locale.FRENCH); [EOL]         Assert.assertFalse(message.name(), translated.toLowerCase().contains("missing translation")); [EOL]     } [EOL] } <line_num>: 75,81
@Test [EOL] public void testNoOpEnglishTranslation() { [EOL]     for (LocalizedFormats message : LocalizedFormats.values()) { [EOL]         String translated = message.getLocalizedString(Locale.ENGLISH); [EOL]         Assert.assertEquals(message.getSourceString(), translated); [EOL]     } [EOL] } <line_num>: 83,89
@Test [EOL] public void testVariablePartsConsistency() { [EOL]     for (final String language : new String[] { "fr" }) { [EOL]         Locale locale = new Locale(language); [EOL]         for (LocalizedFormats message : LocalizedFormats.values()) { [EOL]             MessageFormat source = new MessageFormat(message.getSourceString()); [EOL]             MessageFormat translated = new MessageFormat(message.getLocalizedString(locale)); [EOL]             Assert.assertEquals(message.name() + " (" + language + ")", source.getFormatsByArgumentIndex().length, translated.getFormatsByArgumentIndex().length); [EOL]         } [EOL]     } [EOL] } <line_num>: 91,103
