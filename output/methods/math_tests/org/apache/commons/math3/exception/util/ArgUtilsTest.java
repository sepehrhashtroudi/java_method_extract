@Test [EOL] public void testFlatten() { [EOL]     final List<Object> orig = new ArrayList<Object>(); [EOL]     final Object[] struct = new Object[] { new Object[] { new Object[] { create(orig), create(orig) }, create(orig), new Object[] { create(orig) } }, create(orig), new Object[] { create(orig), new Object[] { create(orig), create(orig) } }, create(orig) }; [EOL]     Object[] flat = ArgUtils.flatten(struct); [EOL]     Assert.assertEquals(flat.length, orig.size()); [EOL]     for (int i = 0, max = orig.size(); i < max; i++) { [EOL]         Assert.assertEquals(orig.get(i), flat[i]); [EOL]     } [EOL] } <line_num>: 31,63
private Object create(List<Object> list) { [EOL]     final Object o = new Object(); [EOL]     list.add(o); [EOL]     return o; [EOL] } <line_num>: 71,75
