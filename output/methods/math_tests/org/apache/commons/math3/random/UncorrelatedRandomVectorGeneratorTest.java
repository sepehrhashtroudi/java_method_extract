public UncorrelatedRandomVectorGeneratorTest() { [EOL]     mean = new double[] { 0.0, 1.0, -3.0, 2.3 }; [EOL]     standardDeviation = new double[] { 1.0, 2.0, 10.0, 0.1 }; [EOL]     RandomGenerator rg = new JDKRandomGenerator(); [EOL]     rg.setSeed(17399225432l); [EOL]     generator = new UncorrelatedRandomVectorGenerator(mean, standardDeviation, new GaussianRandomGenerator(rg)); [EOL] } <line_num>: 32,40
@Test [EOL] public void testMeanAndCorrelation() { [EOL]     VectorialMean meanStat = new VectorialMean(mean.length); [EOL]     VectorialCovariance covStat = new VectorialCovariance(mean.length, true); [EOL]     for (int i = 0; i < 10000; ++i) { [EOL]         double[] v = generator.nextVector(); [EOL]         meanStat.increment(v); [EOL]         covStat.increment(v); [EOL]     } [EOL]     double[] estimatedMean = meanStat.getResult(); [EOL]     double scale; [EOL]     RealMatrix estimatedCorrelation = covStat.getResult(); [EOL]     for (int i = 0; i < estimatedMean.length; ++i) { [EOL]         Assert.assertEquals(mean[i], estimatedMean[i], 0.07); [EOL]         for (int j = 0; j < i; ++j) { [EOL]             scale = standardDeviation[i] * standardDeviation[j]; [EOL]             Assert.assertEquals(0, estimatedCorrelation.getEntry(i, j) / scale, 0.03); [EOL]         } [EOL]         scale = standardDeviation[i] * standardDeviation[i]; [EOL]         Assert.assertEquals(1, estimatedCorrelation.getEntry(i, i) / scale, 0.025); [EOL]     } [EOL] } <line_num>: 42,65
