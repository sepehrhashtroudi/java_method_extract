@Test [EOL] public void test2DDistribution() { [EOL]     RandomGenerator rg = new JDKRandomGenerator(); [EOL]     rg.setSeed(17399225432l); [EOL]     UnitSphereRandomVectorGenerator generator = new UnitSphereRandomVectorGenerator(2, rg); [EOL]     int[] angleBuckets = new int[100]; [EOL]     int steps = 1000000; [EOL]     for (int i = 0; i < steps; ++i) { [EOL]         final double[] v = generator.nextVector(); [EOL]         Assert.assertEquals(2, v.length); [EOL]         Assert.assertEquals(1, length(v), 1e-10); [EOL]         final double angle = FastMath.acos(v[0]); [EOL]         final int bucket = (int) (angleBuckets.length * (angle / FastMath.PI)); [EOL]         ++angleBuckets[bucket]; [EOL]     } [EOL]     final int expectedBucketSize = steps / angleBuckets.length; [EOL]     for (int bucket : angleBuckets) { [EOL]         Assert.assertTrue("Bucket count " + bucket + " vs expected " + expectedBucketSize, FastMath.abs(expectedBucketSize - bucket) < 350); [EOL]     } [EOL] } <line_num>: 28,56
private static double length(double[] vector) { [EOL]     double total = 0; [EOL]     for (double d : vector) { [EOL]         total += d * d; [EOL]     } [EOL]     return FastMath.sqrt(total); [EOL] } <line_num>: 61,67
