public DummyListChromosome(final Integer[] representation) { [EOL]     super(representation); [EOL] } <line_num>: 26,28
public DummyListChromosome(final List<Integer> representation) { [EOL]     super(representation); [EOL] } <line_num>: 30,32
public double fitness() { [EOL]     return 0; [EOL] } <line_num>: 34,37
@Override [EOL] protected void checkValidity(final List<Integer> chromosomeRepresentation) throws InvalidRepresentationException { [EOL] } <line_num>: 39,42
@Override [EOL] public AbstractListChromosome<Integer> newFixedLengthChromosome(final List<Integer> chromosomeRepresentation) { [EOL]     return new DummyListChromosome(chromosomeRepresentation); [EOL] } <line_num>: 44,47
@Override [EOL] public int hashCode() { [EOL]     final int prime = 31; [EOL]     int result = 1; [EOL]     result = prime * result + (getRepresentation() == null ? 0 : getRepresentation().hashCode()); [EOL]     return result; [EOL] } <line_num>: 49,55
@Override [EOL] public boolean equals(final Object obj) { [EOL]     if (this == obj) { [EOL]         return true; [EOL]     } [EOL]     if (obj == null) { [EOL]         return false; [EOL]     } [EOL]     if (!(obj instanceof DummyListChromosome)) { [EOL]         return false; [EOL]     } [EOL]     final DummyListChromosome other = (DummyListChromosome) obj; [EOL]     if (getRepresentation() == null) { [EOL]         if (other.getRepresentation() != null) { [EOL]             return false; [EOL]         } [EOL]     } [EOL]     final Integer[] rep = getRepresentation().toArray(new Integer[getRepresentation().size()]); [EOL]     final Integer[] otherRep = other.getRepresentation().toArray(new Integer[other.getRepresentation().size()]); [EOL]     return Arrays.equals(rep, otherRep); [EOL] } <line_num>: 57,77
