@Override [EOL] public UnivariateStatistic getUnivariateStatistic() { [EOL]     return new SumOfLogs(); [EOL] } <line_num>: 36,39
@Override [EOL] public double expectedValue() { [EOL]     return this.sumLog; [EOL] } <line_num>: 44,47
@Test [EOL] public void testSpecialValues() { [EOL]     SumOfLogs sum = new SumOfLogs(); [EOL]     Assert.assertEquals(0, sum.getResult(), 0); [EOL]     sum.increment(1d); [EOL]     Assert.assertFalse(Double.isNaN(sum.getResult())); [EOL]     sum.increment(0d); [EOL]     Assert.assertEquals(Double.NEGATIVE_INFINITY, sum.getResult(), 0); [EOL]     sum.increment(Double.POSITIVE_INFINITY); [EOL]     Assert.assertTrue(Double.isNaN(sum.getResult())); [EOL]     sum.clear(); [EOL]     Assert.assertEquals(0, sum.getResult(), 0); [EOL]     sum.increment(Double.POSITIVE_INFINITY); [EOL]     Assert.assertEquals(Double.POSITIVE_INFINITY, sum.getResult(), 0); [EOL]     sum.increment(-2d); [EOL]     Assert.assertTrue(Double.isNaN(sum.getResult())); [EOL] } <line_num>: 49,78
@Override [EOL] protected void checkClearValue(StorelessUnivariateStatistic statistic) { [EOL]     Assert.assertEquals(0, statistic.getResult(), 0); [EOL] } <line_num>: 80,83
