@Test [EOL] public void testWilcoxonSignedRankSimple() { [EOL]     final double[] x = { 1.83, 0.50, 1.62, 2.48, 1.68, 1.88, 1.55, 3.06, 1.30 }; [EOL]     final double[] y = { 0.878, 0.647, 0.598, 2.05, 1.06, 1.29, 1.06, 3.14, 1.29 }; [EOL]     Assert.assertEquals(40, testStatistic.wilcoxonSignedRank(x, y), 1e-10); [EOL]     Assert.assertEquals(0.03906, testStatistic.wilcoxonSignedRankTest(x, y, true), 1e-5); [EOL]     Assert.assertEquals(40, testStatistic.wilcoxonSignedRank(x, y), 1e-10); [EOL]     Assert.assertEquals(0.0329693812, testStatistic.wilcoxonSignedRankTest(x, y, false), 1e-10); [EOL] } <line_num>: 37,65
@Test [EOL] public void testWilcoxonSignedRankInputValidation() { [EOL]     final double[] x1 = new double[30]; [EOL]     final double[] x2 = new double[31]; [EOL]     final double[] y1 = new double[30]; [EOL]     final double[] y2 = new double[31]; [EOL]     for (int i = 0; i < 30; ++i) { [EOL]         x1[i] = x2[i] = y1[i] = y2[i] = i; [EOL]     } [EOL]     try { [EOL]         testStatistic.wilcoxonSignedRankTest(x2, y2, true); [EOL]         Assert.fail("More than 30 samples and exact chosen, NumberIsTooLargeException expected"); [EOL]     } catch (NumberIsTooLargeException ex) { [EOL]     } [EOL]     try { [EOL]         testStatistic.wilcoxonSignedRankTest(new double[] {}, new double[] { 1.0 }, true); [EOL]         Assert.fail("x does not contain samples (exact), NoDataException expected"); [EOL]     } catch (NoDataException ex) { [EOL]     } [EOL]     try { [EOL]         testStatistic.wilcoxonSignedRankTest(new double[] {}, new double[] { 1.0 }, false); [EOL]         Assert.fail("x does not contain samples (asymptotic), NoDataException expected"); [EOL]     } catch (NoDataException ex) { [EOL]     } [EOL]     try { [EOL]         testStatistic.wilcoxonSignedRankTest(new double[] { 1.0 }, new double[] {}, true); [EOL]         Assert.fail("y does not contain samples (exact), NoDataException expected"); [EOL]     } catch (NoDataException ex) { [EOL]     } [EOL]     try { [EOL]         testStatistic.wilcoxonSignedRankTest(new double[] { 1.0 }, new double[] {}, false); [EOL]         Assert.fail("y does not contain samples (asymptotic), NoDataException expected"); [EOL]     } catch (NoDataException ex) { [EOL]     } [EOL]     try { [EOL]         testStatistic.wilcoxonSignedRankTest(new double[] { 1.0, 2.0 }, new double[] { 3.0 }, true); [EOL]         Assert.fail("x and y not same size (exact), DimensionMismatchException expected"); [EOL]     } catch (DimensionMismatchException ex) { [EOL]     } [EOL]     try { [EOL]         testStatistic.wilcoxonSignedRankTest(new double[] { 1.0, 2.0 }, new double[] { 3.0 }, false); [EOL]         Assert.fail("x and y not same size (asymptotic), DimensionMismatchException expected"); [EOL]     } catch (DimensionMismatchException ex) { [EOL]     } [EOL]     try { [EOL]         testStatistic.wilcoxonSignedRankTest(null, null, true); [EOL]         Assert.fail("x and y is null (exact), NullArgumentException expected"); [EOL]     } catch (NullArgumentException ex) { [EOL]     } [EOL]     try { [EOL]         testStatistic.wilcoxonSignedRankTest(null, null, false); [EOL]         Assert.fail("x and y is null (asymptotic), NullArgumentException expected"); [EOL]     } catch (NullArgumentException ex) { [EOL]     } [EOL]     try { [EOL]         testStatistic.wilcoxonSignedRankTest(null, new double[] { 1.0 }, true); [EOL]         Assert.fail("x is null (exact), NullArgumentException expected"); [EOL]     } catch (NullArgumentException ex) { [EOL]     } [EOL]     try { [EOL]         testStatistic.wilcoxonSignedRankTest(null, new double[] { 1.0 }, false); [EOL]         Assert.fail("x is null (asymptotic), NullArgumentException expected"); [EOL]     } catch (NullArgumentException ex) { [EOL]     } [EOL]     try { [EOL]         testStatistic.wilcoxonSignedRankTest(new double[] { 1.0 }, null, true); [EOL]         Assert.fail("y is null (exact), NullArgumentException expected"); [EOL]     } catch (NullArgumentException ex) { [EOL]     } [EOL]     try { [EOL]         testStatistic.wilcoxonSignedRankTest(new double[] { 1.0 }, null, false); [EOL]         Assert.fail("y is null (asymptotic), NullArgumentException expected"); [EOL]     } catch (NullArgumentException ex) { [EOL]     } [EOL] } <line_num>: 67,183
