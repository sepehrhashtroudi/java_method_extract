public RealVectorFormat() { [EOL]     this(DEFAULT_PREFIX, DEFAULT_SUFFIX, DEFAULT_SEPARATOR, CompositeFormat.getDefaultNumberFormat()); [EOL] } <line_num>: 72,75
public RealVectorFormat(final NumberFormat format) { [EOL]     this(DEFAULT_PREFIX, DEFAULT_SUFFIX, DEFAULT_SEPARATOR, format); [EOL] } <line_num>: 81,83
public RealVectorFormat(final String prefix, final String suffix, final String separator) { [EOL]     this(prefix, suffix, separator, CompositeFormat.getDefaultNumberFormat()); [EOL] } <line_num>: 91,95
public RealVectorFormat(final String prefix, final String suffix, final String separator, final NumberFormat format) { [EOL]     this.prefix = prefix; [EOL]     this.suffix = suffix; [EOL]     this.separator = separator; [EOL]     trimmedPrefix = prefix.trim(); [EOL]     trimmedSuffix = suffix.trim(); [EOL]     trimmedSeparator = separator.trim(); [EOL]     this.format = format; [EOL] } <line_num>: 105,114
public static Locale[] getAvailableLocales() { [EOL]     return NumberFormat.getAvailableLocales(); [EOL] } <line_num>: 121,123
public String getPrefix() { [EOL]     return prefix; [EOL] } <line_num>: 129,131
public String getSuffix() { [EOL]     return suffix; [EOL] } <line_num>: 137,139
public String getSeparator() { [EOL]     return separator; [EOL] } <line_num>: 145,147
public NumberFormat getFormat() { [EOL]     return format; [EOL] } <line_num>: 153,155
public static RealVectorFormat getInstance() { [EOL]     return getInstance(Locale.getDefault()); [EOL] } <line_num>: 161,163
public static RealVectorFormat getInstance(final Locale locale) { [EOL]     return new RealVectorFormat(CompositeFormat.getDefaultNumberFormat(locale)); [EOL] } <line_num>: 170,172
public String format(RealVector v) { [EOL]     return format(v, new StringBuffer(), new FieldPosition(0)).toString(); [EOL] } <line_num>: 180,182
public StringBuffer format(RealVector vector, StringBuffer toAppendTo, FieldPosition pos) { [EOL]     pos.setBeginIndex(0); [EOL]     pos.setEndIndex(0); [EOL]     toAppendTo.append(prefix); [EOL]     for (int i = 0; i < vector.getDimension(); ++i) { [EOL]         if (i > 0) { [EOL]             toAppendTo.append(separator); [EOL]         } [EOL]         CompositeFormat.formatDouble(vector.getEntry(i), format, toAppendTo, pos); [EOL]     } [EOL]     toAppendTo.append(suffix); [EOL]     return toAppendTo; [EOL] } <line_num>: 192,213
public ArrayRealVector parse(String source) { [EOL]     final ParsePosition parsePosition = new ParsePosition(0); [EOL]     final ArrayRealVector result = parse(source, parsePosition); [EOL]     if (parsePosition.getIndex() == 0) { [EOL]         throw new MathParseException(source, parsePosition.getErrorIndex(), ArrayRealVector.class); [EOL]     } [EOL]     return result; [EOL] } <line_num>: 223,232
public ArrayRealVector parse(String source, ParsePosition pos) { [EOL]     int initialIndex = pos.getIndex(); [EOL]     CompositeFormat.parseAndIgnoreWhitespace(source, pos); [EOL]     if (!CompositeFormat.parseFixedstring(source, trimmedPrefix, pos)) { [EOL]         return null; [EOL]     } [EOL]     List<Number> components = new ArrayList<Number>(); [EOL]     for (boolean loop = true; loop; ) { [EOL]         if (!components.isEmpty()) { [EOL]             CompositeFormat.parseAndIgnoreWhitespace(source, pos); [EOL]             if (!CompositeFormat.parseFixedstring(source, trimmedSeparator, pos)) { [EOL]                 loop = false; [EOL]             } [EOL]         } [EOL]         if (loop) { [EOL]             CompositeFormat.parseAndIgnoreWhitespace(source, pos); [EOL]             Number component = CompositeFormat.parseNumber(source, format, pos); [EOL]             if (component != null) { [EOL]                 components.add(component); [EOL]             } else { [EOL]                 pos.setIndex(initialIndex); [EOL]                 return null; [EOL]             } [EOL]         } [EOL]     } [EOL]     CompositeFormat.parseAndIgnoreWhitespace(source, pos); [EOL]     if (!CompositeFormat.parseFixedstring(source, trimmedSuffix, pos)) { [EOL]         return null; [EOL]     } [EOL]     double[] data = new double[components.size()]; [EOL]     for (int i = 0; i < data.length; ++i) { [EOL]         data[i] = components.get(i).doubleValue(); [EOL]     } [EOL]     return new ArrayRealVector(data, false); [EOL] } <line_num>: 241,288
