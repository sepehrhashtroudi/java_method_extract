public JacobiPreconditioner(final double[] diag, final boolean deep) { [EOL]     this.diag = new ArrayRealVector(diag, deep); [EOL] } <line_num>: 43,45
public static JacobiPreconditioner create(final RealLinearOperator a) throws NonSquareOperatorException { [EOL]     final int n = a.getColumnDimension(); [EOL]     if (a.getRowDimension() != n) { [EOL]         throw new NonSquareOperatorException(a.getRowDimension(), n); [EOL]     } [EOL]     final double[] diag = new double[n]; [EOL]     if (a instanceof AbstractRealMatrix) { [EOL]         final AbstractRealMatrix m = (AbstractRealMatrix) a; [EOL]         for (int i = 0; i < n; i++) { [EOL]             diag[i] = m.getEntry(i, i); [EOL]         } [EOL]     } else { [EOL]         final ArrayRealVector x = new ArrayRealVector(n); [EOL]         for (int i = 0; i < n; i++) { [EOL]             x.set(0.); [EOL]             x.setEntry(i, 1.); [EOL]             diag[i] = a.operate(x).getEntry(i); [EOL]         } [EOL]     } [EOL]     return new JacobiPreconditioner(diag, false); [EOL] } <line_num>: 60,81
@Override [EOL] public int getColumnDimension() { [EOL]     return diag.getDimension(); [EOL] } <line_num>: 84,87
@Override [EOL] public int getRowDimension() { [EOL]     return diag.getDimension(); [EOL] } <line_num>: 90,93
@Override [EOL] public RealVector operate(final RealVector x) { [EOL]     return new ArrayRealVector(MathArrays.ebeDivide(x.toArray(), diag.toArray()), false); [EOL] } <line_num>: 96,102
@Override [EOL] public RealVector operate(final RealVector x) { [EOL]     return new ArrayRealVector(MathArrays.ebeDivide(x.toArray(), sqrtDiag.toArray()), false); [EOL] } <line_num>: 116,121
@Override [EOL] public int getRowDimension() { [EOL]     return sqrtDiag.getDimension(); [EOL] } <line_num>: 124,127
@Override [EOL] public int getColumnDimension() { [EOL]     return sqrtDiag.getDimension(); [EOL] } <line_num>: 130,133
public RealLinearOperator sqrt() { [EOL]     final RealVector sqrtDiag = diag.map(new Sqrt()); [EOL]     return new RealLinearOperator() { [EOL]  [EOL]         @Override [EOL]         public RealVector operate(final RealVector x) { [EOL]             return new ArrayRealVector(MathArrays.ebeDivide(x.toArray(), sqrtDiag.toArray()), false); [EOL]         } [EOL]  [EOL]         @Override [EOL]         public int getRowDimension() { [EOL]             return sqrtDiag.getDimension(); [EOL]         } [EOL]  [EOL]         @Override [EOL]         public int getColumnDimension() { [EOL]             return sqrtDiag.getDimension(); [EOL]         } [EOL]     }; [EOL] } <line_num>: 112,135
