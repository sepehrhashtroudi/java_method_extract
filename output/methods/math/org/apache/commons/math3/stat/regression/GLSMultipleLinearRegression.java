public void newSampleData(double[] y, double[][] x, double[][] covariance) { [EOL]     validateSampleData(x, y); [EOL]     newYSampleData(y); [EOL]     newXSampleData(x); [EOL]     validateCovarianceData(x, covariance); [EOL]     newCovarianceData(covariance); [EOL] } <line_num>: 56,62
protected void newCovarianceData(double[][] omega) { [EOL]     this.Omega = new Array2DRowRealMatrix(omega); [EOL]     this.OmegaInverse = null; [EOL] } <line_num>: 69,72
protected RealMatrix getOmegaInverse() { [EOL]     if (OmegaInverse == null) { [EOL]         OmegaInverse = new LUDecomposition(Omega).getSolver().getInverse(); [EOL]     } [EOL]     return OmegaInverse; [EOL] } <line_num>: 79,84
@Override [EOL] protected RealVector calculateBeta() { [EOL]     RealMatrix OI = getOmegaInverse(); [EOL]     RealMatrix XT = getX().transpose(); [EOL]     RealMatrix XTOIX = XT.multiply(OI).multiply(getX()); [EOL]     RealMatrix inverse = new LUDecomposition(XTOIX).getSolver().getInverse(); [EOL]     return inverse.multiply(XT).multiply(OI).operate(getY()); [EOL] } <line_num>: 93,100
@Override [EOL] protected RealMatrix calculateBetaVariance() { [EOL]     RealMatrix OI = getOmegaInverse(); [EOL]     RealMatrix XTOIX = getX().transpose().multiply(OI).multiply(getX()); [EOL]     return new LUDecomposition(XTOIX).getSolver().getInverse(); [EOL] } <line_num>: 109,114
@Override [EOL] protected double calculateErrorVariance() { [EOL]     RealVector residuals = calculateResiduals(); [EOL]     double t = residuals.dotProduct(getOmegaInverse().operate(residuals)); [EOL]     return t / (getX().getRowDimension() - getX().getColumnDimension()); [EOL] } <line_num>: 128,134
