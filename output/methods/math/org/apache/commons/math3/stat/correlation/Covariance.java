public Covariance() { [EOL]     super(); [EOL]     covarianceMatrix = null; [EOL]     n = 0; [EOL] } <line_num>: 61,65
public Covariance(double[][] data, boolean biasCorrected) throws MathIllegalArgumentException, NotStrictlyPositiveException { [EOL]     this(new BlockRealMatrix(data), biasCorrected); [EOL] } <line_num>: 84,87
public Covariance(double[][] data) throws MathIllegalArgumentException, NotStrictlyPositiveException { [EOL]     this(data, true); [EOL] } <line_num>: 102,105
public Covariance(RealMatrix matrix, boolean biasCorrected) throws MathIllegalArgumentException { [EOL]     checkSufficientData(matrix); [EOL]     n = matrix.getRowDimension(); [EOL]     covarianceMatrix = computeCovarianceMatrix(matrix, biasCorrected); [EOL] } <line_num>: 121,126
public Covariance(RealMatrix matrix) throws MathIllegalArgumentException { [EOL]     this(matrix, true); [EOL] } <line_num>: 138,140
public RealMatrix getCovarianceMatrix() { [EOL]     return covarianceMatrix; [EOL] } <line_num>: 147,149
public int getN() { [EOL]     return n; [EOL] } <line_num>: 156,158
protected RealMatrix computeCovarianceMatrix(RealMatrix matrix, boolean biasCorrected) throws MathIllegalArgumentException { [EOL]     int dimension = matrix.getColumnDimension(); [EOL]     Variance variance = new Variance(biasCorrected); [EOL]     RealMatrix outMatrix = new BlockRealMatrix(dimension, dimension); [EOL]     for (int i = 0; i < dimension; i++) { [EOL]         for (int j = 0; j < i; j++) { [EOL]             double cov = covariance(matrix.getColumn(i), matrix.getColumn(j), biasCorrected); [EOL]             outMatrix.setEntry(i, j, cov); [EOL]             outMatrix.setEntry(j, i, cov); [EOL]         } [EOL]         outMatrix.setEntry(i, i, variance.evaluate(matrix.getColumn(i))); [EOL]     } [EOL]     return outMatrix; [EOL] } <line_num>: 168,182
protected RealMatrix computeCovarianceMatrix(RealMatrix matrix) throws MathIllegalArgumentException { [EOL]     return computeCovarianceMatrix(matrix, true); [EOL] } <line_num>: 192,195
protected RealMatrix computeCovarianceMatrix(double[][] data, boolean biasCorrected) throws MathIllegalArgumentException, NotStrictlyPositiveException { [EOL]     return computeCovarianceMatrix(new BlockRealMatrix(data), biasCorrected); [EOL] } <line_num>: 208,211
protected RealMatrix computeCovarianceMatrix(double[][] data) throws MathIllegalArgumentException, NotStrictlyPositiveException { [EOL]     return computeCovarianceMatrix(data, true); [EOL] } <line_num>: 223,226
public double covariance(final double[] xArray, final double[] yArray, boolean biasCorrected) throws MathIllegalArgumentException { [EOL]     Mean mean = new Mean(); [EOL]     double result = 0d; [EOL]     int length = xArray.length; [EOL]     if (length != yArray.length) { [EOL]         throw new MathIllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, length, yArray.length); [EOL]     } else if (length < 2) { [EOL]         throw new MathIllegalArgumentException(LocalizedFormats.INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE, length, 2); [EOL]     } else { [EOL]         double xMean = mean.evaluate(xArray); [EOL]         double yMean = mean.evaluate(yArray); [EOL]         for (int i = 0; i < length; i++) { [EOL]             double xDev = xArray[i] - xMean; [EOL]             double yDev = yArray[i] - yMean; [EOL]             result += (xDev * yDev - result) / (i + 1); [EOL]         } [EOL]     } [EOL]     return biasCorrected ? result * ((double) length / (double) (length - 1)) : result; [EOL] } <line_num>: 240,261
public double covariance(final double[] xArray, final double[] yArray) throws MathIllegalArgumentException { [EOL]     return covariance(xArray, yArray, true); [EOL] } <line_num>: 275,278
private void checkSufficientData(final RealMatrix matrix) throws MathIllegalArgumentException { [EOL]     int nRows = matrix.getRowDimension(); [EOL]     int nCols = matrix.getColumnDimension(); [EOL]     if (nRows < 2 || nCols < 1) { [EOL]         throw new MathIllegalArgumentException(LocalizedFormats.INSUFFICIENT_ROWS_AND_COLUMNS, nRows, nCols); [EOL]     } [EOL] } <line_num>: 287,295
