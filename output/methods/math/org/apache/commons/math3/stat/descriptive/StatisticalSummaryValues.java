public StatisticalSummaryValues(double mean, double variance, long n, double max, double min, double sum) { [EOL]     super(); [EOL]     this.mean = mean; [EOL]     this.variance = variance; [EOL]     this.n = n; [EOL]     this.max = max; [EOL]     this.min = min; [EOL]     this.sum = sum; [EOL] } <line_num>: 64,73
public double getMax() { [EOL]     return max; [EOL] } <line_num>: 78,80
public double getMean() { [EOL]     return mean; [EOL] } <line_num>: 85,87
public double getMin() { [EOL]     return min; [EOL] } <line_num>: 92,94
public long getN() { [EOL]     return n; [EOL] } <line_num>: 99,101
public double getSum() { [EOL]     return sum; [EOL] } <line_num>: 106,108
public double getStandardDeviation() { [EOL]     return FastMath.sqrt(variance); [EOL] } <line_num>: 113,115
public double getVariance() { [EOL]     return variance; [EOL] } <line_num>: 120,122
@Override [EOL] public boolean equals(Object object) { [EOL]     if (object == this) { [EOL]         return true; [EOL]     } [EOL]     if (object instanceof StatisticalSummaryValues == false) { [EOL]         return false; [EOL]     } [EOL]     StatisticalSummaryValues stat = (StatisticalSummaryValues) object; [EOL]     return Precision.equalsIncludingNaN(stat.getMax(), getMax()) && Precision.equalsIncludingNaN(stat.getMean(), getMean()) && Precision.equalsIncludingNaN(stat.getMin(), getMin()) && Precision.equalsIncludingNaN(stat.getN(), getN()) && Precision.equalsIncludingNaN(stat.getSum(), getSum()) && Precision.equalsIncludingNaN(stat.getVariance(), getVariance()); [EOL] } <line_num>: 132,147
@Override [EOL] public int hashCode() { [EOL]     int result = 31 + MathUtils.hash(getMax()); [EOL]     result = result * 31 + MathUtils.hash(getMean()); [EOL]     result = result * 31 + MathUtils.hash(getMin()); [EOL]     result = result * 31 + MathUtils.hash(getN()); [EOL]     result = result * 31 + MathUtils.hash(getSum()); [EOL]     result = result * 31 + MathUtils.hash(getVariance()); [EOL]     return result; [EOL] } <line_num>: 154,163
@Override [EOL] public String toString() { [EOL]     StringBuffer outBuffer = new StringBuffer(); [EOL]     String endl = "\n"; [EOL]     outBuffer.append("StatisticalSummaryValues:").append(endl); [EOL]     outBuffer.append("n: ").append(getN()).append(endl); [EOL]     outBuffer.append("min: ").append(getMin()).append(endl); [EOL]     outBuffer.append("max: ").append(getMax()).append(endl); [EOL]     outBuffer.append("mean: ").append(getMean()).append(endl); [EOL]     outBuffer.append("std dev: ").append(getStandardDeviation()).append(endl); [EOL]     outBuffer.append("variance: ").append(getVariance()).append(endl); [EOL]     outBuffer.append("sum: ").append(getSum()).append(endl); [EOL]     return outBuffer.toString(); [EOL] } <line_num>: 171,185
