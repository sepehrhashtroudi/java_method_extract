public SymmetricGaussIntegrator(double[] points, double[] weights) throws NonMonotonicSequenceException, DimensionMismatchException { [EOL]     super(points, weights); [EOL] } <line_num>: 44,48
public SymmetricGaussIntegrator(Pair<double[], double[]> pointsAndWeights) throws NonMonotonicSequenceException { [EOL]     this(pointsAndWeights.getFirst(), pointsAndWeights.getSecond()); [EOL] } <line_num>: 60,63
@Override [EOL] public double integrate(UnivariateFunction f) { [EOL]     final int ruleLength = getNumberOfPoints(); [EOL]     if (ruleLength == 1) { [EOL]         return getWeight(0) * f.value(0d); [EOL]     } [EOL]     final int iMax = ruleLength / 2; [EOL]     double s = 0; [EOL]     double c = 0; [EOL]     for (int i = 0; i < iMax; i++) { [EOL]         final double p = getPoint(i); [EOL]         final double w = getWeight(i); [EOL]         final double f1 = f.value(p); [EOL]         final double f2 = f.value(-p); [EOL]         final double y = w * (f1 + f2) - c; [EOL]         final double t = s + y; [EOL]         c = (t - s) - y; [EOL]         s = t; [EOL]     } [EOL]     if (ruleLength % 2 != 0) { [EOL]         final double w = getWeight(iMax); [EOL]         final double y = w * f.value(0d) - c; [EOL]         final double t = s + y; [EOL]         s = t; [EOL]     } [EOL]     return s; [EOL] } <line_num>: 68,103
