public AdamsIntegrator(final String name, final int nSteps, final int order, final double minStep, final double maxStep, final double scalAbsoluteTolerance, final double scalRelativeTolerance) throws NumberIsTooSmallException { [EOL]     super(name, nSteps, order, minStep, maxStep, scalAbsoluteTolerance, scalRelativeTolerance); [EOL]     transformer = AdamsNordsieckTransformer.getInstance(nSteps); [EOL] } <line_num>: 54,62
public AdamsIntegrator(final String name, final int nSteps, final int order, final double minStep, final double maxStep, final double[] vecAbsoluteTolerance, final double[] vecRelativeTolerance) throws IllegalArgumentException { [EOL]     super(name, nSteps, order, minStep, maxStep, vecAbsoluteTolerance, vecRelativeTolerance); [EOL]     transformer = AdamsNordsieckTransformer.getInstance(nSteps); [EOL] } <line_num>: 79,87
@Override [EOL] public abstract void integrate(final ExpandableStatefulODE equations, final double t) throws NumberIsTooSmallException, DimensionMismatchException, MaxCountExceededException, NoBracketingException; <line_num>: 90,93
@Override [EOL] protected Array2DRowRealMatrix initializeHighOrderDerivatives(final double h, final double[] t, final double[][] y, final double[][] yDot) { [EOL]     return transformer.initializeHighOrderDerivatives(h, t, y, yDot); [EOL] } <line_num>: 96,101
public Array2DRowRealMatrix updateHighOrderDerivativesPhase1(final Array2DRowRealMatrix highOrder) { [EOL]     return transformer.updateHighOrderDerivativesPhase1(highOrder); [EOL] } <line_num>: 114,116
public void updateHighOrderDerivativesPhase2(final double[] start, final double[] end, final Array2DRowRealMatrix highOrder) { [EOL]     transformer.updateHighOrderDerivativesPhase2(start, end, highOrder); [EOL] } <line_num>: 131,135
