protected AbstractFormat() { [EOL]     this(getDefaultNumberFormat()); [EOL] } <line_num>: 49,51
protected AbstractFormat(final NumberFormat format) { [EOL]     this(format, (NumberFormat) format.clone()); [EOL] } <line_num>: 58,60
protected AbstractFormat(final NumberFormat numeratorFormat, final NumberFormat denominatorFormat) { [EOL]     this.numeratorFormat = numeratorFormat; [EOL]     this.denominatorFormat = denominatorFormat; [EOL] } <line_num>: 68,72
protected static NumberFormat getDefaultNumberFormat() { [EOL]     return getDefaultNumberFormat(Locale.getDefault()); [EOL] } <line_num>: 80,82
protected static NumberFormat getDefaultNumberFormat(final Locale locale) { [EOL]     final NumberFormat nf = NumberFormat.getNumberInstance(locale); [EOL]     nf.setMaximumFractionDigits(0); [EOL]     nf.setParseIntegerOnly(true); [EOL]     return nf; [EOL] } <line_num>: 91,96
public NumberFormat getDenominatorFormat() { [EOL]     return denominatorFormat; [EOL] } <line_num>: 102,104
public NumberFormat getNumeratorFormat() { [EOL]     return numeratorFormat; [EOL] } <line_num>: 110,112
public void setDenominatorFormat(final NumberFormat format) { [EOL]     if (format == null) { [EOL]         throw new NullArgumentException(LocalizedFormats.DENOMINATOR_FORMAT); [EOL]     } [EOL]     this.denominatorFormat = format; [EOL] } <line_num>: 119,124
public void setNumeratorFormat(final NumberFormat format) { [EOL]     if (format == null) { [EOL]         throw new NullArgumentException(LocalizedFormats.NUMERATOR_FORMAT); [EOL]     } [EOL]     this.numeratorFormat = format; [EOL] } <line_num>: 131,136
protected static void parseAndIgnoreWhitespace(final String source, final ParsePosition pos) { [EOL]     parseNextCharacter(source, pos); [EOL]     pos.setIndex(pos.getIndex() - 1); [EOL] } <line_num>: 144,148
protected static char parseNextCharacter(final String source, final ParsePosition pos) { [EOL]     int index = pos.getIndex(); [EOL]     final int n = source.length(); [EOL]     char ret = 0; [EOL]     if (index < n) { [EOL]         char c; [EOL]         do { [EOL]             c = source.charAt(index++); [EOL]         } while (Character.isWhitespace(c) && index < n); [EOL]         pos.setIndex(index); [EOL]         if (index < n) { [EOL]             ret = c; [EOL]         } [EOL]     } [EOL]     return ret; [EOL] } <line_num>: 156,175
@Override [EOL] public StringBuffer format(final double value, final StringBuffer buffer, final FieldPosition position) { [EOL]     return format(Double.valueOf(value), buffer, position); [EOL] } <line_num>: 187,191
@Override [EOL] public StringBuffer format(final long value, final StringBuffer buffer, final FieldPosition position) { [EOL]     return format(Long.valueOf(value), buffer, position); [EOL] } <line_num>: 204,208
