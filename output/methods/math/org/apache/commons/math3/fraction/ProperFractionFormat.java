public ProperFractionFormat() { [EOL]     this(getDefaultNumberFormat()); [EOL] } <line_num>: 50,52
public ProperFractionFormat(NumberFormat format) { [EOL]     this(format, (NumberFormat) format.clone(), (NumberFormat) format.clone()); [EOL] } <line_num>: 60,62
public ProperFractionFormat(NumberFormat wholeFormat, NumberFormat numeratorFormat, NumberFormat denominatorFormat) { [EOL]     super(numeratorFormat, denominatorFormat); [EOL]     setWholeFormat(wholeFormat); [EOL] } <line_num>: 71,77
@Override [EOL] public StringBuffer format(Fraction fraction, StringBuffer toAppendTo, FieldPosition pos) { [EOL]     pos.setBeginIndex(0); [EOL]     pos.setEndIndex(0); [EOL]     int num = fraction.getNumerator(); [EOL]     int den = fraction.getDenominator(); [EOL]     int whole = num / den; [EOL]     num = num % den; [EOL]     if (whole != 0) { [EOL]         getWholeFormat().format(whole, toAppendTo, pos); [EOL]         toAppendTo.append(' '); [EOL]         num = Math.abs(num); [EOL]     } [EOL]     getNumeratorFormat().format(num, toAppendTo, pos); [EOL]     toAppendTo.append(" / "); [EOL]     getDenominatorFormat().format(den, toAppendTo, pos); [EOL]     return toAppendTo; [EOL] } <line_num>: 89,112
public NumberFormat getWholeFormat() { [EOL]     return wholeFormat; [EOL] } <line_num>: 118,120
@Override [EOL] public Fraction parse(String source, ParsePosition pos) { [EOL]     Fraction ret = super.parse(source, pos); [EOL]     if (ret != null) { [EOL]         return ret; [EOL]     } [EOL]     int initialIndex = pos.getIndex(); [EOL]     parseAndIgnoreWhitespace(source, pos); [EOL]     Number whole = getWholeFormat().parse(source, pos); [EOL]     if (whole == null) { [EOL]         pos.setIndex(initialIndex); [EOL]         return null; [EOL]     } [EOL]     parseAndIgnoreWhitespace(source, pos); [EOL]     Number num = getNumeratorFormat().parse(source, pos); [EOL]     if (num == null) { [EOL]         pos.setIndex(initialIndex); [EOL]         return null; [EOL]     } [EOL]     if (num.intValue() < 0) { [EOL]         pos.setIndex(initialIndex); [EOL]         return null; [EOL]     } [EOL]     int startIndex = pos.getIndex(); [EOL]     char c = parseNextCharacter(source, pos); [EOL]     switch(c) { [EOL]         case 0: [EOL]             return new Fraction(num.intValue(), 1); [EOL]         case '/': [EOL]             break; [EOL]         default: [EOL]             pos.setIndex(initialIndex); [EOL]             pos.setErrorIndex(startIndex); [EOL]             return null; [EOL]     } [EOL]     parseAndIgnoreWhitespace(source, pos); [EOL]     Number den = getDenominatorFormat().parse(source, pos); [EOL]     if (den == null) { [EOL]         pos.setIndex(initialIndex); [EOL]         return null; [EOL]     } [EOL]     if (den.intValue() < 0) { [EOL]         pos.setIndex(initialIndex); [EOL]         return null; [EOL]     } [EOL]     int w = whole.intValue(); [EOL]     int n = num.intValue(); [EOL]     int d = den.intValue(); [EOL]     return new Fraction(((Math.abs(w) * d) + n) * MathUtils.copySign(1, w), d); [EOL] } <line_num>: 134,219
public void setWholeFormat(NumberFormat format) { [EOL]     if (format == null) { [EOL]         throw new NullArgumentException(LocalizedFormats.WHOLE_FORMAT); [EOL]     } [EOL]     this.wholeFormat = format; [EOL] } <line_num>: 226,231
