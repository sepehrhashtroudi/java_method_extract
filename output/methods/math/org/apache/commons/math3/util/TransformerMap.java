public TransformerMap() { [EOL]     map = new HashMap<Class<?>, NumberTransformer>(); [EOL]     defaultTransformer = new DefaultTransformer(); [EOL] } <line_num>: 52,55
public boolean containsClass(Class<?> key) { [EOL]     return map.containsKey(key); [EOL] } <line_num>: 62,64
public boolean containsTransformer(NumberTransformer value) { [EOL]     return map.containsValue(value); [EOL] } <line_num>: 71,73
public NumberTransformer getTransformer(Class<?> key) { [EOL]     return map.get(key); [EOL] } <line_num>: 81,83
public NumberTransformer putTransformer(Class<?> key, NumberTransformer transformer) { [EOL]     return map.put(key, transformer); [EOL] } <line_num>: 93,95
public NumberTransformer removeTransformer(Class<?> key) { [EOL]     return map.remove(key); [EOL] } <line_num>: 103,105
public void clear() { [EOL]     map.clear(); [EOL] } <line_num>: 110,112
public Set<Class<?>> classes() { [EOL]     return map.keySet(); [EOL] } <line_num>: 118,120
public Collection<NumberTransformer> transformers() { [EOL]     return map.values(); [EOL] } <line_num>: 127,129
public double transform(Object o) throws MathIllegalArgumentException { [EOL]     double value = Double.NaN; [EOL]     if (o instanceof Number || o instanceof String) { [EOL]         value = defaultTransformer.transform(o); [EOL]     } else { [EOL]         NumberTransformer trans = getTransformer(o.getClass()); [EOL]         if (trans != null) { [EOL]             value = trans.transform(o); [EOL]         } [EOL]     } [EOL]     return value; [EOL] } <line_num>: 141,154
@Override [EOL] public boolean equals(Object other) { [EOL]     if (this == other) { [EOL]         return true; [EOL]     } [EOL]     if (other instanceof TransformerMap) { [EOL]         TransformerMap rhs = (TransformerMap) other; [EOL]         if (!defaultTransformer.equals(rhs.defaultTransformer)) { [EOL]             return false; [EOL]         } [EOL]         if (map.size() != rhs.map.size()) { [EOL]             return false; [EOL]         } [EOL]         for (Map.Entry<Class<?>, NumberTransformer> entry : map.entrySet()) { [EOL]             if (!entry.getValue().equals(rhs.map.get(entry.getKey()))) { [EOL]                 return false; [EOL]             } [EOL]         } [EOL]         return true; [EOL]     } [EOL]     return false; [EOL] } <line_num>: 157,178
@Override [EOL] public int hashCode() { [EOL]     int hash = defaultTransformer.hashCode(); [EOL]     for (NumberTransformer t : map.values()) { [EOL]         hash = hash * 31 + t.hashCode(); [EOL]     } [EOL]     return hash; [EOL] } <line_num>: 181,188
