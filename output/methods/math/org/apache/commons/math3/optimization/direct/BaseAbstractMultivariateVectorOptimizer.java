@Deprecated [EOL] protected BaseAbstractMultivariateVectorOptimizer() { [EOL]     this(new SimpleVectorValueChecker()); [EOL] } <line_num>: 73,76
protected BaseAbstractMultivariateVectorOptimizer(ConvergenceChecker<PointVectorValuePair> checker) { [EOL]     this.checker = checker; [EOL] } <line_num>: 80,82
public int getMaxEvaluations() { [EOL]     return evaluations.getMaximalCount(); [EOL] } <line_num>: 85,87
public int getEvaluations() { [EOL]     return evaluations.getCount(); [EOL] } <line_num>: 90,92
public ConvergenceChecker<PointVectorValuePair> getConvergenceChecker() { [EOL]     return checker; [EOL] } <line_num>: 95,97
protected double[] computeObjectiveValue(double[] point) { [EOL]     try { [EOL]         evaluations.incrementCount(); [EOL]     } catch (MaxCountExceededException e) { [EOL]         throw new TooManyEvaluationsException(e.getMax()); [EOL]     } [EOL]     return function.value(point); [EOL] } <line_num>: 107,114
@Deprecated [EOL] public PointVectorValuePair optimize(int maxEval, FUNC f, double[] t, double[] w, double[] startPoint) { [EOL]     return optimizeInternal(maxEval, f, t, w, startPoint); [EOL] } <line_num>: 122,126
protected PointVectorValuePair optimize(int maxEval, FUNC f, OptimizationData... optData) throws TooManyEvaluationsException, DimensionMismatchException { [EOL]     return optimizeInternal(maxEval, f, optData); [EOL] } <line_num>: 148,154
@Deprecated [EOL] protected PointVectorValuePair optimizeInternal(final int maxEval, final FUNC f, final double[] t, final double[] w, final double[] startPoint) { [EOL]     if (f == null) { [EOL]         throw new NullArgumentException(); [EOL]     } [EOL]     if (t == null) { [EOL]         throw new NullArgumentException(); [EOL]     } [EOL]     if (w == null) { [EOL]         throw new NullArgumentException(); [EOL]     } [EOL]     if (startPoint == null) { [EOL]         throw new NullArgumentException(); [EOL]     } [EOL]     if (t.length != w.length) { [EOL]         throw new DimensionMismatchException(t.length, w.length); [EOL]     } [EOL]     return optimizeInternal(maxEval, f, new Target(t), new Weight(w), new InitialGuess(startPoint)); [EOL] } <line_num>: 179,204
protected PointVectorValuePair optimizeInternal(int maxEval, FUNC f, OptimizationData... optData) throws TooManyEvaluationsException, DimensionMismatchException { [EOL]     evaluations.setMaximalCount(maxEval); [EOL]     evaluations.resetCount(); [EOL]     function = f; [EOL]     parseOptimizationData(optData); [EOL]     checkParameters(); [EOL]     setUp(); [EOL]     return doOptimize(); [EOL] } <line_num>: 226,243
public double[] getStartPoint() { [EOL]     return start.clone(); [EOL] } <line_num>: 250,252
public RealMatrix getWeight() { [EOL]     return weightMatrix.copy(); [EOL] } <line_num>: 260,262
public double[] getTarget() { [EOL]     return target.clone(); [EOL] } <line_num>: 270,272
protected FUNC getObjectiveFunction() { [EOL]     return function; [EOL] } <line_num>: 281,283
protected abstract PointVectorValuePair doOptimize(); <line_num>: 291,291
@Deprecated [EOL] protected double[] getTargetRef() { [EOL]     return target; [EOL] } <line_num>: 297,300
@Deprecated [EOL] protected double[] getWeightRef() { [EOL]     return weight; [EOL] } <line_num>: 305,308
protected void setUp() { [EOL]     final int dim = target.length; [EOL]     weight = new double[dim]; [EOL]     for (int i = 0; i < dim; i++) { [EOL]         weight[i] = weightMatrix.getEntry(i, i); [EOL]     } [EOL] } <line_num>: 320,327
private void parseOptimizationData(OptimizationData... optData) { [EOL]     for (OptimizationData data : optData) { [EOL]         if (data instanceof Target) { [EOL]             target = ((Target) data).getTarget(); [EOL]             continue; [EOL]         } [EOL]         if (data instanceof Weight) { [EOL]             weightMatrix = ((Weight) data).getWeight(); [EOL]             continue; [EOL]         } [EOL]         if (data instanceof InitialGuess) { [EOL]             start = ((InitialGuess) data).getInitialGuess(); [EOL]             continue; [EOL]         } [EOL]     } [EOL] } <line_num>: 340,357
private void checkParameters() { [EOL]     if (target.length != weightMatrix.getColumnDimension()) { [EOL]         throw new DimensionMismatchException(target.length, weightMatrix.getColumnDimension()); [EOL]     } [EOL] } <line_num>: 365,370
