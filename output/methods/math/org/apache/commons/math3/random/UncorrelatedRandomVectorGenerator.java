public UncorrelatedRandomVectorGenerator(double[] mean, double[] standardDeviation, NormalizedRandomGenerator generator) { [EOL]     if (mean.length != standardDeviation.length) { [EOL]         throw new DimensionMismatchException(mean.length, standardDeviation.length); [EOL]     } [EOL]     this.mean = mean.clone(); [EOL]     this.standardDeviation = standardDeviation.clone(); [EOL]     this.generator = generator; [EOL] } <line_num>: 53,62
public UncorrelatedRandomVectorGenerator(int dimension, NormalizedRandomGenerator generator) { [EOL]     mean = new double[dimension]; [EOL]     standardDeviation = new double[dimension]; [EOL]     Arrays.fill(standardDeviation, 1.0); [EOL]     this.generator = generator; [EOL] } <line_num>: 71,77
public double[] nextVector() { [EOL]     double[] random = new double[mean.length]; [EOL]     for (int i = 0; i < random.length; ++i) { [EOL]         random[i] = mean[i] + standardDeviation[i] * generator.nextNormalizedDouble(); [EOL]     } [EOL]     return random; [EOL] } <line_num>: 82,91
