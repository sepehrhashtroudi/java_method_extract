protected VectorFormat() { [EOL]     this(DEFAULT_PREFIX, DEFAULT_SUFFIX, DEFAULT_SEPARATOR, CompositeFormat.getDefaultNumberFormat()); [EOL] } <line_num>: 83,86
protected VectorFormat(final NumberFormat format) { [EOL]     this(DEFAULT_PREFIX, DEFAULT_SUFFIX, DEFAULT_SEPARATOR, format); [EOL] } <line_num>: 92,94
protected VectorFormat(final String prefix, final String suffix, final String separator) { [EOL]     this(prefix, suffix, separator, CompositeFormat.getDefaultNumberFormat()); [EOL] } <line_num>: 102,105
protected VectorFormat(final String prefix, final String suffix, final String separator, final NumberFormat format) { [EOL]     this.prefix = prefix; [EOL]     this.suffix = suffix; [EOL]     this.separator = separator; [EOL]     trimmedPrefix = prefix.trim(); [EOL]     trimmedSuffix = suffix.trim(); [EOL]     trimmedSeparator = separator.trim(); [EOL]     this.format = format; [EOL] } <line_num>: 115,124
public static Locale[] getAvailableLocales() { [EOL]     return NumberFormat.getAvailableLocales(); [EOL] } <line_num>: 131,133
public String getPrefix() { [EOL]     return prefix; [EOL] } <line_num>: 139,141
public String getSuffix() { [EOL]     return suffix; [EOL] } <line_num>: 147,149
public String getSeparator() { [EOL]     return separator; [EOL] } <line_num>: 155,157
public NumberFormat getFormat() { [EOL]     return format; [EOL] } <line_num>: 163,165
public String format(Vector<S> vector) { [EOL]     return format(vector, new StringBuffer(), new FieldPosition(0)).toString(); [EOL] } <line_num>: 172,174
public abstract StringBuffer format(Vector<S> vector, StringBuffer toAppendTo, FieldPosition pos); <line_num>: 184,185
protected StringBuffer format(StringBuffer toAppendTo, FieldPosition pos, double... coordinates) { [EOL]     pos.setBeginIndex(0); [EOL]     pos.setEndIndex(0); [EOL]     toAppendTo.append(prefix); [EOL]     for (int i = 0; i < coordinates.length; ++i) { [EOL]         if (i > 0) { [EOL]             toAppendTo.append(separator); [EOL]         } [EOL]         CompositeFormat.formatDouble(coordinates[i], format, toAppendTo, pos); [EOL]     } [EOL]     toAppendTo.append(suffix); [EOL]     return toAppendTo; [EOL] } <line_num>: 195,217
public abstract Vector<S> parse(String source) throws MathParseException; <line_num>: 226,226
public abstract Vector<S> parse(String source, ParsePosition pos); <line_num>: 234,234
protected double[] parseCoordinates(int dimension, String source, ParsePosition pos) { [EOL]     int initialIndex = pos.getIndex(); [EOL]     double[] coordinates = new double[dimension]; [EOL]     CompositeFormat.parseAndIgnoreWhitespace(source, pos); [EOL]     if (!CompositeFormat.parseFixedstring(source, trimmedPrefix, pos)) { [EOL]         return null; [EOL]     } [EOL]     for (int i = 0; i < dimension; ++i) { [EOL]         CompositeFormat.parseAndIgnoreWhitespace(source, pos); [EOL]         if (i > 0 && !CompositeFormat.parseFixedstring(source, trimmedSeparator, pos)) { [EOL]             return null; [EOL]         } [EOL]         CompositeFormat.parseAndIgnoreWhitespace(source, pos); [EOL]         Number c = CompositeFormat.parseNumber(source, format, pos); [EOL]         if (c == null) { [EOL]             pos.setIndex(initialIndex); [EOL]             return null; [EOL]         } [EOL]         coordinates[i] = c.doubleValue(); [EOL]     } [EOL]     CompositeFormat.parseAndIgnoreWhitespace(source, pos); [EOL]     if (!CompositeFormat.parseFixedstring(source, trimmedSuffix, pos)) { [EOL]         return null; [EOL]     } [EOL]     return coordinates; [EOL] } <line_num>: 243,289
