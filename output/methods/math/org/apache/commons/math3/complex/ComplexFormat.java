public ComplexFormat() { [EOL]     this.imaginaryCharacter = DEFAULT_IMAGINARY_CHARACTER; [EOL]     this.imaginaryFormat = CompositeFormat.getDefaultNumberFormat(); [EOL]     this.realFormat = imaginaryFormat; [EOL] } <line_num>: 54,58
public ComplexFormat(NumberFormat format) throws NullArgumentException { [EOL]     if (format == null) { [EOL]         throw new NullArgumentException(LocalizedFormats.IMAGINARY_FORMAT); [EOL]     } [EOL]     this.imaginaryCharacter = DEFAULT_IMAGINARY_CHARACTER; [EOL]     this.imaginaryFormat = format; [EOL]     this.realFormat = format; [EOL] } <line_num>: 66,73
public ComplexFormat(NumberFormat realFormat, NumberFormat imaginaryFormat) throws NullArgumentException { [EOL]     if (imaginaryFormat == null) { [EOL]         throw new NullArgumentException(LocalizedFormats.IMAGINARY_FORMAT); [EOL]     } [EOL]     if (realFormat == null) { [EOL]         throw new NullArgumentException(LocalizedFormats.REAL_FORMAT); [EOL]     } [EOL]     this.imaginaryCharacter = DEFAULT_IMAGINARY_CHARACTER; [EOL]     this.imaginaryFormat = imaginaryFormat; [EOL]     this.realFormat = realFormat; [EOL] } <line_num>: 83,95
public ComplexFormat(String imaginaryCharacter) throws NullArgumentException, NoDataException { [EOL]     this(imaginaryCharacter, CompositeFormat.getDefaultNumberFormat()); [EOL] } <line_num>: 106,109
public ComplexFormat(String imaginaryCharacter, NumberFormat format) throws NullArgumentException, NoDataException { [EOL]     this(imaginaryCharacter, format, format); [EOL] } <line_num>: 122,125
public ComplexFormat(String imaginaryCharacter, NumberFormat realFormat, NumberFormat imaginaryFormat) throws NullArgumentException, NoDataException { [EOL]     if (imaginaryCharacter == null) { [EOL]         throw new NullArgumentException(); [EOL]     } [EOL]     if (imaginaryCharacter.length() == 0) { [EOL]         throw new NoDataException(); [EOL]     } [EOL]     if (imaginaryFormat == null) { [EOL]         throw new NullArgumentException(LocalizedFormats.IMAGINARY_FORMAT); [EOL]     } [EOL]     if (realFormat == null) { [EOL]         throw new NullArgumentException(LocalizedFormats.REAL_FORMAT); [EOL]     } [EOL]     this.imaginaryCharacter = imaginaryCharacter; [EOL]     this.imaginaryFormat = imaginaryFormat; [EOL]     this.realFormat = realFormat; [EOL] } <line_num>: 142,162
public static Locale[] getAvailableLocales() { [EOL]     return NumberFormat.getAvailableLocales(); [EOL] } <line_num>: 169,171
public String format(Complex c) { [EOL]     return format(c, new StringBuffer(), new FieldPosition(0)).toString(); [EOL] } <line_num>: 179,181
public String format(Double c) { [EOL]     return format(new Complex(c, 0), new StringBuffer(), new FieldPosition(0)).toString(); [EOL] } <line_num>: 189,191
public StringBuffer format(Complex complex, StringBuffer toAppendTo, FieldPosition pos) { [EOL]     pos.setBeginIndex(0); [EOL]     pos.setEndIndex(0); [EOL]     double re = complex.getReal(); [EOL]     CompositeFormat.formatDouble(re, getRealFormat(), toAppendTo, pos); [EOL]     double im = complex.getImaginary(); [EOL]     StringBuffer imAppendTo; [EOL]     if (im < 0.0) { [EOL]         toAppendTo.append(" - "); [EOL]         imAppendTo = formatImaginary(-im, new StringBuffer(), pos); [EOL]         toAppendTo.append(imAppendTo); [EOL]         toAppendTo.append(getImaginaryCharacter()); [EOL]     } else if (im > 0.0 || Double.isNaN(im)) { [EOL]         toAppendTo.append(" + "); [EOL]         imAppendTo = formatImaginary(im, new StringBuffer(), pos); [EOL]         toAppendTo.append(imAppendTo); [EOL]         toAppendTo.append(getImaginaryCharacter()); [EOL]     } [EOL]     return toAppendTo; [EOL] } <line_num>: 202,227
private StringBuffer formatImaginary(double absIm, StringBuffer toAppendTo, FieldPosition pos) { [EOL]     pos.setBeginIndex(0); [EOL]     pos.setEndIndex(0); [EOL]     CompositeFormat.formatDouble(absIm, getImaginaryFormat(), toAppendTo, pos); [EOL]     if (toAppendTo.toString().equals("1")) { [EOL]         toAppendTo.setLength(0); [EOL]     } [EOL]     return toAppendTo; [EOL] } <line_num>: 238,251
public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos) throws MathIllegalArgumentException { [EOL]     StringBuffer ret = null; [EOL]     if (obj instanceof Complex) { [EOL]         ret = format((Complex) obj, toAppendTo, pos); [EOL]     } else if (obj instanceof Number) { [EOL]         ret = format(new Complex(((Number) obj).doubleValue(), 0.0), toAppendTo, pos); [EOL]     } else { [EOL]         throw new MathIllegalArgumentException(LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName()); [EOL]     } [EOL]     return ret; [EOL] } <line_num>: 266,283
public String getImaginaryCharacter() { [EOL]     return imaginaryCharacter; [EOL] } <line_num>: 289,291
public NumberFormat getImaginaryFormat() { [EOL]     return imaginaryFormat; [EOL] } <line_num>: 297,299
public static ComplexFormat getInstance() { [EOL]     return getInstance(Locale.getDefault()); [EOL] } <line_num>: 305,307
public static ComplexFormat getInstance(Locale locale) { [EOL]     NumberFormat f = CompositeFormat.getDefaultNumberFormat(locale); [EOL]     return new ComplexFormat(f); [EOL] } <line_num>: 314,317
public static ComplexFormat getInstance(String imaginaryCharacter, Locale locale) throws NullArgumentException, NoDataException { [EOL]     NumberFormat f = CompositeFormat.getDefaultNumberFormat(locale); [EOL]     return new ComplexFormat(imaginaryCharacter, f); [EOL] } <line_num>: 329,333
public NumberFormat getRealFormat() { [EOL]     return realFormat; [EOL] } <line_num>: 339,341
public Complex parse(String source) throws MathParseException { [EOL]     ParsePosition parsePosition = new ParsePosition(0); [EOL]     Complex result = parse(source, parsePosition); [EOL]     if (parsePosition.getIndex() == 0) { [EOL]         throw new MathParseException(source, parsePosition.getErrorIndex(), Complex.class); [EOL]     } [EOL]     return result; [EOL] } <line_num>: 351,360
public Complex parse(String source, ParsePosition pos) { [EOL]     int initialIndex = pos.getIndex(); [EOL]     CompositeFormat.parseAndIgnoreWhitespace(source, pos); [EOL]     Number re = CompositeFormat.parseNumber(source, getRealFormat(), pos); [EOL]     if (re == null) { [EOL]         pos.setIndex(initialIndex); [EOL]         return null; [EOL]     } [EOL]     int startIndex = pos.getIndex(); [EOL]     char c = CompositeFormat.parseNextCharacter(source, pos); [EOL]     int sign = 0; [EOL]     switch(c) { [EOL]         case 0: [EOL]             return new Complex(re.doubleValue(), 0.0); [EOL]         case '-': [EOL]             sign = -1; [EOL]             break; [EOL]         case '+': [EOL]             sign = 1; [EOL]             break; [EOL]         default: [EOL]             pos.setIndex(initialIndex); [EOL]             pos.setErrorIndex(startIndex); [EOL]             return null; [EOL]     } [EOL]     CompositeFormat.parseAndIgnoreWhitespace(source, pos); [EOL]     Number im = CompositeFormat.parseNumber(source, getRealFormat(), pos); [EOL]     if (im == null) { [EOL]         pos.setIndex(initialIndex); [EOL]         return null; [EOL]     } [EOL]     if (!CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)) { [EOL]         return null; [EOL]     } [EOL]     return new Complex(re.doubleValue(), im.doubleValue() * sign); [EOL] } <line_num>: 369,427
