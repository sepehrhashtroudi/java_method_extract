public MixtureMultivariateNormalDistribution(double[] weights, double[][] means, double[][][] covariances) { [EOL]     super(createComponents(weights, means, covariances)); [EOL] } <line_num>: 44,48
public MixtureMultivariateNormalDistribution(List<Pair<Double, MultivariateNormalDistribution>> components) { [EOL]     super(components); [EOL] } <line_num>: 56,58
public MixtureMultivariateNormalDistribution(RandomGenerator rng, List<Pair<Double, MultivariateNormalDistribution>> components) throws NotPositiveException, DimensionMismatchException { [EOL]     super(rng, components); [EOL] } <line_num>: 70,74
private static List<Pair<Double, MultivariateNormalDistribution>> createComponents(double[] weights, double[][] means, double[][][] covariances) { [EOL]     final List<Pair<Double, MultivariateNormalDistribution>> mvns = new ArrayList<Pair<Double, MultivariateNormalDistribution>>(weights.length); [EOL]     for (int i = 0; i < weights.length; i++) { [EOL]         final MultivariateNormalDistribution dist = new MultivariateNormalDistribution(means[i], covariances[i]); [EOL]         mvns.add(new Pair<Double, MultivariateNormalDistribution>(weights[i], dist)); [EOL]     } [EOL]     return mvns; [EOL] } <line_num>: 82,96
