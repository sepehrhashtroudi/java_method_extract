public ListPopulation(final int populationLimit) throws NotPositiveException { [EOL]     this(Collections.<Chromosome>emptyList(), populationLimit); [EOL] } <line_num>: 51,53
public ListPopulation(final List<Chromosome> chromosomes, final int populationLimit) throws NullArgumentException, NotPositiveException, NumberIsTooLargeException { [EOL]     if (chromosomes == null) { [EOL]         throw new NullArgumentException(); [EOL]     } [EOL]     if (populationLimit <= 0) { [EOL]         throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit); [EOL]     } [EOL]     if (chromosomes.size() > populationLimit) { [EOL]         throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); [EOL]     } [EOL]     this.populationLimit = populationLimit; [EOL]     this.chromosomes = new ArrayList<Chromosome>(populationLimit); [EOL]     this.chromosomes.addAll(chromosomes); [EOL] } <line_num>: 66,82
@Deprecated [EOL] public void setChromosomes(final List<Chromosome> chromosomes) throws NullArgumentException, NumberIsTooLargeException { [EOL]     if (chromosomes == null) { [EOL]         throw new NullArgumentException(); [EOL]     } [EOL]     if (chromosomes.size() > populationLimit) { [EOL]         throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); [EOL]     } [EOL]     this.chromosomes.clear(); [EOL]     this.chromosomes.addAll(chromosomes); [EOL] } <line_num>: 95,108
public void addChromosomes(final Collection<Chromosome> chromosomeColl) throws NumberIsTooLargeException { [EOL]     if (chromosomes.size() + chromosomeColl.size() > populationLimit) { [EOL]         throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); [EOL]     } [EOL]     this.chromosomes.addAll(chromosomeColl); [EOL] } <line_num>: 117,123
public List<Chromosome> getChromosomes() { [EOL]     return Collections.unmodifiableList(chromosomes); [EOL] } <line_num>: 129,131
protected List<Chromosome> getChromosomeList() { [EOL]     return chromosomes; [EOL] } <line_num>: 138,140
public void addChromosome(final Chromosome chromosome) throws NumberIsTooLargeException { [EOL]     if (chromosomes.size() >= populationLimit) { [EOL]         throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); [EOL]     } [EOL]     this.chromosomes.add(chromosome); [EOL] } <line_num>: 149,155
public Chromosome getFittestChromosome() { [EOL]     Chromosome bestChromosome = this.chromosomes.get(0); [EOL]     for (Chromosome chromosome : this.chromosomes) { [EOL]         if (chromosome.compareTo(bestChromosome) > 0) { [EOL]             bestChromosome = chromosome; [EOL]         } [EOL]     } [EOL]     return bestChromosome; [EOL] } <line_num>: 161,171
public int getPopulationLimit() { [EOL]     return this.populationLimit; [EOL] } <line_num>: 177,179
public void setPopulationLimit(final int populationLimit) throws NotPositiveException, NumberIsTooSmallException { [EOL]     if (populationLimit <= 0) { [EOL]         throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit); [EOL]     } [EOL]     if (populationLimit < chromosomes.size()) { [EOL]         throw new NumberIsTooSmallException(populationLimit, chromosomes.size(), true); [EOL]     } [EOL]     this.populationLimit = populationLimit; [EOL] } <line_num>: 188,196
public int getPopulationSize() { [EOL]     return this.chromosomes.size(); [EOL] } <line_num>: 202,204
@Override [EOL] public String toString() { [EOL]     return this.chromosomes.toString(); [EOL] } <line_num>: 209,212
public Iterator<Chromosome> iterator() { [EOL]     return getChromosomes().iterator(); [EOL] } <line_num>: 220,222
