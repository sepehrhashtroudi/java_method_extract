protected BaseMultivariateOptimizer(ConvergenceChecker<PAIR> checker) { [EOL]     super(checker); [EOL] } <line_num>: 47,49
@Override [EOL] public PAIR optimize(OptimizationData... optData) { [EOL]     return super.optimize(optData); [EOL] } <line_num>: 63,67
@Override [EOL] protected void parseOptimizationData(OptimizationData... optData) { [EOL]     super.parseOptimizationData(optData); [EOL]     for (OptimizationData data : optData) { [EOL]         if (data instanceof InitialGuess) { [EOL]             start = ((InitialGuess) data).getInitialGuess(); [EOL]             continue; [EOL]         } [EOL]         if (data instanceof SimpleBounds) { [EOL]             final SimpleBounds bounds = (SimpleBounds) data; [EOL]             lowerBound = bounds.getLower(); [EOL]             upperBound = bounds.getUpper(); [EOL]             continue; [EOL]         } [EOL]     } [EOL]     checkParameters(); [EOL] } <line_num>: 79,101
public double[] getStartPoint() { [EOL]     return start == null ? null : start.clone(); [EOL] } <line_num>: 108,110
public double[] getLowerBound() { [EOL]     return lowerBound == null ? null : lowerBound.clone(); [EOL] } <line_num>: 114,116
public double[] getUpperBound() { [EOL]     return upperBound == null ? null : upperBound.clone(); [EOL] } <line_num>: 120,122
private void checkParameters() { [EOL]     if (start != null) { [EOL]         final int dim = start.length; [EOL]         if (lowerBound != null) { [EOL]             if (lowerBound.length != dim) { [EOL]                 throw new DimensionMismatchException(lowerBound.length, dim); [EOL]             } [EOL]             for (int i = 0; i < dim; i++) { [EOL]                 final double v = start[i]; [EOL]                 final double lo = lowerBound[i]; [EOL]                 if (v < lo) { [EOL]                     throw new NumberIsTooSmallException(v, lo, true); [EOL]                 } [EOL]             } [EOL]         } [EOL]         if (upperBound != null) { [EOL]             if (upperBound.length != dim) { [EOL]                 throw new DimensionMismatchException(upperBound.length, dim); [EOL]             } [EOL]             for (int i = 0; i < dim; i++) { [EOL]                 final double v = start[i]; [EOL]                 final double hi = upperBound[i]; [EOL]                 if (v > hi) { [EOL]                     throw new NumberIsTooLargeException(v, hi, true); [EOL]                 } [EOL]             } [EOL]         } [EOL]     } [EOL] } <line_num>: 127,155
