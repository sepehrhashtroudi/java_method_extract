protected LinearOptimizer() { [EOL]     super(null); [EOL] } <line_num>: 51,53
protected boolean isRestrictedToNonNegative() { [EOL]     return nonNegative; [EOL] } <line_num>: 58,60
protected LinearObjectiveFunction getFunction() { [EOL]     return function; [EOL] } <line_num>: 65,67
protected Collection<LinearConstraint> getConstraints() { [EOL]     return Collections.unmodifiableCollection(linearConstraints); [EOL] } <line_num>: 72,74
@Override [EOL] public PointValuePair optimize(OptimizationData... optData) throws TooManyIterationsException { [EOL]     return super.optimize(optData); [EOL] } <line_num>: 91,96
@Override [EOL] protected void parseOptimizationData(OptimizationData... optData) { [EOL]     super.parseOptimizationData(optData); [EOL]     for (OptimizationData data : optData) { [EOL]         if (data instanceof LinearObjectiveFunction) { [EOL]             function = (LinearObjectiveFunction) data; [EOL]             continue; [EOL]         } [EOL]         if (data instanceof LinearConstraintSet) { [EOL]             linearConstraints = ((LinearConstraintSet) data).getConstraints(); [EOL]             continue; [EOL]         } [EOL]         if (data instanceof NonNegativeConstraint) { [EOL]             nonNegative = ((NonNegativeConstraint) data).isRestrictedToNonNegative(); [EOL]             continue; [EOL]         } [EOL]     } [EOL] } <line_num>: 110,131
