public Document(String baseUri) { [EOL]     super(Tag.valueOf("#root"), baseUri); [EOL] } <line_num>: 21,23
static public Document createShell(String baseUri) { [EOL]     Validate.notNull(baseUri); [EOL]     Document doc = new Document(baseUri); [EOL]     Element html = doc.appendElement("html"); [EOL]     html.appendElement("head"); [EOL]     html.appendElement("body"); [EOL]     return doc; [EOL] } <line_num>: 30,39
public Element head() { [EOL]     return getElementsByTag("head").first(); [EOL] } <line_num>: 45,47
public Element body() { [EOL]     return getElementsByTag("body").first(); [EOL] } <line_num>: 53,55
public String title() { [EOL]     Element titleEl = getElementsByTag("title").first(); [EOL]     return titleEl != null ? titleEl.text().trim() : ""; [EOL] } <line_num>: 61,64
public void title(String title) { [EOL]     Validate.notNull(title); [EOL]     Element titleEl = getElementsByTag("title").first(); [EOL]     if (titleEl == null) { [EOL]         head().appendElement("title").text(title); [EOL]     } else { [EOL]         titleEl.text(title); [EOL]     } [EOL] } <line_num>: 71,79
public Element createElement(String tagName) { [EOL]     return new Element(Tag.valueOf(tagName), this.baseUri()); [EOL] } <line_num>: 86,88
public Document normalise() { [EOL]     if (select("html").isEmpty()) [EOL]         appendElement("html"); [EOL]     if (head() == null) [EOL]         select("html").first().prependElement("head"); [EOL]     if (body() == null) [EOL]         select("html").first().appendElement("body"); [EOL]     normalise(head()); [EOL]     normalise(select("html").first()); [EOL]     normalise(this); [EOL]     return this; [EOL] } <line_num>: 95,110
private void normalise(Element element) { [EOL]     List<Node> toMove = new ArrayList<Node>(); [EOL]     for (Node node : element.childNodes) { [EOL]         if (node instanceof TextNode) { [EOL]             TextNode tn = (TextNode) node; [EOL]             if (!tn.isBlank()) [EOL]                 toMove.add(tn); [EOL]         } [EOL]     } [EOL]     for (Node node : toMove) { [EOL]         element.removeChild(node); [EOL]         body().prependChild(node); [EOL]         body().prependChild(new TextNode(" ", "")); [EOL]     } [EOL] } <line_num>: 113,128
@Override [EOL] public String outerHtml() { [EOL]     return super.html(); [EOL] } <line_num>: 130,133
@Override [EOL] public Element text(String text) { [EOL]     body().text(text); [EOL]     return this; [EOL] } <line_num>: 140,144
@Override [EOL] public String nodeName() { [EOL]     return "#document"; [EOL] } <line_num>: 146,149
