public static void main(String[] args) throws IOException { [EOL]     Validate.isTrue(args.length == 1, "usage: supply url to fetch"); [EOL]     URL url = new URL(args[0]); [EOL]     print("Fetching %s...", url.toExternalForm()); [EOL]     Document doc = Jsoup.parse(url, 3 * 1000); [EOL]     Elements links = doc.select("a[href]"); [EOL]     Elements media = doc.select("[src]"); [EOL]     Elements imports = doc.select("link[href]"); [EOL]     print("\nMedia: (%d)", media.size()); [EOL]     for (Element src : media) { [EOL]         if (src.tagName().equals("img")) [EOL]             print(" * %s: <%s> %sx%s (%s)", src.tagName(), src.attr("abs:src"), src.attr("width"), src.attr("height"), trim(src.attr("alt"), 20)); [EOL]         else [EOL]             print(" * %s: <%s>", src.tagName(), src.attr("abs:src")); [EOL]     } [EOL]     print("\nImports: (%d)", imports.size()); [EOL]     for (Element link : imports) { [EOL]         print(" * %s <%s> (%s)", link.tagName(), link.attr("abs:href"), link.attr("rel")); [EOL]     } [EOL]     print("\nLinks: (%d)", links.size()); [EOL]     for (Element link : links) { [EOL]         print(" * a: <%s>  (%s)", link.attr("abs:href"), trim(link.text(), 35)); [EOL]     } [EOL] } <line_num>: 16,45
private static void print(String msg, Object... args) { [EOL]     System.out.println(String.format(msg, args)); [EOL] } <line_num>: 47,49
private static String trim(String s, int width) { [EOL]     if (s.length() > width) [EOL]         return s.substring(0, width - 1) + "."; [EOL]     else [EOL]         return s; [EOL] } <line_num>: 51,56
