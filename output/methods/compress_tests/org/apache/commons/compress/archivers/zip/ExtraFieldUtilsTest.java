public ExtraFieldUtilsTest(String name) { [EOL]     super(name); [EOL] } <line_num>: 28,30
public void setUp() { [EOL]     a = new AsiExtraField(); [EOL]     a.setMode(0755); [EOL]     a.setDirectory(true); [EOL]     dummy = new UnrecognizedExtraField(); [EOL]     dummy.setHeaderId(new ZipShort(1)); [EOL]     dummy.setLocalFileDataData(new byte[] { 0 }); [EOL]     dummy.setCentralDirectoryData(new byte[] { 0 }); [EOL]     aLocal = a.getLocalFileDataData(); [EOL]     byte[] dummyLocal = dummy.getLocalFileDataData(); [EOL]     data = new byte[4 + aLocal.length + 4 + dummyLocal.length]; [EOL]     System.arraycopy(a.getHeaderId().getBytes(), 0, data, 0, 2); [EOL]     System.arraycopy(a.getLocalFileDataLength().getBytes(), 0, data, 2, 2); [EOL]     System.arraycopy(aLocal, 0, data, 4, aLocal.length); [EOL]     System.arraycopy(dummy.getHeaderId().getBytes(), 0, data, 4 + aLocal.length, 2); [EOL]     System.arraycopy(dummy.getLocalFileDataLength().getBytes(), 0, data, 4 + aLocal.length + 2, 2); [EOL]     System.arraycopy(dummyLocal, 0, data, 4 + aLocal.length + 4, dummyLocal.length); [EOL] } <line_num>: 37,59
public void testParse() throws Exception { [EOL]     ZipExtraField[] ze = ExtraFieldUtils.parse(data); [EOL]     assertEquals("number of fields", 2, ze.length); [EOL]     assertTrue("type field 1", ze[0] instanceof AsiExtraField); [EOL]     assertEquals("mode field 1", 040755, ((AsiExtraField) ze[0]).getMode()); [EOL]     assertTrue("type field 2", ze[1] instanceof UnrecognizedExtraField); [EOL]     assertEquals("data length field 2", 1, ze[1].getLocalFileDataLength().getValue()); [EOL]     byte[] data2 = new byte[data.length - 1]; [EOL]     System.arraycopy(data, 0, data2, 0, data2.length); [EOL]     try { [EOL]         ExtraFieldUtils.parse(data2); [EOL]         fail("data should be invalid"); [EOL]     } catch (Exception e) { [EOL]         assertEquals("message", "data starting at " + (4 + aLocal.length) + " is in unknown format", e.getMessage()); [EOL]     } [EOL] } <line_num>: 64,84
public void testMerge() { [EOL]     byte[] local = ExtraFieldUtils.mergeLocalFileDataData(new ZipExtraField[] { a, dummy }); [EOL]     assertEquals("local length", data.length, local.length); [EOL]     for (int i = 0; i < local.length; i++) { [EOL]         assertEquals("local byte " + i, data[i], local[i]); [EOL]     } [EOL]     byte[] dummyCentral = dummy.getCentralDirectoryData(); [EOL]     byte[] data2 = new byte[4 + aLocal.length + 4 + dummyCentral.length]; [EOL]     System.arraycopy(data, 0, data2, 0, 4 + aLocal.length + 2); [EOL]     System.arraycopy(dummy.getCentralDirectoryLength().getBytes(), 0, data2, 4 + aLocal.length + 2, 2); [EOL]     System.arraycopy(dummyCentral, 0, data2, 4 + aLocal.length + 4, dummyCentral.length); [EOL]     byte[] central = ExtraFieldUtils.mergeCentralDirectoryData(new ZipExtraField[] { a, dummy }); [EOL]     assertEquals("central length", data2.length, central.length); [EOL]     for (int i = 0; i < central.length; i++) { [EOL]         assertEquals("central byte " + i, data2[i], central[i]); [EOL]     } [EOL] } <line_num>: 89,113
