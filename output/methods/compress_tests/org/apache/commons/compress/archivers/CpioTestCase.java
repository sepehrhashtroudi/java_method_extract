public void testCpioArchiveCreation() throws Exception { [EOL]     final File output = new File(dir, "bla.cpio"); [EOL]     final File file1 = getFile("test1.xml"); [EOL]     final File file2 = getFile("test2.xml"); [EOL]     final OutputStream out = new FileOutputStream(output); [EOL]     final ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream("cpio", out); [EOL]     os.putArchiveEntry(new CpioArchiveEntry("test1.xml", file1.length())); [EOL]     IOUtils.copy(new FileInputStream(file1), os); [EOL]     os.closeArchiveEntry(); [EOL]     os.putArchiveEntry(new CpioArchiveEntry("test2.xml", file2.length())); [EOL]     IOUtils.copy(new FileInputStream(file2), os); [EOL]     os.closeArchiveEntry(); [EOL]     os.close(); [EOL] } <line_num>: 35,52
public void testCpioUnarchive() throws Exception { [EOL]     final File output = new File(dir, "bla.cpio"); [EOL]     { [EOL]         final File file1 = getFile("test1.xml"); [EOL]         final File file2 = getFile("test2.xml"); [EOL]         final OutputStream out = new FileOutputStream(output); [EOL]         final ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream("cpio", out); [EOL]         os.putArchiveEntry(new CpioArchiveEntry("test1.xml", file1.length())); [EOL]         IOUtils.copy(new FileInputStream(file1), os); [EOL]         os.closeArchiveEntry(); [EOL]         os.putArchiveEntry(new CpioArchiveEntry("test2.xml", file2.length())); [EOL]         IOUtils.copy(new FileInputStream(file2), os); [EOL]         os.closeArchiveEntry(); [EOL]         os.close(); [EOL]         out.close(); [EOL]     } [EOL]     final File input = output; [EOL]     final InputStream is = new FileInputStream(input); [EOL]     final ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream("cpio", is); [EOL]     Map result = new HashMap(); [EOL]     ArchiveEntry entry = null; [EOL]     while ((entry = in.getNextEntry()) != null) { [EOL]         File target = new File(dir, entry.getName()); [EOL]         final OutputStream out = new FileOutputStream(target); [EOL]         IOUtils.copy(in, out); [EOL]         out.close(); [EOL]         result.put(entry.getName(), target); [EOL]     } [EOL]     in.close(); [EOL]     int lineSepLength = System.getProperty("line.separator").length(); [EOL]     File t = (File) result.get("test1.xml"); [EOL]     assertTrue("Expected " + t.getAbsolutePath() + " to exist", t.exists()); [EOL]     assertEquals("length of " + t.getAbsolutePath(), 72 + 4 * lineSepLength, t.length()); [EOL]     t = (File) result.get("test2.xml"); [EOL]     assertTrue("Expected " + t.getAbsolutePath() + " to exist", t.exists()); [EOL]     assertEquals("length of " + t.getAbsolutePath(), 73 + 5 * lineSepLength, t.length()); [EOL] } <line_num>: 54,102
