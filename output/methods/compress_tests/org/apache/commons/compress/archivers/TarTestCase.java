public void testTarArchiveCreation() throws Exception { [EOL]     final File output = new File(dir, "bla.tar"); [EOL]     final File file1 = getFile("test1.xml"); [EOL]     final OutputStream out = new FileOutputStream(output); [EOL]     final ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream("tar", out); [EOL]     final TarArchiveEntry entry = new TarArchiveEntry("testdata/test1.xml"); [EOL]     entry.setModTime(0); [EOL]     entry.setSize(file1.length()); [EOL]     entry.setUserId(0); [EOL]     entry.setGroupId(0); [EOL]     entry.setUserName("avalon"); [EOL]     entry.setGroupName("excalibur"); [EOL]     entry.setMode(0100000); [EOL]     os.putArchiveEntry(entry); [EOL]     IOUtils.copy(new FileInputStream(file1), os); [EOL]     os.closeArchiveEntry(); [EOL]     os.close(); [EOL] } <line_num>: 33,50
public void testTarArchiveLongNameCreation() throws Exception { [EOL]     String name = "testdata/12345678901234567890123456789012345678901234567890123456789012345678901234567890123456.xml"; [EOL]     byte[] bytes = name.getBytes(); [EOL]     assertEquals(bytes.length, 99); [EOL]     final File output = new File(dir, "bla.tar"); [EOL]     final File file1 = getFile("test1.xml"); [EOL]     final OutputStream out = new FileOutputStream(output); [EOL]     final ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream("tar", out); [EOL]     final TarArchiveEntry entry = new TarArchiveEntry(name); [EOL]     entry.setModTime(0); [EOL]     entry.setSize(file1.length()); [EOL]     entry.setUserId(0); [EOL]     entry.setGroupId(0); [EOL]     entry.setUserName("avalon"); [EOL]     entry.setGroupName("excalibur"); [EOL]     entry.setMode(0100000); [EOL]     os.putArchiveEntry(entry); [EOL]     IOUtils.copy(new FileInputStream(file1), os); [EOL]     os.closeArchiveEntry(); [EOL]     os.close(); [EOL]     ArchiveOutputStream os2 = null; [EOL]     try { [EOL]         String toLongName = "testdata/123456789012345678901234567890123456789012345678901234567890123456789012345678901234567.xml"; [EOL]         final File output2 = new File(dir, "bla.tar"); [EOL]         final OutputStream out2 = new FileOutputStream(output2); [EOL]         os2 = new ArchiveStreamFactory().createArchiveOutputStream("tar", out2); [EOL]         final TarArchiveEntry entry2 = new TarArchiveEntry(toLongName); [EOL]         entry2.setModTime(0); [EOL]         entry2.setSize(file1.length()); [EOL]         entry2.setUserId(0); [EOL]         entry2.setGroupId(0); [EOL]         entry2.setUserName("avalon"); [EOL]         entry2.setGroupName("excalibur"); [EOL]         entry2.setMode(0100000); [EOL]         os.putArchiveEntry(entry); [EOL]         IOUtils.copy(new FileInputStream(file1), os2); [EOL]     } catch (IOException e) { [EOL]         assertTrue(true); [EOL]     } finally { [EOL]         if (os2 != null) { [EOL]             os2.closeArchiveEntry(); [EOL]         } [EOL]     } [EOL] } <line_num>: 52,98
public void testTarUnarchive() throws Exception { [EOL]     final File input = getFile("bla.tar"); [EOL]     final InputStream is = new FileInputStream(input); [EOL]     final ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream("tar", is); [EOL]     final TarArchiveEntry entry = (TarArchiveEntry) in.getNextEntry(); [EOL]     final OutputStream out = new FileOutputStream(new File(dir, entry.getName())); [EOL]     IOUtils.copy(in, out); [EOL]     out.close(); [EOL]     in.close(); [EOL] } <line_num>: 100,109
