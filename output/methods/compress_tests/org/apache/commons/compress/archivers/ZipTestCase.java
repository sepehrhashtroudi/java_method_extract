public void testZipArchiveCreation() throws Exception { [EOL]     final File output = new File(dir, "bla.zip"); [EOL]     final File file1 = getFile("test1.xml"); [EOL]     final File file2 = getFile("test2.xml"); [EOL]     { [EOL]         final OutputStream out = new FileOutputStream(output); [EOL]         final ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream("zip", out); [EOL]         os.putArchiveEntry(new ZipArchiveEntry("testdata/test1.xml")); [EOL]         IOUtils.copy(new FileInputStream(file1), os); [EOL]         os.closeArchiveEntry(); [EOL]         os.putArchiveEntry(new ZipArchiveEntry("testdata/test2.xml")); [EOL]         IOUtils.copy(new FileInputStream(file2), os); [EOL]         os.closeArchiveEntry(); [EOL]         os.close(); [EOL]     } [EOL]     List results = new ArrayList(); [EOL]     { [EOL]         final InputStream is = new FileInputStream(output); [EOL]         final ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream("zip", is); [EOL]         File result = File.createTempFile("dir-result", ""); [EOL]         result.delete(); [EOL]         result.mkdir(); [EOL]         ZipArchiveEntry entry = null; [EOL]         while ((entry = (ZipArchiveEntry) in.getNextEntry()) != null) { [EOL]             File outfile = new File(result.getCanonicalPath() + "/result/" + entry.getName()); [EOL]             outfile.getParentFile().mkdirs(); [EOL]             OutputStream out = new FileOutputStream(outfile); [EOL]             IOUtils.copy(in, out); [EOL]             out.close(); [EOL]             results.add(outfile); [EOL]         } [EOL]         in.close(); [EOL]     } [EOL]     assertEquals(results.size(), 2); [EOL]     File result = (File) results.get(0); [EOL]     assertEquals(file1.length(), result.length()); [EOL]     result = (File) results.get(1); [EOL]     assertEquals(file2.length(), result.length()); [EOL] } <line_num>: 39,87
public void testZipUnarchive() throws Exception { [EOL]     final File input = getFile("bla.zip"); [EOL]     final InputStream is = new FileInputStream(input); [EOL]     final ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream("zip", is); [EOL]     final ZipArchiveEntry entry = (ZipArchiveEntry) in.getNextEntry(); [EOL]     final OutputStream out = new FileOutputStream(new File(dir, entry.getName())); [EOL]     IOUtils.copy(in, out); [EOL]     out.close(); [EOL]     in.close(); [EOL] } <line_num>: 93,102
