public ZipShortTest(String name) { [EOL]     super(name); [EOL] } <line_num>: 29,31
public void testToBytes() { [EOL]     ZipShort zs = new ZipShort(0x1234); [EOL]     byte[] result = zs.getBytes(); [EOL]     assertEquals("length getBytes", 2, result.length); [EOL]     assertEquals("first byte getBytes", 0x34, result[0]); [EOL]     assertEquals("second byte getBytes", 0x12, result[1]); [EOL] } <line_num>: 36,42
public void testFromBytes() { [EOL]     byte[] val = new byte[] { 0x34, 0x12 }; [EOL]     ZipShort zs = new ZipShort(val); [EOL]     assertEquals("value from bytes", 0x1234, zs.getValue()); [EOL] } <line_num>: 47,51
public void testEquals() { [EOL]     ZipShort zs = new ZipShort(0x1234); [EOL]     ZipShort zs2 = new ZipShort(0x1234); [EOL]     ZipShort zs3 = new ZipShort(0x5678); [EOL]     assertTrue("reflexive", zs.equals(zs)); [EOL]     assertTrue("works", zs.equals(zs2)); [EOL]     assertTrue("works, part two", !zs.equals(zs3)); [EOL]     assertTrue("symmetric", zs2.equals(zs)); [EOL]     assertTrue("null handling", !zs.equals(null)); [EOL]     assertTrue("non ZipShort handling", !zs.equals(new Integer(0x1234))); [EOL] } <line_num>: 56,70
public void testSign() { [EOL]     ZipShort zs = new ZipShort(new byte[] { (byte) 0xFF, (byte) 0xFF }); [EOL]     assertEquals(0x0000FFFF, zs.getValue()); [EOL] } <line_num>: 75,78
public void testClone() { [EOL]     ZipShort s1 = new ZipShort(42); [EOL]     ZipShort s2 = (ZipShort) s1.clone(); [EOL]     assertNotSame(s1, s2); [EOL]     assertEquals(s1, s2); [EOL]     assertEquals(s1.getValue(), s2.getValue()); [EOL] } <line_num>: 80,86
