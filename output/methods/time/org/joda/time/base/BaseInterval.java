protected BaseInterval(long startInstant, long endInstant, Chronology chrono) { [EOL]     super(); [EOL]     iChronology = DateTimeUtils.getChronology(chrono); [EOL]     checkInterval(startInstant, endInstant); [EOL]     iStartMillis = startInstant; [EOL]     iEndMillis = endInstant; [EOL] } <line_num>: 70,76
protected BaseInterval(ReadableInstant start, ReadableInstant end) { [EOL]     super(); [EOL]     if (start == null && end == null) { [EOL]         iStartMillis = iEndMillis = DateTimeUtils.currentTimeMillis(); [EOL]         iChronology = ISOChronology.getInstance(); [EOL]     } else { [EOL]         iChronology = DateTimeUtils.getInstantChronology(start); [EOL]         iStartMillis = DateTimeUtils.getInstantMillis(start); [EOL]         iEndMillis = DateTimeUtils.getInstantMillis(end); [EOL]         checkInterval(iStartMillis, iEndMillis); [EOL]     } [EOL] } <line_num>: 85,96
protected BaseInterval(ReadableInstant start, ReadableDuration duration) { [EOL]     super(); [EOL]     iChronology = DateTimeUtils.getInstantChronology(start); [EOL]     iStartMillis = DateTimeUtils.getInstantMillis(start); [EOL]     long durationMillis = DateTimeUtils.getDurationMillis(duration); [EOL]     iEndMillis = FieldUtils.safeAdd(iStartMillis, durationMillis); [EOL]     checkInterval(iStartMillis, iEndMillis); [EOL] } <line_num>: 106,113
protected BaseInterval(ReadableDuration duration, ReadableInstant end) { [EOL]     super(); [EOL]     iChronology = DateTimeUtils.getInstantChronology(end); [EOL]     iEndMillis = DateTimeUtils.getInstantMillis(end); [EOL]     long durationMillis = DateTimeUtils.getDurationMillis(duration); [EOL]     iStartMillis = FieldUtils.safeAdd(iEndMillis, -durationMillis); [EOL]     checkInterval(iStartMillis, iEndMillis); [EOL] } <line_num>: 123,130
protected BaseInterval(ReadableInstant start, ReadablePeriod period) { [EOL]     super(); [EOL]     Chronology chrono = DateTimeUtils.getInstantChronology(start); [EOL]     iChronology = chrono; [EOL]     iStartMillis = DateTimeUtils.getInstantMillis(start); [EOL]     if (period == null) { [EOL]         iEndMillis = iStartMillis; [EOL]     } else { [EOL]         iEndMillis = chrono.add(period, iStartMillis, 1); [EOL]     } [EOL]     checkInterval(iStartMillis, iEndMillis); [EOL] } <line_num>: 143,154
protected BaseInterval(ReadablePeriod period, ReadableInstant end) { [EOL]     super(); [EOL]     Chronology chrono = DateTimeUtils.getInstantChronology(end); [EOL]     iChronology = chrono; [EOL]     iEndMillis = DateTimeUtils.getInstantMillis(end); [EOL]     if (period == null) { [EOL]         iStartMillis = iEndMillis; [EOL]     } else { [EOL]         iStartMillis = chrono.add(period, iEndMillis, -1); [EOL]     } [EOL]     checkInterval(iStartMillis, iEndMillis); [EOL] } <line_num>: 167,178
protected BaseInterval(Object interval, Chronology chrono) { [EOL]     super(); [EOL]     IntervalConverter converter = ConverterManager.getInstance().getIntervalConverter(interval); [EOL]     if (converter.isReadableInterval(interval, chrono)) { [EOL]         ReadableInterval input = (ReadableInterval) interval; [EOL]         iChronology = (chrono != null ? chrono : input.getChronology()); [EOL]         iStartMillis = input.getStartMillis(); [EOL]         iEndMillis = input.getEndMillis(); [EOL]     } else if (this instanceof ReadWritableInterval) { [EOL]         converter.setInto((ReadWritableInterval) this, interval, chrono); [EOL]     } else { [EOL]         MutableInterval mi = new MutableInterval(); [EOL]         converter.setInto(mi, interval, chrono); [EOL]         iChronology = mi.getChronology(); [EOL]         iStartMillis = mi.getStartMillis(); [EOL]         iEndMillis = mi.getEndMillis(); [EOL]     } [EOL]     checkInterval(iStartMillis, iEndMillis); [EOL] } <line_num>: 188,206
public Chronology getChronology() { [EOL]     return iChronology; [EOL] } <line_num>: 214,216
public long getStartMillis() { [EOL]     return iStartMillis; [EOL] } <line_num>: 224,226
public long getEndMillis() { [EOL]     return iEndMillis; [EOL] } <line_num>: 234,236
protected void setInterval(long startInstant, long endInstant, Chronology chrono) { [EOL]     checkInterval(startInstant, endInstant); [EOL]     iStartMillis = startInstant; [EOL]     iEndMillis = endInstant; [EOL]     iChronology = DateTimeUtils.getChronology(chrono); [EOL] } <line_num>: 247,252
