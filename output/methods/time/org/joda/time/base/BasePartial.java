protected BasePartial() { [EOL]     this(DateTimeUtils.currentTimeMillis(), null); [EOL] } <line_num>: 64,66
protected BasePartial(Chronology chronology) { [EOL]     this(DateTimeUtils.currentTimeMillis(), chronology); [EOL] } <line_num>: 78,80
protected BasePartial(long instant) { [EOL]     this(instant, null); [EOL] } <line_num>: 92,94
protected BasePartial(long instant, Chronology chronology) { [EOL]     super(); [EOL]     chronology = DateTimeUtils.getChronology(chronology); [EOL]     iChronology = chronology.withUTC(); [EOL]     iValues = chronology.get(this, instant); [EOL] } <line_num>: 107,112
protected BasePartial(Object instant, Chronology chronology) { [EOL]     super(); [EOL]     PartialConverter converter = ConverterManager.getInstance().getPartialConverter(instant); [EOL]     chronology = converter.getChronology(instant, chronology); [EOL]     chronology = DateTimeUtils.getChronology(chronology); [EOL]     iChronology = chronology.withUTC(); [EOL]     iValues = converter.getPartialValues(this, instant, chronology); [EOL] } <line_num>: 130,137
protected BasePartial(Object instant, Chronology chronology, DateTimeFormatter parser) { [EOL]     super(); [EOL]     PartialConverter converter = ConverterManager.getInstance().getPartialConverter(instant); [EOL]     chronology = converter.getChronology(instant, chronology); [EOL]     chronology = DateTimeUtils.getChronology(chronology); [EOL]     iChronology = chronology.withUTC(); [EOL]     iValues = converter.getPartialValues(this, instant, chronology, parser); [EOL] } <line_num>: 157,164
protected BasePartial(int[] values, Chronology chronology) { [EOL]     super(); [EOL]     chronology = DateTimeUtils.getChronology(chronology); [EOL]     iChronology = chronology.withUTC(); [EOL]     chronology.validate(this, values); [EOL]     iValues = values; [EOL] } <line_num>: 179,185
protected BasePartial(BasePartial base, int[] values) { [EOL]     super(); [EOL]     iChronology = base.iChronology; [EOL]     iValues = values; [EOL] } <line_num>: 195,199
protected BasePartial(BasePartial base, Chronology chrono) { [EOL]     super(); [EOL]     iChronology = chrono.withUTC(); [EOL]     iValues = base.iValues; [EOL] } <line_num>: 210,214
public int getValue(int index) { [EOL]     return iValues[index]; [EOL] } <line_num>: 224,226
public int[] getValues() { [EOL]     return (int[]) iValues.clone(); [EOL] } <line_num>: 236,238
public Chronology getChronology() { [EOL]     return iChronology; [EOL] } <line_num>: 248,250
protected void setValue(int index, int value) { [EOL]     DateTimeField field = getField(index); [EOL]     int[] values = field.set(this, index, iValues, value); [EOL]     System.arraycopy(values, 0, iValues, 0, iValues.length); [EOL] } <line_num>: 264,268
protected void setValues(int[] values) { [EOL]     getChronology().validate(this, values); [EOL]     System.arraycopy(values, 0, iValues, 0, iValues.length); [EOL] } <line_num>: 279,282
public String toString(String pattern) { [EOL]     if (pattern == null) { [EOL]         return toString(); [EOL]     } [EOL]     return DateTimeFormat.forPattern(pattern).print(this); [EOL] } <line_num>: 291,296
public String toString(String pattern, Locale locale) throws IllegalArgumentException { [EOL]     if (pattern == null) { [EOL]         return toString(); [EOL]     } [EOL]     return DateTimeFormat.forPattern(pattern).withLocale(locale).print(this); [EOL] } <line_num>: 305,310
