@Deprecated [EOL] public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale) { [EOL]     this(instantLocal, chrono, locale, null, 2000); [EOL] } <line_num>: 87,90
@Deprecated [EOL] public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear) { [EOL]     this(instantLocal, chrono, locale, pivotYear, 2000); [EOL] } <line_num>: 103,106
public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear, int defaultYear) { [EOL]     super(); [EOL]     chrono = DateTimeUtils.getChronology(chrono); [EOL]     iMillis = instantLocal; [EOL]     iZone = chrono.getZone(); [EOL]     iChrono = chrono.withUTC(); [EOL]     iLocale = (locale == null ? Locale.getDefault() : locale); [EOL]     iPivotYear = pivotYear; [EOL]     iDefaultYear = defaultYear; [EOL] } <line_num>: 118,128
SavedState() { [EOL]     this.iZone = DateTimeParserBucket.this.iZone; [EOL]     this.iOffset = DateTimeParserBucket.this.iOffset; [EOL]     this.iSavedFields = DateTimeParserBucket.this.iSavedFields; [EOL]     this.iSavedFieldsCount = DateTimeParserBucket.this.iSavedFieldsCount; [EOL] } <line_num>: 435,440
SavedField(DateTimeField field, int value) { [EOL]     iField = field; [EOL]     iValue = value; [EOL]     iText = null; [EOL]     iLocale = null; [EOL] } <line_num>: 467,472
SavedField(DateTimeField field, String text, Locale locale) { [EOL]     iField = field; [EOL]     iValue = 0; [EOL]     iText = text; [EOL]     iLocale = locale; [EOL] } <line_num>: 474,479
public Chronology getChronology() { [EOL]     return iChrono; [EOL] } <line_num>: 134,136
public Locale getLocale() { [EOL]     return iLocale; [EOL] } <line_num>: 144,146
public DateTimeZone getZone() { [EOL]     return iZone; [EOL] } <line_num>: 152,154
public void setZone(DateTimeZone zone) { [EOL]     iSavedState = null; [EOL]     iZone = zone; [EOL] } <line_num>: 159,162
@Deprecated [EOL] public int getOffset() { [EOL]     return (iOffset != null ? iOffset : 0); [EOL] } <line_num>: 169,172
public Integer getOffsetInteger() { [EOL]     return iOffset; [EOL] } <line_num>: 177,179
@Deprecated [EOL] public void setOffset(int offset) { [EOL]     iSavedState = null; [EOL]     iOffset = offset; [EOL] } <line_num>: 185,189
public void setOffset(Integer offset) { [EOL]     iSavedState = null; [EOL]     iOffset = offset; [EOL] } <line_num>: 194,197
public Integer getPivotYear() { [EOL]     return iPivotYear; [EOL] } <line_num>: 212,214
public void setPivotYear(Integer pivotYear) { [EOL]     iPivotYear = pivotYear; [EOL] } <line_num>: 225,227
public void saveField(DateTimeField field, int value) { [EOL]     saveField(new SavedField(field, value)); [EOL] } <line_num>: 236,238
public void saveField(DateTimeFieldType fieldType, int value) { [EOL]     saveField(new SavedField(fieldType.getField(iChrono), value)); [EOL] } <line_num>: 246,248
public void saveField(DateTimeFieldType fieldType, String text, Locale locale) { [EOL]     saveField(new SavedField(fieldType.getField(iChrono), text, locale)); [EOL] } <line_num>: 257,259
private void saveField(SavedField field) { [EOL]     SavedField[] savedFields = iSavedFields; [EOL]     int savedFieldsCount = iSavedFieldsCount; [EOL]     if (savedFieldsCount == savedFields.length || iSavedFieldsShared) { [EOL]         SavedField[] newArray = new SavedField[savedFieldsCount == savedFields.length ? savedFieldsCount * 2 : savedFields.length]; [EOL]         System.arraycopy(savedFields, 0, newArray, 0, savedFieldsCount); [EOL]         iSavedFields = savedFields = newArray; [EOL]         iSavedFieldsShared = false; [EOL]     } [EOL]     iSavedState = null; [EOL]     savedFields[savedFieldsCount] = field; [EOL]     iSavedFieldsCount = savedFieldsCount + 1; [EOL] } <line_num>: 261,277
public Object saveState() { [EOL]     if (iSavedState == null) { [EOL]         iSavedState = new SavedState(); [EOL]     } [EOL]     return iSavedState; [EOL] } <line_num>: 286,291
public boolean restoreState(Object savedState) { [EOL]     if (savedState instanceof SavedState) { [EOL]         if (((SavedState) savedState).restoreState(this)) { [EOL]             iSavedState = savedState; [EOL]             return true; [EOL]         } [EOL]     } [EOL]     return false; [EOL] } <line_num>: 301,309
public long computeMillis() { [EOL]     return computeMillis(false, null); [EOL] } <line_num>: 318,320
public long computeMillis(boolean resetFields) { [EOL]     return computeMillis(resetFields, null); [EOL] } <line_num>: 330,332
public long computeMillis(boolean resetFields, String text) { [EOL]     SavedField[] savedFields = iSavedFields; [EOL]     int count = iSavedFieldsCount; [EOL]     if (iSavedFieldsShared) { [EOL]         iSavedFields = savedFields = (SavedField[]) iSavedFields.clone(); [EOL]         iSavedFieldsShared = false; [EOL]     } [EOL]     sort(savedFields, count); [EOL]     if (count > 0) { [EOL]         DurationField months = DurationFieldType.months().getField(iChrono); [EOL]         DurationField days = DurationFieldType.days().getField(iChrono); [EOL]         DurationField first = savedFields[0].iField.getDurationField(); [EOL]         if (compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0) { [EOL]             saveField(DateTimeFieldType.year(), iDefaultYear); [EOL]             return computeMillis(resetFields, text); [EOL]         } [EOL]     } [EOL]     long millis = iMillis; [EOL]     try { [EOL]         for (int i = 0; i < count; i++) { [EOL]             millis = savedFields[i].set(millis, resetFields); [EOL]         } [EOL]         if (resetFields) { [EOL]             for (int i = 0; i < count; i++) { [EOL]                 millis = savedFields[i].set(millis, i == (count - 1)); [EOL]             } [EOL]         } [EOL]     } catch (IllegalFieldValueException e) { [EOL]         if (text != null) { [EOL]             e.prependMessage("Cannot parse \"" + text + '"'); [EOL]         } [EOL]         throw e; [EOL]     } [EOL]     if (iOffset != null) { [EOL]         millis -= iOffset; [EOL]     } else if (iZone != null) { [EOL]         int offset = iZone.getOffsetFromLocal(millis); [EOL]         millis -= offset; [EOL]         if (offset != iZone.getOffset(millis)) { [EOL]             String message = "Illegal instant due to time zone offset transition (" + iZone + ')'; [EOL]             if (text != null) { [EOL]                 message = "Cannot parse \"" + text + "\": " + message; [EOL]             } [EOL]             throw new IllegalInstantException(message); [EOL]         } [EOL]     } [EOL]     return millis; [EOL] } <line_num>: 344,395
private static void sort(SavedField[] array, int high) { [EOL]     if (high > 10) { [EOL]         Arrays.sort(array, 0, high); [EOL]     } else { [EOL]         for (int i = 0; i < high; i++) { [EOL]             for (int j = i; j > 0 && (array[j - 1]).compareTo(array[j]) > 0; j--) { [EOL]                 SavedField t = array[j]; [EOL]                 array[j] = array[j - 1]; [EOL]                 array[j - 1] = t; [EOL]             } [EOL]         } [EOL]     } [EOL] } <line_num>: 415,427
boolean restoreState(DateTimeParserBucket enclosing) { [EOL]     if (enclosing != DateTimeParserBucket.this) { [EOL]         return false; [EOL]     } [EOL]     enclosing.iZone = this.iZone; [EOL]     enclosing.iOffset = this.iOffset; [EOL]     enclosing.iSavedFields = this.iSavedFields; [EOL]     if (this.iSavedFieldsCount < enclosing.iSavedFieldsCount) { [EOL]         enclosing.iSavedFieldsShared = true; [EOL]     } [EOL]     enclosing.iSavedFieldsCount = this.iSavedFieldsCount; [EOL]     return true; [EOL] } <line_num>: 442,458
long set(long millis, boolean reset) { [EOL]     if (iText == null) { [EOL]         millis = iField.set(millis, iValue); [EOL]     } else { [EOL]         millis = iField.set(millis, iText, iLocale); [EOL]     } [EOL]     if (reset) { [EOL]         millis = iField.roundFloor(millis); [EOL]     } [EOL]     return millis; [EOL] } <line_num>: 481,491
public int compareTo(SavedField obj) { [EOL]     DateTimeField other = obj.iField; [EOL]     int result = compareReverse(iField.getRangeDurationField(), other.getRangeDurationField()); [EOL]     if (result != 0) { [EOL]         return result; [EOL]     } [EOL]     return compareReverse(iField.getDurationField(), other.getDurationField()); [EOL] } <line_num>: 498,507
static int compareReverse(DurationField a, DurationField b) { [EOL]     if (a == null || !a.isSupported()) { [EOL]         if (b == null || !b.isSupported()) { [EOL]             return 0; [EOL]         } [EOL]         return -1; [EOL]     } [EOL]     if (b == null || !b.isSupported()) { [EOL]         return 1; [EOL]     } [EOL]     return -a.compareTo(b); [EOL] } <line_num>: 510,521
