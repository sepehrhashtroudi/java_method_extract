protected DateTimeComparator(DateTimeFieldType lowerLimit, DateTimeFieldType upperLimit) { [EOL]     super(); [EOL]     iLowerLimit = lowerLimit; [EOL]     iUpperLimit = upperLimit; [EOL] } <line_num>: 154,158
public static DateTimeComparator getInstance() { [EOL]     return ALL_INSTANCE; [EOL] } <line_num>: 71,73
public static DateTimeComparator getInstance(DateTimeFieldType lowerLimit) { [EOL]     return getInstance(lowerLimit, null); [EOL] } <line_num>: 86,88
public static DateTimeComparator getInstance(DateTimeFieldType lowerLimit, DateTimeFieldType upperLimit) { [EOL]     if (lowerLimit == null && upperLimit == null) { [EOL]         return ALL_INSTANCE; [EOL]     } [EOL]     if (lowerLimit == DateTimeFieldType.dayOfYear() && upperLimit == null) { [EOL]         return DATE_INSTANCE; [EOL]     } [EOL]     if (lowerLimit == null && upperLimit == DateTimeFieldType.dayOfYear()) { [EOL]         return TIME_INSTANCE; [EOL]     } [EOL]     return new DateTimeComparator(lowerLimit, upperLimit); [EOL] } <line_num>: 105,116
public static DateTimeComparator getDateOnlyInstance() { [EOL]     return DATE_INSTANCE; [EOL] } <line_num>: 129,131
public static DateTimeComparator getTimeOnlyInstance() { [EOL]     return TIME_INSTANCE; [EOL] } <line_num>: 144,146
public DateTimeFieldType getLowerLimit() { [EOL]     return iLowerLimit; [EOL] } <line_num>: 166,168
public DateTimeFieldType getUpperLimit() { [EOL]     return iUpperLimit; [EOL] } <line_num>: 175,177
public int compare(Object lhsObj, Object rhsObj) { [EOL]     InstantConverter conv = ConverterManager.getInstance().getInstantConverter(lhsObj); [EOL]     Chronology lhsChrono = conv.getChronology(lhsObj, (Chronology) null); [EOL]     long lhsMillis = conv.getInstantMillis(lhsObj, lhsChrono); [EOL]     conv = ConverterManager.getInstance().getInstantConverter(rhsObj); [EOL]     Chronology rhsChrono = conv.getChronology(rhsObj, (Chronology) null); [EOL]     long rhsMillis = conv.getInstantMillis(rhsObj, rhsChrono); [EOL]     if (iLowerLimit != null) { [EOL]         lhsMillis = iLowerLimit.getField(lhsChrono).roundFloor(lhsMillis); [EOL]         rhsMillis = iLowerLimit.getField(rhsChrono).roundFloor(rhsMillis); [EOL]     } [EOL]     if (iUpperLimit != null) { [EOL]         lhsMillis = iUpperLimit.getField(lhsChrono).remainder(lhsMillis); [EOL]         rhsMillis = iUpperLimit.getField(rhsChrono).remainder(rhsMillis); [EOL]     } [EOL]     if (lhsMillis < rhsMillis) { [EOL]         return -1; [EOL]     } else if (lhsMillis > rhsMillis) { [EOL]         return 1; [EOL]     } else { [EOL]         return 0; [EOL]     } [EOL] } <line_num>: 191,217
private Object readResolve() { [EOL]     return getInstance(iLowerLimit, iUpperLimit); [EOL] } <line_num>: 225,227
public boolean equals(Object object) { [EOL]     if (object instanceof DateTimeComparator) { [EOL]         DateTimeComparator other = (DateTimeComparator) object; [EOL]         return (iLowerLimit == other.getLowerLimit() || (iLowerLimit != null && iLowerLimit.equals(other.getLowerLimit()))) && (iUpperLimit == other.getUpperLimit() || (iUpperLimit != null && iUpperLimit.equals(other.getUpperLimit()))); [EOL]     } [EOL]     return false; [EOL] } <line_num>: 235,244
public int hashCode() { [EOL]     return (iLowerLimit == null ? 0 : iLowerLimit.hashCode()) + (123 * (iUpperLimit == null ? 0 : iUpperLimit.hashCode())); [EOL] } <line_num>: 251,254
public String toString() { [EOL]     if (iLowerLimit == iUpperLimit) { [EOL]         return "DateTimeComparator[" + (iLowerLimit == null ? "" : iLowerLimit.getName()) + "]"; [EOL]     } else { [EOL]         return "DateTimeComparator[" + (iLowerLimit == null ? "" : iLowerLimit.getName()) + "-" + (iUpperLimit == null ? "" : iUpperLimit.getName()) + "]"; [EOL]     } [EOL] } <line_num>: 261,273
