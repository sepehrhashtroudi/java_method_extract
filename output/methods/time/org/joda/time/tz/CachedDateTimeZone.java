private CachedDateTimeZone(DateTimeZone zone) { [EOL]     super(zone.getID()); [EOL]     iZone = zone; [EOL] } <line_num>: 86,89
Info(DateTimeZone zone, long periodStart) { [EOL]     iPeriodStart = periodStart; [EOL]     iZoneRef = zone; [EOL] } <line_num>: 180,183
public static CachedDateTimeZone forZone(DateTimeZone zone) { [EOL]     if (zone instanceof CachedDateTimeZone) { [EOL]         return (CachedDateTimeZone) zone; [EOL]     } [EOL]     return new CachedDateTimeZone(zone); [EOL] } <line_num>: 67,72
public DateTimeZone getUncachedZone() { [EOL]     return iZone; [EOL] } <line_num>: 94,96
public String getNameKey(long instant) { [EOL]     return getInfo(instant).getNameKey(instant); [EOL] } <line_num>: 98,100
public int getOffset(long instant) { [EOL]     return getInfo(instant).getOffset(instant); [EOL] } <line_num>: 102,104
public int getStandardOffset(long instant) { [EOL]     return getInfo(instant).getStandardOffset(instant); [EOL] } <line_num>: 106,108
public boolean isFixed() { [EOL]     return iZone.isFixed(); [EOL] } <line_num>: 110,112
public long nextTransition(long instant) { [EOL]     return iZone.nextTransition(instant); [EOL] } <line_num>: 114,116
public long previousTransition(long instant) { [EOL]     return iZone.previousTransition(instant); [EOL] } <line_num>: 118,120
public int hashCode() { [EOL]     return iZone.hashCode(); [EOL] } <line_num>: 122,124
public boolean equals(Object obj) { [EOL]     if (this == obj) { [EOL]         return true; [EOL]     } [EOL]     if (obj instanceof CachedDateTimeZone) { [EOL]         return iZone.equals(((CachedDateTimeZone) obj).iZone); [EOL]     } [EOL]     return false; [EOL] } <line_num>: 126,134
private Info getInfo(long millis) { [EOL]     int period = (int) (millis >> 32); [EOL]     Info[] cache = iInfoCache; [EOL]     int index = period & cInfoCacheMask; [EOL]     Info info = cache[index]; [EOL]     if (info == null || (int) ((info.iPeriodStart >> 32)) != period) { [EOL]         info = createInfo(millis); [EOL]         cache[index] = info; [EOL]     } [EOL]     return info; [EOL] } <line_num>: 139,149
private Info createInfo(long millis) { [EOL]     long periodStart = millis & (0xffffffffL << 32); [EOL]     Info info = new Info(iZone, periodStart); [EOL]     long end = periodStart | 0xffffffffL; [EOL]     Info chain = info; [EOL]     while (true) { [EOL]         long next = iZone.nextTransition(periodStart); [EOL]         if (next == periodStart || next > end) { [EOL]             break; [EOL]         } [EOL]         periodStart = next; [EOL]         chain = (chain.iNextInfo = new Info(iZone, periodStart)); [EOL]     } [EOL]     return info; [EOL] } <line_num>: 151,167
public String getNameKey(long millis) { [EOL]     if (iNextInfo == null || millis < iNextInfo.iPeriodStart) { [EOL]         if (iNameKey == null) { [EOL]             iNameKey = iZoneRef.getNameKey(iPeriodStart); [EOL]         } [EOL]         return iNameKey; [EOL]     } [EOL]     return iNextInfo.getNameKey(millis); [EOL] } <line_num>: 185,193
public int getOffset(long millis) { [EOL]     if (iNextInfo == null || millis < iNextInfo.iPeriodStart) { [EOL]         if (iOffset == Integer.MIN_VALUE) { [EOL]             iOffset = iZoneRef.getOffset(iPeriodStart); [EOL]         } [EOL]         return iOffset; [EOL]     } [EOL]     return iNextInfo.getOffset(millis); [EOL] } <line_num>: 195,203
public int getStandardOffset(long millis) { [EOL]     if (iNextInfo == null || millis < iNextInfo.iPeriodStart) { [EOL]         if (iStandardOffset == Integer.MIN_VALUE) { [EOL]             iStandardOffset = iZoneRef.getStandardOffset(iPeriodStart); [EOL]         } [EOL]         return iStandardOffset; [EOL]     } [EOL]     return iNextInfo.getStandardOffset(millis); [EOL] } <line_num>: 205,213
