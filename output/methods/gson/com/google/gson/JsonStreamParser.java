public JsonStreamParser(String json) { [EOL]     this(new StringReader(json)); [EOL] } <line_num>: 60,62
public JsonStreamParser(Reader reader) { [EOL]     parser = new JsonReader(reader); [EOL]     parser.setLenient(true); [EOL]     lock = new Object(); [EOL] } <line_num>: 68,72
public JsonElement next() throws JsonParseException { [EOL]     if (!hasNext()) { [EOL]         throw new NoSuchElementException(); [EOL]     } [EOL]     try { [EOL]         return Streams.parse(parser); [EOL]     } catch (StackOverflowError e) { [EOL]         throw new JsonParseException("Failed parsing JSON source to Json", e); [EOL]     } catch (OutOfMemoryError e) { [EOL]         throw new JsonParseException("Failed parsing JSON source to Json", e); [EOL]     } catch (JsonParseException e) { [EOL]         throw e.getCause() instanceof EOFException ? new NoSuchElementException() : e; [EOL]     } [EOL] } <line_num>: 81,95
public boolean hasNext() { [EOL]     synchronized (lock) { [EOL]         try { [EOL]             return parser.peek() != JsonToken.END_DOCUMENT; [EOL]         } catch (MalformedJsonException e) { [EOL]             throw new JsonSyntaxException(e); [EOL]         } catch (IOException e) { [EOL]             throw new JsonIOException(e); [EOL]         } [EOL]     } [EOL] } <line_num>: 102,112
public void remove() { [EOL]     throw new UnsupportedOperationException(); [EOL] } <line_num>: 119,121
