JsonTreeNavigator(JsonElementVisitor visitor, boolean visitNulls) { [EOL]     this.visitor = visitor; [EOL]     this.visitNulls = visitNulls; [EOL] } <line_num>: 31,34
public void navigate(JsonElement element) throws IOException { [EOL]     if (element.isJsonNull()) { [EOL]         visitor.visitNull(); [EOL]     } else if (element.isJsonArray()) { [EOL]         JsonArray array = element.getAsJsonArray(); [EOL]         visitor.startArray(array); [EOL]         boolean isFirst = true; [EOL]         for (JsonElement child : array) { [EOL]             visitChild(array, child, isFirst); [EOL]             if (isFirst) { [EOL]                 isFirst = false; [EOL]             } [EOL]         } [EOL]         visitor.endArray(array); [EOL]     } else if (element.isJsonObject()) { [EOL]         JsonObject object = element.getAsJsonObject(); [EOL]         visitor.startObject(object); [EOL]         boolean isFirst = true; [EOL]         for (Map.Entry<String, JsonElement> member : object.entrySet()) { [EOL]             boolean visited = visitChild(object, member.getKey(), member.getValue(), isFirst); [EOL]             if (visited && isFirst) { [EOL]                 isFirst = false; [EOL]             } [EOL]         } [EOL]         visitor.endObject(object); [EOL]     } else { [EOL]         visitor.visitPrimitive(element.getAsJsonPrimitive()); [EOL]     } [EOL] } <line_num>: 36,64
private boolean visitChild(JsonObject parent, String childName, JsonElement child, boolean isFirst) throws IOException { [EOL]     if (child.isJsonNull()) { [EOL]         if (visitNulls) { [EOL]             visitor.visitNullObjectMember(parent, childName, isFirst); [EOL]             navigate(child.getAsJsonNull()); [EOL]         } else { [EOL]             return false; [EOL]         } [EOL]     } else if (child.isJsonArray()) { [EOL]         JsonArray childAsArray = child.getAsJsonArray(); [EOL]         visitor.visitObjectMember(parent, childName, childAsArray, isFirst); [EOL]         navigate(childAsArray); [EOL]     } else if (child.isJsonObject()) { [EOL]         JsonObject childAsObject = child.getAsJsonObject(); [EOL]         visitor.visitObjectMember(parent, childName, childAsObject, isFirst); [EOL]         navigate(childAsObject); [EOL]     } else { [EOL]         visitor.visitObjectMember(parent, childName, child.getAsJsonPrimitive(), isFirst); [EOL]     } [EOL]     return true; [EOL] } <line_num>: 69,90
private void visitChild(JsonArray parent, JsonElement child, boolean isFirst) throws IOException { [EOL]     if (child.isJsonNull()) { [EOL]         visitor.visitNullArrayMember(parent, isFirst); [EOL]         navigate(child); [EOL]     } else if (child.isJsonArray()) { [EOL]         JsonArray childAsArray = child.getAsJsonArray(); [EOL]         visitor.visitArrayMember(parent, childAsArray, isFirst); [EOL]         navigate(childAsArray); [EOL]     } else if (child.isJsonObject()) { [EOL]         JsonObject childAsObject = child.getAsJsonObject(); [EOL]         visitor.visitArrayMember(parent, childAsObject, isFirst); [EOL]         navigate(childAsObject); [EOL]     } else { [EOL]         visitor.visitArrayMember(parent, child.getAsJsonPrimitive(), isFirst); [EOL]     } [EOL] } <line_num>: 95,110
