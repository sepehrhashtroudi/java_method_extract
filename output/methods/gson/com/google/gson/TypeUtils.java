private TypeUtils() { [EOL] } <line_num>: 92,94
static Type getActualTypeForFirstTypeVariable(Type type) { [EOL]     if (type instanceof Class<?>) { [EOL]         return Object.class; [EOL]     } else if (type instanceof ParameterizedType) { [EOL]         return ((ParameterizedType) type).getActualTypeArguments()[0]; [EOL]     } else if (type instanceof GenericArrayType) { [EOL]         return getActualTypeForFirstTypeVariable(((GenericArrayType) type).getGenericComponentType()); [EOL]     } else { [EOL]         throw new IllegalArgumentException("Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class."); [EOL]     } [EOL] } <line_num>: 43,54
static boolean isArray(Type type) { [EOL]     if (type instanceof Class<?>) { [EOL]         return ((Class<?>) type).isArray(); [EOL]     } else if (type instanceof GenericArrayType) { [EOL]         return true; [EOL]     } else { [EOL]         return false; [EOL]     } [EOL] } <line_num>: 56,64
static Class<?> toRawClass(Type type) { [EOL]     if (type instanceof Class<?>) { [EOL]         return (Class<?>) type; [EOL]     } else if (type instanceof ParameterizedType) { [EOL]         ParameterizedType actualType = (ParameterizedType) type; [EOL]         return toRawClass(actualType.getRawType()); [EOL]     } else if (type instanceof GenericArrayType) { [EOL]         GenericArrayType actualType = (GenericArrayType) type; [EOL]         Class<?> rawClass = toRawClass(actualType.getGenericComponentType()); [EOL]         return wrapWithArray(rawClass); [EOL]     } else if (type instanceof WildcardType) { [EOL]         WildcardType castedType = (WildcardType) type; [EOL]         return toRawClass(castedType.getUpperBounds()[0]); [EOL]     } else { [EOL]         throw new IllegalArgumentException("Type \'" + type + "\' is not a Class, " + "ParameterizedType, or GenericArrayType. Can't extract class."); [EOL]     } [EOL] } <line_num>: 69,86
static Class<?> wrapWithArray(Class<?> rawClass) { [EOL]     return Array.newInstance(rawClass, 0).getClass(); [EOL] } <line_num>: 88,90
