 FunctionTypeBuilder(String fnName, AbstractCompiler compiler, Node errorRoot, String sourceName, Scope scope)
 AstFunctionContents(Node n)
public boolean apply(JSType type)
public boolean apply(JSType type)
 FunctionTypeBuilder setContents(@Nullable FunctionContents contents)
 FunctionTypeBuilder inferFromOverriddenFunction(@Nullable FunctionType oldType, @Nullable Node paramsParent)
 FunctionTypeBuilder inferReturnType(@Nullable JSDocInfo info)
 FunctionTypeBuilder inferInheritance(@Nullable JSDocInfo info)
 FunctionTypeBuilder inferThisType(JSDocInfo info, JSType type)
 FunctionTypeBuilder inferThisType(JSDocInfo info)
 FunctionTypeBuilder inferParameterTypes(JSDocInfo info)
 FunctionTypeBuilder inferParameterTypes(@Nullable Node argsParent, @Nullable JSDocInfo info)
private boolean isOptionalParameter(Node param, @Nullable JSDocInfo info)
private boolean isVarArgsParameter(Node param, @Nullable JSDocInfo info)
 FunctionTypeBuilder inferTemplateTypeName(@Nullable JSDocInfo info)
private boolean addParameter(FunctionParamBuilder builder, JSType paramType, boolean warnedAboutArgList, boolean isOptional, boolean isVarArgs)
 FunctionType buildAndRegister()
private void maybeSetBaseType(FunctionType fnType)
private FunctionType getOrCreateConstructor()
private void reportWarning(DiagnosticType warning, String... args)
private void reportError(DiagnosticType error, String... args)
 static boolean isFunctionTypeDeclaration(JSDocInfo info)
private Scope getScopeDeclaredIn()
private static boolean hasMoreTagsToResolve(ObjectType objectType)
 Node getSourceNode()
 boolean mayBeFromExterns()
 boolean mayHaveNonEmptyReturns()
 boolean mayHaveSingleThrow()
 Iterable<String> getEscapedVarNames()
 Set<String> getEscapedQualifiedNames()
 Multiset<String> getAssignedNameCounts()
 static FunctionContents get()
public Node getSourceNode()
public boolean mayBeFromExterns()
public boolean mayHaveNonEmptyReturns()
public boolean mayHaveSingleThrow()
public Iterable<String> getEscapedVarNames()
public Set<String> getEscapedQualifiedNames()
public Multiset<String> getAssignedNameCounts()
public Node getSourceNode()
public boolean mayBeFromExterns()
public boolean mayHaveNonEmptyReturns()
 void recordNonEmptyReturn()
public boolean mayHaveSingleThrow()
public Iterable<String> getEscapedVarNames()
 void recordEscapedVarName(String name)
public Set<String> getEscapedQualifiedNames()
 void recordEscapedQualifiedName(String name)
public Multiset<String> getAssignedNameCounts()
 void recordAssignedName(String name)
