public FlowSensitiveInlineVariables(AbstractCompiler compiler)
 Candidate(String varName, Definition defMetadata, Node use, Node useCfgNode)
public boolean apply(Node n)
public void enterScope(NodeTraversal t)
public void exitScope(NodeTraversal t)
public void process(Node externs, Node root)
public void visit(NodeTraversal t, Node n, Node parent)
public void visit(NodeTraversal t, Node n, Node parent)
public void visit(NodeTraversal t, Node n, Node parent)
private Node getDefCfgNode()
public boolean apply(Node input)
public boolean apply(Node input)
private boolean canInline(final Scope scope)
private void inlineVariable()
public void visit(NodeTraversal t, Node n, Node parent)
private void getDefinition(Node n, Node parent)
public void visit(NodeTraversal t, Node n, Node parent)
private void getNumUseInUseCfgNode(Node n, Node parant)
private static boolean checkRightOf(Node n, Node expressionRoot, Predicate<Node> predicate)
private static boolean checkLeftOf(Node n, Node expressionRoot, Predicate<Node> predicate)
