public DefaultPassConfig(CompilerOptions options)
 GlobalTypeResolver(AbstractCompiler compiler)
 HotSwapPassFactory(String name, boolean isOneTimePass)
protected State getIntermediateState()
protected void setIntermediateState(State state)
 GlobalNamespace getGlobalNamespace()
 PreprocessorSymbolTable getPreprocessorSymbolTable()
 void maybeInitializePreprocessorSymbolTable(AbstractCompiler compiler)
protected List<PassFactory> getChecks()
protected List<PassFactory> getOptimizations()
private List<PassFactory> getMainOptimizationLoop()
private List<PassFactory> getCodeRemovingPasses()
protected HotSwapCompilerPass create(final AbstractCompiler compiler)
protected CompilerPass create(final AbstractCompiler compiler)
protected HotSwapCompilerPass create(final AbstractCompiler compiler)
private void assertAllOneTimePasses(List<PassFactory> passes)
private void assertAllLoopablePasses(List<PassFactory> passes)
protected HotSwapCompilerPass create(AbstractCompiler compiler)
protected HotSwapCompilerPass create(AbstractCompiler compiler)
protected HotSwapCompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
public void process(Node externs, Node root)
protected CompilerPass create(AbstractCompiler compiler)
public void process(Node externs, Node root)
public void hotSwapScript(Node scriptRoot, Node originalRoot)
protected HotSwapCompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(final AbstractCompiler compiler)
protected CompilerPass create(final AbstractCompiler compiler)
protected HotSwapCompilerPass create(AbstractCompiler compiler)
protected HotSwapCompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
public void process(Node externs, Node jsRoot)
protected CompilerPass create(final AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected HotSwapCompilerPass create(AbstractCompiler compiler)
public void process(Node externs, Node root)
protected CompilerPass create(final AbstractCompiler compiler)
protected HotSwapCompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected HotSwapCompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
public void process(Node externs, Node root)
public void hotSwapScript(Node scriptRoot, Node originalRoot)
protected HotSwapCompilerPass create(final AbstractCompiler compiler)
public void process(Node externs, Node root)
public void hotSwapScript(Node scriptRoot, Node originalRoot)
protected HotSwapCompilerPass create(final AbstractCompiler compiler)
public void process(Node externs, Node root)
public void hotSwapScript(Node scriptRoot, Node originalRoot)
protected HotSwapCompilerPass create(final AbstractCompiler compiler)
protected HotSwapCompilerPass create(AbstractCompiler compiler)
protected HotSwapCompilerPass create(AbstractCompiler compiler)
private static HotSwapCompilerPass combineChecks(AbstractCompiler compiler, List<Callback> callbacks)
public void process(Node externs, Node root)
public void hotSwapScript(Node scriptRoot, Node originalRoot)
public void process(Node externs, Node root)
public void process(Node externs, Node jsRoot)
protected CompilerPass create(final AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
public void process(Node externs, Node jsRoot)
protected CompilerPass create(final AbstractCompiler compiler)
public void process(Node externs, Node jsRoot)
protected CompilerPass create(final AbstractCompiler compiler)
public void process(Node externs, Node jsRoot)
public void hotSwapScript(Node scriptRoot, Node originalRoot)
protected HotSwapCompilerPass create(final AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
public void process(Node externs, Node root)
protected CompilerPass create(final AbstractCompiler compiler)
public void process(Node externs, Node root)
protected CompilerPass create(final AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(final AbstractCompiler compiler)
protected CompilerPass create(final AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
public void process(Node externs, Node root)
protected CompilerPass create(final AbstractCompiler compiler)
public void process(Node externs, Node root)
protected CompilerPass create(final AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
public void process(Node externs, Node root)
protected CompilerPass create(final AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
public void process(Node externs, Node root)
protected CompilerPass create(final AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
public void process(Node externs, Node root)
protected CompilerPass create(final AbstractCompiler compiler)
private VariableMap runPropertyRenaming(AbstractCompiler compiler, VariableMap prevPropertyMap, Node externs, Node root)
public void process(Node externs, Node root)
protected CompilerPass create(final AbstractCompiler compiler)
private VariableMap runVariableRenaming(AbstractCompiler compiler, VariableMap prevVariableMap, Node externs, Node root)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
protected CompilerPass create(AbstractCompiler compiler)
public void process(Node externs, Node root)
protected CompilerPass create(final AbstractCompiler compiler)
protected CompilerPass create(final AbstractCompiler compiler)
 static PassFactory createEmptyPass(String name)
protected CompilerPass create(final AbstractCompiler compiler)
private PassFactory getCustomPasses(final CustomPassExecutionTime executionTime)
private boolean isInliningForbidden()
private static CompilerPass runInSerial(final CompilerPass... passes)
public void process(Node externs, Node root)
private static CompilerPass runInSerial(final Collection<CompilerPass> passes)
 static Map<String, Node> getAdditionalReplacements(CompilerOptions options)
public void process(Node externs, Node jsRoot)
protected CompilerPass create(final AbstractCompiler compiler)
public void process(Node externs, Node jsRoot)
protected CompilerPass create(final AbstractCompiler compiler)
protected abstract HotSwapCompilerPass create(AbstractCompiler compiler)
 HotSwapCompilerPass getHotSwapPass(AbstractCompiler compiler)
