 FunctionRewriter(AbstractCompiler compiler)
 Reduction(Node parent, Node oldChild, Node newChild)
 ReductionGatherer(List<Reducer> reducers, Multimap<Reducer, Reduction> reductions)
public void process(Node externs, Node root)
public Node parseHelperCode(Reducer reducer)
private static boolean isReduceableFunctionExpression(Node n)
 void apply()
 int estimateSavings()
public boolean shouldTraverse(NodeTraversal raversal, Node node, Node parent)
public void visit(NodeTraversal traversal, Node node, Node parent)
 abstract String getHelperSource()
 abstract Node reduce(Node node)
protected final Node buildCallNode(String methodName, Node argumentNode, Node srcref)
public String getHelperSource()
public Node reduce(Node node)
protected final Node maybeGetSingleReturnRValue(Node functionNode)
public String getHelperSource()
public Node reduce(Node node)
private boolean isIdentityFunction(Node functionNode)
public String getHelperSource()
public Node reduce(Node node)
private Node getValueNode(Node functionNode)
public String getHelperSource()
public Node reduce(Node node)
private Node getGetPropertyName(Node functionNode)
public String getHelperSource()
public Node reduce(Node node)
private Node getSetPropertyName(Node functionNode)
