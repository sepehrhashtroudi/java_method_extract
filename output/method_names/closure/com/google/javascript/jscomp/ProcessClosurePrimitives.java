 ProcessClosurePrimitives(AbstractCompiler compiler, @Nullable PreprocessorSymbolTable preprocessorSymbolTable, CheckLevel requiresLevel)
 ProvidedName(String namespace, Node node, JSModule module, boolean explicit)
 UnrecognizedRequire(Node requireNode, String namespace, String inputName)
 Set<String> getExportedVariableNames()
public void process(Node externs, Node root)
public void hotSwapScript(Node scriptRoot, Node originalRoot)
public void visit(NodeTraversal t, Node n, Node parent)
private void processRequireCall(NodeTraversal t, Node n, Node parent)
private void processProvideCall(NodeTraversal t, Node n, Node parent)
private void handleTypedefDefinition(NodeTraversal t, Node n, Node parent)
private void handleCandidateProvideDefinition(NodeTraversal t, Node n, Node parent)
private void processBaseClassCall(NodeTraversal t, Node n)
private Node getEnclosingDeclNameNode(NodeTraversal t)
private void reportBadBaseClassUse(NodeTraversal t, Node n, String extraMessage)
private void processProvideFromPreviousPass(NodeTraversal t, String name, Node parent)
public String get(String value)
public CssRenamingMap.Style getStyle()
private void processSetCssNameMapping(NodeTraversal t, Node n, Node parent)
private boolean verifyProvide(NodeTraversal t, Node methodName, Node arg)
private boolean verifyArgument(NodeTraversal t, Node methodName, Node arg)
private boolean verifyArgument(NodeTraversal t, Node methodName, Node arg, int desiredType)
private boolean verifySetCssNameMapping(NodeTraversal t, Node methodName, Node firstArg)
private void registerAnyProvidedPrefixes(String ns, Node node, JSModule module)
 void addProvide(Node node, JSModule module, boolean explicit)
 boolean isExplicitlyProvided()
 void addDefinition(Node node, JSModule module)
private void updateMinimumModule(JSModule newModule)
 void replace()
private Node createDeclarationNode()
private Node makeVarDeclNode()
private Node createNamespaceLiteral()
private Node makeAssignmentExprNode()
private JSDocInfo createConstantJsDoc()
private void setSourceInfo(Node newNode)
private int getSourceInfoOffset(Node provideStringNode)
private Node getProvideStringNode()
private static boolean isNamespacePlaceholder(Node n)
private void maybeAddStringNodeToSymbolTable(Node n)
private void maybeAddToSymbolTable(Node n)
