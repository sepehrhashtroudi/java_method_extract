 TypeFilter(List<C> emptyList)
 ConcreteFunctionType(Factory factory, Node declaration, StaticScope<ConcreteType> parentScope)
 ConcreteInstanceType(Factory factory, ObjectType instanceType)
 ConcreteUnionType(ConcreteType... alternatives)
 ConcreteUnionType(Set<ConcreteType> alternatives)
 ConcreteUniqueType(int id)
protected static ConcreteType createForTypes(Collection<ConcreteType> types)
 boolean isNone()
 boolean isFunction()
 boolean isInstance()
 boolean isUnion()
 boolean isAll()
 boolean isSingleton()
 ConcreteFunctionType toFunction()
 ConcreteInstanceType toInstance()
 ConcreteUnionType toUnion()
 StaticScope<ConcreteType> getScope()
 ConcreteType unionWith(ConcreteType other)
 ConcreteType intersectWith(ConcreteType other)
private List<C> getMatchingTypes(TypeFilter<C> filter)
protected abstract C filter(ConcreteType type)
public ConcreteFunctionType filter(ConcreteType type)
 List<ConcreteFunctionType> getFunctions()
public ConcreteInstanceType filter(ConcreteType type)
 List<ConcreteInstanceType> getInstances()
public ConcreteInstanceType filter(ConcreteType type)
 List<ConcreteInstanceType> getFunctionInstanceTypes()
public ConcreteInstanceType filter(ConcreteType type)
 List<ConcreteInstanceType> getPrototypeTypes()
public ConcreteFunctionType filter(ConcreteType type)
 List<ConcreteFunctionType> getSuperclassTypes()
public StaticSlot<ConcreteType> filter(ConcreteType type)
 List<StaticSlot<ConcreteType>> getParameterSlots(final int index)
public StaticSlot<ConcreteType> filter(ConcreteType type)
 List<StaticSlot<ConcreteType>> getPropertySlots(final String name)
 ConcreteType getPropertyType(final String name)
 boolean isNone()
 ConcreteType unionWith(ConcreteType other)
 ConcreteType intersectWith(ConcreteType other)
public String toString()
 boolean isFunction()
 ConcreteFunctionType toFunction()
 StaticSlot<ConcreteType> getCallSlot()
 StaticSlot<ConcreteType> getThisSlot()
 StaticSlot<ConcreteType> getReturnSlot()
 StaticSlot<ConcreteType> getParameterSlot(int index)
private String getParameterName(int index)
private Node getFirstParameter()
public FunctionType getJSType()
 ConcreteInstanceType getInstanceType()
 ConcreteInstanceType getPrototypeType()
 ConcreteFunctionType getSuperclassType()
 StaticScope<ConcreteType> getScope()
public String toString()
 boolean isInstance()
 ConcreteInstanceType toInstance()
 boolean isFunctionPrototype()
 StaticSlot<ConcreteType> getPropertySlot(String propName)
 ConcreteInstanceType getInstanceTypeWithProperty(String propName)
 ConcreteInstanceType getImplicitPrototype()
 ConcreteFunctionType getConstructorType()
 StaticScope<ConcreteType> getScope()
public String toString()
 boolean isUnion()
 ConcreteUnionType toUnion()
 ConcreteType unionWith(ConcreteType other)
 ConcreteType intersectWith(ConcreteType other)
 Set<ConcreteType> getAlternatives()
public boolean equals(Object obj)
public int hashCode()
public String toString()
 boolean isAll()
 ConcreteType unionWith(ConcreteType other)
 ConcreteType intersectWith(ConcreteType other)
public String toString()
public boolean equals(Object o)
public int hashCode()
public String toString()
 ConcreteFunctionType createConcreteFunction(Node declaration, StaticScope<ConcreteType> parent)
 ConcreteInstanceType createConcreteInstance(ObjectType instanceType)
 ConcreteFunctionType getConcreteFunction(FunctionType function)
 ConcreteInstanceType getConcreteInstance(ObjectType instance)
 StaticScope<ConcreteType> createFunctionScope(Node declaration, StaticScope<ConcreteType> parent)
 StaticScope<ConcreteType> createInstanceScope(ObjectType instanceType)
 JSTypeRegistry getTypeRegistry()
