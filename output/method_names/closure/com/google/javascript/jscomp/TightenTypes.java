 TightenTypes(AbstractCompiler compiler)
 ConcreteScope(ConcreteScope parent)
 ConcreteSlot(ConcreteScope scope, String name)
 Assignment(ConcreteSlot slot, ConcreteType type)
 VariableAssignAction(ConcreteSlot slot, Node expr)
 PropertyAssignAction(Node receiver, Node expr)
 FunctionCallBuilder(Node receiver, Node firstArgument)
 ExternFunctionCall(Node receiver, ConcreteType thisType, List<ConcreteType> argTypes)
 FunctionCall(boolean isNewCall, Node receiver, String propName, Node firstArgument)
 NativeCallFunctionCall(Node receiver, String propName, Node firstArgument)
 CreateScope(ConcreteScope scope, boolean inExterns)
 ConcreteJSTypePair(ConcreteType concrete, JSType jstype)
 ConcreteScope getTopScope()
public JSTypeRegistry getTypeRegistry()
public void process(Node externRoot, Node jsRoot)
public Node getRootNode()
public StaticScope<ConcreteType> getParentScope()
public StaticSlot<ConcreteType> getOwnSlot(String name)
public StaticSlot<ConcreteType> getSlot(String name)
 Collection<ConcreteSlot> getSlots()
public ConcreteType getTypeOfThis()
 void declareSlot(String name, Node declaration)
 void declareSlot(String name, Node declaration, ConcreteType type)
 List<Action> getActions()
 void initForScopeRoot(Node decl)
 void initForExternRoot(Node decl)
 void addAction(Action action)
public String toString()
 ConcreteScope getScope()
public String getName()
public ConcreteType getType()
public boolean isTypeInferred()
public StaticReference<ConcreteType> getDeclaration()
public JSDocInfo getJSDocInfo()
 boolean addConcreteType(ConcreteType type)
public String toString()
 Collection<Assignment> getAssignments(ConcreteScope scope)
public Collection<Assignment> getAssignments(ConcreteScope scope)
public Collection<Assignment> getAssignments(ConcreteScope scope)
 FunctionCallBuilder setPropName(String propName)
 FunctionCallBuilder setIsNewCall(boolean isNew)
 FunctionCallBuilder setIsCallFunction()
 Action build()
private List<Assignment> getFunctionCallAssignments(ConcreteType recvType, ConcreteType thisType, List<ConcreteType> argTypes)
public Collection<Assignment> getAssignments(ConcreteScope scope)
public Collection<Assignment> getAssignments(ConcreteScope scope)
public Collection<Assignment> getAssignments(ConcreteScope scope)
public void visit(NodeTraversal t, Node n, Node parent)
private void addAction(Action action)
private void addActions(List<Action> actions)
private List<Action> createAssignmentActions(Node lhs, Node rhs, Node parent)
private ExternFunctionCall createExternFunctionCall(Node receiver, JSType jsThisType, FunctionType fun)
private JSType getJSType(Node n)
private Collection<Action> getImplicitActions(Node n)
private Collection<Action> getImplicitActionsFromCall(Node n, JSType recvType)
private Collection<Action> getImplicitActionsFromArgument(Node arg, ObjectType thisType, JSType paramType)
private Collection<Action> getImplicitActionsFromProp(JSType jsType, String prop, Node fnNode)
private Collection<Action> getImplicitActionsFromPropNonUnion(ObjectType jsType, String prop, Node fnNode)
private ConcreteType createType(Node name, ConcreteScope scope)
private ConcreteType createType(JSType jsType)
private ConcreteType createTypeWithSubTypes(JSType jsType)
 ConcreteType inferConcreteType(ConcreteScope scope, Node expr)
private ConcreteType createTypeIntersection(ConcreteType concreteType, JSType jsType)
public ConcreteFunctionType createConcreteFunction(Node decl, StaticScope<ConcreteType> parent)
public ConcreteInstanceType createConcreteInstance(ObjectType instanceType)
 ConcreteFunctionType getConcreteFunction(Node decl)
public ConcreteFunctionType getConcreteFunction(FunctionType functionType)
public ConcreteInstanceType getConcreteInstance(ObjectType instanceType)
public StaticScope<ConcreteType> createFunctionScope(Node decl, StaticScope<ConcreteType> parent)
public StaticScope<ConcreteType> createInstanceScope(ObjectType instanceType)
 ConcreteType createUnionWithSubTypes(ConcreteType type)
private Set<ConcreteType> getSubTypes(ConcreteInstanceType type)
private boolean getSubTypes(FunctionType type, Set<ConcreteType> set)
private int getJSTypeHashCode()
private boolean equalsJSType(JSType jsType)
public boolean equals(Object o)
public int hashCode()
