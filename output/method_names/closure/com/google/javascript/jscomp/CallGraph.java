public CallGraph(AbstractCompiler compiler, boolean computeForwardGraph, boolean computeBackwardGraph)
public CallGraph(AbstractCompiler compiler)
private Function(Node functionAstNode)
private Callsite(Node callsiteAstNode)
public void process(Node externsRoot, Node jsRoot)
public Function getFunctionForAstNode(Node functionNode)
public Function getMainFunction()
public Collection<Function> getAllFunctions()
public boolean apply(Function function)
public Function getUniqueFunctionWithName(final String desiredName)
public Callsite getCallsiteForAstNode(Node callsiteNode)
public Collection<Callsite> getAllCallsites()
public void visit(NodeTraversal t, Node n, Node parent)
private void createFunctionsAndCallsites(Node jsRoot, final DefinitionProvider provider)
private Function createFunction(Node functionNode)
private Callsite createCallsite(Node callsiteNode)
private void connectCallsiteToTargets(Callsite callsite, DefinitionProvider definitionProvider)
private void fillInFunctionInformation(DefinitionProvider provider)
private void updateFunctionForName(Function function, Name name)
private void updateFunctionForUse(Function function, Node useNode)
private Function lookupFunctionForDefinition(Definition definition)
public DiGraph<Function, Callsite> getForwardDirectedGraph()
public DiGraph<Function, Callsite> getBackwardDirectedGraph()
private static void digraphConnect(DiGraph<Function, Callsite> digraph, Function caller, Callsite callsite, Function callee, boolean forward)
private DiGraph<Function, Callsite> constructDirectedGraph(boolean forward)
private DefinitionProvider constructDefinitionProvider(Node externsRoot, Node jsRoot)
private Collection<Definition> lookupDefinitionsForTargetsOfCall(Node callsite, DefinitionProvider definitionProvider)
public boolean isMain()
public Node getAstNode()
public Node getBodyNode()
public String getName()
public Collection<Callsite> getCallsitesInFunction()
private void addCallsiteInFunction(Callsite callsite)
public Collection<Callsite> getCallsitesPossiblyTargetingFunction()
private void addCallsitePossiblyTargetingFunction(Callsite callsite)
public boolean isAliased()
public boolean isExposedToCallOrApply()
public Node getAstNode()
public Function getContainingFunction()
public Collection<Function> getPossibleTargets()
private void addPossibleTarget(Function target)
public boolean hasUnknownTarget()
public boolean hasExternTarget()
