public FieldVectorTestImpl(T[] d)
private T[] buildArray(final int length)
public Field<T> getField()
private UnsupportedOperationException unsupported()
public FieldVector<T> copy()
public FieldVector<T> add(FieldVector<T> v)
public FieldVector<T> add(T[] v)
public FieldVector<T> subtract(FieldVector<T> v)
public FieldVector<T> subtract(T[] v)
public FieldVector<T> mapAdd(T d)
public FieldVector<T> mapAddToSelf(T d)
public FieldVector<T> mapSubtract(T d)
public FieldVector<T> mapSubtractToSelf(T d)
public FieldVector<T> mapMultiply(T d)
public FieldVector<T> mapMultiplyToSelf(T d)
public FieldVector<T> mapDivide(T d)
public FieldVector<T> mapDivideToSelf(T d)
public FieldVector<T> mapInv()
public FieldVector<T> mapInvToSelf()
public FieldVector<T> ebeMultiply(FieldVector<T> v)
public FieldVector<T> ebeMultiply(T[] v)
public FieldVector<T> ebeDivide(FieldVector<T> v)
public FieldVector<T> ebeDivide(T[] v)
public T[] getData()
public T dotProduct(FieldVector<T> v)
public T dotProduct(T[] v)
public FieldVector<T> projection(FieldVector<T> v)
public FieldVector<T> projection(T[] v)
public FieldMatrix<T> outerProduct(FieldVector<T> v)
public FieldMatrix<T> outerProduct(T[] v)
public T getEntry(int index)
public int getDimension()
public FieldVector<T> append(FieldVector<T> v)
public FieldVector<T> append(T d)
public FieldVector<T> append(T[] a)
public FieldVector<T> getSubVector(int index, int n)
public void setEntry(int index, T value)
public void setSubVector(int index, FieldVector<T> v)
public void setSubVector(int index, T[] v)
public void set(T value)
public T[] toArray()
public void testConstructors()
public void testDataInOut()
public void testMapFunctions()
public void testBasicFunctions()
public void testMisc()
public void testSerial()
public void testZeroVectors()
public void testOuterProduct()
protected void checkArray(String msg, Fraction[] m, Fraction[] n)
