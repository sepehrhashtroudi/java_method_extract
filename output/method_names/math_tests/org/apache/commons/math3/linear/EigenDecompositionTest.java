public void testDimension1()
public void testDimension2()
public void testDimension3()
public void testDimension3MultipleRoot()
public void testDimension4WithSplit()
public void testDimension4WithoutSplit()
public void testMath308()
public void testMathpbx02()
public void testMathpbx03()
public void testTridiagonal()
public void testDimensions()
public void testEigenvalues()
public void testBigMatrix()
public void testSymmetric()
public void testSquareRoot()
public void testSquareRootNonSymmetric()
public void testSquareRootNonPositiveDefinite()
public void testUnsymmetric()
public void testRandomUnsymmetricMatrix()
public void testNormalDistributionUnsymmetricMatrix()
public void testMath848()
private void checkUnsymmetricMatrix(final RealMatrix m)
public void testEigenvectors()
public void testAEqualVDVt()
public void testVOrthogonal()
public void testDiagonal()
public void testRepeatedEigenvalue()
public void testDistinctEigenvalues()
public void testZeroDivide()
protected void checkEigenValues(double[] targetValues, EigenDecomposition ed, double tolerance)
private boolean isIncludedValue(double value, double[] searchArray, double tolerance)
protected void checkEigenVector(double[] eigenVector, EigenDecomposition ed, double tolerance)
private boolean isIncludedColumn(double[] column, RealMatrix searchMatrix, double tolerance)
public void setUp()
public void tearDown()
 static RealMatrix createTestMatrix(final Random r, final double[] eigenValues)
public static RealMatrix createOrthogonalMatrix(final Random r, final int size)
