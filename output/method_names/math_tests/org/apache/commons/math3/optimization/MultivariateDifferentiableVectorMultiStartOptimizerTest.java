public LinearProblem(double[][] factors, double[] target)
public PointVectorValuePair optimize(int maxEval, MultivariateDifferentiableVectorFunction f, double[] target, double[] weight, double[] startPoint)
public int getMaxEvaluations()
public int getEvaluations()
public ConvergenceChecker<PointVectorValuePair> getConvergenceChecker()
public void testTrivial()
public PointVectorValuePair optimize(int maxEval, MultivariateDifferentiableVectorFunction f, double[] target, double[] weight, double[] startPoint)
public int getMaxEvaluations()
public int getEvaluations()
public ConvergenceChecker<PointVectorValuePair> getConvergenceChecker()
public double[] value(double[] point)
public DerivativeStructure[] value(DerivativeStructure[] point)
public void testNoOptimum()
public double[] value(double[] variables)
public DerivativeStructure[] value(DerivativeStructure[] variables)
