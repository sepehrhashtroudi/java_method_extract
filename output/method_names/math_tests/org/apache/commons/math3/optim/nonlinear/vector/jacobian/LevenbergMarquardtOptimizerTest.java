public QuadraticProblem()
public BevingtonProblem()
public AbstractLeastSquaresOptimizer createOptimizer()
public void testConstraintsUnsupported()
public void testNonInvertible()
public void testControlParameters()
private void checkEstimate(ModelFunction problem, ModelFunctionJacobian problemJacobian, double initialStepBoundFactor, int maxCostEval, double costRelativeTolerance, double parRelativeTolerance, double orthoTolerance, boolean shouldFail)
public void testBevington()
public void testCircleFitting2()
public void addPoint(double x, double y)
public double[] value(double[] variables)
public ModelFunction getModelFunction()
public double[][] value(double[] params)
public ModelFunctionJacobian getModelFunctionJacobian()
public void addPoint(double t, double c)
public double[] value(double[] params)
public ModelFunction getModelFunction()
public double[][] value(double[] params)
public ModelFunctionJacobian getModelFunctionJacobian()
