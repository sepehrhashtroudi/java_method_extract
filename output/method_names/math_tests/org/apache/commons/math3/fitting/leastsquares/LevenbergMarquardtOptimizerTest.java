public QuadraticProblem()
public BevingtonProblem()
public LevenbergMarquardtOptimizer createOptimizer()
public int getMaxIterations()
public void testShallowCopy()
public void testNonInvertible()
public void testControlParameters()
private void checkEstimate(MultivariateVectorFunction problem, MultivariateMatrixFunction problemJacobian, double initialStepBoundFactor, int maxCostEval, double costRelativeTolerance, double parRelativeTolerance, double orthoTolerance, boolean shouldFail)
public void testBevington()
public void testCircleFitting2()
public void addPoint(double x, double y)
public double[] value(double[] variables)
public MultivariateVectorFunction getModelFunction()
public double[][] value(double[] params)
public MultivariateMatrixFunction getModelFunctionJacobian()
public void addPoint(double t, double c)
public double[] value(double[] params)
public MultivariateVectorFunction getModelFunction()
public double[][] value(double[] params)
public MultivariateMatrixFunction getModelFunctionJacobian()
