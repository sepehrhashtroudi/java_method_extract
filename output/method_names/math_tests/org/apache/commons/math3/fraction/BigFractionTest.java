private void assertFraction(int expectedNumerator, int expectedDenominator, BigFraction actual)
private void assertFraction(long expectedNumerator, long expectedDenominator, BigFraction actual)
public void testConstructor()
public void testGoldenRatio()
public void testDoubleConstructor() throws ConvergenceException
public void testDigitLimitConstructor() throws ConvergenceException
public void testEpsilonLimitConstructor() throws ConvergenceException
public void testCompareTo()
public void testDoubleValue()
public void testDoubleValueForLargeNumeratorAndDenominator()
public void testFloatValueForLargeNumeratorAndDenominator()
public void testFloatValue()
public void testIntValue()
public void testLongValue()
public void testConstructorDouble()
public void testAbs()
public void testReciprocal()
public void testNegate()
public void testAdd()
public void testDivide()
public void testMultiply()
public void testSubtract()
public void testBigDecimalValue()
public void testEqualsAndHashCode()
public void testGetReducedFraction()
public void testPercentage()
public void testPow()
public void testMath340()
public void testSerial() throws FractionConversionException
