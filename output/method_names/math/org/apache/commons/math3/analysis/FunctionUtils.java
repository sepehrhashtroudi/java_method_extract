private FunctionUtils()
public double value(double x)
public static UnivariateFunction compose(final UnivariateFunction... f)
public double value(final double t)
public DerivativeStructure value(final DerivativeStructure t)
public static UnivariateDifferentiableFunction compose(final UnivariateDifferentiableFunction... f)
public double value(double x)
public double value(double x)
public UnivariateFunction derivative()
public static DifferentiableUnivariateFunction compose(final DifferentiableUnivariateFunction... f)
public double value(double x)
public static UnivariateFunction add(final UnivariateFunction... f)
public double value(final double t)
public DerivativeStructure value(final DerivativeStructure t) throws DimensionMismatchException
public static UnivariateDifferentiableFunction add(final UnivariateDifferentiableFunction... f)
public double value(double x)
public double value(double x)
public UnivariateFunction derivative()
public static DifferentiableUnivariateFunction add(final DifferentiableUnivariateFunction... f)
public double value(double x)
public static UnivariateFunction multiply(final UnivariateFunction... f)
public double value(final double t)
public DerivativeStructure value(final DerivativeStructure t)
public static UnivariateDifferentiableFunction multiply(final UnivariateDifferentiableFunction... f)
public double value(double x)
public double value(double x)
public UnivariateFunction derivative()
public static DifferentiableUnivariateFunction multiply(final DifferentiableUnivariateFunction... f)
public double value(double x)
public static UnivariateFunction combine(final BivariateFunction combiner, final UnivariateFunction f, final UnivariateFunction g)
public double value(double[] point)
public static MultivariateFunction collector(final BivariateFunction combiner, final UnivariateFunction f, final double initialValue)
public static MultivariateFunction collector(final BivariateFunction combiner, final double initialValue)
public double value(double x)
public static UnivariateFunction fix1stArgument(final BivariateFunction f, final double fixed)
public double value(double x)
public static UnivariateFunction fix2ndArgument(final BivariateFunction f, final double fixed)
public static double[] sample(UnivariateFunction f, double min, double max, int n) throws NumberIsTooLargeException, NotStrictlyPositiveException
public double value(final double x)
public double value(final double x)
public UnivariateFunction derivative()
public static DifferentiableUnivariateFunction toDifferentiableUnivariateFunction(final UnivariateDifferentiableFunction f)
public double value(final double x)
public DerivativeStructure value(final DerivativeStructure t) throws NumberIsTooLargeException
public static UnivariateDifferentiableFunction toUnivariateDifferential(final DifferentiableUnivariateFunction f)
public double value(final double[] x)
public double value(final double[] x)
public MultivariateFunction partialDerivative(final int k)
public double[] value(final double[] x)
public MultivariateVectorFunction gradient()
public static DifferentiableMultivariateFunction toDifferentiableMultivariateFunction(final MultivariateDifferentiableFunction f)
public double value(final double[] x)
public DerivativeStructure value(final DerivativeStructure[] t) throws DimensionMismatchException, NumberIsTooLargeException
public static MultivariateDifferentiableFunction toMultivariateDifferentiableFunction(final DifferentiableMultivariateFunction f)
public double[] value(final double[] x)
public double[][] value(final double[] x)
public MultivariateMatrixFunction jacobian()
public static DifferentiableMultivariateVectorFunction toDifferentiableMultivariateVectorFunction(final MultivariateDifferentiableVectorFunction f)
public double[] value(final double[] x)
public DerivativeStructure[] value(final DerivativeStructure[] t) throws DimensionMismatchException, NumberIsTooLargeException
public static MultivariateDifferentiableVectorFunction toMultivariateDifferentiableVectorFunction(final DifferentiableMultivariateVectorFunction f)
