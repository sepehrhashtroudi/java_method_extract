 [EOL]       assertEquals("Byte", string0)
 [EOL]       assertEquals((-2147482938), (int)hashCodeBuilder2.build())
 [EOL]       assertEquals('5', char0)
 [EOL]       assertEquals("\"2.]_gYXF<", string0)
 [EOL]       assertArrayEquals(new char[] {'T', 'T', 'T'}, charArray0)
 [EOL]       assertEquals(5, byteArray0.length)  [EOL]       assertEquals(9, charSequenceArray0.length)  [EOL]       assertEquals(9, charSequenceArray0.length)  [EOL]       assertEquals(1, stringArray0.length)
 [EOL]       assertNull(abstractMap_SimpleEntry0)
 [EOL]       assertNull(string0)
 [EOL]       assertEquals((short)64, short0)
 [EOL]       assertTrue(linkedHashSet0.isEmpty())  [EOL]       assertTrue(linkedHashSet0.isEmpty())  [EOL]       assertFalse(linkedHashSet0.isEmpty())  [EOL]       assertFalse(linkedHashSet0.isEmpty())
 [EOL]       assertTrue(string2.equals((Object)string0))
 [EOL]       assertEquals("8J/N)", object0)
 [EOL]       assertEquals(2906L, (long)long0)
 [EOL]       assertEquals(12, fraction11.getDenominator())  [EOL]       assertEquals(29, fraction18.getDenominator())
 [EOL]       assertEquals("1970-01-01T00:00:00", string0)
 [EOL]       assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=1392409281320,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=2014,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=2,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=8,HOUR_OF_DAY=20,MINUTE=21,SECOND=21,MILLISECOND=320,ZONE_OFFSET=0,DST_OFFSET=0]", mockGregorianCalendar1.toString())
 [EOL]       assertEquals((short)0, mutableLong0.shortValue())
 [EOL]       assertEquals("l9zcx)v", string0)
 [EOL]       assertNull(object0)
 [EOL]       assertEquals('X', charRange0.getStart())  [EOL]       assertEquals('1', charRange1.getStart())
 [EOL]       assertEquals(1, stringArray0.length)  [EOL]       assertEquals(3, floatArray0.length)  [EOL]       assertEquals(1, stringArray0.length)
 [EOL]       assertEquals(1705, charBuffer0.length())  [EOL]       assertEquals(1705, charBuffer0.length())
 [EOL]       assertEquals("", formatter1.toString())
 [EOL]       assertTrue(string1.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string1))  [EOL]       assertTrue(string3.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertTrue(string3.equals((Object)string1))  [EOL]       assertFalse(string4.equals((Object)string2))  [EOL]       assertTrue(string4.equals((Object)string1))  [EOL]       assertTrue(string4.equals((Object)string0))  [EOL]       assertTrue(string4.equals((Object)string3))  [EOL]       assertTrue(string5.equals((Object)string4))  [EOL]       assertFalse(string5.equals((Object)string2))  [EOL]       assertTrue(string5.equals((Object)string3))  [EOL]       assertTrue(string5.equals((Object)string0))  [EOL]       assertTrue(string5.equals((Object)string1))  [EOL]       assertFalse(string7.equals((Object)string2))  [EOL]       assertTrue(string7.equals((Object)string4))  [EOL]       assertTrue(string7.equals((Object)string1))  [EOL]       assertTrue(string7.equals((Object)string0))  [EOL]       assertTrue(string7.equals((Object)string3))
 [EOL]       assertEquals(0, shortArray0.length)
 [EOL]       assertTrue(boolean0)
 [EOL]       assertEquals(1, fraction17.getNumerator())
 [EOL]       assertEquals((-1L), mutableLong0.longValue())
 [EOL]       assertEquals(3455.5, mutableFloat0.doubleValue(), 0.01)
 [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string1))  [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string0))  [EOL]       assertFalse(string4.equals((Object)string1))  [EOL]       assertFalse(string4.equals((Object)string3))  [EOL]       assertFalse(string4.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string0))  [EOL]       assertFalse(string5.equals((Object)string1))  [EOL]       assertTrue(string5.equals((Object)string2))  [EOL]       assertFalse(string5.equals((Object)string0))  [EOL]       assertFalse(string5.equals((Object)string4))  [EOL]       assertFalse(string5.equals((Object)string3))  [EOL]       assertFalse(string6.equals((Object)string4))  [EOL]       assertFalse(string6.equals((Object)string5))  [EOL]       assertFalse(string6.equals((Object)string2))  [EOL]       assertFalse(string6.equals((Object)string3))  [EOL]       assertFalse(string6.equals((Object)string1))  [EOL]       assertFalse(string6.equals((Object)string0))  [EOL]       assertFalse(string8.equals((Object)string4))  [EOL]       assertFalse(string8.equals((Object)string3))  [EOL]       assertFalse(string8.equals((Object)string2))  [EOL]       assertFalse(string8.equals((Object)string6))  [EOL]       assertFalse(string8.equals((Object)string1))  [EOL]       assertFalse(string8.equals((Object)string0))  [EOL]       assertFalse(string8.equals((Object)string5))
 [EOL]       assertTrue(boolean0)
 [EOL]       assertEquals(9, objectArray0.length)  [EOL]       assertEquals(0, stringArray1.length)  [EOL]       assertEquals(0, stringArray1.length)
 [EOL]       assertEquals(2, list0.size())
 [EOL]       assertEquals('!', char0)
 [EOL]       assertEquals(6, charArray0.length)
 [EOL]       assertEquals((-509656162), (int)hashCodeBuilder1.build())
 [EOL]       assertFalse(stack0.contains(string0))
 [EOL]       assertFalse(boolean0)
 [EOL]       assertEquals(0, list0.size())
 [EOL]       assertEquals((short) (-2), short0)
 [EOL]       assertNotSame(longArray0, longArray1)
 [EOL]       assertEquals(1, (int)integer0)
 [EOL]       assertEquals("The String did not match any specified value", string0)
 [EOL]       assertFalse(boolean0)
 [EOL]       assertFalse(serviceLoader2.equals((Object)serviceLoader1))  [EOL]       assertFalse(classLoader1.equals((Object)classLoader0))  [EOL]       assertFalse(classLoader0.equals((Object)classLoader1))  [EOL]       assertFalse(classLoader1.equals((Object)classLoader0))  [EOL]       assertFalse(serviceLoader3.equals((Object)serviceLoader1))  [EOL]       assertFalse(serviceLoader3.equals((Object)serviceLoader2))  [EOL]       assertFalse(serviceLoader4.equals((Object)serviceLoader1))  [EOL]       assertFalse(serviceLoader4.equals((Object)serviceLoader3))  [EOL]       assertFalse(serviceLoader4.equals((Object)serviceLoader2))  [EOL]       assertFalse(iterator1.equals((Object)iterator0))  [EOL]       assertFalse(iterator1.equals((Object)iterator0))  [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string0))  [EOL]       assertFalse(string5.equals((Object)string0))  [EOL]       assertTrue(string6.equals((Object)string3))  [EOL]       assertTrue(string6.equals((Object)string1))  [EOL]       assertFalse(string6.equals((Object)string0))  [EOL]       assertTrue(string6.equals((Object)string5))  [EOL]       assertTrue(string7.equals((Object)string6))  [EOL]       assertFalse(string7.equals((Object)string0))
 [EOL]       assertEquals("[]", stack0.toString())  [EOL]       assertEquals("[]", stack0.toString())  [EOL]       assertEquals("[]", stack0.toString())
 [EOL]       assertEquals((-383.82828F), fraction2.floatValue(), 0.01F)
 [EOL]       assertEquals((-1), int0)
 [EOL]       assertEquals((short) (-1920), short0)
 [EOL]       //  // Unstable assertion: assertTrue(strTokenizer0.isEmptyTokenAsNull())  [EOL]       //  // Unstable assertion: assertTrue(strTokenizer0.isEmptyTokenAsNull())
 [EOL]       assertEquals(0, sQLIntegrityConstraintViolationException0.getErrorCode())
 [EOL]       assertFalse(boolean0)
 [EOL]       assertEquals((byte)36, byte0)
 [EOL]       assertArrayEquals(new float[] {}, floatArray1, 0.01F)
 [EOL]       assertFalse(integer0.equals((Object)int1))  [EOL]       assertTrue(integer0.equals((Object)int0))  [EOL]       assertFalse(integer0.equals((Object)int1))  [EOL]       assertTrue(integer0.equals((Object)int0))  [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(stringArray1.equals((Object)stringArray0))  [EOL]       assertFalse(string2.equals((Object)string1))  [EOL]       assertFalse(stringArray1.equals((Object)stringArray0))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertTrue(string4.equals((Object)string0))  [EOL]       assertTrue(string4.equals((Object)string3))  [EOL]       assertTrue(string4.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string1))
 [EOL]       assertEquals(2, intArray1.length)
 [EOL]       assertEquals((-1.0F), (float)float0, 0.01F)
 [EOL]       assertFalse(boolean0)
 [EOL]       assertEquals(4294967295L, long0)
 [EOL]       assertEquals((byte) (-73), (byte)byte0)
 [EOL]       assertTrue(Arrays.equals(new boolean[] {false, false, false, true}, booleanArray0))
 [EOL]       assertEquals(560, hashCodeBuilder0.toHashCode())
 [EOL]       assertEquals((-1.0), double0, 0.01)
 [EOL]       assertEquals(6, floatArray0.length)  [EOL]       assertEquals(2, stringArray0.length)
 [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string1))  [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(stringArray1.equals((Object)stringArray0))  [EOL]       assertFalse(string4.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string0))  [EOL]       assertFalse(string4.equals((Object)string1))  [EOL]       assertTrue(string4.equals((Object)string3))
 [EOL]       assertEquals('?', char0)
 [EOL]       assertEquals(1, byteArray1.length)
 [EOL]       assertEquals((-1.0F), float1, 0.01F)
 [EOL]       assertEquals(2, shortArray0.length)  [EOL]       assertEquals(1, stringArray0.length)
 [EOL]       assertEquals((-1664653280), int0)
 [EOL]       assertEquals(0, strTokenizer0.nextIndex())  [EOL]       assertEquals(0, strTokenizer0.nextIndex())  [EOL]       assertEquals(0, strTokenizer1.nextIndex())  [EOL]       assertEquals(1, strTokenizer0.nextIndex())  [EOL]       assertEquals(1, strTokenizer0.nextIndex())  [EOL]       assertEquals(1, strTokenizer1.nextIndex())  [EOL]       assertEquals(1, strTokenizer2.nextIndex())
 [EOL]       assertEquals(347, int0)
 [EOL]       assertNull(string0)
 [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(stringArray1.equals((Object)stringArray0))  [EOL]       assertFalse(stringArray1.equals((Object)stringArray0))  [EOL]       assertFalse(stringArray2.equals((Object)stringArray1))  [EOL]       assertFalse(stringArray2.equals((Object)stringArray0))  [EOL]       assertFalse(string2.equals((Object)string1))  [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string0))  [EOL]       assertFalse(string4.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string3))  [EOL]       assertFalse(string4.equals((Object)string1))  [EOL]       assertTrue(string5.equals((Object)string4))  [EOL]       assertFalse(string5.equals((Object)string2))  [EOL]       assertFalse(string5.equals((Object)string3))  [EOL]       assertFalse(string5.equals((Object)string0))  [EOL]       assertFalse(string5.equals((Object)string1))  [EOL]       assertFalse(string6.equals((Object)string4))  [EOL]       assertFalse(string6.equals((Object)string1))  [EOL]       assertFalse(string6.equals((Object)string0))  [EOL]       assertFalse(string6.equals((Object)string5))  [EOL]       assertFalse(string6.equals((Object)string2))  [EOL]       assertFalse(string6.equals((Object)string3))
 [EOL]       assertEquals((-1), int0)
 [EOL]       assertEquals("Fri Dec 09 00:00:00 GMT 1898", date0.toString())
 [EOL]       assertEquals("", string0)
 [EOL]       assertTrue(map0.isEmpty())
 [EOL]       assertEquals("%?x+ 6<", string0)
 [EOL]       assertEquals('O', strSubstitutor0.getEscapeChar())
 [EOL]       assertEquals("9Hc
 [EOL]       assertEquals("1~Xo7N-eu", string0)
 [EOL]       assertEquals(19, stringArray0.length)
 [EOL]       assertEquals((-2042.1075439453125), mutableDouble0.toDouble(), 0.01)
 [EOL]       assertEquals('u', charRange1.getStart())
 [EOL]       assertFalse(object1.equals((Object)object0))
 [EOL]       assertArrayEquals(new long[] {0L, 0L, 0L, 0L}, longArray0)
 [EOL]       assertEquals(0, longArray0.length)  [EOL]       assertEquals(6, objectArray0.length)
 [EOL]       assertTrue(Arrays.equals(new boolean[] {false, true, false, false, false, false}, booleanArray1))
 [EOL]       assertEquals("\u0080", string0)
 [EOL]       assertNull(string0)
 [EOL]       assertEquals(0.0, mutableDouble0.doubleValue(), 0.01)
 [EOL]       assertFalse(range2.equals((Object)range0))
 [EOL]       assertEquals(0, byteArray0.length)
 [EOL]       assertTrue(Arrays.equals(new boolean[] {}, booleanArray1))
 [EOL]       assertEquals(1, stringArray0.length)  [EOL]       assertEquals(7, charArray0.length)  [EOL]       assertEquals(1, stringArray0.length)  [EOL]       assertEquals(1, charSequenceArray0.length)
 [EOL]       assertEquals(5, int0)
 [EOL]       assertArrayEquals(new short[] {}, shortArray0)
 [EOL]       assertEquals("", string0)
 [EOL]       assertEquals(1, (int)integer1)
 [EOL]       assertEquals((byte)20, byte0)
 [EOL]       assertNull(executorService0)
 [EOL]       assertTrue(equalsBuilder3.isEquals())
 [EOL]       assertEquals((-1), (int)integer0)
 [EOL]       assertEquals(5, stringArray0.length)  [EOL]       assertEquals(5, stringArray0.length)  [EOL]       assertEquals(5, stringArray0.length)
 [EOL]       assertEquals("}", string0)
 [EOL]       assertEquals((-476), int0)
 [EOL]       assertEquals("Mon May 10 21:32:00 GMT 505", date0.toString())
 [EOL]       assertEquals("<null>", string0)
 [EOL]       assertFalse(equalsBuilder1.isEquals())  [EOL]       assertFalse(equalsBuilder6.isEquals())
 [EOL]       assertEquals(1, mutableByte1.intValue())
 [EOL]       assertTrue(boolean0)
 [EOL]       assertEquals(398, int0)
 [EOL]       assertTrue(Arrays.equals(new boolean[] {true, true, false, true}, booleanArray0))
 [EOL]       assertEquals("[Ryu..Ryu]", string0)
 [EOL]       assertEquals("java.class.version", string0)
 [EOL]       assertNull(string0)
 [EOL]       assertEquals(1, fraction1.getNumerator())
 [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string1))  [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertTrue(string3.equals((Object)string0))  [EOL]       assertFalse(string4.equals((Object)string0))  [EOL]       assertFalse(string4.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string3))  [EOL]       assertFalse(string4.equals((Object)string1))  [EOL]       assertFalse(string5.equals((Object)string3))  [EOL]       assertFalse(string5.equals((Object)string0))  [EOL]       assertFalse(string5.equals((Object)string1))  [EOL]       assertFalse(string5.equals((Object)string4))  [EOL]       assertFalse(string5.equals((Object)string2))
 [EOL]       assertTrue(boolean0)
 [EOL]       assertSame(object1, object0)
 [EOL]       assertEquals(0L, long0)
 [EOL]       assertEquals((short)538, short0)
 [EOL]       assertEquals((-1), strTokenizer0.previousIndex())  [EOL]       assertEquals((-1), strTokenizer0.previousIndex())  [EOL]       assertEquals((-1), strTokenizer1.previousIndex())  [EOL]       assertEquals(0, strTokenizer0.previousIndex())  [EOL]       assertEquals(1, strTokenizer0.previousIndex())  [EOL]       assertEquals(1, strTokenizer0.previousIndex())  [EOL]       assertEquals(1, strTokenizer1.previousIndex())  [EOL]       assertEquals(1, strTokenizer2.previousIndex())
 [EOL]       assertEquals(1, int0)
 [EOL]       assertEquals(1.0F, mutableFloat0.floatValue(), 0.01F)
 [EOL]       assertEquals((-0.8), fraction1.doubleValue(), 0.01)
 [EOL]       assertEquals(116, int0)
 [EOL]       assertSame(equalsBuilder2, equalsBuilder6)
 [EOL]       assertSame(formatter1, formatter0)
 [EOL]       assertEquals(1547, (int)hashCodeBuilder0.build())
 [EOL]       assertFalse(mutableBoolean0.isFalse())
 [EOL]       assertTrue(boolean0)
 [EOL]       assertTrue(string2.equals((Object)string1))  [EOL]       assertTrue(string3.equals((Object)string1))  [EOL]       assertTrue(string3.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string3))  [EOL]       assertFalse(string4.equals((Object)string1))  [EOL]       assertFalse(string4.equals((Object)string2))
 [EOL]       assertEquals((-1.0F), fraction0.floatValue(), 0.01F)
 [EOL]       assertEquals((-20), fraction3.getNumerator())
 [EOL]       assertEquals(0, enumSet0.size())
 [EOL]       assertEquals(115, int0)
 [EOL]       assertEquals((short) (-1574), short0)
 [EOL]       assertEquals((byte)25, mutableByte0.byteValue())
 [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertTrue(string2.equals((Object)string1))  [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string4.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string3))  [EOL]       assertFalse(string4.equals((Object)string1))  [EOL]       assertFalse(string4.equals((Object)string0))  [EOL]       assertTrue(string5.equals((Object)string3))  [EOL]       assertFalse(string5.equals((Object)string2))  [EOL]       assertFalse(string5.equals((Object)string4))  [EOL]       assertFalse(string5.equals((Object)string1))  [EOL]       assertFalse(string5.equals((Object)string0))  [EOL]       assertFalse(string6.equals((Object)string1))  [EOL]       assertFalse(string6.equals((Object)string5))  [EOL]       assertFalse(string6.equals((Object)string2))  [EOL]       assertFalse(string6.equals((Object)string4))  [EOL]       assertFalse(string6.equals((Object)string3))  [EOL]       assertFalse(string6.equals((Object)string0))  [EOL]       assertFalse(charSequence0.equals((Object)string5))  [EOL]       assertFalse(charSequence0.equals((Object)string6))  [EOL]       assertFalse(charSequence0.equals((Object)string4))  [EOL]       assertTrue(charSequence0.equals((Object)string1))  [EOL]       assertFalse(charSequence0.equals((Object)string0))  [EOL]       assertTrue(charSequence0.equals((Object)string2))  [EOL]       assertFalse(charSequence0.equals((Object)string3))  [EOL]       assertFalse(string7.equals((Object)string5))  [EOL]       assertFalse(string7.equals((Object)string1))  [EOL]       assertFalse(string7.equals((Object)string4))  [EOL]       assertFalse(string7.equals((Object)charSequence0))  [EOL]       assertTrue(string7.equals((Object)string0))  [EOL]       assertFalse(string7.equals((Object)string6))  [EOL]       assertFalse(string7.equals((Object)string3))  [EOL]       assertFalse(string7.equals((Object)string2))
 [EOL]       assertFalse(mutableShort1.equals((Object)mutableShort0))
 [EOL]       assertEquals("Double", string0)
 [EOL]       assertFalse(boolean0)
 [EOL]       assertEquals((byte)31, byte0)
 [EOL]       assertFalse(boolean0)
 [EOL]       assertSame(defaultExceptionContext0, defaultExceptionContext1)
 [EOL]       assertEquals("", string0)
 [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string6.equals((Object)string0))  [EOL]       assertFalse(string6.equals((Object)string3))  [EOL]       assertFalse(string6.equals((Object)string4))  [EOL]       assertTrue(string6.equals((Object)string5))  [EOL]       assertFalse(string6.equals((Object)string1))  [EOL]       assertFalse(string6.equals((Object)string2))  [EOL]       assertFalse(string8.equals((Object)string5))  [EOL]       assertFalse(string8.equals((Object)string2))  [EOL]       assertFalse(string8.equals((Object)string1))  [EOL]       assertFalse(string8.equals((Object)string4))  [EOL]       assertFalse(string8.equals((Object)string6))  [EOL]       assertFalse(string8.equals((Object)string3))  [EOL]       assertFalse(string8.equals((Object)string0))  [EOL]       assertFalse(string9.equals((Object)string0))  [EOL]       assertFalse(string9.equals((Object)string4))  [EOL]       assertFalse(string9.equals((Object)string5))  [EOL]       assertFalse(string9.equals((Object)string8))  [EOL]       assertFalse(string9.equals((Object)string1))  [EOL]       assertFalse(string9.equals((Object)string2))  [EOL]       assertFalse(string9.equals((Object)string6))  [EOL]       assertFalse(string9.equals((Object)string3))
 [EOL]       assertEquals(0, timedSemaphore0.getAcquireCount())  [EOL]       assertEquals(1, timedSemaphore0.getAcquireCount())  [EOL]       assertEquals(0, timedSemaphore0.getAcquireCount())  [EOL]       assertEquals(0, timedSemaphore0.getAcquireCount())  [EOL]       assertEquals(0, timedSemaphore0.getAcquireCount())
 [EOL]       assertFalse(treeSet0.contains("Aborting to protect against StackOverflowError - output of one loop is the input of another"))  [EOL]       assertFalse(treeSet0.contains("Aborting to protect against StackOverflowError - output of one loop is the input of another"))  [EOL]       assertFalse(sortedSet0.contains("Aborting to protect against StackOverflowError - output of one loop is the input of another"))  [EOL]       assertFalse(treeSet0.contains("Aborting to protect against StackOverflowError - output of one loop is the input of another"))  [EOL]       assertFalse(sortedSet0.contains("Aborting to protect against StackOverflowError - output of one loop is the input of another"))
 [EOL]       assertEquals(0, classArray1.length)
 [EOL]       assertTrue(boolean0)
 [EOL]       assertEquals(0, int0)
 [EOL]       assertEquals((short)0, short0)
 [EOL]       assertEquals(0, stringArray0.length)  [EOL]       assertEquals(6, charArray0.length)
 [EOL]       assertEquals('p', charRange0.getStart())
 [EOL]       assertEquals(2, charArray0.length)  [EOL]       assertEquals(2, floatArray0.length)
 [EOL]       assertTrue(arrayList0.isEmpty())  [EOL]       assertFalse(arrayList0.isEmpty())  [EOL]       assertFalse(arrayList0.isEmpty())  [EOL]       assertFalse(arrayList0.isEmpty())  [EOL]       assertFalse(arrayList0.isEmpty())  [EOL]       assertFalse(arrayList0.isEmpty())
 [EOL]       assertEquals(5, doubleArray0.length)  [EOL]       assertEquals(1, charArray0.length)
 [EOL]       assertEquals(4, shortArray1.length)
 [EOL]       assertFalse(set0.isEmpty())
 [EOL]       assertSame(equalsBuilder0, equalsBuilder6)
 [EOL]       assertFalse(stringArray1.equals((Object)stringArray0))
 [EOL]       assertEquals(1, (int)mutableInt0.getValue())
 [EOL]       assertFalse(stack0.contains(", '"))  [EOL]       assertFalse(stack0.contains(", '"))  [EOL]       assertFalse(stack0.contains(", '"))
 [EOL]       assertEquals(0.0, timedSemaphore0.getAverageCallsPerPeriod(), 0.01)  [EOL]       assertEquals(0.0, timedSemaphore0.getAverageCallsPerPeriod(), 0.01)  [EOL]       assertEquals(1.0, timedSemaphore0.getAverageCallsPerPeriod(), 0.01)  [EOL]       assertEquals(1.0, timedSemaphore0.getAverageCallsPerPeriod(), 0.01)  [EOL]       assertEquals(1.0, timedSemaphore0.getAverageCallsPerPeriod(), 0.01)
 [EOL]       assertEquals((short)3, short0)
 [EOL]       //  // Unstable assertion: assertEquals(0, strTokenizer0.nextIndex())  [EOL]       //  // Unstable assertion: assertEquals(0, strTokenizer0.nextIndex())  [EOL]       //  // Unstable assertion: assertEquals(0, strTokenizer1.nextIndex())  [EOL]       //  // Unstable assertion: assertEquals(1, strTokenizer0.nextIndex())
 [EOL]       assertEquals(5, integerArray1.length)
 [EOL]       assertEquals(8, booleanArray1.length)
 [EOL]       assertEquals(0, floatArray0.length)
 [EOL]       assertEquals("7", string0)
 [EOL]       assertEquals((-562609377), (int)hashCodeBuilder1.build())
 [EOL]       assertEquals(0, timedSemaphore0.getLastAcquiresPerPeriod())  [EOL]       assertEquals(0, timedSemaphore0.getLastAcquiresPerPeriod())  [EOL]       assertEquals(1, timedSemaphore0.getLastAcquiresPerPeriod())  [EOL]       assertEquals(1, timedSemaphore0.getLastAcquiresPerPeriod())  [EOL]       assertEquals(1, timedSemaphore0.getLastAcquiresPerPeriod())
 [EOL]       assertTrue(boolean0)
 [EOL]       assertFalse(equalsBuilder3.isEquals())
 [EOL]       assertEquals(0, stringArray0.length)
 [EOL]       assertEquals("public java.lang.Object()", constructor0.toString())
 [EOL]       assertEquals(0.0, double0, 0.01)
 [EOL]       assertFalse(stringArray1.equals((Object)stringArray0))  [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertTrue(string4.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string0))  [EOL]       assertFalse(string4.equals((Object)string3))  [EOL]       assertFalse(stringArray0.equals((Object)stringArray1))  [EOL]       assertFalse(stringArray1.equals((Object)stringArray0))
 [EOL]       assertEquals("=", string0)
 [EOL]       assertEquals(6, shortArray0.length)  [EOL]       assertEquals(1, stringArray0.length)  [EOL]       assertEquals(1, stringArray0.length)
 [EOL]       assertEquals((-1), fraction0.getNumerator())
 [EOL]       assertEquals(6, charBuffer0.length())
 [EOL]       assertEquals(1.0, double0, 0.01)
 [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string1))  [EOL]       assertTrue(string2.equals((Object)string0))  [EOL]       assertFalse(string4.equals((Object)string1))  [EOL]       assertTrue(string4.equals((Object)string0))  [EOL]       assertTrue(string4.equals((Object)string2))  [EOL]       assertFalse(string5.equals((Object)string1))  [EOL]       assertTrue(string5.equals((Object)string0))  [EOL]       assertTrue(string5.equals((Object)string2))  [EOL]       assertTrue(string5.equals((Object)string4))
 [EOL]       assertEquals("1582/10/15", stringBuffer0.toString())
 [EOL]       assertTrue(strSubstitutor0.isEnableSubstitutionInVariables())
 [EOL]       assertTrue(boolean0)
 [EOL]       assertFalse(list0.isEmpty())
 [EOL]       assertEquals((-1.0), (double)double0, 0.01)
 [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertFalse(string3.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string4.equals((Object)string3))  [EOL]       assertFalse(string4.equals((Object)string1))  [EOL]       assertFalse(string4.equals((Object)string0))  [EOL]       assertFalse(string4.equals((Object)string2))  [EOL]       assertFalse(string5.equals((Object)string2))  [EOL]       assertFalse(string5.equals((Object)string3))  [EOL]       assertFalse(string5.equals((Object)string4))  [EOL]       assertFalse(string5.equals((Object)string1))
 [EOL]       assertEquals('4', char0)
 [EOL]       assertEquals(0.0, double0, 0.01)
 [EOL]       assertEquals(0, int0)
 [EOL]       assertEquals(17, int0)
 [EOL]       assertEquals('@', charRange1.getStart())  [EOL]       assertEquals('o', charRange0.getStart())
 [EOL]       assertFalse(strTokenizer0.isEmptyTokenAsNull())  [EOL]       assertFalse(strTokenizer0.isEmptyTokenAsNull())  [EOL]       assertFalse(strTokenizer1.isEmptyTokenAsNull())  [EOL]       assertFalse(strTokenizer0.isEmptyTokenAsNull())  [EOL]       assertFalse(strTokenizer1.isEmptyTokenAsNull())
 [EOL]       assertTrue(string2.equals((Object)string1))  [EOL]       assertTrue(string2.equals((Object)string0))  [EOL]       assertFalse(arrayDeque1.equals((Object)arrayDeque0))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertFalse(string3.equals((Object)string0))  [EOL]       assertFalse(string4.equals((Object)string3))  [EOL]       assertFalse(string4.equals((Object)string1))  [EOL]       assertFalse(string4.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string0))  [EOL]       assertFalse(string5.equals((Object)string3))  [EOL]       assertFalse(string5.equals((Object)string1))  [EOL]       assertFalse(string5.equals((Object)string2))  [EOL]       assertFalse(string5.equals((Object)string0))  [EOL]       assertFalse(string4.equals((Object)string3))  [EOL]       assertFalse(string4.equals((Object)string1))  [EOL]       assertFalse(string4.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string0))  [EOL]       assertFalse(string5.equals((Object)string3))  [EOL]       assertFalse(string5.equals((Object)string1))  [EOL]       assertFalse(string5.equals((Object)string2))  [EOL]       assertFalse(string5.equals((Object)string0))  [EOL]       assertFalse(string6.equals((Object)string1))  [EOL]       assertFalse(string6.equals((Object)string5))  [EOL]       assertTrue(string6.equals((Object)string3))  [EOL]       assertFalse(string6.equals((Object)string4))  [EOL]       assertFalse(string6.equals((Object)string0))  [EOL]       assertFalse(string6.equals((Object)string2))  [EOL]       assertFalse(string7.equals((Object)string4))  [EOL]       assertTrue(string7.equals((Object)string2))  [EOL]       assertFalse(string7.equals((Object)string5))  [EOL]       assertFalse(string7.equals((Object)string6))  [EOL]       assertFalse(string7.equals((Object)string3))
 [EOL]       assertNotNull(string0)
 [EOL]       assertEquals((-5369527), fraction0.getNumerator())
 [EOL]       assertEquals("]", standardToStringStyle0.getNullText())
 [EOL]       assertEquals(0, (int)compareToBuilder1.build())
 [EOL]       assertEquals(1425, int0)
 [EOL]       assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd())
 [EOL]       assertTrue(string1.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string0))  [EOL]       assertTrue(string4.equals((Object)string1))  [EOL]       assertFalse(string4.equals((Object)string3))  [EOL]       assertTrue(string4.equals((Object)string0))  [EOL]       assertFalse(string5.equals((Object)string0))  [EOL]       assertFalse(string5.equals((Object)string3))  [EOL]       assertFalse(string5.equals((Object)string4))  [EOL]       assertFalse(string5.equals((Object)string1))  [EOL]       assertTrue(string6.equals((Object)string0))  [EOL]       assertFalse(string6.equals((Object)string5))  [EOL]       assertTrue(string6.equals((Object)string4))  [EOL]       assertTrue(string6.equals((Object)string1))  [EOL]       assertFalse(string6.equals((Object)string3))  [EOL]       assertFalse(string7.equals((Object)string6))  [EOL]       assertFalse(string7.equals((Object)string0))  [EOL]       assertFalse(string7.equals((Object)string3))  [EOL]       assertFalse(string7.equals((Object)string5))  [EOL]       assertFalse(string7.equals((Object)string1))  [EOL]       assertFalse(string7.equals((Object)string4))  [EOL]       assertFalse(string8.equals((Object)string3))  [EOL]       assertFalse(string8.equals((Object)string5))  [EOL]       assertFalse(string8.equals((Object)string1))  [EOL]       assertFalse(string8.equals((Object)string0))  [EOL]       assertFalse(string8.equals((Object)string6))  [EOL]       assertFalse(string8.equals((Object)string7))  [EOL]       assertFalse(string8.equals((Object)string4))  [EOL]       assertFalse(string9.equals((Object)string1))  [EOL]       assertFalse(string9.equals((Object)string5))  [EOL]       assertFalse(string9.equals((Object)string4))  [EOL]       assertFalse(string9.equals((Object)string0))  [EOL]       assertFalse(string9.equals((Object)string7))  [EOL]       assertFalse(string9.equals((Object)string6))  [EOL]       assertTrue(string9.equals((Object)string3))  [EOL]       assertFalse(string9.equals((Object)string8))  [EOL]       assertFalse(string10.equals((Object)string4))  [EOL]       assertFalse(string10.equals((Object)string3))  [EOL]       assertFalse(string10.equals((Object)string6))  [EOL]       assertFalse(string10.equals((Object)string1))  [EOL]       assertFalse(string10.equals((Object)string5))  [EOL]       assertFalse(string10.equals((Object)string7))  [EOL]       assertFalse(string10.equals((Object)string9))  [EOL]       assertFalse(string10.equals((Object)string8))  [EOL]       assertFalse(string10.equals((Object)string0))
 [EOL]       assertTrue(boolean0)
 [EOL]       assertEquals(4, byteArray1.length)
 [EOL]       assertEquals('$', char0)
 [EOL]       assertEquals((-1082129803), (int)hashCodeBuilder0.build())
 [EOL]       assertEquals(7, byteArray0.length)
 [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string3))  [EOL]       assertFalse(string4.equals((Object)string2))  [EOL]       assertFalse(string5.equals((Object)string3))  [EOL]       assertFalse(string5.equals((Object)string4))  [EOL]       assertFalse(string5.equals((Object)string2))  [EOL]       assertFalse(string6.equals((Object)string5))  [EOL]       assertFalse(string6.equals((Object)string2))  [EOL]       assertFalse(string6.equals((Object)string3))  [EOL]       assertFalse(string6.equals((Object)string4))  [EOL]       assertFalse(string7.equals((Object)string6))  [EOL]       assertTrue(string7.equals((Object)string4))  [EOL]       assertFalse(string7.equals((Object)string5))  [EOL]       assertFalse(string7.equals((Object)string3))  [EOL]       assertFalse(string7.equals((Object)string2))  [EOL]       assertFalse(string8.equals((Object)string2))  [EOL]       assertFalse(string8.equals((Object)string3))  [EOL]       assertFalse(string8.equals((Object)string6))  [EOL]       assertTrue(string8.equals((Object)string7))  [EOL]       assertFalse(string8.equals((Object)string5))  [EOL]       assertTrue(string8.equals((Object)string4))  [EOL]       assertFalse(string9.equals((Object)string3))  [EOL]       assertFalse(string9.equals((Object)string2))  [EOL]       assertFalse(string9.equals((Object)string6))  [EOL]       assertFalse(string9.equals((Object)string5))  [EOL]       assertFalse(string9.equals((Object)string8))  [EOL]       assertFalse(string9.equals((Object)string7))  [EOL]       assertFalse(string9.equals((Object)string4))
 [EOL]       assertEquals((short) (-1766), short0)
 [EOL]       assertEquals((-1), (int)compareToBuilder0.build())
 [EOL]       assertEquals(0, charSequenceArray0.length)  [EOL]       assertEquals(0, charSequenceArray0.length)  [EOL]       assertEquals(1, charBuffer0.length())  [EOL]       assertEquals(1, charArray0.length)  [EOL]       assertEquals(1, charBuffer0.length())  [EOL]       assertEquals(1, charArray0.length)
 [EOL]       assertEquals(3, charSequenceArray0.length)  [EOL]       assertEquals(3, charSequenceArray0.length)  [EOL]       assertEquals(6, charArray0.length)
 [EOL]       assertEquals(0, int0)
 [EOL]       assertEquals((-446L), long0)
 [EOL]       assertEquals(3, shortArray1.length)
 [EOL]       assertTrue(boolean0)
 [EOL]       assertEquals('y', charRange0.getEnd())  [EOL]       assertEquals('7', charRange1.getEnd())
 [EOL]       assertTrue(integer2.equals((Object)integer1))
 [EOL]       assertEquals(8, stringArray0.length)  [EOL]       assertEquals(6, longArray0.length)
 [EOL]       assertEquals("\u0000$$\u0000\u0000\u0000\u0000", string0)
 [EOL]       assertEquals(2, charArray0.length)  [EOL]       assertEquals(4, objectArray0.length)  [EOL]       assertEquals(3, intArray0.length)
 [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertFalse(string5.equals((Object)string2))  [EOL]       assertFalse(string5.equals((Object)string0))  [EOL]       assertFalse(string5.equals((Object)string1))  [EOL]       assertFalse(stringArray1.equals((Object)stringArray0))  [EOL]       assertFalse(stringArray1.equals((Object)stringArray0))  [EOL]       assertFalse(stringArray2.equals((Object)stringArray0))  [EOL]       assertFalse(stringArray2.equals((Object)stringArray1))
 [EOL]       assertEquals(0, compareToBuilder0.toComparison())
 [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string4.equals((Object)string3))  [EOL]       assertFalse(string4.equals((Object)string1))  [EOL]       assertFalse(string4.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string0))  [EOL]       assertFalse(string5.equals((Object)string3))  [EOL]       assertFalse(string5.equals((Object)string0))  [EOL]       assertFalse(string5.equals((Object)string1))  [EOL]       assertFalse(string5.equals((Object)string4))  [EOL]       assertFalse(string6.equals((Object)string0))  [EOL]       assertFalse(string6.equals((Object)string4))  [EOL]       assertFalse(string6.equals((Object)string5))  [EOL]       assertFalse(string6.equals((Object)string3))  [EOL]       assertFalse(string6.equals((Object)string1))  [EOL]       assertFalse(string7.equals((Object)string0))  [EOL]       assertFalse(string7.equals((Object)string6))  [EOL]       assertFalse(string7.equals((Object)string4))  [EOL]       assertFalse(string7.equals((Object)string5))  [EOL]       assertFalse(string7.equals((Object)string1))  [EOL]       assertFalse(string7.equals((Object)string3))  [EOL]       assertFalse(string8.equals((Object)string5))  [EOL]       assertFalse(string8.equals((Object)string3))  [EOL]       assertFalse(string8.equals((Object)string7))  [EOL]       assertFalse(string8.equals((Object)string4))  [EOL]       assertFalse(string8.equals((Object)string6))  [EOL]       assertFalse(string8.equals((Object)string0))  [EOL]       assertFalse(string8.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string5))  [EOL]       assertFalse(string3.equals((Object)string7))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string4))  [EOL]       assertFalse(string3.equals((Object)string6))  [EOL]       assertFalse(string9.equals((Object)string1))  [EOL]       assertFalse(string9.equals((Object)string4))  [EOL]       assertFalse(string9.equals((Object)string5))  [EOL]       assertFalse(string9.equals((Object)string3))  [EOL]       assertFalse(string9.equals((Object)string8))  [EOL]       assertFalse(string9.equals((Object)string0))  [EOL]       assertTrue(string9.equals((Object)string7))  [EOL]       assertFalse(string9.equals((Object)string6))  [EOL]       assertFalse(string10.equals((Object)string5))  [EOL]       assertFalse(string10.equals((Object)string7))  [EOL]       assertFalse(string10.equals((Object)string3))  [EOL]       assertFalse(string10.equals((Object)string9))  [EOL]       assertFalse(string10.equals((Object)string6))  [EOL]       assertFalse(string10.equals((Object)string4))  [EOL]       assertFalse(string10.equals((Object)string1))  [EOL]       assertFalse(string10.equals((Object)string0))  [EOL]       assertFalse(string10.equals((Object)string8))
 [EOL]       assertEquals(0, doubleArray0.length)
 [EOL]       assertFalse(boolean1)
 [EOL]       assertEquals(12, fraction1.getDenominator())
 [EOL]       assertNotNull(mockRandom0)
 [EOL]       assertTrue(equalsBuilder3.build())  [EOL]       assertFalse(equalsBuilder5.build())
 [EOL]       assertEquals(4, booleanArray0.length)
 [EOL]       assertNull(date0)
 [EOL]       assertEquals((-1.0F), float0, 0.01F)
 [EOL]       assertFalse(strTokenizer0.isEmptyTokenAsNull())  [EOL]       assertFalse(strTokenizer0.isEmptyTokenAsNull())  [EOL]       assertFalse(strTokenizer1.isEmptyTokenAsNull())  [EOL]       assertFalse(strTokenizer0.isEmptyTokenAsNull())  [EOL]       assertFalse(strTokenizer2.isEmptyTokenAsNull())
 [EOL]       assertEquals(2105, timedSemaphore0.getAvailablePermits())  [EOL]       assertEquals(2104, timedSemaphore0.getAvailablePermits())  [EOL]       assertEquals(2105, timedSemaphore0.getAvailablePermits())  [EOL]       assertEquals(2105, timedSemaphore0.getAvailablePermits())  [EOL]       assertEquals(2105, timedSemaphore0.getAvailablePermits())
 [EOL]       assertEquals(0, charArray0.length)  [EOL]       assertEquals(7, shortArray0.length)
 [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertTrue(string4.equals((Object)string3))  [EOL]       assertFalse(string4.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string0))  [EOL]       assertFalse(string4.equals((Object)string1))  [EOL]       assertFalse(stringArray1.equals((Object)stringArray0))  [EOL]       assertFalse(string5.equals((Object)string2))  [EOL]       assertFalse(string5.equals((Object)string1))  [EOL]       assertFalse(string5.equals((Object)string3))  [EOL]       assertFalse(string5.equals((Object)string4))  [EOL]       assertFalse(stringArray1.equals((Object)stringArray0))  [EOL]       assertFalse(string6.equals((Object)string0))  [EOL]       assertFalse(string6.equals((Object)string3))  [EOL]       assertFalse(string6.equals((Object)string1))  [EOL]       assertFalse(string6.equals((Object)string5))  [EOL]       assertTrue(string6.equals((Object)string2))  [EOL]       assertFalse(string6.equals((Object)string4))  [EOL]       assertFalse(stringArray2.equals((Object)stringArray0))  [EOL]       assertFalse(stringArray2.equals((Object)stringArray1))  [EOL]       assertFalse(string7.equals((Object)string2))  [EOL]       assertFalse(string7.equals((Object)string3))  [EOL]       assertFalse(string7.equals((Object)string6))  [EOL]       assertFalse(string7.equals((Object)string1))  [EOL]       assertFalse(string7.equals((Object)string4))  [EOL]       assertFalse(string8.equals((Object)string4))  [EOL]       assertTrue(string8.equals((Object)string6))  [EOL]       assertTrue(string8.equals((Object)string2))  [EOL]       assertFalse(string8.equals((Object)string0))  [EOL]       assertFalse(string8.equals((Object)string1))  [EOL]       assertFalse(string8.equals((Object)string7))  [EOL]       assertFalse(string8.equals((Object)string5))  [EOL]       assertFalse(string8.equals((Object)string3))  [EOL]       assertFalse(stringArray0.equals((Object)stringArray1))  [EOL]       assertFalse(stringArray0.equals((Object)stringArray2))  [EOL]       assertFalse(string10.equals((Object)string3))  [EOL]       assertFalse(string10.equals((Object)string2))  [EOL]       assertFalse(string10.equals((Object)string8))  [EOL]       assertFalse(string10.equals((Object)string4))  [EOL]       assertFalse(string10.equals((Object)string1))  [EOL]       assertFalse(string10.equals((Object)string6))  [EOL]       assertFalse(stringArray1.equals((Object)stringArray2))  [EOL]       assertFalse(stringArray1.equals((Object)stringArray0))
 [EOL]       assertEquals(0.0, double0, 0.01)
 [EOL]       assertEquals(1, stringArray1.length)  [EOL]       assertEquals(6, charSequenceArray0.length)
 [EOL]       assertEquals((-1.0F), mutableInt0.floatValue(), 0.01F)
 [EOL]       assertNull(charSequence0)
 [EOL]       assertEquals("false", string0)
 [EOL]       assertTrue(Arrays.equals(new boolean[] {true, true, true, true}, booleanArray0))
 [EOL]       assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=-20018931278028,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1335,MONTH=7,WEEK_OF_YEAR=32,WEEK_OF_MONTH=2,DAY_OF_MONTH=9,DAY_OF_YEAR=221,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=9,HOUR_OF_DAY=9,MINUTE=45,SECOND=21,MILLISECOND=972,ZONE_OFFSET=0,DST_OFFSET=0]", calendar0.toString())
 [EOL]       assertEquals("W", string0)
 [EOL]       assertEquals("[[Long", string0)
 [EOL]       assertEquals('^', strSubstitutor0.getEscapeChar())
 [EOL]       assertTrue(equalsBuilder0.isEquals())  [EOL]       assertFalse(equalsBuilder0.isEquals())
 [EOL]       assertEquals(3, charArray0.length)
 [EOL]       assertEquals((short)923, short0)
 [EOL]       assertEquals(4, booleanArray1.length)
 [EOL]       //  // Unstable assertion: assertEquals((-1), strTokenizer0.previousIndex())  [EOL]       //  // Unstable assertion: assertEquals(0, strTokenizer0.previousIndex())  [EOL]       //  // Unstable assertion: assertEquals(0, strTokenizer0.previousIndex())  [EOL]       //  // Unstable assertion: assertEquals(0, strTokenizer1.previousIndex())
 [EOL]       //  // Unstable assertion: assertTrue(strTokenizer0.isEmptyTokenAsNull())  [EOL]       //  // Unstable assertion: assertTrue(strTokenizer0.isEmptyTokenAsNull())  [EOL]       //  // Unstable assertion: assertTrue(strTokenizer1.isEmptyTokenAsNull())  [EOL]       //  // Unstable assertion: assertTrue(strTokenizer0.isEmptyTokenAsNull())  [EOL]       //  // Unstable assertion: assertTrue(strTokenizer1.isEmptyTokenAsNull())  [EOL]       //  // Unstable assertion: assertTrue(strTokenizer2.isEmptyTokenAsNull())
 [EOL]       assertFalse(boolean0)
 [EOL]       assertFalse(linkedList0.contains("getRootCause"))
 [EOL]       assertEquals("0", string0)
 [EOL]       assertEquals((-95), int0)
 [EOL]       assertTrue(equalsBuilder5.build())
 [EOL]       assertEquals('#', charRange0.getEnd())  [EOL]       assertEquals('$', charRange1.getEnd())
 [EOL]       assertEquals(0, set0.size())
 [EOL]       assertEquals(0, strTokenizer0.nextIndex())  [EOL]       assertEquals(0, strTokenizer0.nextIndex())  [EOL]       assertEquals(0, strTokenizer1.nextIndex())
 [EOL]       assertTrue(string1.equals((Object)string0))  [EOL]       assertTrue(string2.equals((Object)string0))  [EOL]       assertTrue(string2.equals((Object)string1))  [EOL]       assertTrue(string4.equals((Object)string2))  [EOL]       assertTrue(string4.equals((Object)string0))  [EOL]       assertTrue(string4.equals((Object)string1))  [EOL]       assertFalse(string5.equals((Object)string0))  [EOL]       assertFalse(string5.equals((Object)string1))  [EOL]       assertFalse(string5.equals((Object)string2))  [EOL]       assertFalse(string5.equals((Object)string4))  [EOL]       assertFalse(string6.equals((Object)string2))  [EOL]       assertFalse(string6.equals((Object)string5))  [EOL]       assertFalse(string6.equals((Object)string0))  [EOL]       assertFalse(string6.equals((Object)string1))  [EOL]       assertFalse(string6.equals((Object)string4))  [EOL]       assertFalse(string7.equals((Object)string6))  [EOL]       assertFalse(string7.equals((Object)string1))  [EOL]       assertFalse(string7.equals((Object)string2))  [EOL]       assertFalse(string7.equals((Object)string4))  [EOL]       assertFalse(string7.equals((Object)string0))  [EOL]       assertFalse(string7.equals((Object)string5))  [EOL]       assertFalse(string8.equals((Object)string6))  [EOL]       assertFalse(string8.equals((Object)string1))  [EOL]       assertFalse(string8.equals((Object)string4))  [EOL]       assertFalse(string8.equals((Object)string2))  [EOL]       assertFalse(string8.equals((Object)string0))  [EOL]       assertFalse(string8.equals((Object)string5))  [EOL]       assertFalse(string8.equals((Object)string7))
 [EOL]       assertEquals(14.0, double0, 0.01)
 [EOL]       assertEquals(0, intArray1.length)
 [EOL]       assertEquals(JavaVersion.JAVA_1_1, javaVersion0)
 [EOL]       assertEquals(20, stringBuffer0.length())
 [EOL]       assertEquals(5, stringArray0.length)
 [EOL]       assertEquals('z', charRange0.getEnd())
 [EOL]       assertEquals(0, booleanArray0.length)
 [EOL]       assertEquals(4, fraction1.getNumerator())
 [EOL]       assertEquals(1578.9262693, (double)double0, 0.01)
 [EOL]       assertFalse(strTokenizer1.isEmptyTokenAsNull())
 [EOL]       assertTrue(arrayDeque0.isEmpty())  [EOL]       assertTrue(arrayDeque0.isEmpty())  [EOL]       assertFalse(arrayDeque0.isEmpty())  [EOL]       assertFalse(arrayDeque0.isEmpty())  [EOL]       assertFalse(arrayDeque0.isEmpty())  [EOL]       assertFalse(arrayDeque0.isEmpty())  [EOL]       assertFalse(arrayDeque0.isEmpty())
 [EOL]       assertNull(long0)
 [EOL]       assertNull(type0)
 [EOL]       assertEquals("", string0)
 [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string4.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string3))  [EOL]       assertFalse(string4.equals((Object)string1))  [EOL]       assertFalse(string6.equals((Object)string2))  [EOL]       assertFalse(string6.equals((Object)string3))  [EOL]       assertTrue(string6.equals((Object)string4))  [EOL]       assertFalse(string6.equals((Object)string1))  [EOL]       assertFalse(string8.equals((Object)string6))  [EOL]       assertFalse(string8.equals((Object)string1))  [EOL]       assertFalse(string8.equals((Object)string4))  [EOL]       assertFalse(string8.equals((Object)string3))  [EOL]       assertFalse(string8.equals((Object)string2))  [EOL]       assertFalse(string8.equals((Object)string7))  [EOL]       assertFalse(string9.equals((Object)string7))  [EOL]       assertFalse(string9.equals((Object)string8))  [EOL]       assertFalse(string9.equals((Object)string4))  [EOL]       assertFalse(string9.equals((Object)string6))  [EOL]       assertFalse(string9.equals((Object)string3))  [EOL]       assertFalse(string1.equals((Object)string6))  [EOL]       assertFalse(string1.equals((Object)string3))  [EOL]       assertFalse(string1.equals((Object)string8))  [EOL]       assertFalse(string1.equals((Object)string4))  [EOL]       assertFalse(string1.equals((Object)string7))  [EOL]       assertFalse(string9.equals((Object)string7))  [EOL]       assertFalse(string9.equals((Object)string8))  [EOL]       assertFalse(string9.equals((Object)string4))  [EOL]       assertFalse(string9.equals((Object)string6))  [EOL]       assertFalse(string9.equals((Object)string3))  [EOL]       assertFalse(string10.equals((Object)string7))  [EOL]       assertFalse(string10.equals((Object)string3))  [EOL]       assertFalse(string10.equals((Object)string6))  [EOL]       assertFalse(string10.equals((Object)string8))  [EOL]       assertFalse(string10.equals((Object)string4))  [EOL]       assertFalse(string1.equals((Object)string6))  [EOL]       assertFalse(string1.equals((Object)string3))  [EOL]       assertFalse(string1.equals((Object)string8))  [EOL]       assertFalse(string1.equals((Object)string4))  [EOL]       assertFalse(string1.equals((Object)string7))
 [EOL]       assertEquals("vmD", charBuffer0.toString())  [EOL]       assertEquals("vmD", charBuffer0.toString())
 [EOL]       assertEquals((-1.0), mutableDouble0.doubleValue(), 0.01)
 [EOL]       assertEquals((-289L), long0)
 [EOL]       assertNotNull(string0)
 [EOL]       assertEquals(5, doubleArray0.length)  [EOL]       assertEquals(1, stringArray0.length)
 [EOL]       assertEquals((-375L), (long)long0)
 [EOL]       assertEquals(1, int0)
 [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string1))  [EOL]       assertTrue(string3.equals((Object)string2))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string0))  [EOL]       assertFalse(string4.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string3))  [EOL]       assertFalse(string4.equals((Object)string0))  [EOL]       assertFalse(string5.equals((Object)string0))  [EOL]       assertFalse(string5.equals((Object)string2))  [EOL]       assertTrue(string5.equals((Object)string1))  [EOL]       assertTrue(string5.equals((Object)string4))  [EOL]       assertFalse(string5.equals((Object)string3))  [EOL]       assertFalse(string6.equals((Object)string2))  [EOL]       assertFalse(string6.equals((Object)string3))  [EOL]       assertFalse(string6.equals((Object)string4))  [EOL]       assertFalse(string6.equals((Object)string0))  [EOL]       assertFalse(string6.equals((Object)string1))  [EOL]       assertFalse(string6.equals((Object)string5))
 [EOL]       assertNull(object0)
 [EOL]       assertEquals((-803), timedSemaphore0.getAvailablePermits())
 [EOL]       assertEquals(1, shortArray0.length)  [EOL]       assertEquals(4, shortArray1.length)  [EOL]       assertEquals(4, shortArray1.length)
 [EOL]       assertEquals('6', char0)
 [EOL]       assertTrue(equalsBuilder2.isEquals())
 [EOL]       assertFalse(string2.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string3))  [EOL]       assertFalse(string4.equals((Object)string1))  [EOL]       assertFalse(string4.equals((Object)string2))  [EOL]       assertFalse(string5.equals((Object)string1))  [EOL]       assertFalse(string5.equals((Object)string4))  [EOL]       assertFalse(string5.equals((Object)string3))
 [EOL]       assertTrue(string1.equals((Object)string0))  [EOL]       assertTrue(string2.equals((Object)string0))  [EOL]       assertTrue(string2.equals((Object)string1))  [EOL]       assertTrue(string3.equals((Object)string1))  [EOL]       assertTrue(string3.equals((Object)string2))  [EOL]       assertTrue(string3.equals((Object)string0))  [EOL]       assertTrue(string4.equals((Object)string3))  [EOL]       assertTrue(string4.equals((Object)string2))  [EOL]       assertTrue(string4.equals((Object)string1))  [EOL]       assertTrue(string4.equals((Object)string0))  [EOL]       assertTrue(string5.equals((Object)string0))  [EOL]       assertTrue(string5.equals((Object)string1))  [EOL]       assertTrue(string5.equals((Object)string3))  [EOL]       assertTrue(string5.equals((Object)string4))  [EOL]       assertTrue(string5.equals((Object)string2))
 [EOL]       assertTrue(vector0.isEmpty())  [EOL]       assertTrue(linkedHashSet0.isEmpty())  [EOL]       assertTrue(vector0.isEmpty())  [EOL]       assertTrue(linkedHashSet0.isEmpty())  [EOL]       assertTrue(list0.isEmpty())  [EOL]       assertTrue(vector0.isEmpty())  [EOL]       assertTrue(linkedHashSet0.isEmpty())  [EOL]       assertTrue(list0.isEmpty())
 [EOL]       assertEquals(0, hashCodeBuilder0.toHashCode())  [EOL]       assertEquals(0, (int)hashCodeBuilder0.build())
 [EOL]       assertEquals(']', strSubstitutor0.getEscapeChar())
 [EOL]       assertEquals('=', charRange0.getEnd())
 [EOL]       assertEquals(3, int0)
 [EOL]       assertFalse(string2.equals((Object)string1))
 [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertTrue(string3.equals((Object)string0))
 [EOL]       assertEquals(3, stringArray0.length)
 [EOL]       assertEquals('M', charRange0.getStart())  [EOL]       assertEquals('M', charRange1.getStart())
 [EOL]       assertFalse(boolean0)
 [EOL]       assertFalse(strTokenizer0.isEmptyTokenAsNull())  [EOL]       assertTrue(strTokenizer0.isEmptyTokenAsNull())  [EOL]       assertTrue(strTokenizer1.isEmptyTokenAsNull())  [EOL]       assertTrue(strTokenizer0.isEmptyTokenAsNull())  [EOL]       assertTrue(strTokenizer1.isEmptyTokenAsNull())
 [EOL]       assertTrue(stack0.isEmpty())
 [EOL]       assertEquals(0, fraction1.getNumerator())
 [EOL]       assertNull(integer0)
 [EOL]       assertTrue(string1.equals((Object)string0))  [EOL]       assertTrue(string2.equals((Object)string0))  [EOL]       assertTrue(string2.equals((Object)string1))  [EOL]       assertTrue(string3.equals((Object)string1))  [EOL]       assertTrue(string3.equals((Object)string2))  [EOL]       assertTrue(string3.equals((Object)string0))  [EOL]       assertTrue(string4.equals((Object)string2))  [EOL]       assertTrue(string4.equals((Object)string1))  [EOL]       assertTrue(string4.equals((Object)string3))  [EOL]       assertTrue(string4.equals((Object)string0))  [EOL]       assertFalse(string5.equals((Object)string2))  [EOL]       assertFalse(string5.equals((Object)string3))  [EOL]       assertFalse(string5.equals((Object)string4))  [EOL]       assertFalse(string5.equals((Object)string1))  [EOL]       assertFalse(string5.equals((Object)string0))
 [EOL]       assertEquals(116.0, double0, 0.01)
 [EOL]       assertEquals(0.0F, float0, 0.01F)
 [EOL]       assertEquals(1, int0)
 [EOL]       assertTrue(thread1.isDaemon())
 [EOL]       assertEquals(97.0F, float0, 0.01F)
 [EOL]       assertEquals(Float.NaN, float0, 0.01F)
 [EOL]       assertEquals(0.0F, float0, 0.01F)
 [EOL]       assertEquals((short)1, (short)mutableShort0.toShort())
 [EOL]       assertTrue(Arrays.equals(new boolean[] {false, true, true, true}, booleanArray0))
 [EOL]       assertEquals(3, floatArray0.length)  [EOL]       assertEquals(2, charArray0.length)
 [EOL]       assertTrue(Arrays.equals(new boolean[] {true, false, false, false}, booleanArray0))
 [EOL]       assertEquals("1970-01-01+00:00", string0)
 [EOL]       assertTrue(range2.equals((Object)range0))
 [EOL]       assertSame(byteArray1, byteArray2)
 [EOL]       assertEquals((-1387.0), double0, 0.01)
 [EOL]       assertEquals((-1), strTokenizer0.previousIndex())  [EOL]       assertEquals(0, strTokenizer0.previousIndex())  [EOL]       assertEquals(0, strTokenizer0.previousIndex())
 [EOL]       assertEquals("aHb>", string0)
 [EOL]       assertEquals(2, fraction0.getNumerator())
 [EOL]       assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F)
 [EOL]       assertSame(renderingHints1, renderingHints0)
 [EOL]       assertEquals(6, shortArray1.length)
 [EOL]       assertEquals(1, int0)
 [EOL]       assertEquals((short)0, short0)
 [EOL]       assertEquals(7, byteArray0.length)  [EOL]       assertEquals(5, charSequenceArray0.length)
 [EOL]       assertEquals(9, longArray0.length)
 [EOL]       assertEquals("-30", string0)
 [EOL]       assertEquals(23, classArray0.length)
 [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertTrue(string2.equals((Object)string1))  [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertFalse(string3.equals((Object)string0))
 [EOL]       assertEquals(58, int0)
 [EOL]       assertEquals(1049.4742F, float0, 0.01F)
 [EOL]       assertTrue(boolean0)
 [EOL]       assertEquals(0.0, double0, 0.01)
 [EOL]       assertEquals(6897, fraction0.getDenominator())
 [EOL]       assertEquals(",", standardToStringStyle0.getArraySeparator())
 [EOL]       assertFalse(boolean0)
 [EOL]       assertFalse(object1.equals((Object)object0))  [EOL]       assertFalse(object2.equals((Object)object1))  [EOL]       assertFalse(object2.equals((Object)object0))  [EOL]       assertFalse(object3.equals((Object)object0))  [EOL]       assertFalse(object3.equals((Object)object1))  [EOL]       assertFalse(object3.equals((Object)object2))  [EOL]       assertFalse(object4.equals((Object)object2))  [EOL]       assertFalse(object4.equals((Object)object3))  [EOL]       assertFalse(object4.equals((Object)object1))  [EOL]       assertFalse(object4.equals((Object)object0))  [EOL]       assertFalse(object5.equals((Object)object4))  [EOL]       assertFalse(object5.equals((Object)object1))  [EOL]       assertFalse(object5.equals((Object)object0))  [EOL]       assertFalse(object5.equals((Object)object3))  [EOL]       assertFalse(object5.equals((Object)object2))  [EOL]       assertFalse(object6.equals((Object)object5))  [EOL]       assertFalse(object6.equals((Object)object3))  [EOL]       assertFalse(object6.equals((Object)object4))  [EOL]       assertFalse(object6.equals((Object)object2))  [EOL]       assertFalse(object6.equals((Object)object0))  [EOL]       assertFalse(object6.equals((Object)object1))  [EOL]       assertFalse(object7.equals((Object)object4))  [EOL]       assertFalse(object7.equals((Object)object1))  [EOL]       assertFalse(object7.equals((Object)object0))  [EOL]       assertFalse(object7.equals((Object)object6))  [EOL]       assertFalse(object7.equals((Object)object5))  [EOL]       assertFalse(object7.equals((Object)object2))  [EOL]       assertFalse(object7.equals((Object)object3))  [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertTrue(string3.equals((Object)string2))  [EOL]       assertTrue(string3.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string0))
 [EOL]       assertEquals(10, strBuilder0.size())
 [EOL]       assertTrue(set0.isEmpty())
 [EOL]       assertEquals((byte)9, bigDecimal0.byteValue())
 [EOL]       assertFalse(thread1.isInterrupted())
 [EOL]       assertEquals("<null>", string0)
 [EOL]       assertEquals('Z', char0)
 [EOL]       assertEquals((byte) (-128), byte0)
 [EOL]       assertTrue(string1.equals((Object)string0))  [EOL]       assertTrue(string2.equals((Object)string0))  [EOL]       assertTrue(string2.equals((Object)string1))  [EOL]       assertTrue(string3.equals((Object)string1))  [EOL]       assertTrue(string3.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string1))  [EOL]       assertFalse(string4.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string3))  [EOL]       assertFalse(string4.equals((Object)string0))
 [EOL]       assertEquals((byte)1, mutableByte0.byteValue())
 [EOL]       assertNotNull(string0)
 [EOL]       assertEquals(0, sQLNonTransientConnectionExceptionArray1.length)
 [EOL]       assertTrue(string1.equals((Object)string0))  [EOL]       assertFalse(object1.equals((Object)object0))  [EOL]       assertFalse(string2.equals((Object)string1))  [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string4.equals((Object)string0))  [EOL]       assertFalse(string4.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string3))  [EOL]       assertFalse(string4.equals((Object)string1))  [EOL]       assertFalse(string5.equals((Object)string0))  [EOL]       assertTrue(string5.equals((Object)string3))  [EOL]       assertFalse(string5.equals((Object)string2))  [EOL]       assertFalse(string5.equals((Object)string1))  [EOL]       assertFalse(string5.equals((Object)string4))  [EOL]       assertFalse(string6.equals((Object)string1))  [EOL]       assertFalse(string6.equals((Object)string3))  [EOL]       assertFalse(string6.equals((Object)string5))  [EOL]       assertFalse(string6.equals((Object)string4))  [EOL]       assertFalse(string6.equals((Object)string2))  [EOL]       assertFalse(string6.equals((Object)string0))  [EOL]       assertFalse(string7.equals((Object)string0))  [EOL]       assertFalse(string7.equals((Object)string6))  [EOL]       assertFalse(string7.equals((Object)string4))  [EOL]       assertFalse(string7.equals((Object)string1))  [EOL]       assertFalse(string7.equals((Object)string3))  [EOL]       assertFalse(string7.equals((Object)string2))  [EOL]       assertFalse(string7.equals((Object)string5))  [EOL]       assertFalse(string8.equals((Object)string1))  [EOL]       assertFalse(string8.equals((Object)string7))  [EOL]       assertFalse(string8.equals((Object)string3))  [EOL]       assertFalse(string8.equals((Object)string4))  [EOL]       assertFalse(string8.equals((Object)string5))  [EOL]       assertFalse(string8.equals((Object)string2))  [EOL]       assertFalse(string8.equals((Object)string6))  [EOL]       assertFalse(string8.equals((Object)string0))
 [EOL]       assertTrue(equalsBuilder5.isEquals())  [EOL]       assertFalse(equalsBuilder0.isEquals())
 [EOL]       //  // Unstable assertion: assertEquals(0, strTokenizer0.nextIndex())  [EOL]       //  // Unstable assertion: assertEquals(1, strTokenizer0.nextIndex())  [EOL]       //  // Unstable assertion: assertEquals(1, strTokenizer0.nextIndex())  [EOL]       //  // Unstable assertion: assertEquals(1, strTokenizer1.nextIndex())
 [EOL]       assertEquals("null", string0)
 [EOL]       assertTrue(list0.isEmpty())
 [EOL]       assertFalse(strTokenizer0.isIgnoreEmptyTokens())  [EOL]       assertFalse(strTokenizer0.isIgnoreEmptyTokens())  [EOL]       assertFalse(strTokenizer1.isIgnoreEmptyTokens())
 [EOL]       assertEquals("%,.0=o8.l", extendedMessageFormat0.toPattern())
 [EOL]       assertNull(object0)
 [EOL]       assertFalse(strTokenizer0.isIgnoreEmptyTokens())  [EOL]       assertFalse(strTokenizer0.isIgnoreEmptyTokens())  [EOL]       assertFalse(strTokenizer1.isIgnoreEmptyTokens())  [EOL]       assertFalse(strTokenizer0.isIgnoreEmptyTokens())  [EOL]       assertFalse(strTokenizer1.isIgnoreEmptyTokens())  [EOL]       assertFalse(strTokenizer0.isIgnoreEmptyTokens())  [EOL]       assertFalse(strTokenizer2.isIgnoreEmptyTokens())
 [EOL]       assertEquals((-3832), int0)
 [EOL]       assertEquals(1, stringArray0.length)  [EOL]       assertEquals(9, charArray0.length)
 [EOL]       assertEquals(0, throwableArray0.length)
 [EOL]       assertEquals(8, stringArray0.length)  [EOL]       assertEquals(8, stringArray0.length)
 [EOL]       assertEquals('M', char0)
 [EOL]       assertEquals(7, int0)
 [EOL]       assertEquals("<null>", standardToStringStyle0.getNullText())
 [EOL]       assertEquals(0L, basicThreadFactory1.getThreadCount())
 [EOL]       assertFalse(boolean0)
 [EOL]       assertEquals("Long[][]", string0)
 [EOL]       assertEquals(Locale.Category.FORMAT, object0)
 [EOL]       assertNotNull(string0)
 [EOL]       assertNull(locale2)
 [EOL]       assertEquals((-1574L), long0)
 [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string2))
 [EOL]       assertEquals(1, objectArray0.length)
 [EOL]       assertEquals(2, charBuffer0.length())  [EOL]       assertEquals(2, charArray0.length)  [EOL]       assertEquals(2, charBuffer0.length())  [EOL]       assertEquals(2, charArray0.length)  [EOL]       assertEquals(2, charBuffer0.length())  [EOL]       assertEquals(2, charArray0.length)  [EOL]       assertEquals(2, charBuffer0.length())  [EOL]       assertEquals(2, charArray0.length)  [EOL]       assertEquals(6, objectArray0.length)
 [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string2.equals((Object)string1))  [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string1))  [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertFalse(string3.equals((Object)string0))  [EOL]       assertFalse(string4.equals((Object)string2))  [EOL]       assertFalse(string4.equals((Object)string0))  [EOL]       assertFalse(string4.equals((Object)string1))  [EOL]       assertTrue(string4.equals((Object)string3))
 [EOL]       assertFalse(string1.equals((Object)string0))  [EOL]       assertFalse(string6.equals((Object)string1))  [EOL]       assertFalse(string6.equals((Object)string0))  [EOL]       assertFalse(string6.equals((Object)string4))  [EOL]       assertFalse(string6.equals((Object)string2))  [EOL]       assertFalse(string7.equals((Object)string0))  [EOL]       assertFalse(string7.equals((Object)string2))  [EOL]       assertFalse(string7.equals((Object)string4))  [EOL]       assertTrue(string7.equals((Object)string1))  [EOL]       assertFalse(string7.equals((Object)string6))
 [EOL]       assertEquals("", string0)
 [EOL]       assertSame(equalsBuilder1, equalsBuilder6)
 [EOL]       assertEquals(0, byteArray1.length)
 [EOL]       assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0}, intArray0)
 [EOL]       assertEquals(1L, long0)
 [EOL]       assertFalse(arrayDeque0.contains("pO{hIf5d"))  [EOL]       assertFalse(arrayDeque0.contains("pO{hIf5d"))  [EOL]       assertTrue(arrayDeque0.contains("pO{hIf5d"))  [EOL]       assertFalse(treeSet0.contains("pO{hIf5d"))  [EOL]       assertTrue(arrayDeque0.contains("pO{hIf5d"))  [EOL]       assertFalse(treeSet0.contains("pO{hIf5d"))  [EOL]       assertTrue(arrayDeque0.contains(string0))  [EOL]       assertTrue(arrayDeque0.contains(string0))  [EOL]       assertFalse(arrayDeque0.contains(string1))  [EOL]       assertTrue(arrayDeque0.contains(string0))  [EOL]       assertFalse(arrayDeque0.contains(string1))
 [EOL]       assertEquals(1, stringArray0.length)  [EOL]       assertEquals(1, shortArray0.length)  [EOL]       assertEquals(1, stringArray0.length)
 [EOL]       assertFalse(strTokenizer0.isEmptyTokenAsNull())  [EOL]       assertFalse(strTokenizer0.isEmptyTokenAsNull())  [EOL]       assertFalse(strTokenizer1.isEmptyTokenAsNull())
 [EOL]       assertEquals("\u2227", string0)
 [EOL]       assertEquals('o', charRange1.getEnd())  [EOL]       assertEquals('}', charRange0.getEnd())
 [EOL]       assertEquals("ong[]", string0)
 [EOL]       assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString())
 [EOL]       assertArrayEquals(new int[] {0, 9}, intArray0)
 [EOL]       assertTrue(equalsBuilder1.isEquals())  [EOL]       assertFalse(equalsBuilder1.isEquals())
 [EOL]       assertEquals(13, int0)
 [EOL]       assertFalse(linkedHashSet0.contains("6Q]Qf.L"))  [EOL]       assertFalse(linkedHashSet0.contains("6Q]Qf.L"))  [EOL]       assertFalse(linkedHashSet0.contains("6Q]Qf.L"))  [EOL]       assertTrue(linkedHashSet0.contains(object0))  [EOL]       assertFalse(linkedHashSet0.contains(""))  [EOL]       assertTrue(linkedHashSet0.contains(object0))
 [EOL]       assertTrue(Arrays.equals(new boolean[] {true, false, true, false}, booleanArray0))
 [EOL]       assertFalse(string2.equals((Object)string0))  [EOL]       assertFalse(string3.equals((Object)string2))  [EOL]       assertFalse(string3.equals((Object)string0))
 [EOL]       assertTrue(strTokenizer0.isIgnoreEmptyTokens())  [EOL]       assertTrue(strTokenizer0.isIgnoreEmptyTokens())  [EOL]       assertTrue(strTokenizer1.isIgnoreEmptyTokens())  [EOL]       assertTrue(strTokenizer0.isIgnoreEmptyTokens())
 [EOL]       assertEquals(7, floatArray1.length)
 [EOL]       assertFalse(string2.equals((Object)string0))
 [EOL]       assertEquals(9000L, long0)
 [EOL]       assertEquals(0L, long0)
 [EOL]       assertEquals("-1.0", string0)
 [EOL]       assertEquals("=", string0)
 [EOL]       assertFalse(object1.equals((Object)object0))  [EOL]       assertTrue(string3.equals((Object)string2))  [EOL]       assertTrue(string3.equals((Object)string1))
 [EOL]       assertEquals(1, byteArray0.length)
 [EOL]       assertEquals(0, floatArray0.length)  [EOL]       assertEquals(7, charSequenceArray0.length)
 [EOL]       assertTrue(equalsBuilder2.build())  [EOL]       assertFalse(equalsBuilder0.build())
 [EOL]       assertEquals(0L, long0)
 [EOL]       assertEquals((short)50, short0)
 [EOL]       assertTrue(timedSemaphore0.isShutdown())
 [EOL]       assertEquals(6, int0)
 [EOL]       //  // Unstable assertion: assertEquals(0, strTokenizer0.nextIndex())  [EOL]       //  // Unstable assertion: assertEquals(0, strTokenizer0.nextIndex())  [EOL]       //  // Unstable assertion: assertEquals(0, strTokenizer1.nextIndex())  [EOL]       //  // Unstable assertion: assertEquals(0, strTokenizer0.nextIndex())  [EOL]       //  // Unstable assertion: assertEquals(0, strTokenizer1.nextIndex())  [EOL]       //  // Unstable assertion: assertEquals(0, strTokenizer2.nextIndex())
 [EOL]       assertEquals((short)2245, short0)
 [EOL]       assertNotNull(string0)
 [EOL]       assertEquals("<size=", string0)
