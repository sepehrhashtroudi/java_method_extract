/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 09 03:52:40 GMT 2021
 */

package org.apache.commons.lang3.builder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import org.apache.commons.lang3.builder.StandardToStringStyle;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ToStringStyle_ESTest extends ToStringStyle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "<null>");
      int[] intArray0 = new int[6];
      Boolean boolean0 = Boolean.valueOf(false);
      toStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "JAVA_1_4", intArray0, boolean0);
      Byte byte0 = new Byte((byte)0);
      toStringStyle0.appendEnd(stringBuffer0, byte0);
      assertEquals("<null>JAVA_1_4=<size=6>\n  ]", stringBuffer0.toString());
      assertEquals(27, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(">");
      toStringStyle0.append(stringBuffer0, "@", (-1L));
      Integer integer0 = new Integer(1);
      toStringStyle0.appendEnd(stringBuffer0, integer0);
      assertEquals(7, stringBuffer0.length());
      assertEquals(">@=-1\n]", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ",");
      standardToStringStyle0.removeLastFieldSeparator(stringBuffer0);
      assertEquals("", stringBuffer0.toString());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.appendSummarySize(stringBuffer0, "<", 64);
      assertEquals(9, stringBuffer0.length());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("[");
      short[] shortArray0 = new short[5];
      toStringStyle0.appendSummary(stringBuffer0, "[", shortArray0);
      assertEquals(9, stringBuffer0.length());
      assertEquals("[<size=5>", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("X>2Y%");
      Object[] objectArray0 = new Object[2];
      standardToStringStyle0.SIMPLE_STYLE.appendSummary(stringBuffer0, "F", objectArray0);
      assertEquals(13, stringBuffer0.length());
      assertEquals("X>2Y%<size=2>", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("");
      long[] longArray0 = new long[1];
      standardToStringStyle0.DEFAULT_STYLE.appendSummary(stringBuffer0, "@O%nL,F", longArray0);
      //  // Unstable assertion: assertEquals(26, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      float[] floatArray0 = new float[5];
      standardToStringStyle0.MULTI_LINE_STYLE.appendSummary(stringBuffer0, "!mweDDV`dICU", floatArray0);
      assertEquals("<size=5>", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      double[] doubleArray0 = new double[4];
      standardToStringStyle0.appendSummary(stringBuffer0, "<", doubleArray0);
      assertEquals(8, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("ya: #");
      char[] charArray0 = new char[4];
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendSummary(stringBuffer0, "ya: #", charArray0);
      assertEquals("ya: #<size=4>", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      byte[] byteArray0 = new byte[1];
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendSummary(stringBuffer0, "$&<o_*QpERk,Ne", byteArray0);
      assertEquals(8, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isUseClassName());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Long long0 = new Long(0L);
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendInternal(stringBuffer0, "]J;-oeCxj.", long0, false);
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("");
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendFieldStart(stringBuffer0, "");
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(0, stringBuffer0.length());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("AEhzPmLst|m|:e7J{Z");
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendFieldSeparator(stringBuffer0);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("short");
      short[] shortArray0 = new short[7];
      toStringStyle0.DEFAULT_STYLE.appendDetail(stringBuffer0, "T!dHD", shortArray0);
      assertEquals("short{0,0,0,0,0,0,0}", stringBuffer0.toString());
      assertEquals(20, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("$W8BC)fVnoVM,sZ]");
      float[] floatArray0 = new float[0];
      standardToStringStyle0.appendDetail(stringBuffer0, "hJd3~IkyQU3Lzn0Z^Hs", floatArray0);
      assertEquals(18, stringBuffer0.length());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      byte[] byteArray0 = new byte[0];
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail(stringBuffer0, "", byteArray0);
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      standardToStringStyle0.appendDetail(stringBuffer0, "r#1|H@M0", stringBuffer0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendDetail(stringBuffer0, "C]u3IEhg", 1L);
      assertEquals(1, stringBuffer0.length());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.appendDetail(stringBuffer0, ",", 0.0F);
      assertEquals(3, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("ya: #");
      standardToStringStyle0.appendDetail(stringBuffer0, "", (-800.9628572627));
      assertEquals("ya: #-800.9628572627", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(127);
      standardToStringStyle0.DEFAULT_STYLE.appendDetail(stringBuffer0, "_*7N", '(');
      assertEquals("(", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("X>2Y%");
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle", (byte)76);
      assertEquals(7, stringBuffer0.length());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.appendCyclicObject(stringBuffer0, (String) null, stringBuffer0);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      standardToStringStyle0.appendContentStart(stringBuffer0);
      assertEquals(1, stringBuffer0.length());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      ToStringStyle.unregister(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SIMPLE_STYLE.setUseShortClassName(true);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.MULTI_LINE_STYLE.setUseIdentityHashCode(false);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setSummaryObjectStartText("{");
      assertEquals("{", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.DEFAULT_STYLE.setSizeEndText("AEhzPmLst|m|:e7J{Z");
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      
      standardToStringStyle0.setFieldSeparatorAtStart(true);
      assertTrue(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      standardToStringStyle0.appendDetail(stringBuffer0, "1J!#BJ^^%!>Fn", (short) (-873));
      assertEquals(4, stringBuffer0.length());
      assertEquals("-873", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      boolean boolean0 = toStringStyle0.isUseIdentityHashCode();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      boolean boolean0 = toStringStyle0.isUseFieldNames();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isUseClassName();
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(boolean0);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      boolean boolean0 = toStringStyle0.isUseClassName();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.DEFAULT_STYLE.appendIdentityHashCode(stringBuffer0, stringBuffer0);
      boolean boolean0 = ToStringStyle.isRegistered(stringBuffer0);
      assertEquals(2, stringBuffer0.length());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Byte byte0 = new Byte((byte)0);
      boolean boolean0 = ToStringStyle.isRegistered(byte0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.isFullDetail(boolean0);
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.valueOf("&=$L/rFw]D");
      standardToStringStyle0.isFullDetail(boolean0);
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      boolean boolean0 = toStringStyle0.isFieldSeparatorAtStart();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtStart();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(boolean0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      boolean boolean0 = toStringStyle0.isFieldSeparatorAtEnd();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isArrayContentDetail();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSummaryObjectEndText();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", string0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Class<Long> class0 = Long.class;
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.getShortClassName(class0);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getFieldSeparator();
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", string0);
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      String string0 = toStringStyle0.getContentStart();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      String string0 = toStringStyle0.getContentEnd();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.removeLastFieldSeparator((StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("X>2Y%");
      // Undeclared exception!
      try { 
        standardToStringStyle0.reflectionAppendArrayDetail(stringBuffer0, "'i/C!G'0@Y'Cf*", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(1107);
      Integer integer0 = new Integer(1107);
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.reflectionAppendArrayDetail(stringBuffer0, ".Qh<M!QGCW~y~RMx&", integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument is not an array
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setContentStart("KDH+k2DiW<e)w");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "KDH+k2DiW<e)w");
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendToString(stringBuffer0, "7<\"b[m6F]");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendToString((StringBuffer) null, "[zE,L:]V");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.appendSummarySize((StringBuffer) null, (String) null, (-282));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("java.version");
      // Undeclared exception!
      try { 
        standardToStringStyle0.MULTI_LINE_STYLE.appendSummary(stringBuffer0, "java.version", (boolean[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      short[] shortArray0 = new short[7];
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendSummary((StringBuffer) null, "", shortArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Object[] objectArray0 = new Object[5];
      // Undeclared exception!
      try { 
        standardToStringStyle0.MULTI_LINE_STYLE.appendSummary((StringBuffer) null, "", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.appendSummary((StringBuffer) null, "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle", (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(1);
      // Undeclared exception!
      try { 
        toStringStyle0.appendSummary(stringBuffer0, "{", (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      float[] floatArray0 = new float[1];
      // Undeclared exception!
      try { 
        toStringStyle0.NO_FIELD_NAMES_STYLE.appendSummary((StringBuffer) null, "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle", floatArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      double[] doubleArray0 = new double[3];
      // Undeclared exception!
      try { 
        toStringStyle0.NO_FIELD_NAMES_STYLE.appendSummary((StringBuffer) null, "=ppP", doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendSummary((StringBuffer) null, "Gh04/cTDR=<C!`8o", (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendSummary(stringBuffer0, "", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.SHORT_PREFIX_STYLE.appendSummary((StringBuffer) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Character character0 = Character.valueOf('9');
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendStart((StringBuffer) null, character0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.MULTI_LINE_STYLE.appendFieldStart((StringBuffer) null, "1.4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.appendFieldSeparator((StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendFieldEnd((StringBuffer) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendEnd((StringBuffer) null, "t6rhN]32BhPHc");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendDetail(stringBuffer0, "YRl(?0", (boolean[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        toStringStyle0.appendDetail(stringBuffer0, "Mme", (short[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(">ZCyH#8iz.-~");
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail(stringBuffer0, "&{.0ehYS,<", (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      long[] longArray0 = new long[5];
      // Undeclared exception!
      try { 
        standardToStringStyle0.SIMPLE_STYLE.appendDetail((StringBuffer) null, "5`z", longArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      int[] intArray0 = new int[5];
      // Undeclared exception!
      try { 
        standardToStringStyle0.SHORT_PREFIX_STYLE.appendDetail((StringBuffer) null, "", intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("I e~MVNIr$.P");
      // Undeclared exception!
      try { 
        toStringStyle0.appendDetail(stringBuffer0, "IYxCUn{.z#Sds{0a", (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      CharBuffer charBuffer0 = CharBuffer.allocate(590);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      // Undeclared exception!
      try { 
        toStringStyle0.appendDetail(stringBuffer0, "user.region", (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("^e");
      // Undeclared exception!
      try { 
        standardToStringStyle0.SIMPLE_STYLE.appendDetail(stringBuffer0, "c<CYk:kic)", (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        standardToStringStyle0.DEFAULT_STYLE.appendDetail((StringBuffer) null, "[", byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail((StringBuffer) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.appendDetail((StringBuffer) null, "eYf[\"t%", (Map<?, ?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        toStringStyle0.appendDetail((StringBuffer) null, "=]BoKL\"Di_p:r\"$V", linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      float[] floatArray0 = new float[9];
      // Undeclared exception!
      try { 
        toStringStyle0.SHORT_PREFIX_STYLE.appendDetail((StringBuffer) null, "JAVA_1_3", floatArray0[2]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail((StringBuffer) null, "<null>", 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.MULTI_LINE_STYLE.appendDetail((StringBuffer) null, "hO?7?g", (-2013265918));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail((StringBuffer) null, "]J;-oeCxj.", 1471);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.SHORT_PREFIX_STYLE.appendDetail((StringBuffer) null, "UcK^:&d?EB:HFt(ai", (-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.appendDetail((StringBuffer) null, "Za5J2D$*3b", 'l');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendDetail((StringBuffer) null, "boolean", (byte)60);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        toStringStyle0.SIMPLE_STYLE.appendCyclicObject(stringBuffer0, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot get the toString of a null identity
         //
         verifyException("org.apache.commons.lang3.ObjectUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.SIMPLE_STYLE.appendContentStart((StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.DEFAULT_STYLE.appendContentEnd((StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      Object[] objectArray0 = new Object[4];
      Boolean boolean0 = new Boolean("");
      // Undeclared exception!
      try { 
        toStringStyle0.append((StringBuffer) null, "", objectArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.append((StringBuffer) null, "=7T>AHmiX2`#g*", (long[]) null, (Boolean) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      int[] intArray0 = new int[0];
      Boolean boolean0 = Boolean.valueOf(false);
      // Undeclared exception!
      try { 
        standardToStringStyle0.append((StringBuffer) null, "", intArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean[] booleanArray0 = new boolean[1];
      float[] floatArray0 = new float[3];
      // Undeclared exception!
      try { 
        standardToStringStyle0.SHORT_PREFIX_STYLE.append((StringBuffer) null, "=", floatArray0, (Boolean) booleanArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.valueOf(true);
      double[] doubleArray0 = new double[1];
      // Undeclared exception!
      try { 
        standardToStringStyle0.SHORT_PREFIX_STYLE.append((StringBuffer) null, "&8", doubleArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      char[] charArray0 = new char[3];
      Boolean boolean0 = Boolean.valueOf(true);
      // Undeclared exception!
      try { 
        toStringStyle0.DEFAULT_STYLE.append((StringBuffer) null, "4Q_+SQ.", charArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      byte[] byteArray0 = new byte[6];
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        toStringStyle0.append((StringBuffer) null, "", byteArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.MULTI_LINE_STYLE.append((StringBuffer) null, "-.^+MAKn", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.append((StringBuffer) null, "JAVA_1_4", (short) (-3));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      Boolean boolean0 = Boolean.valueOf(true);
      // Undeclared exception!
      try { 
        toStringStyle0.append((StringBuffer) null, "pd!%AL(]wug!t*", (Object) ",", boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.SIMPLE_STYLE.append((StringBuffer) null, ">", (-1L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.DEFAULT_STYLE.append((StringBuffer) null, "", 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.append((StringBuffer) null, "", 68.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.DEFAULT_STYLE.append((StringBuffer) null, (String) null, '5');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.MULTI_LINE_STYLE.append((StringBuffer) null, "na?;Ru`", (byte)121);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("H?W:[0'$$aNXLj");
      Object object0 = new Object();
      toStringStyle0.appendStart(stringBuffer0, object0);
      assertEquals(14, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ",");
      standardToStringStyle0.appendToString(stringBuffer0, "");
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals(1, stringBuffer0.length());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      
      standardToStringStyle0.setSummaryObjectEndText((String) null);
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SHORT_PREFIX_STYLE.setSummaryObjectEndText("Windows 9");
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      standardToStringStyle0.setSummaryObjectStartText((String) null);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      
      standardToStringStyle0.setSizeEndText((String) null);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.setSizeStartText((String) null);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setSizeStartText("JAVA_1_4");
      assertEquals("JAVA_1_4", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<null>", standardToStringStyle0.getNullText());
      
      standardToStringStyle0.setNullText((String) null);
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<null>", standardToStringStyle0.getNullText());
      
      standardToStringStyle0.setNullText("");
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.MULTI_LINE_STYLE.setFieldSeparator("g>s");
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      standardToStringStyle0.setFieldNameValueSeparator((String) null);
      assertTrue(standardToStringStyle0.isUseClassName());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.setFieldNameValueSeparator("JAVA_1_4");
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SIMPLE_STYLE.setContentEnd((String) null);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("]", standardToStringStyle0.getContentEnd());
      
      standardToStringStyle0.setContentEnd("");
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      standardToStringStyle0.setContentStart((String) null);
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setContentStart("<");
      assertEquals("<", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SIMPLE_STYLE.setArraySeparator((String) null);
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      toStringStyle0.SHORT_PREFIX_STYLE.setArraySeparator("");
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      
      standardToStringStyle0.setArrayEnd((String) null);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      
      standardToStringStyle0.setArrayEnd("");
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      standardToStringStyle0.setArrayStart((String) null);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setArrayStart("q2zI7P(W]3Bj9u");
      assertEquals("q2zI7P(W]3Bj9u", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("^e");
      standardToStringStyle0.appendIdentityHashCode(stringBuffer0, (Object) null);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(2, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendClassName(stringBuffer0, "[");
      assertEquals("String", stringBuffer0.toString());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.MULTI_LINE_STYLE.appendClassName(stringBuffer0, (Object) null);
      assertEquals("", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      toStringStyle0.getNullText();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "<null>");
      toStringStyle0.MULTI_LINE_STYLE.appendClassName(stringBuffer0, stringBuffer0);
      Byte byte0 = new Byte((byte)0);
      toStringStyle0.appendEnd(stringBuffer0, byte0);
      toStringStyle0.SHORT_PREFIX_STYLE.appendContentEnd(stringBuffer0);
      toStringStyle0.setUseFieldNames(false);
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.isDefaultFullDetail();
      standardToStringStyle0.setFieldSeparatorAtEnd(false);
      standardToStringStyle0.appendFieldEnd(stringBuffer0, "<null>");
      Object object0 = new Object();
      ToStringStyle.register(object0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (byte)0;
      StringBuffer stringBuffer1 = new StringBuffer(",Q!9");
      Boolean boolean0 = new Boolean("+v=s>w");
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      booleanArray0[5] = true;
      booleanArray0[6] = true;
      booleanArray0[7] = false;
      booleanArray0[8] = false;
      Boolean boolean1 = Boolean.valueOf(false);
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "<null>", booleanArray0, boolean1);
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendStart(stringBuffer1, boolean0);
      int[] intArray0 = new int[4];
      intArray0[0] = (int) (byte)0;
      intArray0[1] = (int) (byte)0;
      intArray0[2] = (int) (byte)0;
      intArray0[3] = (int) (byte)0;
      standardToStringStyle0.SIMPLE_STYLE.appendDetail(stringBuffer1, "k<tzI?E>:2lG", intArray0);
      standardToStringStyle0.appendDetail(stringBuffer0, ",Q!9", doubleArray0);
      assertEquals(54, stringBuffer0.length());
      assertEquals("<null>java.lang.StringBuffer]],<null>=<size=9>\n  {0.0}", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("X>2Y%");
      boolean[] booleanArray0 = new boolean[2];
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendDetail(stringBuffer0, "X>2Y%", booleanArray0);
      assertEquals(18, stringBuffer0.length());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = true;
      toStringStyle0.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle", booleanArray0, (Boolean) booleanArray0[0]);
      assertEquals("{true},", stringBuffer0.toString());
      assertEquals(7, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      standardToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "!ff;,vR'!eu", (boolean[]) null, boolean0);
      assertEquals(19, stringBuffer0.length());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("}");
      float[] floatArray0 = new float[4];
      Boolean boolean0 = Boolean.valueOf(true);
      toStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "2afbyilbnx\"RQWa}a", floatArray0, boolean0);
      assertEquals("}{0.0,0.0,0.0,0.0},", stringBuffer0.toString());
      assertEquals(19, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = new Boolean("ph'3ls(");
      standardToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "@@@43'A1VpWX3", (float[]) null, boolean0);
      assertEquals(21, stringBuffer0.length());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("}");
      Boolean boolean0 = Boolean.valueOf(true);
      double[] doubleArray0 = new double[2];
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "}", doubleArray0, boolean0);
      assertEquals(11, stringBuffer0.length());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle");
      boolean[] booleanArray0 = new boolean[2];
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "", (double[]) null, (Boolean) booleanArray0[0]);
      assertEquals(75, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray0 = new char[7];
      toStringStyle0.appendDetail(stringBuffer0, "&ExE77]\u0000F]=", charArray0);
      assertEquals(15, stringBuffer0.length());
      assertEquals("{\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000}", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray0 = new char[1];
      Boolean boolean0 = new Boolean(true);
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, ":6xSeCn1*VnK6WX", charArray0, boolean0);
      assertEquals(20, stringBuffer0.length());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle", (char[]) null, boolean0);
      assertEquals(7, stringBuffer0.length());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("}");
      byte[] byteArray0 = new byte[7];
      Boolean boolean0 = new Boolean(true);
      toStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "}", byteArray0, boolean0);
      assertEquals("}{0,0,0,0,0,0,0},", stringBuffer0.toString());
      assertEquals(17, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "KDH+k2DiW<e)w");
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.append(stringBuffer0, "", (byte[]) null, boolean0);
      assertEquals(21, stringBuffer0.length());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "}");
      short[] shortArray0 = new short[3];
      toStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "}", shortArray0, (Boolean) null);
      assertEquals(11, stringBuffer0.length());
      assertEquals("}}={0,0,0},", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "{th1.2f$dR", (short[]) null, (Boolean) null);
      assertEquals("<null>,", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.FALSE;
      toStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "<null>", (int[]) null, boolean0);
      assertEquals(7, stringBuffer0.length());
      assertEquals("<null>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ",");
      int[] intArray0 = new int[3];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.append(stringBuffer0, ",", intArray0, boolean0);
      assertEquals(11, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "[");
      long[] longArray0 = new long[7];
      standardToStringStyle0.appendDetail(stringBuffer0, "[", longArray0);
      assertEquals("[{0,0,0,0,0,0,0}", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(1);
      long[] longArray0 = new long[1];
      Boolean boolean0 = Boolean.valueOf(true);
      toStringStyle0.append(stringBuffer0, "", longArray0, boolean0);
      assertEquals("={0},", stringBuffer0.toString());
      assertEquals(5, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(46);
      Object[] objectArray0 = new Object[9];
      Boolean boolean0 = Boolean.valueOf(true);
      toStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "", objectArray0, boolean0);
      assertEquals(66, stringBuffer0.length());
      assertEquals("={<null>,<null>,<null>,<null>,<null>,<null>,<null>,<null>,<null>},", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("um");
      Boolean boolean0 = Boolean.FALSE;
      toStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle", (Object[]) null, boolean0);
      assertEquals(83, stringBuffer0.length());
      assertEquals("umorg.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle=<null>\n  ", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Double double0 = new Double(4681.97);
      StringBuffer stringBuffer0 = new StringBuffer(127);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) double0;
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail(stringBuffer0, (String) null, objectArray0);
      assertEquals(9, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(",");
      Boolean boolean0 = new Boolean(true);
      standardToStringStyle0.append(stringBuffer0, "", (Object) null, boolean0);
      assertEquals(",=<null>,", stringBuffer0.toString());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "<");
      Boolean boolean0 = new Boolean("ZK}-:3EYU>-(tcaH");
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "ZK}-:3EYU>-(tcaH", (Object) stringBuffer0, boolean0);
      assertEquals("<ZK}-:3EYU>-(tcaH=<StringBuffer>\n  ", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "<");
      Boolean boolean0 = new Boolean("ZK}-:3EYU>-(tcaH");
      float[] floatArray0 = new float[5];
      standardToStringStyle0.append(stringBuffer0, "", floatArray0, boolean0);
      toStringStyle0.removeLastFieldSeparator(stringBuffer0);
      assertEquals("<=<size=5>", stringBuffer0.toString());
      assertEquals(10, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "{");
      toStringStyle0.appendEnd(stringBuffer0, standardToStringStyle0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Object object0 = new Object();
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendEnd(stringBuffer0, object0);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      
      standardToStringStyle0.setFieldSeparator((String) null);
      standardToStringStyle0.removeLastFieldSeparator(stringBuffer0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      toStringStyle0.setFieldSeparatorAtEnd(true);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "<");
      Object object0 = new Object();
      toStringStyle0.appendEnd(stringBuffer0, object0);
      assertEquals(1, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.setFieldSeparatorAtStart(true);
      standardToStringStyle0.appendStart(stringBuffer0, stringBuffer0);
      assertEquals(26, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendStart(stringBuffer0, (Object) null);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(0, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "KDH+k2DiW<e)w");
      standardToStringStyle0.appendToString(stringBuffer0, "7<\"b[m6F]");
      assertEquals("KDH+k2DiW<e)wm6F,", stringBuffer0.toString());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(1);
      toStringStyle0.DEFAULT_STYLE.appendToString(stringBuffer0, (String) null);
      assertEquals(0, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendInternal(stringBuffer0, "LZJ|0T|lN?", (Object) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      String string0 = toStringStyle0.getSizeStartText();
      assertEquals("<size=", string0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      byte[] byteArray0 = new byte[3];
      Boolean boolean0 = Boolean.valueOf("");
      standardToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, ">", byteArray0, boolean0);
      assertEquals(">=<size=3>,", stringBuffer0.toString());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("org.apache.commons.lang3.builder.ToStringStyle");
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      double[] doubleArray0 = new double[1];
      Boolean boolean0 = new Boolean(false);
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, (String) null, doubleArray0, boolean0);
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle<size=1>,", stringBuffer0.toString());
      assertEquals(55, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("X>2Y%");
      long[] longArray0 = new long[5];
      Boolean boolean0 = new Boolean("");
      standardToStringStyle0.append(stringBuffer0, (String) null, longArray0, boolean0);
      assertEquals("X>2Y%<size=5>,", stringBuffer0.toString());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      toStringStyle0.MULTI_LINE_STYLE.setDefaultFullDetail(true);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2729);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean[] booleanArray0 = new boolean[3];
      standardToStringStyle0.appendSummary(stringBuffer0, "&xL'tUo=:", booleanArray0);
      assertEquals(2737, stringBuffer0.length());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("n");
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "JAVA_1_4", (-163));
      assertEquals("nJAVA_1_4=-163\n  ", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      toStringStyle0.DEFAULT_STYLE.setArrayContentDetail(false);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getArrayEnd();
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", string0);
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getContentStart();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", string0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      boolean boolean0 = toStringStyle0.isDefaultFullDetail();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("org.apache.commons.lang3.builder.ToStringStyle");
      toStringStyle0.MULTI_LINE_STYLE.appendSuper(stringBuffer0, "B@");
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle", stringBuffer0.toString());
      assertEquals(46, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(234);
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle", false);
      assertEquals(55, stringBuffer0.length());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("lg?3caGG41[$\"tg!|");
      standardToStringStyle0.DEFAULT_STYLE.appendDetail(stringBuffer0, (String) null, true);
      assertEquals("lg?3caGG41[$\"tg!|true", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      String string0 = toStringStyle0.getContentEnd();
      assertEquals("]", string0);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isUseShortClassName();
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(boolean0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Object[] objectArray0 = new Object[3];
      Boolean boolean0 = new Boolean("ph'3ls(");
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "ph'3ls(", objectArray0, boolean0);
      assertEquals(19, stringBuffer0.length());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray0 = new char[4];
      Boolean boolean0 = Boolean.valueOf("Cannot get the toString of a null identity");
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "Cannot get the toString of a null identity", charArray0, boolean0);
      assertEquals(54, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(234);
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "I", (byte)75);
      assertEquals(3, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      String string0 = toStringStyle0.getArraySeparator();
      assertEquals(",", string0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      CharBuffer charBuffer0 = CharBuffer.allocate(2729);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      toStringStyle0.DEFAULT_STYLE.appendSummary(stringBuffer0, "aUfugqqGnk%.S", stringBuffer0);
      assertEquals(2743, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      toStringStyle0.appendDetail(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle", linkedList0);
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getArrayStart();
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", string0);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      int[] intArray0 = new int[2];
      standardToStringStyle0.appendSummary(stringBuffer0, "/8&", intArray0);
      assertEquals("<size=2>", stringBuffer0.toString());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.appendStart(stringBuffer0, stringBuffer0);
      Object[] objectArray0 = new Object[9];
      objectArray0[3] = (Object) stringBuffer0;
      standardToStringStyle0.appendDetail(stringBuffer0, "user.region", objectArray0);
      assertEquals(107, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getFieldNameValueSeparator();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", string0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "<");
      Boolean boolean0 = new Boolean("ZK}-:3EYU>-(tcaH");
      short[] shortArray0 = new short[4];
      toStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "-*Y^D", shortArray0, boolean0);
      assertEquals(10, stringBuffer0.length());
      assertEquals("<<size=4>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSizeEndText();
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", string0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "OD{", 0.0);
      assertEquals(10, stringBuffer0.length());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "JAVA_1_4", (-2680.798F));
      assertEquals("-2680.798,", stringBuffer0.toString());
      assertEquals(10, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(234);
      standardToStringStyle0.appendDetail(stringBuffer0, "jmm#h=LcC", (-437));
      assertEquals(4, stringBuffer0.length());
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      CharBuffer charBuffer0 = CharBuffer.allocate(2729);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      toStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "java.specification.vendor", '%');
      assertEquals(2731, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      toStringStyle0.DEFAULT_STYLE.setUseClassName(false);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isUseFieldNames();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(boolean0);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSummaryObjectStartText();
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", string0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertFalse(standardToStringStyle0.isUseShortClassName());
      
      standardToStringStyle0.setUseShortClassName(true);
      boolean boolean0 = standardToStringStyle0.isUseShortClassName();
      assertTrue(standardToStringStyle0.isUseShortClassName());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ",");
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, ",", (short)2785);
      assertEquals(6, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("$W8BC)fVnoVM,sZ]");
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendNullText(stringBuffer0, "hJd3~IkyQU3Lzn0Z^Hs");
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseClassName());
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      HashMap<Object, Long> hashMap0 = new HashMap<Object, Long>();
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail(stringBuffer0, "e~/aXjk(\"-1QzZxGM", hashMap0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }
}
