/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 09 04:32:12 GMT 2021
 */

package org.apache.commons.lang3.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.text.ChoiceFormat;
import java.text.DateFormat;
import java.text.DateFormatSymbols;
import java.text.DecimalFormat;
import java.text.FieldPosition;
import java.text.Format;
import java.text.MessageFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import org.apache.commons.lang3.text.CompositeFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CompositeFormat_ESTest extends CompositeFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      CompositeFormat compositeFormat0 = new CompositeFormat(numberFormat0, numberFormat0);
      String string0 = compositeFormat0.reformat("5d/5wiD`8JXR");
      assertEquals("5", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 276.59881;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "^2b *9$Dg";
      ChoiceFormat choiceFormat0 = new ChoiceFormat(doubleArray0, stringArray0);
      CompositeFormat compositeFormat0 = new CompositeFormat(choiceFormat0, choiceFormat0);
      String string0 = compositeFormat0.reformat("^2b *9$Dg");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DateTimeFormatter dateTimeFormatter0 = DateTimeFormatter.ISO_LOCAL_DATE;
      Format format0 = dateTimeFormatter0.toFormat();
      CompositeFormat compositeFormat0 = new CompositeFormat(format0, format0);
      ParsePosition parsePosition0 = new ParsePosition(3931);
      Object object0 = compositeFormat0.parseObject("dS`?~nvW8Gi&jq", parsePosition0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompositeFormat compositeFormat0 = new CompositeFormat((Format) null, (Format) null);
      Format format0 = compositeFormat0.getParser();
      assertNull(format0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompositeFormat compositeFormat0 = new CompositeFormat((Format) null, (Format) null);
      Format format0 = compositeFormat0.getFormatter();
      assertNull(format0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("");
      NumberFormat numberFormat0 = mockSimpleDateFormat0.getNumberFormat();
      CompositeFormat compositeFormat0 = new CompositeFormat(numberFormat0, mockSimpleDateFormat0);
      Integer integer0 = new Integer(0);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      FieldPosition fieldPosition0 = new FieldPosition((Format.Field) null, 0);
      StringBuffer stringBuffer1 = compositeFormat0.format((Object) integer0, stringBuffer0, fieldPosition0);
      assertEquals(0, stringBuffer1.length());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("");
      CompositeFormat compositeFormat0 = new CompositeFormat(mockSimpleDateFormat0, mockSimpleDateFormat0);
      ParsePosition parsePosition0 = new ParsePosition(2068);
      Object object0 = compositeFormat0.parseObject("o2`", parsePosition0);
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      FieldPosition fieldPosition0 = new FieldPosition((-994));
      StringBuffer stringBuffer1 = numberFormat0.format((-1.0), stringBuffer0, fieldPosition0);
      StringBuffer stringBuffer2 = compositeFormat0.format(object0, stringBuffer0, fieldPosition0);
      assertSame(stringBuffer2, stringBuffer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      CompositeFormat compositeFormat0 = new CompositeFormat(mockSimpleDateFormat0, mockSimpleDateFormat0);
      try { 
        compositeFormat0.reformat("");
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Format.parseObject(String) failed
         //
         verifyException("java.text.Format", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DateFormat dateFormat0 = MockDateFormat.getDateTimeInstance();
      CompositeFormat compositeFormat0 = new CompositeFormat(dateFormat0, dateFormat0);
      // Undeclared exception!
      try { 
        compositeFormat0.reformat((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MessageFormat messageFormat0 = new MessageFormat("e1Q{%S>#{PkYx.(fhpx");
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CompositeFormat compositeFormat0 = new CompositeFormat(messageFormat0, decimalFormat0);
      // Undeclared exception!
      try { 
        compositeFormat0.reformat("e1Q{%S>#{PkYx.(fhpx");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Number
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat("P-}XnvpXUZdhoA20]j\"");
      ChoiceFormat choiceFormat0 = new ChoiceFormat("P-}XnvpXUZdhoA20]j\"");
      CompositeFormat compositeFormat0 = new CompositeFormat(decimalFormat0, choiceFormat0);
      // Undeclared exception!
      try { 
        compositeFormat0.reformat("P-}XnvpXUZdhoA20]j\"");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.text.ChoiceFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance(0, locale0);
      CompositeFormat compositeFormat0 = new CompositeFormat(dateFormat0, dateFormat0);
      ParsePosition parsePosition0 = new ParsePosition((-1));
      // Undeclared exception!
      try { 
        compositeFormat0.parseObject("H-O<CeV5 ", parsePosition0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DateTimeFormatter dateTimeFormatter0 = DateTimeFormatter.ISO_LOCAL_DATE_TIME;
      Format format0 = dateTimeFormatter0.toFormat();
      CompositeFormat compositeFormat0 = new CompositeFormat(format0, format0);
      ParsePosition parsePosition0 = new ParsePosition(0);
      // Undeclared exception!
      try { 
        compositeFormat0.parseObject((String) null, parsePosition0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // text
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompositeFormat compositeFormat0 = new CompositeFormat((Format) null, (Format) null);
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
      // Undeclared exception!
      try { 
        compositeFormat0.format((Object) fieldPosition0, (StringBuffer) null, fieldPosition0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.text.CompositeFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      MessageFormat messageFormat0 = new MessageFormat("");
      CompositeFormat compositeFormat0 = new CompositeFormat(messageFormat0, messageFormat0);
      Object object0 = new Object();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 0);
      // Undeclared exception!
      try { 
        compositeFormat0.format(object0, stringBuffer0, fieldPosition0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ChoiceFormat choiceFormat0 = new ChoiceFormat("HCTO]");
      CompositeFormat compositeFormat0 = new CompositeFormat(choiceFormat0, choiceFormat0);
      Integer integer0 = new Integer(0);
      StringBuffer stringBuffer0 = new StringBuffer();
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 0);
      // Undeclared exception!
      try { 
        compositeFormat0.format((Object) integer0, stringBuffer0, fieldPosition0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.text.ChoiceFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DateFormatSymbols dateFormatSymbols0 = DateFormatSymbols.getInstance();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("", dateFormatSymbols0);
      CompositeFormat compositeFormat0 = new CompositeFormat(mockSimpleDateFormat0, mockSimpleDateFormat0);
      ParsePosition parsePosition0 = new ParsePosition(32);
      Object object0 = compositeFormat0.parseObject("", parsePosition0);
      FieldPosition fieldPosition0 = new FieldPosition(32);
      StringBuffer stringBuffer0 = compositeFormat0.format(object0, (StringBuffer) null, fieldPosition0);
      assertNull(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CompositeFormat compositeFormat0 = new CompositeFormat(decimalFormat0, decimalFormat0);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 0);
      // Undeclared exception!
      try { 
        compositeFormat0.format((Object) decimalFormat0, stringBuffer0, fieldPosition0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Number
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DateTimeFormatter dateTimeFormatter0 = DateTimeFormatter.ISO_LOCAL_DATE_TIME;
      Format format0 = dateTimeFormatter0.toFormat();
      CompositeFormat compositeFormat0 = new CompositeFormat(format0, format0);
      Format format1 = compositeFormat0.getFormatter();
      assertSame(format1, format0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance();
      CompositeFormat compositeFormat0 = new CompositeFormat(numberFormat0, numberFormat0);
      DecimalFormat decimalFormat0 = (DecimalFormat)compositeFormat0.getParser();
      assertEquals(0, decimalFormat0.getMinimumFractionDigits());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance(locale0);
      MessageFormat messageFormat0 = new MessageFormat("5fF;4YSw^$");
      CompositeFormat compositeFormat0 = new CompositeFormat(numberFormat0, messageFormat0);
      // Undeclared exception!
      try { 
        compositeFormat0.reformat("5fF;4YSw^$");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Long cannot be cast to [Ljava.lang.Object;
         //
         verifyException("java.text.MessageFormat", e);
      }
  }
}
