/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 12 13:40:00 GMT 2022
 */

package org.apache.commons.lang3.text.translate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import org.apache.commons.lang3.text.translate.NumericEntityEscaper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NumericEntityEscaper_ESTest extends NumericEntityEscaper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NumericEntityEscaper numericEntityEscaper0 = NumericEntityEscaper.between(0, 4591);
      CharBuffer charBuffer0 = CharBuffer.allocate(3092);
      String string0 = numericEntityEscaper0.translate((CharSequence) charBuffer0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NumericEntityEscaper numericEntityEscaper0 = NumericEntityEscaper.above((-647));
      // Undeclared exception!
      try { 
        numericEntityEscaper0.translate((-647), (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      NumericEntityEscaper numericEntityEscaper0 = NumericEntityEscaper.above((-1));
      boolean boolean0 = numericEntityEscaper0.translate(1619, (Writer) stringWriter0);
      assertEquals("&#1619;", stringWriter0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[1] = ' ';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      NumericEntityEscaper numericEntityEscaper0 = NumericEntityEscaper.above(8);
      StringWriter stringWriter0 = new StringWriter();
      numericEntityEscaper0.translate((CharSequence) charBuffer0, (Writer) stringWriter0);
      assertEquals("\u0000&#32;", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NumericEntityEscaper numericEntityEscaper0 = NumericEntityEscaper.outsideOf(273, (-3329));
      String string0 = numericEntityEscaper0.translate((CharSequence) "&#108;&#88;&#106;&#99;&#121;&#72;&#47;&#58;&#102;");
      assertEquals("&#38;&#35;&#49;&#48;&#56;&#59;&#38;&#35;&#56;&#56;&#59;&#38;&#35;&#49;&#48;&#54;&#59;&#38;&#35;&#57;&#57;&#59;&#38;&#35;&#49;&#50;&#49;&#59;&#38;&#35;&#55;&#50;&#59;&#38;&#35;&#52;&#55;&#59;&#38;&#35;&#53;&#56;&#59;&#38;&#35;&#49;&#48;&#50;&#59;", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NumericEntityEscaper numericEntityEscaper0 = NumericEntityEscaper.between((-109), (-109));
      StringWriter stringWriter0 = new StringWriter();
      boolean boolean0 = numericEntityEscaper0.translate(Integer.MAX_VALUE, (Writer) stringWriter0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NumericEntityEscaper numericEntityEscaper0 = NumericEntityEscaper.between((-109), (-109));
      StringWriter stringWriter0 = new StringWriter();
      boolean boolean0 = numericEntityEscaper0.translate((-373), (Writer) stringWriter0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NumericEntityEscaper numericEntityEscaper0 = NumericEntityEscaper.above(8);
      StringWriter stringWriter0 = new StringWriter();
      boolean boolean0 = numericEntityEscaper0.translate(8, (Writer) stringWriter0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NumericEntityEscaper numericEntityEscaper0 = NumericEntityEscaper.between((-109), (-109));
      StringWriter stringWriter0 = new StringWriter();
      boolean boolean0 = numericEntityEscaper0.translate((-109), (Writer) stringWriter0);
      assertEquals("&#-109;", stringWriter0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NumericEntityEscaper numericEntityEscaper0 = NumericEntityEscaper.below((-1647));
      assertNotNull(numericEntityEscaper0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NumericEntityEscaper numericEntityEscaper0 = new NumericEntityEscaper();
  }
}
