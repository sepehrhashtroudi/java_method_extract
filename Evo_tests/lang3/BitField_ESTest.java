/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 12 12:28:48 GMT 2022
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.lang3.BitField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BitField_ESTest extends BitField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      boolean boolean0 = bitField0.isAllSet(1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BitField bitField0 = new BitField(2064);
      boolean boolean0 = bitField0.isSet(2041);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BitField bitField0 = new BitField((-281));
      boolean boolean0 = bitField0.isSet((short) (-3518));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BitField bitField0 = new BitField((-2198));
      int int0 = bitField0.setValue((-1), 205);
      assertEquals(2463, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BitField bitField0 = new BitField(6542);
      int int0 = bitField0.setValue((-924), 2178);
      assertEquals((-2716), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BitField bitField0 = new BitField((-1132));
      short short0 = bitField0.setShortValue((short)0, (short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShortValue((short) (-1424), (short)287);
      assertEquals((short) (-1424), short0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      short short0 = bitField0.setShortBoolean((short)1906, false);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShort((short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BitField bitField0 = new BitField(1);
      short short0 = bitField0.setShort((short)1);
      assertEquals((short)1, short0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      byte byte0 = bitField0.setByteBoolean((byte)0, false);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      byte byte0 = bitField0.setByte((byte)0);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BitField bitField0 = new BitField(1);
      byte byte0 = bitField0.setByte((byte)37);
      assertEquals((byte)37, byte0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BitField bitField0 = new BitField((-2439));
      int int0 = bitField0.setBoolean((-2439), true);
      assertEquals((-2439), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.set(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.set(1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BitField bitField0 = new BitField(1);
      int int0 = bitField0.getValue((-2878));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BitField bitField0 = new BitField(1743);
      int int0 = bitField0.getValue(1743);
      assertEquals(1743, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BitField bitField0 = new BitField(1);
      short short0 = bitField0.getShortValue((short)1);
      assertEquals((short)1, short0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BitField bitField0 = new BitField((-1686));
      short short0 = bitField0.getShortValue((short) (-2304));
      assertEquals((short) (-1920), short0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.getShortRawValue((short)1);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BitField bitField0 = new BitField(1);
      short short0 = bitField0.getShortRawValue((short)1);
      assertEquals((short)1, short0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BitField bitField0 = new BitField(1);
      int int0 = bitField0.getRawValue(1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BitField bitField0 = new BitField((-2439));
      int int0 = bitField0.getRawValue((-2439));
      assertEquals((-2439), int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BitField bitField0 = new BitField((-1526));
      short short0 = bitField0.clearShort((short)24);
      assertEquals((short)16, short0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.clearShort((short) (-1));
      assertEquals((short) (-1), short0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BitField bitField0 = new BitField((-887));
      byte byte0 = bitField0.clearByte((byte)0);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      byte byte0 = bitField0.clearByte((byte) (-25));
      assertEquals((byte) (-25), byte0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BitField bitField0 = new BitField(3170);
      int int0 = bitField0.clear(528);
      assertEquals(528, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.clear((-804));
      assertEquals((-804), int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BitField bitField0 = new BitField((-1106));
      byte byte0 = bitField0.clearByte((byte) (-2));
      assertEquals((byte)80, byte0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BitField bitField0 = new BitField((-1106));
      short short0 = bitField0.setShort((byte) (-2));
      assertEquals((short) (-2), short0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BitField bitField0 = new BitField((-129));
      int int0 = bitField0.clear(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BitField bitField0 = new BitField((-1408));
      byte byte0 = bitField0.setByte((byte)0);
      assertEquals((byte) (-128), byte0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BitField bitField0 = new BitField((-1132));
      int int0 = bitField0.getValue((-847));
      assertEquals((-476), int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BitField bitField0 = new BitField((-887));
      int int0 = bitField0.set(2727);
      assertEquals((-337), int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BitField bitField0 = new BitField(1);
      int int0 = bitField0.setValue(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.clearShort((short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.getRawValue(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.setBoolean((short)3, true);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.setBoolean((short)0, false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BitField bitField0 = new BitField(1);
      boolean boolean0 = bitField0.isAllSet(1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BitField bitField0 = new BitField(1);
      boolean boolean0 = bitField0.isAllSet((byte) (-100));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      boolean boolean0 = bitField0.isSet((short)0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BitField bitField0 = new BitField((-1574));
      short short0 = bitField0.getShortRawValue((short) (-1));
      assertEquals((short) (-1574), short0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BitField bitField0 = new BitField(1);
      short short0 = bitField0.setShortBoolean((byte) (-100), true);
      assertEquals((short) (-99), short0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BitField bitField0 = new BitField((-1574));
      byte byte0 = bitField0.setByteBoolean((byte) (-66), false);
      assertEquals((byte)36, byte0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.getShortValue((short)3);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShortValue((short)3, (short)3);
      assertEquals((short)3, short0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BitField bitField0 = new BitField((-1574));
      short short0 = bitField0.setShortBoolean((short) (-1), false);
      assertEquals((short)1573, short0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BitField bitField0 = new BitField(1);
      byte byte0 = bitField0.setByteBoolean((byte) (-100), true);
      assertEquals((byte) (-99), byte0);
  }
}
