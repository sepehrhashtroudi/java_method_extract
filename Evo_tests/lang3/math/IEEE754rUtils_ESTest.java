/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 09 05:00:34 GMT 2021
 */

package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.math.IEEE754rUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IEEE754rUtils_ESTest extends IEEE754rUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      float[] floatArray0 = new float[1];
      floatArray0[0] = 242.8578F;
      float float0 = IEEE754rUtils.min(floatArray0);
      assertEquals(242.8578F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      float[] floatArray0 = new float[3];
      floatArray0[2] = (-4902.736F);
      float float0 = IEEE754rUtils.min(floatArray0);
      assertEquals((-4902.736F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 242.8578F;
      doubleArray0[1] = (double) 242.8578F;
      doubleArray0[2] = (double) 242.8578F;
      double double0 = IEEE754rUtils.min(doubleArray0);
      assertEquals(242.85780334472656, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = (-1.0);
      double double0 = IEEE754rUtils.min(doubleArray0);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      float float0 = IEEE754rUtils.min(2411.9468F, 2411.9468F, 2411.9468F);
      assertEquals(2411.9468F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      float float0 = IEEE754rUtils.min((-2270.5054F), (-3157.652F), 0.0F);
      assertEquals((-3157.652F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      float float0 = IEEE754rUtils.min(0.0F, 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      float float0 = IEEE754rUtils.min(1.0F, 1.0F);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = IEEE754rUtils.min((double) 3474.08F, 0.0, (double) 328.7F);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = IEEE754rUtils.min(1.0, 1.0, 1.0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = IEEE754rUtils.min(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = IEEE754rUtils.min(1.0, 1.0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      float[] floatArray0 = new float[6];
      floatArray0[4] = 1.0F;
      float float0 = IEEE754rUtils.max(floatArray0);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      float[] floatArray0 = new float[8];
      floatArray0[0] = (-172.38698F);
      floatArray0[1] = (-2434.432F);
      floatArray0[2] = (-1.0F);
      floatArray0[3] = (-1171.8876F);
      floatArray0[4] = (-1022.6F);
      floatArray0[5] = (-1372.3984F);
      floatArray0[6] = (-1168.5833F);
      floatArray0[7] = (-1160.0F);
      float float0 = IEEE754rUtils.max(floatArray0);
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 328.7F;
      double double0 = IEEE754rUtils.max(doubleArray0);
      assertEquals(328.70001220703125, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-538.0452);
      double double0 = IEEE754rUtils.max(doubleArray0);
      assertEquals((-538.0452), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      float float0 = IEEE754rUtils.max(277.9878F, 277.9878F, 1.0F);
      assertEquals(277.9878F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      float float0 = IEEE754rUtils.max((-1265.8F), (-1.0F), (-1001.48F));
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      float float0 = IEEE754rUtils.max(0.0F, 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      float float0 = IEEE754rUtils.max((-1739.4F), (-1739.4F));
      assertEquals((-1739.4F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double double0 = IEEE754rUtils.max((-1853.1330201947505), (-1853.1330201947505), 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = IEEE754rUtils.max(1508.30972, (double) 0.0F, 1.0);
      assertEquals(1508.30972, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double double0 = IEEE754rUtils.max(0.0, (-1.0));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double double0 = IEEE754rUtils.max(30.4, 716.1950700832);
      assertEquals(716.1950700832, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      float float0 = IEEE754rUtils.max(704.0F, 704.0F);
      assertEquals(704.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double double0 = IEEE754rUtils.max((-1.0), (-1.0));
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      float float0 = IEEE754rUtils.min((-1839.81F), (-1839.81F));
      assertEquals((-1839.81F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double double0 = IEEE754rUtils.min((double) 0.0F, (-1.0));
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        IEEE754rUtils.max(floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.IEEE754rUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        IEEE754rUtils.max((float[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.IEEE754rUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      float[] floatArray0 = new float[8];
      float float0 = IEEE754rUtils.max(floatArray0);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        IEEE754rUtils.max(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.IEEE754rUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        IEEE754rUtils.max((double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.IEEE754rUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      double double0 = IEEE754rUtils.max(doubleArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        IEEE754rUtils.min(floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.IEEE754rUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        IEEE754rUtils.min((float[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.IEEE754rUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      float[] floatArray0 = new float[8];
      float float0 = IEEE754rUtils.min(floatArray0);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        IEEE754rUtils.min(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.IEEE754rUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        IEEE754rUtils.min((double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.IEEE754rUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      double double0 = IEEE754rUtils.min(doubleArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      float float0 = IEEE754rUtils.min(0.0F, 0.0F, 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double double0 = IEEE754rUtils.min((-339.876), (-4335.108181), (-4335.108181));
      assertEquals((-4335.108181), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      double double0 = IEEE754rUtils.max((double) (-2.720975F), (double) (-2.720975F), (double) (-2.720975F));
      assertEquals((-2.720974922180176), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      float float0 = IEEE754rUtils.max(0.0F, 0.0F, 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      IEEE754rUtils iEEE754rUtils0 = new IEEE754rUtils();
  }
}
