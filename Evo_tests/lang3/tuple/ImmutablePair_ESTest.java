/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 12 13:59:32 GMT 2022
 */

package org.apache.commons.lang3.tuple;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.tuple.ImmutablePair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ImmutablePair_ESTest extends ImmutablePair_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ImmutablePair<Object, Integer> immutablePair0 = new ImmutablePair<Object, Integer>("", (Integer) null);
      Integer integer0 = immutablePair0.getRight();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer(956);
      ImmutablePair<Object, Object> immutablePair0 = new ImmutablePair<Object, Object>((Object) null, integer0);
      Object object0 = immutablePair0.getLeft();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ImmutablePair<String, Object> immutablePair0 = ImmutablePair.of("t<f2>}3B", (Object) "t<f2>}3B");
      Object object0 = immutablePair0.getRight();
      assertEquals("t<f2>}3B", object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ImmutablePair<Object, String> immutablePair0 = new ImmutablePair<Object, String>("t<f2>}3B", "org.apache.commons.lang3.tuple.Pair");
      Object object0 = immutablePair0.getLeft();
      assertNotNull(object0);
      assertEquals("t<f2>}3B", object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ImmutablePair<String, String> immutablePair0 = new ImmutablePair<String, String>("_Z@P:6^LqV~h.r", "_Z@P:6^LqV~h.r");
      ImmutablePair<Object, Object> immutablePair1 = ImmutablePair.of((Object) immutablePair0, (Object) "(_Z@P:6^LqV~h.r,_Z@P:6^LqV~h.r)");
      assertNotNull(immutablePair1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ImmutablePair<String, String> immutablePair0 = new ImmutablePair<String, String>("_Z@P:6^LqV~h.r", "_Z@P:6^LqV~h.r");
      // Undeclared exception!
      try { 
        immutablePair0.setValue("_Z@P:6^LqV~h.r");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.tuple.ImmutablePair", e);
      }
  }
}
