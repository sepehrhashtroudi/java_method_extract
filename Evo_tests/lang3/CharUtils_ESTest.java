/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 12 13:57:19 GMT 2022
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.CharUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharUtils_ESTest extends CharUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphanumeric('9');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphanumeric('0');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphanumeric('z');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphanumeric('a');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphanumeric('Z');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphanumeric('A');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = CharUtils.toIntValue('9');
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaLower('z');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaLower('a');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaUpper('Z');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaUpper('A');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlpha('z');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlpha('a');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlpha('Z');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlpha('A');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiControl('\uDC00');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiControl(' ');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiPrintable('');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiPrintable(' ');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = CharUtils.isAscii('\u0080');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = CharUtils.unicodeEscaped('\r');
      assertEquals("\\u000d", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = CharUtils.toString('\u0080');
      assertEquals("\u0080", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = CharUtils.toIntValue((Character) null, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject('0');
      assertEquals('0', (char)character0);
      
      int int0 = CharUtils.toIntValue(character0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject('1');
      assertEquals('1', (char)character0);
      
      int int0 = CharUtils.toIntValue(character0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = CharUtils.toIntValue('!', (-175));
      assertEquals((-175), int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = CharUtils.toIntValue('0');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      char char0 = CharUtils.toChar("", '!');
      assertEquals('!', char0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char char0 = CharUtils.toChar("3X0f", '3');
      assertEquals('3', char0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char char0 = CharUtils.toChar("3X0f");
      assertEquals('3', char0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char char0 = CharUtils.toChar("Z");
      assertEquals('Z', char0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Character character0 = Character.valueOf('8');
      char char0 = CharUtils.toChar(character0, 'j');
      assertEquals('8', char0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharUtils charUtils0 = new CharUtils();
      char char0 = CharUtils.toChar((Character) charUtils0.CR);
      assertEquals('\r', char0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject('3');
      char char0 = CharUtils.toChar(character0);
      assertEquals('3', char0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiNumeric('!');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiNumeric('5');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiNumeric('\u0080');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = CharUtils.toString('W');
      assertEquals("W", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharUtils.toIntValue('&');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character & is not in the range '0' - '9'
         //
         verifyException("org.apache.commons.lang3.CharUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphanumeric('\uDE7C');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphanumeric('(');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaLower('\u0087');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaLower('$');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaUpper('\uDE7C');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaUpper('\r');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlpha('\uDE7C');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlpha('\n');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiControl('');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiControl('\r');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiPrintable('\uDE7C');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiPrintable('\r');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      boolean boolean0 = CharUtils.isAscii('y');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      boolean boolean0 = CharUtils.isAscii('\uDE7C');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = CharUtils.unicodeEscaped((Character) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Character character0 = new Character('\uDE7C');
      String string0 = CharUtils.unicodeEscaped(character0);
      assertNotNull(string0);
      assertEquals("\\ude7c", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = CharUtils.unicodeEscaped('\uDE7C');
      assertEquals("\\ude7c", string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = CharUtils.unicodeEscaped('\n');
      assertEquals("\\u000a", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = CharUtils.unicodeEscaped('M');
      assertEquals("\\u004d", string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String string0 = CharUtils.toString((Character) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CharUtils charUtils0 = new CharUtils();
      String string0 = CharUtils.toString((Character) charUtils0.CR);
      assertNotNull(string0);
      assertEquals("\r", string0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String string0 = CharUtils.toString('\uDC10');
      assertEquals("\uDC10", string0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      int int0 = CharUtils.toIntValue((Character) null, (-1412));
      assertEquals((-1412), int0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Character character0 = Character.valueOf('\n');
      int int0 = CharUtils.toIntValue(character0, (int) 'M');
      assertEquals(77, int0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharUtils.toIntValue((Character) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character must not be null
         //
         verifyException("org.apache.commons.lang3.CharUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      int int0 = CharUtils.toIntValue('t', 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      int int0 = CharUtils.toIntValue('3', (int) '!');
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      char char0 = CharUtils.toChar("", 'y');
      assertEquals('y', char0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharUtils.toChar("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The String must not be empty
         //
         verifyException("org.apache.commons.lang3.CharUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      char char0 = CharUtils.toChar("\n");
      assertEquals('\n', char0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      char char0 = CharUtils.toChar((Character) null, 'M');
      assertEquals('M', char0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharUtils.toChar((Character) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Character must not be null
         //
         verifyException("org.apache.commons.lang3.CharUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      char char0 = CharUtils.toChar((Character) 'q');
      assertEquals('q', char0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject("");
      assertNull(character0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject("r");
      // Undeclared exception!
      try { 
        CharUtils.toIntValue(character0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character r is not in the range '0' - '9'
         //
         verifyException("org.apache.commons.lang3.CharUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      CharUtils charUtils0 = new CharUtils();
      char char0 = CharUtils.toChar((Character) charUtils0.LF, 's');
      assertEquals('\n', char0);
  }
}
