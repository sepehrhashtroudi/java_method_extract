/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 12 12:51:59 GMT 2022
 */

package org.apache.commons.lang3.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.List;
import java.util.Set;
import org.apache.commons.lang3.exception.ContextedException;
import org.apache.commons.lang3.exception.ContextedRuntimeException;
import org.apache.commons.lang3.exception.ExceptionContext;
import org.apache.commons.lang3.tuple.Pair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ContextedException_ESTest extends ContextedException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("#F&aI?tG|8oo\"P!", (Throwable) null);
      String string0 = contextedException0.getRawMessage();
      assertEquals("#F&aI?tG|8oo\"P!", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("", (Throwable) null);
      String string0 = contextedException0.getRawMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("<nvu%0s1!4pfJ");
      ContextedException contextedException0 = new ContextedException("<nvu%0s1!4pfJ", contextedRuntimeException0);
      String string0 = contextedException0.getMessage();
      assertEquals("<nvu%0s1!4pfJ", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("<nvu%0s1!4pfJ");
      ContextedException contextedException0 = new ContextedException("<nvu%0s1!4pfJ", contextedRuntimeException0);
      String string0 = contextedException0.getFormattedExceptionMessage("jb }-");
      assertEquals("jb }-", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("");
      Object object0 = new Object();
      ContextedRuntimeException contextedRuntimeException1 = contextedRuntimeException0.setContextValue((String) null, object0);
      MockThrowable mockThrowable0 = new MockThrowable(contextedRuntimeException1);
      ContextedException contextedException0 = new ContextedException((String) null, mockThrowable0, contextedRuntimeException0);
      List<Object> list0 = contextedException0.getContextValues((String) null);
      assertFalse(list0.contains(""));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      contextedException0.addContextValue("", "");
      Set<String> set0 = contextedException0.getContextLabels();
      assertTrue(set0.contains(""));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException(contextedException0);
      ContextedException contextedException1 = contextedException0.setContextValue("-f|5#F", contextedRuntimeException0);
      List<Pair<String, Object>> list0 = contextedException1.getContextEntries();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException((Throwable) null);
      String string0 = contextedException0.getFormattedExceptionMessage("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("org.apache.comNons.ang3.exception.DefaultExceptionCo`text", (Throwable) null, (ExceptionContext) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      List<Object> list0 = contextedException0.getContextValues((String) null);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("PAM&!'}+cc)_");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      List<Pair<String, Object>> list0 = contextedException0.getContextEntries();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      ContextedException contextedException1 = contextedException0.addContextValue("*=|", "*=|");
      Object object0 = contextedException1.getFirstContextValue("*=|");
      assertEquals("*=|", object0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException((Throwable) null);
      String string0 = contextedException0.getRawMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      Object object0 = contextedException0.getFirstContextValue("*=|");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("#F&aI?tG|8oo\"P!", (Throwable) null);
      Set<String> set0 = contextedException0.getContextLabels();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException((Throwable) null);
      String string0 = contextedException0.getMessage();
      assertEquals("", string0);
  }
}
