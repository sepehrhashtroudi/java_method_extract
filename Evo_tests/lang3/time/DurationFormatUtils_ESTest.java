/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 09 03:32:53 GMT 2021
 */

package org.apache.commons.lang3.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.chrono.HijrahDate;
import java.time.chrono.JapaneseDate;
import java.time.chrono.MinguoDate;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import org.apache.commons.lang3.time.DurationFormatUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DurationFormatUtils_ESTest extends DurationFormatUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DurationFormatUtils.lexx("org.apache.commons.lang3.time.DurationFormatUtils$Token");
      TimeZone timeZone0 = TimeZone.getTimeZone("org.apache.commons.lang3.time.DurationFormatUtils$Token");
      DurationFormatUtils.formatPeriod(0L, 0L, "org.apache.commons.lang3.time.DurationFormatUtils$Token", true, timeZone0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DurationFormatUtils.formatDurationHMS(0L);
      DurationFormatUtils.formatDurationHMS(2408L);
      DurationFormatUtils.formatDurationISO(0L);
      String string0 = DurationFormatUtils.ISO_EXTENDED_FORMAT_PATTERN;
      DurationFormatUtils.lexx("java.lang.StringBuilder@00000000360java.lang.StringBuilder@00000000370java.lang.StringBuilder@00000000380java.lang.StringBuilder@00000000390java.lang.StringBuilder@00000000400java.lang.StringBuilder@00000000410java.lang.StringBuilder@0000000042000java.lang.StringBuilder@0000000043");
      DurationFormatUtils.lexx("5({+>&Zs)R.'");
      DurationFormatUtils.formatDurationHMS(1L);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuilder@000000001800java.lang.StringBuilder@000000001902java.lang.StringBuilder@0000000020408");
      DurationFormatUtils.formatPeriodISO(0L, 0L);
      DurationFormatUtils.formatDurationWords(86399999L, true, false);
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, (Object) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DurationFormatUtils.lexx(" 0 days");
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      TimeZone timeZone0 = TimeZone.getTimeZone(" 0 days");
      DurationFormatUtils.formatPeriod((-896L), (-896L), " 0 days", true, timeZone0);
      DurationFormatUtils.formatPeriodISO((-3226L), (-2900L));
      DurationFormatUtils.formatDurationWords(0L, true, true);
      DurationFormatUtils.formatPeriodISO((-1790L), 0L);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = DurationFormatUtils.ISO_EXTENDED_FORMAT_PATTERN;
      DurationFormatUtils.formatPeriod(448L, (-25L), "wwMfV&TK");
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[8];
      TimeZone timeZone0 = TimeZone.getTimeZone("9$bXXRGy");
      Locale locale0 = Locale.GERMANY;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0, locale0);
      // Undeclared exception!
      try { 
        DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, mockGregorianCalendar0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.time.DurationFormatUtils$Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
      JapaneseDate japaneseDate0 = MockJapaneseDate.now();
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, japaneseDate0);
      int int0 = 2456;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(japaneseDate0, 2456);
      String string0 = durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.getValue();
      DurationFormatUtils.formatDurationWords(2269L, false, false);
      // Undeclared exception!
      DurationFormatUtils.formatDuration(2269L, string0, false);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      long long0 = (-3687L);
      TimeZone timeZone0 = TimeZone.getDefault();
      DurationFormatUtils.formatPeriod((-3687L), 1L, "rW?", false, timeZone0);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token((Object) null);
      durationFormatUtils_Token0.getValue();
      DurationFormatUtils.formatDurationHMS((-2303L));
      DurationFormatUtils.formatDurationWords(1L, false, false);
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils0, 0);
      durationFormatUtils_Token1.toString();
      durationFormatUtils_Token1.increment();
      // Undeclared exception!
      try { 
        durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.time.DurationFormatUtils$Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(522, "");
      DurationFormatUtils.formatPeriod(0L, 0L, "[Htw+:f~FtK", false, (TimeZone) simpleTimeZone0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "Gqi";
      DurationFormatUtils.lexx("Gqi");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(mockGregorianCalendar0, 2835);
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      String string1 = durationFormatUtils_Token0.toString();
      long long0 = 0L;
      DurationFormatUtils.formatDurationHMS(0L);
      int int0 = 0;
      int int1 = (-1);
      mockGregorianCalendar0.set(13, 13, 2835, 0, (-1));
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      // Undeclared exception!
      DurationFormatUtils.formatDuration((long) 2835, string1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
      String string0 = (String)DurationFormatUtils.s;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("s", 0);
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, durationFormatUtils_Token0);
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      DurationFormatUtils.format(durationFormatUtils_TokenArray0, 0, 0, 0, 0, 0, (-1931), 0, false);
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, (Object) null);
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "java.lang.String@0000000002java.lang.String@0000000002");
      String string1 = (String)DurationFormatUtils.H;
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "H");
      durationFormatUtils_Token0.getValue();
      durationFormatUtils_Token0.getCount();
      durationFormatUtils_Token0.equals("s");
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatDuration((long) 3, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      long long0 = 0L;
      DurationFormatUtils.formatPeriodISO(0L, (-2097L));
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      TimeZone timeZone0 = TimeZone.getDefault();
      // Undeclared exception!
      DurationFormatUtils.formatPeriod(0L, (-2097L), "java.lang.StringBuilder@0000000016-1java.lang.StringBuilder@000000001711java.lang.StringBuilder@000000001830java.lang.StringBuilder@000000001923java.lang.StringBuilder@000000002059java.lang.StringBuilder@000000002157java.lang.StringBuilder@0000000022903java.lang.StringBuilder@0000000023", true, timeZone0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DurationFormatUtils.formatPeriodISO(303L, 86400000L);
      boolean boolean0 = true;
      DurationFormatUtils.formatDurationWords(0L, true, true);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuilder@00000000320java.lang.StringBuilder@00000000330java.lang.StringBuilder@00000000340java.lang.StringBuilder@0000000035", (-2139));
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, (-2139));
      durationFormatUtils_Token1.getValue();
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = null;
      int int0 = 212;
      durationFormatUtils_Token1.toString();
      // Undeclared exception!
      try { 
        DurationFormatUtils.format((DurationFormatUtils.Token[]) null, (-2139), 212, 212, (-147), 212, (-147), (-2139), true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.time.DurationFormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.H;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("H", 0);
      DurationFormatUtils.formatPeriod(0L, 1679L, "M");
      DurationFormatUtils.formatDurationHMS(1679L);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[3];
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token0;
      DurationFormatUtils.format(durationFormatUtils_TokenArray0, 0, 0, 1628, 2, 1378, 0, 0, true);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DurationFormatUtils.formatDurationWords((-2421L), false, true);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatDuration(0L, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.y;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("y", (-3146));
      DurationFormatUtils.formatDuration((long) (-3146), "I2^<@<M2=X", true);
      long long0 = 0L;
      DurationFormatUtils.formatDurationISO(0L);
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      DurationFormatUtils.formatDurationHMS(670L);
      DurationFormatUtils.lexx("e");
      durationFormatUtils_Token0.getCount();
      DurationFormatUtils.formatPeriodISO((-3145), (-3146));
      DurationFormatUtils.formatDuration(0L, "0java.lang.StringBuilder@000000003800java.lang.StringBuilder@000000003900java.lang.StringBuilder@0000000040670");
      long long1 = (-2234L);
      DurationFormatUtils.formatDuration((-2234L), "", true);
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      // Undeclared exception!
      DurationFormatUtils.formatPeriod(670L, (long) (-3146), "");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DurationFormatUtils.formatPeriodISO(0L, 1714L);
      DurationFormatUtils.lexx("java.lang.StringBuilder@00000000160java.lang.StringBuilder@00000000170java.lang.StringBuilder@00000000180java.lang.StringBuilder@00000000190java.lang.StringBuilder@00000000200java.lang.StringBuilder@00000000211java.lang.StringBuilder@0000000022714java.lang.StringBuilder@0000000023");
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      DurationFormatUtils.formatDuration(0L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
      DurationFormatUtils.formatPeriodISO(0L, 3600000L);
      DurationFormatUtils.formatPeriodISO(1L, 1L);
      DurationFormatUtils.formatDurationWords(3600000L, true, true);
      DurationFormatUtils.formatDuration(0L, "zHOeN");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DurationFormatUtils.formatPeriodISO(0L, 0L);
      int int0 = 2633;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuilder@00000000160java.lang.StringBuilder@00000000170java.lang.StringBuilder@00000000180java.lang.StringBuilder@00000000190java.lang.StringBuilder@00000000200java.lang.StringBuilder@00000000210java.lang.StringBuilder@0000000022000java.lang.StringBuilder@0000000023", 2633);
      // Undeclared exception!
      try { 
        DurationFormatUtils.lexx((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.M;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", 121);
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 0);
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
      durationFormatUtils_Token1.equals(durationFormatUtils_Token2);
      durationFormatUtils_Token1.toString();
      durationFormatUtils_Token2.toString();
      durationFormatUtils_Token2.increment();
      durationFormatUtils_Token1.toString();
      int int0 = 1648;
      durationFormatUtils_Token0.toString();
      DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 1648);
      DurationFormatUtils.formatPeriodISO(1L, 1880L);
      durationFormatUtils_Token1.getValue();
      durationFormatUtils_Token2.toString();
      durationFormatUtils_Token0.increment();
      TimeZone timeZone0 = null;
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatPeriod((-1L), (long) 121, "(Hns96Q", false, (TimeZone) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.s;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("s", (-596));
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, (-596));
      durationFormatUtils_Token1.equals(durationFormatUtils_Token0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DurationFormatUtils.formatPeriod((-89L), (-1L), "");
      DurationFormatUtils.lexx("");
      DurationFormatUtils.formatDurationISO((-89L));
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      DurationFormatUtils.formatPeriod((-508L), (-508L), "");
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("", 0);
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.getValue();
      TimeZone timeZone0 = TimeZone.getDefault();
      DurationFormatUtils.formatPeriod((-1L), (-1L), "!DAhvqOy%^;tdVW.", false, timeZone0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DurationFormatUtils.lexx("");
      DurationFormatUtils.formatDurationWords(0L, true, true);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuilder@00000000090java.lang.StringBuilder@00000000100java.lang.StringBuilder@00000000110java.lang.StringBuilder@0000000012", 3591);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DurationFormatUtils.lexx("O/+NxFAZIc{7*Tm#");
      DurationFormatUtils.formatDuration((-1873L), "O/+NxFAZIc{7*Tm#");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DurationFormatUtils.formatDurationHMS(0L);
      DurationFormatUtils.formatDurationHMS(2408L);
      DurationFormatUtils.formatDurationISO(0L);
      DurationFormatUtils.formatDurationHMS(0L);
      DurationFormatUtils.lexx("java.lang.StringBuilder@00000000360java.lang.StringBuilder@00000000370java.lang.StringBuilder@00000000380java.lang.StringBuilder@00000000390java.lang.StringBuilder@00000000400java.lang.StringBuilder@00000000410java.lang.StringBuilder@0000000042000java.lang.StringBuilder@0000000043");
      DurationFormatUtils.lexx("5({+>&Zs)R.'");
      DurationFormatUtils.formatDurationHMS(1L);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuilder@000000001800java.lang.StringBuilder@000000001902java.lang.StringBuilder@0000000020408");
      DurationFormatUtils.formatPeriodISO(0L, 0L);
      DurationFormatUtils.formatDurationWords(86400000L, true, true);
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, (Object) null);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
      String string0 = (String)DurationFormatUtils.M;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", 0);
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", 0);
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
      DurationFormatUtils.format(durationFormatUtils_TokenArray0, (-1), 2522, (-1), (-157), 2522, (-754), (-754), true);
      DurationFormatUtils.formatPeriod(1000L, 826L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
      long long0 = 2458L;
      DurationFormatUtils.formatDurationISO(2458L);
      long long1 = (-1L);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        TimeZone.getTimeZone((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TimeZone", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("haqSW1h");
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray1 = DurationFormatUtils.lexx("2.yCA&VIq3y*mz+}([3");
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("haqSW1h");
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.getValue();
      DurationFormatUtils.format(durationFormatUtils_TokenArray0, 1825, 3593, 1825, 0, 1825, 0, 1825, true);
      DurationFormatUtils.formatDurationWords(1L, true, true);
      DurationFormatUtils.formatPeriodISO(3699L, 0);
      DurationFormatUtils.format(durationFormatUtils_TokenArray1, 0, (-808), 0, (-1520), (-1520), 0, 1, true);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DurationFormatUtils.formatDuration((-1L), "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", false);
      DurationFormatUtils.formatPeriod((-1L), (-1L), "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", 2371);
      durationFormatUtils_Token0.getCount();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DurationFormatUtils.formatDurationISO(2024L);
      DurationFormatUtils.formatDurationHMS(2024L);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuilder@000000003100java.lang.StringBuilder@000000003202java.lang.StringBuilder@0000000033024", 0);
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 0);
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
      DurationFormatUtils.format(durationFormatUtils_TokenArray0, 0, 0, 0, 935, 0, 0, 0, true);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 hour");
      DurationFormatUtils.formatDurationWords(0L, true, true);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DurationFormatUtils.formatDurationWords(1L, false, false);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("H");
      durationFormatUtils_Token0.equals("H");
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.getValue();
      durationFormatUtils_Token0.toString();
      DurationFormatUtils.formatDuration(0L, "java.lang.String@0000000002java.lang.String@0000000002", false);
      String string0 = (String)DurationFormatUtils.d;
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("d");
      DurationFormatUtils.formatDurationISO((-260L));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DurationFormatUtils.formatPeriodISO((-4874L), 0L);
      DurationFormatUtils.formatDuration(1272L, "java.lang.StringBuilder@00000000160java.lang.StringBuilder@00000000170java.lang.StringBuilder@00000000180java.lang.StringBuilder@00000000190java.lang.StringBuilder@00000000200java.lang.StringBuilder@00000000214java.lang.StringBuilder@0000000022874java.lang.StringBuilder@0000000023");
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatPeriod((-4874L), 327L, "java.lang.StringBuilder@00000000571272java.lang.StringBuilder@00000000580java.lang.StringBuilder@00000000591272java.lang.StringBuilder@00000000600java.lang.StringBuilder@00000000611272java.lang.StringBuilder@00000000620java.lang.StringBuilder@00000000631272java.lang.StringBuilder@00000000640java.lang.StringBuilder@00000000651272java.lang.StringBuilder@00000000660java.lang.StringBuilder@00000000671272java.lang.StringBuilder@00000000680java.lang.StringBuilder@00000000691272java.lang.StringBuilder@00000000700java.lang.StringBuilder@00000000711272java.lang.StringBuilder@00000000720java.lang.StringBuilder@0000000073", true, (TimeZone) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("");
      StringBuilder stringBuilder1 = stringBuilder0.appendCodePoint(0);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuilder1);
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, "");
      DurationFormatUtils.formatPeriod(2245L, 0L, "", false, (TimeZone) simpleTimeZone0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.d;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 1436);
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 1436);
      DurationFormatUtils.formatPeriod((-3061L), (long) 1436, "^ipX1?>Wx8HIlS0?");
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DurationFormatUtils.formatDuration(0L, "");
      DurationFormatUtils.formatPeriodISO(836L, (-1184L));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);
      mockGregorianCalendar0.setTimeInMillis(0L);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(mockGregorianCalendar0);
      locale0.getUnicodeLocaleKeys();
      durationFormatUtils_Token0.toString();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 1);
      durationFormatUtils_Token1.toString();
      durationFormatUtils_Token1.equals(durationFormatUtils_Token0);
      DurationFormatUtils.formatDurationHMS(1);
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatPeriod(0L, (-1L), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DurationFormatUtils.formatDuration(0L, "", false);
      DurationFormatUtils.formatDurationHMS(0L);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("");
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("YfC");
      durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
      DurationFormatUtils.lexx("");
      DurationFormatUtils.formatDurationISO(0L);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
      String string0 = (String)DurationFormatUtils.y;
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("y");
      durationFormatUtils_Token2.toString();
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token2;
      durationFormatUtils_Token2.toString();
      String string1 = (String)DurationFormatUtils.M;
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "M");
      DurationFormatUtils.formatDurationISO(0L);
      DurationFormatUtils.formatPeriod(2438L, 1L, "0java.lang.StringBuilder@000000000800java.lang.StringBuilder@000000000900java.lang.StringBuilder@0000000010000");
      System.setCurrentTimeMillis(633L);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DurationFormatUtils.formatDuration((-2322L), " 1 seconds", false);
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      DurationFormatUtils.formatDurationISO((-2322L));
      StringBuilder stringBuilder0 = new StringBuilder("");
      int int0 = 1;
      // Undeclared exception!
      try { 
        stringBuilder0.insert(1, (double) (-2322L));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = DurationFormatUtils.ISO_EXTENDED_FORMAT_PATTERN;
      DurationFormatUtils.formatDurationHMS(2408L);
      DurationFormatUtils.formatDurationISO(0L);
      DurationFormatUtils.formatDurationHMS(0L);
      DurationFormatUtils.lexx("java.lang.StringBuilder@00000000260java.lang.StringBuilder@00000000270java.lang.StringBuilder@00000000280java.lang.StringBuilder@00000000290java.lang.StringBuilder@00000000300java.lang.StringBuilder@00000000310java.lang.StringBuilder@0000000032000java.lang.StringBuilder@0000000033");
      DurationFormatUtils.lexx("5({+>&Zs)R.'");
      DurationFormatUtils.formatDurationHMS(1L);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuilder@000000000800java.lang.StringBuilder@000000000902java.lang.StringBuilder@0000000010408");
      DurationFormatUtils.formatPeriodISO(0L, 0L);
      DurationFormatUtils.formatDurationWords(86400000L, true, true);
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, (Object) null);
      System.setCurrentTimeMillis((-1876L));
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = Locale.JAPAN;
      timeZone0.getDisplayName(locale0);
      timeZone0.observesDaylightTime();
      DurationFormatUtils.formatPeriod(3391L, 3391L, "", false, timeZone0);
      timeZone0.getDisplayName(false, 0);
      timeZone0.getDisplayName();
      timeZone0.observesDaylightTime();
      DurationFormatUtils.formatPeriod((-531L), (-531L), "oEedrL[OTv3s");
      DurationFormatUtils.formatDurationWords((-531L), false, false);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(timeZone0, 0);
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.formatDuration(0L, "0java.lang.StringBuilder@00000000150java.lang.StringBuilder@00000000160java.lang.StringBuilder@00000000170java.lang.StringBuilder@0000000018", false);
      DurationFormatUtils.formatPeriod((-2003L), 535L, "");
      DurationFormatUtils.lexx("sun.util.calendar.ZoneInfo@0000000020sun.util.calendar.ZoneInfo@0000000020");
      DurationFormatUtils.formatPeriodISO(60000L, 0L);
      DurationFormatUtils.formatDurationHMS(0);
      DurationFormatUtils.formatDurationISO((-5339L));
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      long long0 = 2626L;
      String string0 = null;
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatDuration(2626L, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DurationFormatUtils.formatDurationWords(462L, true, false);
      HijrahDate hijrahDate0 = MockHijrahDate.now();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(hijrahDate0, (-1530));
      MinguoDate minguoDate0 = MockMinguoDate.from(hijrahDate0);
      durationFormatUtils_Token0.equals(minguoDate0);
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
      DurationFormatUtils.formatPeriod(462L, 0L, "wwMfV&TK");
      durationFormatUtils_Token0.getCount();
      DurationFormatUtils.formatDuration((long) (-1530), "2yPq");
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.getCount();
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[8];
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token1;
      durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token0;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1906), (-1906), 0, 1, (-1530));
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(mockGregorianCalendar0, (-423));
      durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token2;
      durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token0;
      TimeZone timeZone0 = TimeZone.getTimeZone("9$bXXRGy");
      Locale locale0 = Locale.GERMANY;
      MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar(timeZone0, locale0);
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, mockGregorianCalendar1);
      // Undeclared exception!
      DurationFormatUtils.formatPeriod(0L, (-631L), "0java.lang.StringBuilder@00000000090java.lang.StringBuilder@00000000100java.lang.StringBuilder@00000000110java.lang.StringBuilder@0000000012");
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token((Object) null, 0);
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.getValue();
      durationFormatUtils_Token0.equals((Object) null);
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token0;
      durationFormatUtils_Token0.increment();
      durationFormatUtils_TokenArray0[8] = durationFormatUtils_Token0;
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, durationFormatUtils_Token0);
      String string0 = (String)DurationFormatUtils.s;
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s");
      durationFormatUtils_Token0.increment();
      String string1 = DurationFormatUtils.formatDurationISO(0);
      DurationFormatUtils.formatDurationHMS(0L);
      DurationFormatUtils.formatDuration(0L, "0java.lang.StringBuilder@000000003300java.lang.StringBuilder@000000003400java.lang.StringBuilder@0000000035000", false);
      System.setCurrentTimeMillis(1L);
      String string2 = DurationFormatUtils.formatDurationISO((-1036L));
      assertFalse(string2.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = (-1542);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("", (-1542));
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 0);
      durationFormatUtils_Token1.increment();
      durationFormatUtils_Token1.increment();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token1.equals((Object) null);
      DurationFormatUtils.formatDuration(2082L, "");
      DurationFormatUtils.formatDuration((long) 0, "");
      int int1 = 0;
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token((Object) null, 0);
      DurationFormatUtils.formatPeriodISO(0, (-2567L));
      TimeZone timeZone0 = TimeZone.getDefault();
      // Undeclared exception!
      DurationFormatUtils.formatPeriod(0L, (-2698L), "", false, timeZone0);
  }
}
