/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 12 14:40:20 GMT 2022
 */

package org.apache.commons.lang3.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Clock;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.ThaiBuddhistDate;
import java.util.Calendar;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import org.apache.commons.lang3.time.DurationFormatUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DurationFormatUtils_ESTest extends DurationFormatUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(localDate0, 0);
      durationFormatUtils_Token0.equals(clock0);
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      TimeZone timeZone0 = TimeZone.getTimeZone("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
      DurationFormatUtils.formatPeriod((long) 0, 1633L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", false, timeZone0);
      TimeZone.setDefault(timeZone0);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      TimeZone.getDefault();
      DurationFormatUtils.format(durationFormatUtils_TokenArray0, 0, 0, 0, 0, 0, (-2458), (-2169), false);
      DurationFormatUtils.formatDuration((long) 0, "k(G\"S>`=", true);
      DurationFormatUtils.formatPeriod((long) (-2458), (long) 0, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true, timeZone0);
      DurationFormatUtils.formatDurationISO(0);
      durationFormatUtils_Token0.getCount();
      DurationFormatUtils.formatDurationISO(0L);
      durationFormatUtils_Token0.toString();
      DurationFormatUtils.format(durationFormatUtils_TokenArray0, 0, (-1203), (-1203), 2385, 0, 0, 0, false);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DurationFormatUtils.formatDurationWords(86400000L, true, true);
      DurationFormatUtils.formatDuration((-1L), "]ZF$>>)7/\r[x4`,H");
      String string0 = (String)DurationFormatUtils.M;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M");
      durationFormatUtils_Token0.getValue();
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
      durationFormatUtils_Token0.toString();
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      durationFormatUtils_Token0.toString();
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
      DurationFormatUtils.formatDuration((-1L), "");
      String string1 = (String)DurationFormatUtils.M;
      durationFormatUtils_Token0.equals("M");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long long0 = (-112L);
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatDuration((-112L), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      long long0 = 0L;
      DurationFormatUtils.formatDuration(0L, "+p/[");
      String string0 = (String)DurationFormatUtils.S;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("S", 966);
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.increment();
      String string1 = durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.getCount();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(string1);
      durationFormatUtils_Token1.increment();
      durationFormatUtils_Token1.increment();
      DurationFormatUtils.formatDurationISO(3198L);
      durationFormatUtils_Token1.getValue();
      durationFormatUtils_Token0.increment();
      // Undeclared exception!
      DurationFormatUtils.formatDuration((-460L), string1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DurationFormatUtils.formatDurationWords(1L, true, false);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuilder@00000000090java.lang.StringBuilder@00000000100java.lang.StringBuilder@00000000110java.lang.StringBuilder@0000000012");
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.getValue();
      DurationFormatUtils.formatDurationHMS(0L);
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.getCount();
      DurationFormatUtils.formatDuration((long) 4, "0java.lang.StringBuilder@000000002200java.lang.StringBuilder@000000002300java.lang.StringBuilder@0000000024000");
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.formatDurationWords(0L, true, true);
      DurationFormatUtils.formatPeriodISO(4, (-580L));
      DurationFormatUtils.formatPeriodISO((-580L), (-1L));
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuilder@00000000384java.lang.StringBuilder@00000000390java.lang.StringBuilder@00000000404java.lang.StringBuilder@00000000410java.lang.StringBuilder@00000000424java.lang.StringBuilder@00000000430java.lang.StringBuilder@0000000044");
      durationFormatUtils_Token1.increment();
      durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[8];
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token1;
      durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token1;
      durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token1;
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, durationFormatUtils_Token0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      DurationFormatUtils.lexx("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0);
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      long long0 = 852L;
      boolean boolean0 = true;
      int int0 = (-1723);
      int int1 = 72;
      DurationFormatUtils.lexx("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, "org.apache.commons.lang3.time.DurationFormatUtils@0000000001org.apache.commons.lang3.time.DurationFormatUtils@0000000001", 0, 0, (-1723), 91, 91, 0, 100, 72);
      long long1 = (-3867L);
      // Undeclared exception!
      DurationFormatUtils.formatPeriod(0L, (-3867L), "2dTi1kp", true, (TimeZone) simpleTimeZone0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-1581L));
      int int0 = 475;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(localDate0, 475);
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
      durationFormatUtils_Token1.increment();
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = null;
      int int1 = 0;
      int int2 = 0;
      int int3 = (-2073);
      int int4 = 1794;
      int int5 = (-1525);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        DurationFormatUtils.format((DurationFormatUtils.Token[]) null, 0, 0, (-2073), (-2073), 1794, (-1525), (-1525), false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.time.DurationFormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DurationFormatUtils.formatDurationHMS((-496L));
      DurationFormatUtils.formatDurationHMS((-2532L));
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuilder@000000000800java.lang.StringBuilder@000000000900java.lang.StringBuilder@000000001004", 6);
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.getCount();
      DurationFormatUtils.formatDuration(1442L, "0java.lang.StringBuilder@000000001800java.lang.StringBuilder@0000000019-2java.lang.StringBuilder@000000002068", false);
      durationFormatUtils_Token0.getValue();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.String@0000000022java.lang.String@0000000022java.lang.String@0000000022java.lang.String@0000000022java.lang.String@0000000022java.lang.String@0000000022java.lang.String@0000000022java.lang.String@0000000022java.lang.String@0000000022");
      durationFormatUtils_Token0.getCount();
      durationFormatUtils_Token0.toString();
      TimeZone timeZone0 = TimeZone.getTimeZone("");
      DurationFormatUtils.formatPeriod((-3999L), 197L, "0java.lang.StringBuilder@000000000800java.lang.StringBuilder@000000000900java.lang.StringBuilder@000000001004", false, timeZone0);
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "java.lang.StringBuilder@00000000361442java.lang.StringBuilder@00000000370java.lang.StringBuilder@00000000381442java.lang.StringBuilder@00000000390java.lang.StringBuilder@00000000401442java.lang.StringBuilder@00000000410java.lang.StringBuilder@0000000042");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, "");
      DurationFormatUtils.formatPeriod(0L, 1241L, "", false, (TimeZone) simpleTimeZone0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[5];
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-269), (-269), (-269), 0, 0);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(mockGregorianCalendar0);
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      Calendar.getAvailableCalendarTypes();
      String string0 = (String)DurationFormatUtils.m;
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("m");
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
      MockDate mockDate0 = new MockDate();
      mockGregorianCalendar0.setGregorianChange(mockDate0);
      mockGregorianCalendar0.getActualMaximum(0);
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(mockGregorianCalendar0);
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
      String string1 = (String)DurationFormatUtils.S;
      DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token("S");
      mockGregorianCalendar0.isWeekDateSupported();
      durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
      String string2 = (String)DurationFormatUtils.d;
      DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token("d");
      durationFormatUtils_Token3.increment();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
      durationFormatUtils_Token4.increment();
      mockGregorianCalendar0.set(14, 0, 109);
      DurationFormatUtils.format(durationFormatUtils_TokenArray0, (-269), 0, (-269), 0, (-162), (-162), (-1346), false);
      DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token4);
      durationFormatUtils_Token3.increment();
      // Undeclared exception!
      try { 
        DurationFormatUtils.lexx((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      DurationFormatUtils.formatPeriod((-1770L), 128L, "7FdlHuoXW9M", false, timeZone0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DurationFormatUtils.formatDurationHMS(3600000L);
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[5];
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0);
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, (-169));
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token((Object) null);
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
      DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
      durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
      DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
      DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token4, 0);
      durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
      DurationFormatUtils.format(durationFormatUtils_TokenArray0, 833, (-1), (-1), 1, 833, (-169), (-1), false);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1), (-1), (-1), 109, (-1));
      DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token(mockGregorianCalendar0);
      durationFormatUtils_Token6.getValue();
      DurationFormatUtils.formatDurationWords((-1), true, true);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(stringBuilder0);
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token1.increment();
      durationFormatUtils_Token1.toString();
      durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
      DurationFormatUtils.format(durationFormatUtils_TokenArray0, (-1741), 60, 0, (-145), (-145), 0, 3673, true);
      DurationFormatUtils.format(durationFormatUtils_TokenArray0, (-2128), 83, (-145), 0, 0, 0, 3673, true);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.H;
      int int0 = 39;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("H", 39);
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
      durationFormatUtils_Token0.equals("ae`L$AiK_F");
      long long0 = 452L;
      TimeZone timeZone0 = null;
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatPeriod(452L, (long) 39, "", false, (TimeZone) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DurationFormatUtils.formatDurationWords((-2538L), false, true);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      DurationFormatUtils.formatDuration(0L, " ");
      boolean boolean0 = false;
      DurationFormatUtils.formatDuration((-1L), "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", false);
      long long0 = (-2176L);
      int int0 = (-1);
      // Undeclared exception!
      try { 
        MockMinguoDate.of((-1), (-1), (-356));
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid value for MonthOfYear (valid values 1 - 12): -1
         //
         verifyException("java.time.temporal.ValueRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DurationFormatUtils.formatDurationWords(60000L, true, true);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuilder@00000000090java.lang.StringBuilder@00000000101java.lang.StringBuilder@00000000110java.lang.StringBuilder@0000000012");
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      DurationFormatUtils.formatDuration(60000L, "K,8}^m)cXw");
      DurationFormatUtils.formatPeriod(60000L, 60000L, "0java.lang.StringBuilder@00000000090java.lang.StringBuilder@00000000101java.lang.StringBuilder@00000000110java.lang.StringBuilder@0000000012");
      DurationFormatUtils.formatDurationISO(60000L);
      DurationFormatUtils.formatDuration(0L, "java.lang.StringBuilder@00000000380java.lang.StringBuilder@00000000390java.lang.StringBuilder@00000000400java.lang.StringBuilder@00000000410java.lang.StringBuilder@00000000420java.lang.StringBuilder@00000000430java.lang.StringBuilder@00000000440java.lang.StringBuilder@00000000450java.lang.StringBuilder@0000000046");
      DurationFormatUtils.formatDurationHMS(60000L);
      DurationFormatUtils.formatPeriodISO(53L, 0L);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DurationFormatUtils.formatDuration(1L, "");
      DurationFormatUtils.formatPeriod(1L, 1L, "p>y+X");
      DurationFormatUtils.formatPeriod(1L, 2436L, "");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.M;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M");
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.equals("M");
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      DurationFormatUtils.formatDurationISO(0L);
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.formatDurationISO(0L);
      durationFormatUtils_Token0.getCount();
      DurationFormatUtils.formatDurationWords(3, false, false);
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token((Object) null);
      long long0 = (-1L);
      // Undeclared exception!
      DurationFormatUtils.formatPeriod((long) 3, (-1L), "java.lang.StringBuilder@00000000410java.lang.StringBuilder@00000000420java.lang.StringBuilder@00000000430java.lang.StringBuilder@00000000440java.lang.StringBuilder@00000000450java.lang.StringBuilder@00000000460java.lang.StringBuilder@0000000047000java.lang.StringBuilder@0000000048");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      long long0 = 0L;
      long long1 = 0L;
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatPeriod(0L, 0L, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      mockGregorianCalendar0.getTimeInMillis();
      mockGregorianCalendar0.getWeekYear();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(mockGregorianCalendar0, 584);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token0;
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token((Object) null, 584);
      durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token1;
      DurationFormatUtils.format(durationFormatUtils_TokenArray0, 584, (-1), (-2904), 1969, 2014, (-2146), 48, true);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.d;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d");
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
      durationFormatUtils_Token1.toString();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      DurationFormatUtils.formatDurationISO(1222L);
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      long long0 = 670L;
      DurationFormatUtils.formatPeriod(1222L, 670L, "42$x");
      DurationFormatUtils.formatDuration(1222L, "dNVqlNbdc?~b=ScO*I", true);
      long long1 = (-2325L);
      DurationFormatUtils.formatPeriodISO((-2325L), 1222L);
      durationFormatUtils_Token1.increment();
      long long2 = (-3602L);
      durationFormatUtils_Token1.toString();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token1.increment();
      DurationFormatUtils.formatDuration((-3602L), "", false);
      DurationFormatUtils.formatDuration((-3602L), "org.apache.commons.lang3.time.DurationFormatUtils$Token@0000000001");
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatDuration((-2325L), (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DurationFormatUtils.formatDurationISO(2484L);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = DurationFormatUtils.ISO_EXTENDED_FORMAT_PATTERN;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", 1653);
      DurationFormatUtils.formatDurationISO(1L);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.d;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d");
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.increment();
      boolean boolean0 = false;
      DurationFormatUtils.formatDurationWords(646L, false, false);
      DurationFormatUtils.formatPeriodISO(646L, 646L);
      durationFormatUtils_Token0.getValue();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuilder@00000000300java.lang.StringBuilder@00000000310java.lang.StringBuilder@00000000320java.lang.StringBuilder@00000000330java.lang.StringBuilder@00000000340java.lang.StringBuilder@00000000350java.lang.StringBuilder@0000000036000java.lang.StringBuilder@0000000037");
      durationFormatUtils_Token1.increment();
      DurationFormatUtils.lexx("java.lang.StringBuilder@00000000300java.lang.StringBuilder@00000000310java.lang.StringBuilder@00000000320java.lang.StringBuilder@00000000330java.lang.StringBuilder@00000000340java.lang.StringBuilder@00000000350java.lang.StringBuilder@0000000036000java.lang.StringBuilder@0000000037");
      durationFormatUtils_Token1.getCount();
      durationFormatUtils_Token0.getValue();
      durationFormatUtils_Token1.increment();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, "java.lang.StringBuilder@00000000300java.lang.StringBuilder@00000000310java.lang.StringBuilder@00000000320java.lang.StringBuilder@00000000330java.lang.StringBuilder@00000000340java.lang.StringBuilder@00000000350java.lang.StringBuilder@0000000036000java.lang.StringBuilder@0000000037");
      DurationFormatUtils.formatPeriod(2579L, (long) 2, "Ym6Rm)Mn7jxHF:~_aX", true, (TimeZone) simpleTimeZone0);
      DurationFormatUtils.lexx("Ym6Rm)Mn7jxHF:~_aX");
      DurationFormatUtils.formatPeriodISO((-694L), 721L);
      long long0 = (-2420L);
      // Undeclared exception!
      DurationFormatUtils.formatPeriod((long) 2, (-2420L), "0java.lang.StringBuilder@00000000110java.lang.StringBuilder@00000000120java.lang.StringBuilder@00000000130java.lang.StringBuilder@0000000014");
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDurationISO(0L);
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      String string1 = DurationFormatUtils.formatDurationWords(0L, true, true);
      String string2 = DurationFormatUtils.formatPeriodISO(3291L, 0L);
      assertFalse(string2.equals((Object)string0));
      
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token((Object) null);
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.equals("java.lang.StringBuilder@00000000160java.lang.StringBuilder@00000000170java.lang.StringBuilder@00000000180java.lang.StringBuilder@00000000190java.lang.StringBuilder@00000000200java.lang.StringBuilder@00000000210java.lang.StringBuilder@0000000022000java.lang.StringBuilder@0000000023");
      TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuilder@00000000160java.lang.StringBuilder@00000000170java.lang.StringBuilder@00000000180java.lang.StringBuilder@00000000190java.lang.StringBuilder@00000000200java.lang.StringBuilder@00000000210java.lang.StringBuilder@0000000022000java.lang.StringBuilder@0000000023");
      timeZone0.setID("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
      String string3 = DurationFormatUtils.formatPeriod(1L, 2821L, "", true, timeZone0);
      int int0 = durationFormatUtils_Token0.getCount();
      assertEquals(2, int0);
      
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token0;
      String string4 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2, 2299, 2299, 986, 2, 986, 2, false);
      assertFalse(string4.equals((Object)string1));
      assertTrue(string4.equals((Object)string3));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DurationFormatUtils.formatDurationHMS(0L);
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      DurationFormatUtils.formatDuration(0L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
      DurationFormatUtils.formatDuration(0L, "H:mm:ss.SSS", false);
      DurationFormatUtils.formatDurationWords(0L, true, true);
      int int0 = 452;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuilder@00000000530java.lang.StringBuilder@00000000540java.lang.StringBuilder@00000000550java.lang.StringBuilder@0000000056", 452);
      durationFormatUtils_Token0.increment();
      String string0 = durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.equals(durationFormatUtils0);
      durationFormatUtils_Token0.toString();
      DurationFormatUtils.formatDurationWords(0L, false, false);
      TimeZone timeZone0 = TimeZone.getTimeZone(string0);
      DurationFormatUtils.formatPeriod(0L, (long) 452, "", false, timeZone0);
      // Undeclared exception!
      try { 
        DurationFormatUtils.Token.containsTokenWithValue((DurationFormatUtils.Token[]) null, "H:mm:ss.SSS");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.time.DurationFormatUtils$Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DurationFormatUtils.lexx("");
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("");
      durationFormatUtils_Token0.toString();
      DurationFormatUtils.formatDurationHMS((-365L));
      durationFormatUtils_Token0.toString();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token((Object) null);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DurationFormatUtils.lexx("S_Tx+i,r9");
      DurationFormatUtils.formatPeriod(2834L, 2834L, "dgvCWS>84#BLI");
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuilder@00000000070java.lang.StringBuilder@0000000008");
      //  // Unstable assertion: assertEquals(9, durationFormatUtils_TokenArray0.length);
      
      String string0 = (String)DurationFormatUtils.s;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("s");
      String string1 = durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray1 = new DurationFormatUtils.Token[1];
      durationFormatUtils_TokenArray1[0] = durationFormatUtils_Token0;
      String string2 = DurationFormatUtils.format(durationFormatUtils_TokenArray1, 0, 0, 0, 0, 0, 0, 0, true);
      String string3 = DurationFormatUtils.formatDurationHMS(0);
      durationFormatUtils_Token0.increment();
      String string4 = durationFormatUtils_Token0.toString();
      //  // Unstable assertion: assertFalse(string4.equals((Object)string1));
      
      String string5 = DurationFormatUtils.formatDurationWords(1000L, true, true);
      //  // Unstable assertion: assertFalse(string5.equals((Object)string3));
      
      String string6 = (String)DurationFormatUtils.m;
      durationFormatUtils_Token0.equals("m");
      String string7 = DurationFormatUtils.formatPeriodISO(795L, 0);
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(" 0 seconds", (-1797));
      durationFormatUtils_Token1.increment();
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      durationFormatUtils_Token1.equals(durationFormatUtils_Token0);
      String string8 = DurationFormatUtils.formatDuration((-1913L), "S", false);
      //  // Unstable assertion: assertEquals("-1913", string8);
      
      String string9 = DurationFormatUtils.formatPeriod((-865L), 2834L, "");
      //  // Unstable assertion: assertTrue(string9.equals((Object)string2));
      //  // Unstable assertion: assertFalse(string9.equals((Object)string4));
      //  // Unstable assertion: assertFalse(string9.equals((Object)string1));
      
      String string10 = DurationFormatUtils.formatPeriod(0L, (long) (-1797), "JX&Lexs/y$lC7wxNh");
      //  // Unstable assertion: assertFalse(string10.equals((Object)string7));
      //  // Unstable assertion: assertFalse(string10.equals((Object)string9));
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DurationFormatUtils.formatDurationHMS(3809L);
      String string0 = DurationFormatUtils.formatDurationWords(2362L, false, false);
      DurationFormatUtils.formatPeriodISO(2362L, 2362L);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[4];
      ThaiBuddhistDate thaiBuddhistDate0 = MockThaiBuddhistDate.now();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(thaiBuddhistDate0, 920);
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuilder@00000000380java.lang.StringBuilder@00000000390java.lang.StringBuilder@00000000400java.lang.StringBuilder@00000000410java.lang.StringBuilder@00000000420java.lang.StringBuilder@00000000430java.lang.StringBuilder@0000000044000java.lang.StringBuilder@0000000045");
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuffer stringBuffer0 = new StringBuffer(920);
      StringBuilder stringBuilder1 = stringBuilder0.append(stringBuffer0);
      StringBuilder stringBuilder2 = stringBuilder1.appendCodePoint(920);
      stringBuilder1.appendCodePoint(1806);
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(stringBuilder2);
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
      Object object0 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(object0);
      durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
      String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 920, 14, 920, 14, 14, 14, 14, false);
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.M;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", 1);
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token0;
      durationFormatUtils_Token0.toString();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
      durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token1;
      durationFormatUtils_Token1.increment();
      durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[8] = durationFormatUtils_Token0;
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, durationFormatUtils_Token0);
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      durationFormatUtils_Token1.toString();
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      DurationFormatUtils.formatPeriod((long) 1, 0L, "java.lang.String@0000000002java.lang.String@0000000002java.lang.String@0000000002", false, timeZone0);
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, durationFormatUtils_Token0);
      durationFormatUtils_Token0.getValue();
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatPeriod((long) 1, (long) 1, (String) null, true, timeZone0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
