@Override [EOL] public DefaultExceptionContext addContextValue(final String label, final Object value) { [EOL]     contextValues.add(new ImmutablePair<String, Object>(label, value)); [EOL]     return this; [EOL] } <line_num>: 53
@Override [EOL] public DefaultExceptionContext setContextValue(final String label, final Object value) { [EOL]     for (final Iterator<Pair<String, Object>> iter = contextValues.iterator(); iter.hasNext(); ) { [EOL]         final Pair<String, Object> p = iter.next(); [EOL]         if (StringUtils.equals(label, p.getKey())) { [EOL]             iter.remove(); [EOL]         } [EOL]     } [EOL]     addContextValue(label, value); [EOL]     return this; [EOL] } <line_num>: 62
@Override [EOL] public List<Object> getContextValues(final String label) { [EOL]     final List<Object> values = new ArrayList<Object>(); [EOL]     for (final Pair<String, Object> pair : contextValues) { [EOL]         if (StringUtils.equals(label, pair.getKey())) { [EOL]             values.add(pair.getValue()); [EOL]         } [EOL]     } [EOL]     return values; [EOL] } <line_num>: 77
@Override [EOL] public Object getFirstContextValue(final String label) { [EOL]     for (final Pair<String, Object> pair : contextValues) { [EOL]         if (StringUtils.equals(label, pair.getKey())) { [EOL]             return pair.getValue(); [EOL]         } [EOL]     } [EOL]     return null; [EOL] } <line_num>: 91
@Override [EOL] public Set<String> getContextLabels() { [EOL]     final Set<String> labels = new HashSet<String>(); [EOL]     for (final Pair<String, Object> pair : contextValues) { [EOL]         labels.add(pair.getKey()); [EOL]     } [EOL]     return labels; [EOL] } <line_num>: 104
@Override [EOL] public List<Pair<String, Object>> getContextEntries() { [EOL]     return contextValues; [EOL] } <line_num>: 116
@Override [EOL] public String getFormattedExceptionMessage(final String baseMessage) { [EOL]     final StringBuilder buffer = new StringBuilder(256); [EOL]     if (baseMessage != null) { [EOL]         buffer.append(baseMessage); [EOL]     } [EOL]     if (contextValues.size() > 0) { [EOL]         if (buffer.length() > 0) { [EOL]             buffer.append('\n'); [EOL]         } [EOL]         buffer.append("Exception Context:\n"); [EOL]         int i = 0; [EOL]         for (final Pair<String, Object> pair : contextValues) { [EOL]             buffer.append("\t["); [EOL]             buffer.append(++i); [EOL]             buffer.append(':'); [EOL]             buffer.append(pair.getKey()); [EOL]             buffer.append("="); [EOL]             final Object value = pair.getValue(); [EOL]             if (value == null) { [EOL]                 buffer.append("null"); [EOL]             } else { [EOL]                 String valueStr; [EOL]                 try { [EOL]                     valueStr = value.toString(); [EOL]                 } catch (final Exception e) { [EOL]                     valueStr = "Exception thrown on toString(): " + ExceptionUtils.getStackTrace(e); [EOL]                 } [EOL]                 buffer.append(valueStr); [EOL]             } [EOL]             buffer.append("]\n"); [EOL]         } [EOL]         buffer.append("---------------------------------"); [EOL]     } [EOL]     return buffer.toString(); [EOL] } <line_num>: 127
