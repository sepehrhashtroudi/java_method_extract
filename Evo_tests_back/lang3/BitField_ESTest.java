/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 09 05:42:26 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.lang3.BitField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BitField_ESTest extends BitField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BitField bitField0 = new BitField((-896));
      int int0 = bitField0.setValue((-896), (byte) (-128));
      assertEquals((-16384), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BitField bitField0 = new BitField(403);
      boolean boolean0 = bitField0.isAllSet((byte)14);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BitField bitField0 = new BitField(927);
      boolean boolean0 = bitField0.isSet((-1508));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BitField bitField0 = new BitField((-4587));
      boolean boolean0 = bitField0.isSet((short)0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.setValue(824, 0);
      assertEquals(824, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BitField bitField0 = new BitField((-809));
      short short0 = bitField0.setShortValue((short)1319, (short)0);
      assertEquals((short)288, short0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BitField bitField0 = new BitField((-4587));
      short short0 = bitField0.setShortValue((short)0, (short) (-1864));
      assertEquals((short) (-6128), short0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShortBoolean((byte)1, false);
      assertEquals((short)1, short0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShortBoolean((short) (-1), false);
      assertEquals((short) (-1), short0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShort((short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShort((short)3462);
      assertEquals((short)3462, short0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      byte byte0 = bitField0.setByteBoolean((byte)24, true);
      assertEquals((byte)24, byte0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BitField bitField0 = new BitField(403);
      byte byte0 = bitField0.setByteBoolean((byte)14, true);
      assertEquals((byte) (-97), byte0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      byte byte0 = bitField0.setByte((byte)0);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BitField bitField0 = new BitField((-2492));
      byte byte0 = bitField0.setByte((byte)33);
      assertEquals((byte)101, byte0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      int int0 = bitField0.setBoolean((-1), false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.set(117);
      assertEquals(117, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      int int0 = bitField0.set(0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BitField bitField0 = new BitField(1);
      int int0 = bitField0.getValue(1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BitField bitField0 = new BitField((-809));
      int int0 = bitField0.getValue((-809));
      assertEquals((-809), int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BitField bitField0 = new BitField(1383);
      short short0 = bitField0.getShortValue((short)1858);
      assertEquals((short)1346, short0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BitField bitField0 = new BitField((-2492));
      short short0 = bitField0.getShortValue((short) (-1));
      assertEquals((short) (-623), short0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BitField bitField0 = new BitField(403);
      short short0 = bitField0.getShortRawValue((short)1);
      assertEquals((short)1, short0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BitField bitField0 = new BitField((-2492));
      short short0 = bitField0.getShortRawValue((short) (-1));
      assertEquals((short) (-2492), short0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BitField bitField0 = new BitField(785);
      int int0 = bitField0.getRawValue(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BitField bitField0 = new BitField(675);
      int int0 = bitField0.getRawValue(2061);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.clearShort((short)1762);
      assertEquals((short)1762, short0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.clearShort((short) (-2754));
      assertEquals((short) (-2754), short0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      byte byte0 = bitField0.clearByte((byte)25);
      assertEquals((byte)25, byte0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      byte byte0 = bitField0.clearByte((byte) (-1));
      assertEquals((byte) (-1), byte0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BitField bitField0 = new BitField((-2873));
      int int0 = bitField0.clear((-77));
      assertEquals(2864, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.clear((-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      byte byte0 = bitField0.clearByte((byte) (-107));
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      short short0 = bitField0.setShort((short) (-86));
      assertEquals((short) (-1), short0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BitField bitField0 = new BitField((-2492));
      int int0 = bitField0.clear((short) (-2492));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BitField bitField0 = new BitField((-2492));
      byte byte0 = bitField0.setByte((byte) (-1));
      assertEquals((byte) (-1), byte0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      int int0 = bitField0.getValue(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.set((short)0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.setValue(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BitField bitField0 = new BitField((-4587));
      short short0 = bitField0.clearShort((short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BitField bitField0 = new BitField((-4587));
      int int0 = bitField0.getRawValue((-4587));
      assertEquals((-4587), int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BitField bitField0 = new BitField((-594));
      int int0 = bitField0.setBoolean((short)0, true);
      assertEquals((-594), int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.setBoolean((short)30, false);
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      boolean boolean0 = bitField0.isAllSet((byte)0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BitField bitField0 = new BitField((-594));
      boolean boolean0 = bitField0.isAllSet((short)0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BitField bitField0 = new BitField((-594));
      boolean boolean0 = bitField0.isSet((-594));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BitField bitField0 = new BitField((-594));
      short short0 = bitField0.getShortRawValue((short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShortBoolean((byte)0, true);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      byte byte0 = bitField0.setByteBoolean((byte)0, false);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BitField bitField0 = new BitField((-594));
      short short0 = bitField0.getShortValue((short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BitField bitField0 = new BitField((-594));
      short short0 = bitField0.setShortValue((short)0, (short)0);
      assertEquals((short)0, short0);
  }
}
