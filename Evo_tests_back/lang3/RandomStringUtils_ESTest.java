/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 09 05:27:29 GMT 2021
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import java.util.stream.DoubleStream;
import java.util.stream.IntStream;
import java.util.stream.LongStream;
import org.apache.commons.lang3.RandomStringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RandomStringUtils_ESTest extends RandomStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RandomStringUtils.random(0, false, true);
      int int0 = 1389;
      int int1 = (-1093);
      RandomStringUtils.random(1389, (-1093), 0, false, false);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.randomAlphanumeric(0);
      boolean boolean0 = true;
      char[] charArray0 = new char[9];
      charArray0[0] = 'h';
      charArray0[1] = 'b';
      charArray0[2] = 'S';
      charArray0[3] = 'S';
      charArray0[4] = 'C';
      charArray0[5] = ';';
      charArray0[6] = '3';
      charArray0[7] = 'd';
      charArray0[8] = ' ';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        mockRandom0.ints((-1093), (-1093));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bound must be greater than origin
         //
         verifyException("java.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RandomStringUtils.random(481, 0, 481, false, false);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        RandomStringUtils.random(481, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 0;
      boolean boolean0 = true;
      char[] charArray0 = new char[2];
      charArray0[0] = '6';
      charArray0[1] = 'U';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(2821, 0, (-337), true, true, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Parameter end (-337) must be greater than start (0)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[7];
      charArray0[0] = 'a';
      charArray0[1] = 'n';
      charArray0[2] = '?';
      charArray0[3] = 'K';
      charArray0[4] = 'R';
      charArray0[5] = 'A';
      charArray0[6] = 'E';
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(4185, 0, 4185, true, true, charArray0, (Random) mockRandom0);
      char[] charArray1 = new char[2];
      charArray1[0] = 'E';
      charArray1[1] = '-';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1, 1, 0, false, true, charArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Parameter end (0) must be greater than start (1)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphabetic(0);
      int int1 = 0;
      RandomStringUtils.randomAlphanumeric(0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'C';
      charArray0[1] = '';
      charArray0[2] = 'q';
      // Undeclared exception!
      RandomStringUtils.random(56319, charArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'x';
      charArray0[1] = '2';
      charArray0[2] = 'R';
      charArray0[3] = '\\';
      charArray0[4] = 'o';
      charArray0[5] = '/';
      charArray0[6] = 'S';
      charArray0[7] = 'B';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56192, 2076, 56192, true, true, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      char[] charArray0 = new char[9];
      charArray0[0] = 'B';
      charArray0[1] = 'j';
      charArray0[2] = 'm';
      charArray0[3] = 'C';
      charArray0[4] = '^';
      charArray0[5] = 'Y';
      charArray0[6] = ',';
      charArray0[7] = '5';
      charArray0[8] = '0';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-121), charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -121 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 's';
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(0, 0, 0, true, false, charArray0, (Random) mockRandom0);
      mockRandom0.nextGaussian();
      mockRandom0.nextInt();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(57343, (-2466), 0, false, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '3';
      charArray0[1] = 'h';
      charArray0[2] = 'r';
      charArray0[3] = ')';
      charArray0[4] = 'T';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1084, 1084, 1084, false, false, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Parameter end (1084) must be greater than start (1084)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAscii((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '4';
      charArray0[1] = 'c';
      charArray0[2] = '$';
      MockRandom mockRandom0 = new MockRandom(56319);
      // Undeclared exception!
      RandomStringUtils.random(56319, 0, 1, false, false, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 587;
      RandomStringUtils.randomAscii(587);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(587, false, false);
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(587);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      boolean boolean0 = false;
      boolean boolean1 = true;
      char[] charArray0 = new char[0];
      MockRandom mockRandom0 = new MockRandom(0);
      mockRandom0.nextLong();
      mockRandom0.doubles();
      mockRandom0.nextBoolean();
      mockRandom0.setSeed(0L);
      mockRandom0.longs((long) 0);
      mockRandom0.nextBoolean();
      // Undeclared exception!
      try { 
        RandomStringUtils.random(732, 0, 0, false, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.randomAscii(57343);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 791;
      char[] charArray0 = new char[8];
      charArray0[0] = '6';
      charArray0[1] = 'p';
      charArray0[2] = 'j';
      charArray0[3] = 'c';
      charArray0[4] = 'k';
      charArray0[5] = ')';
      charArray0[6] = 'C';
      charArray0[7] = 't';
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-207), (-207), 791, true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -207 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '9';
      charArray0[1] = '1';
      charArray0[2] = '[';
      charArray0[3] = '~';
      RandomStringUtils.random(2970, 0, 2970, false, true, charArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 2994;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(2994);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      int int0 = 0;
      RandomStringUtils.randomAlphabetic(0);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-966));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -966 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 1544;
      // Undeclared exception!
      try { 
        RandomStringUtils.random(1544, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random(128, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The chars array must not be empty
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RandomStringUtils.random(2646, (String) null);
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1049));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1049 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.randomAlphabetic(0);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphanumeric((-446));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -446 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RandomStringUtils.random(0, ".-Ld0IjUUr");
      RandomStringUtils.randomAlphanumeric(0);
      boolean boolean0 = true;
      char[] charArray0 = null;
      MockRandom mockRandom0 = new MockRandom();
      byte[] byteArray0 = new byte[4];
      mockRandom0.nextLong();
      byte byte0 = (byte) (-1);
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)100;
      byteArray0[3] = (byte) (-60);
      mockRandom0.nextBytes(byteArray0);
      mockRandom0.nextBoolean();
      RandomStringUtils.random(0, 1116, 0, true, true, (char[]) null, (Random) mockRandom0);
      int int0 = (-2215);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-2215));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2215 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RandomStringUtils.random(794, "x?Hz;{:}/6.,v");
      char[] charArray0 = new char[8];
      charArray0[0] = '';
      charArray0[1] = '2';
      charArray0[2] = 'R';
      charArray0[3] = 'u';
      charArray0[4] = '1';
      charArray0[5] = '0';
      charArray0[6] = 'P';
      charArray0[7] = '$';
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), 673, (-1), true, true, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RandomStringUtils.random(0);
      char[] charArray0 = new char[1];
      charArray0[0] = '6';
      RandomStringUtils.random(0, 807, 1, false, false, charArray0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RandomStringUtils.random(0, (String) null);
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      RandomStringUtils.random(0, false, true);
      char[] charArray0 = new char[1];
      charArray0[0] = '-';
      RandomStringUtils.random(0, charArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'z';
      RandomStringUtils.random(0, charArray0);
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(2876);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RandomStringUtils.randomAscii(0);
      RandomStringUtils.random(0, 0, 0, true, false, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RandomStringUtils.randomNumeric(0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'Q';
      charArray0[1] = '0';
      charArray0[2] = ';';
      charArray0[3] = 'd';
      charArray0[4] = 'd';
      charArray0[5] = '0';
      MockRandom mockRandom0 = new MockRandom();
      RandomStringUtils.random(0, 780, 0, false, false, charArray0, (Random) mockRandom0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RandomStringUtils.random(1, ") must be greater than start (");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = (-3953);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-3953), (-3953), 31, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3953 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      RandomStringUtils.random(56320, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = 0;
      RandomStringUtils.randomAlphanumeric(0);
      int int1 = 2325;
      boolean boolean0 = true;
      RandomStringUtils.random(0, 2325, 56192, true, false);
      boolean boolean1 = true;
      // Undeclared exception!
      RandomStringUtils.random(2325, true, false);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = 2773;
      int int1 = 1;
      int int2 = 342;
      boolean boolean0 = true;
      // Undeclared exception!
      RandomStringUtils.random(2773, 1, 342, true, true);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RandomStringUtils.random(0, 0, 0, false, false);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 1;
      // Undeclared exception!
      RandomStringUtils.randomAlphabetic(1);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int int0 = 204;
      // Undeclared exception!
      RandomStringUtils.randomAlphanumeric(204);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = (-1);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), true, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = RandomStringUtils.random(0, "fI");
      assertNotNull(string0);
      assertEquals("", string0);
      
      int int0 = 569;
      char[] charArray0 = new char[5];
      charArray0[0] = 'I';
      charArray0[1] = 'y';
      charArray0[2] = '\"';
      charArray0[3] = 'f';
      charArray0[4] = 'c';
      MockRandom mockRandom0 = new MockRandom(0);
      assertNotNull(mockRandom0);
      
      IntStream intStream0 = mockRandom0.ints(0L, 0, 569);
      assertNotNull(intStream0);
      
      LongStream longStream0 = mockRandom0.longs(0L);
      assertNotNull(longStream0);
      
      double double0 = mockRandom0.nextDouble();
      assertEquals(0.0, double0, 0.01);
      
      double double1 = mockRandom0.nextGaussian();
      assertNotEquals(double1, double0, 0.01);
      assertEquals(0.1, double1, 0.01);
      
      DoubleStream doubleStream0 = mockRandom0.doubles();
      assertNotNull(doubleStream0);
      
      LongStream longStream1 = mockRandom0.longs(0L);
      assertNotSame(longStream1, longStream0);
      assertNotNull(longStream1);
      assertFalse(longStream1.equals((Object)longStream0));
      
      float float0 = mockRandom0.nextFloat();
      assertEquals(0.2F, float0, 0.01F);
      
      String string1 = RandomStringUtils.random(0, 569, 569, true, true, charArray0, (Random) mockRandom0);
      assertEquals(5, charArray0.length);
      assertArrayEquals(new char[] {'I', 'y', '\"', 'f', 'c'}, charArray0);
      assertNotNull(string1);
      assertEquals("", string1);
      
      // Undeclared exception!
      RandomStringUtils.random(569, 0, 0, true, true);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1774), 0, 0, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1774 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = 56320;
      boolean boolean0 = false;
      // Undeclared exception!
      RandomStringUtils.random(56320, 127, 128, false, false);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = RandomStringUtils.randomAlphabetic(0);
      assertNotNull(string0);
      assertEquals("", string0);
      
      RandomStringUtils randomStringUtils0 = new RandomStringUtils();
      assertNotNull(randomStringUtils0);
      
      char[] charArray0 = new char[6];
      charArray0[0] = 'K';
      charArray0[1] = 'b';
      charArray0[2] = ';';
      charArray0[3] = '0';
      charArray0[4] = 'k';
      charArray0[5] = 'V';
      MockRandom mockRandom0 = new MockRandom((-1298L));
      assertNotNull(mockRandom0);
      
      String string1 = RandomStringUtils.random(2190, 0, 1551, false, false, charArray0, (Random) mockRandom0);
      assertEquals(6, charArray0.length);
      assertArrayEquals(new char[] {'K', 'b', ';', '0', 'k', 'V'}, charArray0);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      
      String string2 = RandomStringUtils.randomAscii(32);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("                                ", string2);
      
      char[] charArray1 = new char[2];
      assertFalse(charArray1.equals((Object)charArray0));
      
      charArray1[0] = '1';
      charArray1[1] = 'I';
      String string3 = RandomStringUtils.random(2052, charArray1);
      assertEquals(2, charArray1.length);
      assertArrayEquals(new char[] {'1', 'I'}, charArray1);
      assertNotSame(charArray1, charArray0);
      assertNotNull(string3);
      assertFalse(charArray1.equals((Object)charArray0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      
      String string4 = RandomStringUtils.random(2439);
      assertNotNull(string4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      
      // Undeclared exception!
      try { 
        RandomStringUtils.randomNumeric((-557));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -557 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = (-1545);
      // Undeclared exception!
      try { 
        RandomStringUtils.randomAlphabetic((-1545));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1545 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '*';
      charArray0[1] = '-';
      charArray0[2] = 'b';
      charArray0[3] = '.';
      charArray0[4] = 'o';
      charArray0[5] = 'X';
      charArray0[6] = 'w';
      MockRandom mockRandom0 = new MockRandom(981L);
      assertNotNull(mockRandom0);
      
      // Undeclared exception!
      try { 
        RandomStringUtils.random(211, 211, 123, true, true, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Parameter end (123) must be greater than start (211)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = (-2246);
      int int1 = 1;
      boolean boolean0 = false;
      char[] charArray0 = new char[3];
      charArray0[0] = 'A';
      charArray0[1] = '\"';
      charArray0[2] = '*';
      MockRandom mockRandom0 = new MockRandom(4269L);
      assertNotNull(mockRandom0);
      
      double double0 = mockRandom0.nextGaussian();
      assertEquals(0.0, double0, 0.01);
      
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-2246), (-2246), 1, true, false, charArray0, (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2246 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = (-1);
      boolean boolean0 = true;
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        RandomStringUtils.random((-1), true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = RandomStringUtils.randomAlphanumeric(0);
      assertNotNull(string0);
      assertEquals("", string0);
      
      int int0 = 56191;
      boolean boolean0 = true;
      char[] charArray0 = new char[3];
      charArray0[0] = 'D';
      charArray0[1] = 'A';
      charArray0[2] = ':';
      // Undeclared exception!
      try { 
        RandomStringUtils.random(56191, 56191, 0, true, true, charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Parameter end (0) must be greater than start (56191)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = 356;
      // Undeclared exception!
      RandomStringUtils.randomNumeric(356);
  }
}
